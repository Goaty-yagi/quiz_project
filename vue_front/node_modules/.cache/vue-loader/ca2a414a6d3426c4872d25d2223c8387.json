{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/signin/ID.vue?vue&type=style&index=0&id=0488af26&lang=scss&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/signin/ID.vue","mtime":1643442797716},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAuaWQtd3JhcHBlcnsKICAgICAgICB3aWR0aDoxMDB2dzsKICAgICAgICBoZWlnaHQ6MTAwdmg7CiAgICB9CiAgICAuaWQtY29udGFpbmVyewogICAgICAgIGRpc3BsYXk6ZmxleDsKICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgd2lkdGg6MTAwJTsKICAgICAgICBoZWlnaHQ6MjVyZW07CiAgICB9CiAgICAuaWQtdGV4dHsKICAgICAgICBjb2xvcjp3aGl0ZTsgICAgCiAgICAgICAgbWFyZ2luLWJvdHRvbToxcmVtOyAgICAKICAgIH0KICAgIC5pZC1mb3JtewogICAgICAgIGhlaWdodDogMTUlOwogICAgICAgIG1hcmdpbi1ib3R0b206MnJlbTsgCiAgICAgICAgCiAgICB9CiAgICAuZGlnaXR7CiAgICAgICAgd2lkdGg6IDNyZW07IAogICAgICAgIGhlaWdodDogNHJlbTsKICAgICAgICBib3JkZXItcmFkaXVzOiAwLjhyZW07CiAgICAgICAgZm9udC1zaXplOjIuNXJlbTsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB9CiAgICAuZXJyb3J7CiAgICAgICAgY29sb3I6cmVkOwogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICBtYXJnaW4tYm90dG9tOjAuMnJlbTsKICAgICAgICBib3JkZXI6IDAuMXJlbSBzb2xpZCByZWQ7CiAgICAgICAgYmFja2dyb3VuZDpyZ2IoMjQzLCAyMTQsIDIxNCk7CiAgICAgICAgd2lkdGg6IDkwJTsKICAgICAgICBtYXJnaW4tbGVmdDogYXV0bzsKICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgICAgICAgbWFyZ2luLXRvcDoxcmVtOwogICAgICAgIH0KICAgIHAgewogICAgICAgIGNvbG9yOndoaXRlOwogICAgfQo="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/signin/ID.vue"],"names":[],"mappings":"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","file":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/signin/ID.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"id-wrapper\">\n      <div class='id-container'>\n        <p class='id-text'>送られた６桁のIDを入力してください。</p>\n        <p>※半角数字で入力してください。</p>\n        <form class=\"id-form\" @submit.prevent='submitForm'>\n            <input class='digit' type=\"text\" ref='digit1' maxlength=\"1\" onfocus=\"this.select();\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" v-model='digit1'/>\n            <input class='digit' type=\"text\" ref='digit2' maxlength=\"1\" onfocus=\"this.select();\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" v-model='digit2'/>\n            <input class='digit' type=\"text\" ref='digit3' maxlength=\"1\" onfocus=\"this.select();\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" v-model='digit3'/>\n            <input class='digit' type=\"text\" ref='digit4' maxlength=\"1\" onfocus=\"this.select();\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" v-model='digit4'/>\n            <input class='digit' type=\"text\" ref='digit5' maxlength=\"1\" onfocus=\"this.select();\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" v-model='digit5'/>\n            <input class='digit' type=\"text\" ref='digit6' maxlength=\"1\" onfocus=\"this.select();\" oninput=\"this.value=this.value.replace(/[^0-9]/g,'');\" v-model='digit6'/>\n            <div v-if='idError' class='error'>{{ idError }}</div>\n            <div>\n                <button class='fbottun' ref='bform'><p>次へ</p></button>\n            </div>\n        </form>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return{\n            sixDigit:{\n                '1':'',\n                '2':'',\n                '3':'',\n                '4':'',\n                '5':'',\n                '6':'',\n            },\n            sixDigitList:[],\n            digit1:'',\n            digit2:'',\n            digit3:'',\n            digit4:'',\n            digit5:'',\n            digit6:'',\n            fullLength: true,\n            idError:'',\n            correctID:[1,2,3,4,5,6]\n        }\n    },\n    mounted(){\n        // console.log('mounted',this.$refs.digit1.value)\n        this.$refs.digit1.focus()\n    },\n    updated(){\n        this.checkSixDigit()\n        this.makeSixDigit()\n    },\n    watch:{\n        digit1:function(v) { if (v.length == 1) { this.$refs.digit2.focus() } },\n        digit2:function(v) { if (v.length <= 1) { this.$refs.digit3.focus() } },\n        digit3:function(v) { if (v.length <= 1) { this.$refs.digit4.focus() } },\n        digit4:function(v) { if (v.length <= 1) { this.$refs.digit5.focus() } },\n        digit5:function(v) { if (v.length <= 1) { this.$refs.digit6.focus() } },\n        digit6:function(v) { if (v.length <= 1) { this.$refs.bform.focus() } },\n        fullLength:function(v) {if (v == false) { this.$refs.bform.classList.add('button-hover')}\n        else{this.$refs.bform.classList.remove('button-hover')}},\n    },\n    methods:{\n        checkSixDigit(){\n            console.log('digimetho')\n            if (!isNaN(this.digit1)&&this.digit1!=''&&\n                !isNaN(this.digit2)&&this.digit2!=''&&\n                !isNaN(this.digit3)&&this.digit3!=''&&\n                !isNaN(this.digit4)&&this.digit4!=''&&\n                !isNaN(this.digit5)&&this.digit5!=''&&\n                !isNaN(this.digit6)&&this.digit6!=''){\n                    this.fullLength = false\n                }\n            else{this.fullLength = true}\n        },\n        makeSixDigit(){\n            this.sixDigit[1] = this.digit1\n            this.sixDigit[2] = this.digit2\n            this.sixDigit[3] = this.digit3\n            this.sixDigit[4] = this.digit4\n            this.sixDigit[5] = this.digit5\n            this.sixDigit[6] = this.digit6\n        },\n        makeSixDigitList(){\n            for (let i in this.sixDigit){\n                this.sixDigitList.push(Number(this.sixDigit[i]))\n            }\n        },\n        allclear(){\n            this.digit1 =''\n            this.digit2 =''\n            this.digit3 =''\n            this.digit4 =''\n            this.digit5 =''\n            this.digit6 =''\n\n        },\n        submitForm(){\n            // validate email\n            this.makeSixDigitList()\n            this.idError = this.arrayEqual(this.sixDigitList,this.correctID)?\n            '' : 'ID is not correct'\n            if (this.idError == ''){\n                this.$emit('handle')\n                this.$store.commit('addStep')\n            }else{\n                this.sixDigitList=[]\n                this.allclear()\n                this.$refs.digit1.focus()\n            }\n        },\n        arrayEqual(array1,array2){\n            if (!Array.isArray(array1))    return false;\n            if (!Array.isArray(array2))    return false;\n            if (array1.length != array2.length) return false;\n            for (var i = 0, n = array1.length; i < n; ++i) {\n                if (array1[i] !== array2[i]) return false;\n            }\n            return true;\n        },\n        // getClass(){\n        //     if (this.fullLength == false){\n        //         this.$refs.buttonHover.classList.add('button-hover')\n        //     }else{\n        //         this.$refs.buttonHover.classList.remove('button-hover')\n        //     }   \n        // },\n        // nextfocus(){\n        //     if (this.$refs.digit1.value!='' && this.sixDigit['1']==''){\n        //         this.$refs.digit1.blur()\n        //         this.$refs.digit2.focus()\n        //     }\n        //     else if(this.$refs.digit2.value!=''&& this.sixDigit['2']==''){\n        //             this.$refs.digit2.blur()\n        //             this.$refs.digit3.focus()\n        //     }\n        //     else if(this.$refs.digit3.value!=''){\n        //             this.$refs.digit3.blur()\n        //             this.$refs.digit4.focus()\n        //     }\n        //     else if(this.$refs.digit4.value!=''){\n        //             this.$refs.digit4.blur()\n        //             this.$refs.digit5.focus()\n        //     }\n        //     else if(this.$refs.digit5.value!=''){\n        //             this.$refs.digit5.blur()\n        //             this.$refs.digit6.focus()\n        //     }\n        //     else if(this.$refs.digit6.value!=''){\n        //             this.$refs.digit6.blur()\n        //             this.$refs.button-hover.focus()\n        //     }\n        // },\n        \n        // makeSixDigit(){\n        //     if(event.target.value != ''&& this.sixDigit.length < 6){\n        //         this.sixDigit.push(event.target.value)\n        //     }\n        // }\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n    .id-wrapper{\n        width:100vw;\n        height:100vh;\n    }\n    .id-container{\n        display:flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        width:100%;\n        height:25rem;\n    }\n    .id-text{\n        color:white;    \n        margin-bottom:1rem;    \n    }\n    .id-form{\n        height: 15%;\n        margin-bottom:2rem; \n        \n    }\n    .digit{\n        width: 3rem; \n        height: 4rem;\n        border-radius: 0.8rem;\n        font-size:2.5rem;\n        text-align: center;\n    }\n    .error{\n        color:red;\n        text-align: center;\n        font-weight: bold;\n        margin-bottom:0.2rem;\n        border: 0.1rem solid red;\n        background:rgb(243, 214, 214);\n        width: 90%;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top:1rem;\n        }\n    p {\n        color:white;\n    }\n</style>"]}]}