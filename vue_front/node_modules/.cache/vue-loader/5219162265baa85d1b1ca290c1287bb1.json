{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue?vue&type=template&id=86beb2ec&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue","mtime":1651036188513},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSd0aHVtYm5haWwtd3JhcHBlciBsLXdyYXBwZXInPgogICAgICAgIDxmb3JtIEBzdWJtaXQucHJldmVudD0ndXNlclVwZGF0ZSc+CiAgICAgICAgICAgIDxpbnB1dCBpZD0iZmlsZVVwbG9hZCIgdHlwZT0iZmlsZSIgQGNoYW5nZT0nZ2V0SW1hZ2UnIGhpZGRlbiBlbmN0eXBlPSJtdWx0aXBhcnQvZm9ybS1kYXRhIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3JvcHBlci1vdXRlci13cmFwcGVyIiB2LWlmPSJzZWxlY3RlZEZpbGUiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0nY3JvcHBlcmlubmVyLXdyYXBwZXInPgogICAgICAgICAgICAgICAgICAgIDxpbWcgcmVmPSdpbWFnZScgOnNyYz0ic2VsZWN0ZWRGaWxlIiBzdHlsZT0id2lkdGg6IDMwMHB4OyBoZWlnaHQ6IDMwMHB4OyI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbi1jb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9J2J0bi1iYXNlLXdoaXRlLWRiLXNxJz5zYXZlPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0nYnRuLXRyLXdoaXRlLWJhc2Utc3EnIHYtaWY9J3NlbGVjdGVkRmlsZScgQGNsaWNrPSdjaGFuY2VsJz5jaGFuY2VsPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9mb3JtPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDwhLS0gPGRpdj4KICAgICAgICAgICAgICAgIDxpbWcgaWQ9ImltYWdlIiBzcmM9IkAvYXNzZXRzL2xvZ28ucG5nIj4KICAgICAgICAgICAgPC9kaXY+IC0tPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpgBAClD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,CAAC;YACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class='thumbnail-wrapper l-wrapper'>\n        <form @submit.prevent='userUpdate'>\n            <input id=\"fileUpload\" type=\"file\" @change='getImage' hidden enctype=\"multipart/form-data\">\n            <div class=\"cropper-outer-wrapper\" v-if=\"selectedFile\">\n                <div class='cropperinner-wrapper'>\n                    <img ref='image' :src=\"selectedFile\" style=\"width: 300px; height: 300px;\">\n                </div>\n                <div class=\"button-container\">\n                    <button class='btn-base-white-db-sq'>save</button>\n                    <button class='btn-tr-white-base-sq' v-if='selectedFile' @click='chancel'>chancel</button>\n                </div>\n            </div>\n        </form>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Cropper from 'cropperjs';\nexport default {\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            compoHandle: false,\n            cropper:{},\n            destination:{},\n            inputFile:'',\n        }\n    },\n    mounted(){\n        // this.cropper()\n        this.autoClick()\n    },\n    methods:{\n        async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files[0]\n            await console.log(this.image,'img',this.selectedFile)\n            this.imageCropper()\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: true,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            dragMode: 'move',\n            minContainerHeight:400,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n            this.showThumbnailFalse()\n        },\n        autoClick(){\n            document.getElementById(\"fileUpload\").click()\n            this.inputFile = document.getElementById(\"fileUpload\");\n            document.body.onfocus = this.getEvent\n        },\n        getEvent(){\n            setTimeout(() => {\n                if (this.inputFile.value.length) {\n                \n                } else {\n                this.showThumbnailFalse()\n                }\n                document.body.onfocus = null;\n            }, 500);\n        },\n        openFileOnClick(){\n            document.getElementById(\"fileUpload\").value = \"\";\n            document.getElementById(\"fileUpload\").files.length = 0;            \n            document.getElementById(\"fileUpload\").click();\n            if(document.getElementById(\"fileUpload\").files.length >= 1){\n                //Do something \n            }\n            else{\n                this.showThumbnailFalse()\n                //Cancel button has been called.\n            }\n        },\n        // getCroppedURL(){\n        //     console.log('croppedURL')\n        //     document.getElementById('crop-btn').addEventListener('click', function () {\n        //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n        //     var result = document.getElementById('result-img');\n        //     result.src = resultImgUrl;\n        //      });\n        // },\n        async userUpdate(){\n            const canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minCropBoxHeight: 300,\n                minCropBoxWidth: 300,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n                });\n            canvas.toBlob(async (blob) => {\n            const formData = new FormData();\n            formData.append('thumbnail',blob, `${this.image}.png`),\n            console.log('getthumb',formData.get('thumbnail')),\n            await axios.patch(`/api/user/${this.$route.params.uid}`,\n                formData\n            )\n            }, 'image/png')\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        },\n        showThumbnailFalse(){\n            this.$emit('showThumbnailFalse')\n        }\n    }\n}\n</script>\n\n<style scoped >\n/* @import \"style/_variables.scss\"; */\n\n.thumbnail-wrapper{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    /* background: ; */\n    overflow:scroll;  \n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n.button-container{\n\n}\n</style>"]}]}