{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue?vue&type=style&index=0&id=d9fcf9e6&scoped=true&lang=css","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue","mtime":1645151889392},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5xdWVzdGlvbnsKICAgIGNvbG9yOndoaXRlOyAgICAKfQpwewogICAgY29sb3I6d2hpdGU7Cn0K"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue"],"names":[],"mappings":";AA0GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC;IACG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf","file":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"community-wrapper\" v-if=\"question\">\n        <h1>質問板</h1>\n        <p> タイトル {{ question.title }} </p>\n        <p> ユーザー名{{ question.user.name}} </p>\n        <p> 作成日{{ question.created_on }} </p>\n        <p> 質問{{ question.description}} </p>\n        <div>\n            <button @click='handleShowAnswerPage'>回答する</button>\n        </div>\n        <p v-if='question.answer[0]'> 回答</p>\n        <div\n            v-for=\"(answer,answerindex) in question.answer\"\n            v-bind:key=\"answerindex\">\n            <p> ユーザー名 {{ answer.user.name }} </p>\n            <p>回答 {{ answer.description }} </p>\n            <p> 作成日{{ answer.created_on }} </p>\n             <button @click='handleShowReplyPage(answer.id)'>返信する</button>\n            <!-- reply should be appir if post user or replyer -->\n            <div v-if='answer.reply[0]'>\n                <p>返信a</p>\n                <div v-for=\"(reply,replyindex) in answer.reply\"\n                     v-bind:key=\"replyindex\">\n                     <p>返信{{ reply.description }}</p>\n                </div>\n            </div>\n        </div>\n        <Answer v-if='showAnswerPage'\n        @handleShowAnswerPage='handleShowAnswerPage'\n        :questionTitle='questionTitle'\n        :questionDescription='questionDescription'\n        :questionId='questionId\n        '/>\n        <Reply v-if='showReplyPage'\n        @handleShowReplyPage='handleShowReplyPage'\n        :answerId='answerId'\n        />\n        <!-- {{ questions }} -->\n        <!-- <div class=question \n         v-for=\"(question,questionindex) in questions\"\n         v-bind:key=\"questionindex\">\n            <div class=\"tag\">tag:{{ question.tag }}</div>\n            <div class=\"title\">title:{{ question.title }}</div>\n            <div class=\"good\">good:{{ question.good }}</div>\n            <div class=\"date\">data:{{ remove_T_Z(question.timestamp) }}</div>\n        </div>\n        <CreateQuestion v-if='showCreateQuestion'\n        @handleShowConfirm='handleShowConfirm'/>\n        <Confirm v-if='showConfirm'/> -->\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport  Answer from '@/components/board/Answer.vue'\nimport  Reply from '@/components/board/Reply.vue'\nexport default {\n    components: {\n        Answer,\n        Reply\n  },\n    data(){\n        return{\n            question:'',\n            showAnswerPage: false,\n            showReplyPage: false,\n            questionTitle:'',\n            questionDescription:'',\n            questionId:'',\n            answerId:''\n        }\n    },\n    beforeMount(){\n    },\n    mounted() {\n        console.log('mounted at detail') \n        this.getDetail() \n    },\n    methods: {\n        async getDetail() {\n            await axios\n                .get(`/api/board/question/${this.$route.params.slug}`)\n                .then(response => {\n                    this.question = response.data\n                    this.questionTitle = this.question.title\n                    this.questionDescription = this.question.description\n                    this.questionId = this.question.id})\n                .catch(error => {\n                    console.log(error)\n            })\n        },\n        handleShowAnswerPage(){\n            this.showAnswerPage = !this.showAnswerPage\n        },\n        handleShowReplyPage(id){\n            this.getAnswerId(id)\n            this.showReplyPage = !this.showReplyPage\n        },\n        getAnswerId(id){\n            this.answerId = id\n        }\n    }\n}\n</script>\n\n<style scoped>\n.question{\n    color:white;    \n}\np{\n    color:white;\n}\n</style>"]}]}