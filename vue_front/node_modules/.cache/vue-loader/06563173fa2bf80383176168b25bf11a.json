{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue?vue&type=template&id=6ecb834a","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue","mtime":1647510465278},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iaG9tZSI+CiAgICA8ZGl2IGNsYXNzPSJpcy1sb2FkaW5nLWJhciBoYXMtdGV4dC1jZW50ZXJlZCIgdi1iaW5kOmNsYXNzPSJ7J2lzLWxvYWRpbmcnOiAkc3RvcmUuc3RhdGUuaXNMb2FkaW5nIH0iPgogICAgICA8ZGl2IGNsYXNzPSJsZHMtZHVhbC1yaW5nIj48L2Rpdj4KICAgIDwvZGl2PgogICAgIDxmb3JtIEBzdWJtaXQucHJldmVudD0ncmVnaXN0ZXJVc2VyT25kRGphbmdvJyA+CiAgICAgICAgICA8aW5wdXQgdHlwZT0iZmlsZSIgQGNoYW5nZT0nZ2V0SW1hZ2UnPgogICAgICAgICAgPGRpdiB2LWlmPSJzZWxlY3RlZEZpbGUiPgogICAgICAgICAgICAgIDxpbWcgcmVmPSdpbWFnZScgOnNyYz0ic2VsZWN0ZWRGaWxlIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8YnV0dG9uPnNhdmU8L2J1dHRvbj4KICAgICAgPC9mb3JtPgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MAClG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC,CAAC,CAAC;KACJ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UACzC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACrC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cACpB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxC,CAAC,CAAC,CAAC,CAAC,CAAC;YACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n      <div class=\"lds-dual-ring\"></div>\n    </div>\n     <form @submit.prevent='registerUserOndDjango' >\n          <input type=\"file\" @change='getImage'>\n          <div v-if=\"selectedFile\">\n              <img ref='image' :src=\"selectedFile\">\n          </div>\n            <button>save</button>\n      </form>\n  </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport axios from 'axios'\nexport default {\n  name:'questions',\n  data(){\n    return{\n      st:'o',\n      id: 5,\n      selectedFile:''\n    }\n  },\n  methods:{\n    async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files\n            await console.log()\n            // this.imageCropper()\n        },\n    registerUserOndDjango(){\n            console.log('start add')\n            const formData = new FormData()\n            formData.append('thumbnail',this.image[0])\n            formData.append('UID','kokomoko')\n            formData.append('name','mokokoko')\n            formData.append('email','ko@k.com')\n            formData.append('grade','kokomoko')\n            formData.append('country','japan')\n            axios({\n                method: 'post',\n                url: '/api/user/',\n                data: formData\n                // {\n                //   headers:{'Content-Type': \"multipart/form-data\"},\n                //     UID: 'kokomoko',\n                //     name: 'mokkoro',\n                //     email: 'koko@k.com',\n                //     grade: 'unko',\n                //     thumbnail: this.selectedFile,\n                //     country: 'japan'\n                // },\n            })\n        },\n      async userUpdate(){\n            const formData = new FormData()\n            formData.append('thumbnail',this.selectedFile)\n            console.log('getthumb',formData.get('thumbnail'))\n          await axios.patch(`/api/user/${this.$route.params.uid}`,\n              formData, formData.name\n          )\n        //   ({\n        //       methods: 'patch',\n        //       url: `/api/user/${this.$route.params.uid}`,\n        //       data:{\n        //         //   thumbnail: this.selectedFile\n        //         name: 'unko'\n        //             }\n        //         })      \n            },\n    quizRouter(i,f,n){\n      return { name: 'Quiz', params:{ id:i, field:f, num:n}}\n    },\n    ...mapActions(['getquiz','getquestions'])\n    // unko(){\n    //   this.$store.commit('unko',)\n    // }\n    },\n    \n    created(){\n      // this.$store.commit('setNum',this.id)\n      // this.getquiz()\n      // this.getquestions()\n    },\n    \n  // mounted(){\n  //     this.st = this.$store.commit('unko')\n  //     console.log(this.st)\n  // }\n  computed: mapGetters(['questions','quizzes'])\n\n}\n</script>\n\n<style>\n\n</style>"]}]}