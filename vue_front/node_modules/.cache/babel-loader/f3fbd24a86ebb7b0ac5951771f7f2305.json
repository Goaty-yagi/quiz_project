{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport createPersistedState from 'vuex-persistedstate';\nimport Cookies from 'js-cookie';\nimport { auth } from '@/firebase/config';\nimport { router } from \"@/main.js\";\nimport axios from 'axios';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, sendEmailVerification, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail, GoogleAuthProvider, signInWithPopup, getAuth } from 'firebase/auth';\nimport store from '..';\nexport default {\n  namespace: true,\n  // plugins: [\n  //     createPersistedState({\n  //       key: 'signupKey',  // 設定しなければ'vuex'\n  //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n  //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n  //     })],\n  state: {\n    username: '',\n    email: '',\n    email2: '',\n    country: '',\n    password: '',\n    user: null,\n    registeredUser: false,\n    djangoUser: null,\n    UID: '',\n    fasvoriteQuestion: '',\n    emailVerified: null,\n    authIsReady: false,\n    checkedEmail: null,\n    accountURL: 'http://localhost:8080/',\n    actionCodeSettings: {\n      url: null,\n      handleCodeInApp: true\n    },\n    tempUser: {\n      test: false,\n      statusList: '',\n      grade: '',\n      level: ''\n    },\n    favoriteQuestion: '',\n    logger: {\n      actualErrorName: '',\n      actualErrorMessage: '',\n      message: '',\n      name: ''\n    },\n    userInfo: '',\n    exceptUserInfo: '',\n    beingException: false,\n    reloadForException: false,\n    apiError: {\n      // this is for connection Error\n      django: false,\n      firebase: false,\n      ipinfo: false,\n      any: false\n    },\n    onSigningup: false,\n    myQuestion: '',\n    myQuizInfo: {\n      id: '',\n      max: ''\n    },\n    gradeDict: {\n      '超初級': 0,\n      '初級': 10,\n      '中級': 20,\n      '上級': 30\n    },\n    thirdPartyLogindata: '',\n    thirdPartyError: '',\n    photoURL: '',\n    countryData: ''\n  },\n  getters: {\n    getUID(state) {\n      return state.UID;\n    },\n\n    getUser(state) {\n      return state.user;\n    },\n\n    getDjangouser(state) {\n      return state.djangoUser;\n    },\n\n    getEmailVerified(state) {\n      return state.emailVerified;\n    },\n\n    getTempUser(state) {\n      return state.tempUser;\n    },\n\n    logger(state) {\n      return state.logger;\n    },\n\n    onSigningup(state) {\n      return state.onSigningup;\n    },\n\n    getMyQuestion(state) {\n      return state.myQuestion;\n    },\n\n    getMyQuizInfo(state) {\n      return state.myQuizInfo;\n    },\n\n    quizNameIdInSignup(state, getters, rootState) {\n      return rootState.quiz.quizNameId;\n    },\n\n    getUserInfo(state) {\n      return state.userInfo;\n    },\n\n    getThirdPartyError(state) {\n      return state.thirdPartyError;\n    },\n\n    getPhotoURL(state) {\n      return state.photoURL;\n    }\n\n  },\n  mutations: {\n    getUsername(state, item) {\n      state.username = item;\n    },\n\n    getEmail(state, item) {\n      state.email = item;\n    },\n\n    getEmail2(state, item) {\n      state.email2 = item;\n    },\n\n    getCountry(state, item) {\n      state.country = item;\n    },\n\n    getPassword(state, item) {\n      state.password = item;\n    },\n\n    setUser(state, payload) {\n      state.user = payload;\n\n      if (state.user) {\n        state.registeredUser = true;\n        state.UID = state.user.uid;\n      }\n\n      console.log('user state changed:', state.user);\n    },\n\n    setAuthIsReady(state, payload) {\n      state.authIsReady = payload;\n      console.log('setauth is changed:', state.user);\n    },\n\n    setDjangoUser(state, payload) {\n      state.djangoUser = payload;\n      console.log('set Django user', state.djangoUser);\n    },\n\n    emailVerifiedHandler(state, payload) {\n      state.emailVerified = payload;\n      console.log('emailV chainged', state.emailVerified);\n    },\n\n    checkEmailHandler(state, payload) {\n      state.checkedEmail = payload;\n    },\n\n    setTempUser(state, payload) {\n      state.tempUser.test = true;\n      state.tempUser.statusList = payload.status;\n      state.tempUser.grade = payload.grade;\n      state.tempUser.level = payload.level;\n      console.log('set-temp-user', state.tempUser);\n    },\n\n    setTempUserReset(state) {\n      state.tempUser.test = false;\n      state.tempUser.statusList = '', state.tempUser.grade = '', state.tempUser.level = '';\n      Cookies.remove('tempKey');\n      console.log('reset-TempUser', state.tempUser);\n    },\n\n    tempUserTestTrue(state) {\n      state.tempUser.test = true;\n    },\n\n    resetQuizKeyStorage(state) {\n      // this is for log out\n      state.UID = null;\n      state.djangoUser = null;\n      state.emailVerified = null;\n      state.beingException = false, state.reloadForException = false;\n      state.apiError.django = false;\n      state.apiError.firebase = false;\n      state.apiError.ipinfo = false;\n      state.apiError.any = false;\n      state.myQuizInfo.id = '';\n      state.myQuizInfo.max = '';\n      state.myQuestion = '';\n      state.registeredUser = false;\n      console.log('all-Reset');\n    },\n\n    setLogger(state, payload) {\n      state.logger.actualErrorName = payload.actualErrorName;\n      state.logger.actualErrorMessage = payload.actualErrorMessage;\n      state.logger.name = payload.name;\n      state.logger.message = payload.message;\n    },\n\n    setUserInfo(state, payload) {\n      state.userInfo = payload;\n    },\n\n    checkBeingException(state, payload) {\n      if (state.user && !state.djangoUser) {\n        state.beingException = true;\n        console.log('set-being-exception', state.beingException);\n      }\n    },\n\n    reloadForExceptionTrueForGeneralApiError(state) {\n      state.reloadForException = true;\n      console.log('setRUFEtrue');\n    },\n\n    reloadForExceptionTrue(state) {\n      if (state.user && !state.djangoUser) {\n        state.reloadForException = true;\n        console.log('setRUFEtrue');\n      }\n    },\n\n    reloadForExceptionFalse(state) {\n      state.reloadForException = false;\n      console.log('setRUFEfalse');\n    },\n\n    handleapiError(state, payload) {\n      if (payload == 'django') {\n        state.apiError.django = true;\n      } else if (payload == 'firebase') {\n        state.apiError.firebase = true;\n      } else if (payload == 'ipinfo') {\n        state.apiError.ipinfo = true;\n      }\n    },\n\n    checkDjangoError(state, payload) {\n      if (state.apiError.django) {\n        router.push({\n          name: 'ConnectionError'\n        });\n      } else if (payload == \"Network Error\") {\n        state.apiError.django = true;\n        state.apiError.any = true;\n      } else {\n        router.push({\n          name: 'NotFound404'\n        });\n      }\n    },\n\n    resetDjangoError(state) {\n      state.apiError.django = false;\n      state.apiError.any = false;\n    },\n\n    handleOnSigningup(state) {\n      state.onSigningup = !state.onSigningup;\n    },\n\n    deleteMyQuestion(state, payload) {\n      console.log(\"before\", state.myQuestion, payload);\n      state.myQuestion = state.myQuestion.filter(item => {\n        console.log('item', item);\n        return item.question.id != payload;\n      });\n      console.log(\"after\", state.myQuestion);\n    },\n\n    addMyQuestion(state, payload) {\n      console.log(\"before\", state.myQuestion, payload);\n      state.myQuestion.push(payload);\n      console.log(\"after\", state.myQuestion);\n    },\n\n    updateQuizTaker(state, payload) {\n      state.djangoUser.quiz_taker[0].grade = payload.grade;\n      state.djangoUser.quiz_taker[0].level = payload.level;\n      console.log('set', state.djangoUser);\n    },\n\n    updateQuizTakerMax(state, payload) {\n      // this is for session storage only to reduce API hit\n      state.djangoUser.quiz_taker[0].max_level = state.djangoUser.quiz_taker[0].level;\n      state.djangoUser.quiz_taker[0].max_grade = payload;\n      console.log('set_max', state.djangoUser);\n    },\n\n    setTirdPartyLoginData(state, payload) {\n      if (state.tempUser.test) {\n        console.log('YES TEMP');\n        state.userInfo = {\n          UID: payload.uid,\n          name: payload.displayName,\n          email: payload.email,\n          quiz_taker: [{\n            grade: state.tempUser.grade\n          }, {\n            level: state.tempUser.level\n          }]\n        };\n      } else {\n        console.log('NO TEMP');\n        state.userInfo = {\n          UID: payload.uid,\n          name: payload.displayName,\n          email: payload.email\n        };\n      } // try{\n      //     console.log(\"try\",this.userInfo)\n      //     this.$store.dispatch('signupDjangoUser',this.userInfo)\n      // }\n      // catch(error){\n      //     console.log('error',error.message)\n      // }\n\n    },\n\n    setIpData(state, payload) {\n      state.userInfo['ip_data'] = [{\n        city: payload.city,\n        ip: payload.ip,\n        loc: payload.loc,\n        org: payload.org,\n        postal: payload.postal,\n        region: payload.region,\n        timezone: payload.timezone,\n        country: payload.country\n      }];\n      console.log('setIpdata', state.userInfo);\n    },\n\n    setPhotoURL(state, payload) {\n      state.photoURL = payload;\n    },\n\n    resetPhotoURL(state, payload) {\n      state.photoURL = '';\n    }\n\n  },\n  actions: {\n    async signupDjangoUser({\n      state,\n      commit\n    }, payload) {\n      console.log(\"INSDU\", payload);\n\n      try {\n        // throw new Error('could not sent validation')\n        await axios({\n          method: 'post',\n          url: '/api/user/',\n          data: payload\n        }).then(response => {\n          commit('setDjangoUser', response.data);\n        });\n        state.beingException = false;\n        commit(\"resetDjangoError\");\n        commit(\"setTempUserReset\");\n        state.userInfo = '';\n      } catch (e) {\n        state.userInfo = payload;\n        let logger = {\n          message: \"in store/signup.SignupDjangoUser. couldn't signup django user\",\n          name: window.location.pathname,\n          actualErrorName: e.name,\n          actualErrorMessage: e.message\n        };\n        console.log('error', e);\n        commit('setLogger', logger);\n        commit(\"checkDjangoError\", e.message);\n      }\n    },\n\n    async signupDjangoUserForException({\n      state,\n      commit\n    }, payload) {\n      // this is only for unsub below. dont use other part\n      console.log(\"INSDUFX\");\n\n      if (!state.djangoUser && state.beingException) {\n        if (state.userInfo) {\n          try {\n            // throw new Error('could not sent validation')\n            await axios({\n              method: 'post',\n              url: '/api/user/',\n              data: state.userInfo\n            }).then(response => {\n              commit('setDjangoUser', response.data);\n            });\n            state.beingException = false;\n            commit('resetDjangoError');\n            commit(\"setTempUserReset\");\n            state.userInfo = '';\n          } catch (e) {\n            console.log('catchdayo', e.message);\n            commit(\"checkDjangoError\", e.message);\n            let logger = {\n              message: \"in store/signup.SignupDjangoUserException1. couldn't signup django user\",\n              name: window.location.pathname,\n              actualErrorName: e.name,\n              actualErrorMessage: e.message\n            };\n            commit('setLogger', logger);\n            commit(\"checkDjangoError\", e.message);\n          }\n        } else {\n          try {\n            console.log('NO TEMP');\n            await axios.get(\"https://ipinfo.io/json?token=32e16159d962c5\").then(response => {\n              let IP = response.data;\n              state.exceptUserInfo = {\n                UID: state.user.uid,\n                name: '名前を変更しよう',\n                email: state.user.email,\n                ip_data: [{\n                  city: IP.city,\n                  ip: IP.ip,\n                  loc: IP.loc,\n                  org: IP.org,\n                  postal: IP.postal,\n                  region: IP.region,\n                  timezone: IP.timezone,\n                  country: IP.country\n                }]\n              };\n            });\n          } catch (e) {\n            commit(\"checkDjangoError\", e.message);\n            let logger = {\n              message: \"in store/signup.SignupDjangoUserException2. couldn't signup django user\",\n              name: window.location.pathname,\n              actualErrorName: e.name,\n              actualErrorMessage: e.message\n            };\n            commit('setLogger', logger);\n            router.push({\n              name: 'NotFound404'\n            });\n          }\n\n          try {\n            console.log('try non_userINFO', state.exceptUserInfo); // throw new Error('could not sent validation')\n\n            await axios({\n              method: 'post',\n              url: '/api/user/',\n              data: state.exceptUserInfo\n            });\n            state.beingException = false;\n            commit(\"resetDjangoError\");\n          } catch (e) {\n            commit(\"checkDjangoError\", e.message);\n            let logger = {\n              message: \"in store/signup.SignupDjangoUserException3. couldn't signup django user\",\n              name: window.location.pathname,\n              actualErrorName: e.name,\n              actualErrorMessage: e.message\n            };\n            commit('setLogger', logger);\n            router.push({\n              name: 'NotFound404'\n            });\n          }\n        }\n      }\n    },\n\n    async signupDjangoUserForThirdParty({\n      state,\n      commit,\n      dispatch\n    }, payload) {\n      console.log(\"INSDUTH\", payload);\n\n      try {\n        await axios({\n          method: 'post',\n          url: '/api/user/',\n          data: payload\n        }).then(response => {\n          if (response.status == 222) {\n            console.log('response222');\n            commit('resetPhotoURL');\n            commit('setDjangoUser', response.data);\n          } else {\n            commit('setDjangoUser', response.data);\n          }\n        }); // state.beingException = false\n\n        commit(\"resetDjangoError\");\n        commit(\"setTempUserReset\"); // await dispatch(\"patchImage\")\n\n        state.userInfo = '';\n      } catch (e) {\n        // console.log('e',e,e.response.data)\n        // if(e.response.data = 'user-exists-django'){\n        //     state.thirdPartyError = e.response.data;\n        //     state.userInfo = payload\n        // }\n        // else{\n        let logger = {\n          message: \"in store/signup.SignupDjangoUserFoeThirdParty. couldn't signup django user\",\n          name: window.location.pathname,\n          actualErrorName: e.name,\n          actualErrorMessage: e.message\n        };\n        console.log('error', e);\n        commit('setLogger', logger);\n        commit(\"checkDjangoError\", e.message); // }\n      }\n    },\n\n    async getDjangoUser({\n      state,\n      commit,\n      dispatch\n    }) {\n      // commit('setIsLoading', true, {root:true})\n      if (state.user && !state.beingException) {\n        console.log('GDU_pass', state.beingException);\n\n        try {\n          await axios.get(`/api/user/${state.user.uid}`).then(response => {\n            commit('setDjangoUser', response.data);\n            state.myQuestion = response.data.my_quiz[0].my_question;\n            state.myQuizInfo.id = response.data.my_quiz[0].id;\n            state.myQuizInfo.max = response.data.my_quiz[0].max_num;\n            console.log(\"MQ\", state.myQuestion);\n          });\n          commit(\"resetDjangoError\");\n        } catch (e) {\n          console.log('catch');\n          let logger = {\n            message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n            name: window.location.pathname,\n            actualErrorName: e.name,\n            actualErrorMessage: e.message\n          };\n          commit('setLogger', logger);\n          commit(\"checkDjangoError\", e.message);\n        }\n      } // commit('setIsLoading', false, {root:true})\n\n    },\n\n    async getFavoriteQuestion({\n      state,\n      commit\n    }) {\n      state.favoriteQuestion = null;\n\n      if (state.djangoUser) {\n        try {\n          const questionId = [];\n\n          for (let i of state.djangoUser.favorite_question[0].question) {\n            questionId.push(i);\n          }\n\n          if (questionId[0]) {\n            await axios.get(`/api/board/question-favorite?question_id=${questionId}`).then(response => {\n              state.favoriteQuestion = response.data;\n            }).catch(e => {\n              let logger = {\n                message: \"in store/signup.getFavoriteQuestion. couldn't get favoriteQuestion \",\n                name: window.location.pathname,\n                actualErrorName: e.name,\n                actualErrorMessage: e.message\n              };\n              commit('setLogger', logger);\n              commit(\"checkDjangoError\", e.message);\n            });\n          }\n        } catch {}\n      }\n    },\n\n    // async getCountryData({ state, commit,dispatch }){\n    //     // commit('setIsLoading', true, {root:true})\n    //         console.log('country')\n    //         try{\n    //             await fetch('@/vue_front/src/assets/country.json')\n    //             .then(response => {\n    //                 console.log('res',response.data)\n    //             })\n    //         }\n    //         catch(e){\n    //             console.log('catch',e)\n    //             // let logger = {\n    //             //     message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n    //             //     name: window.location.pathname,\n    //             //     actualErrorName: e.name,\n    //             //     actualErrorMessage: e.message,\n    //             // }\n    //             // commit('setLogger',logger)\n    //             // commit(\"checkDjangoError\", e.message)\n    //         }\n    // },\n    async signup(context, {\n      email,\n      password\n    }) {\n      console.log('signup in');\n\n      try {\n        const ref = await createUserWithEmailAndPassword(auth, email, password);\n        context.state.actionCodeSettings['url'] = context.state.accountURL;\n        sendEmailVerification(ref.user, context.state.actionCodeSettings);\n        context.commit('setUser', ref.user);\n        context.commit('emailVerifiedHandler', ref.user.emailVerified);\n        console.log('signup is done', auth.currentUser);\n      } catch (e) {\n        let logger = {\n          message: \"in store/signup.signup. couldn't signup firebase user\",\n          name: window.location.pathname,\n          actualErrorName: e.code,\n          actualErrorMessage: e.message\n        };\n        context.commit('setLogger', logger);\n        router.push({\n          name: 'NotFound404'\n        });\n      }\n    },\n\n    async googleLogin(context) {\n      const provider = new GoogleAuthProvider();\n      const auth = getAuth();\n      signInWithPopup(auth, provider).then(result => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken; // The signed-in user info.\n\n        context.commit('setPhotoURL', result.user.photoURL);\n        context.commit('setUser', result.user);\n        context.commit('emailVerifiedHandler', result.user.emailVerified);\n        context.commit('setTirdPartyLoginData', result.user);\n        context.dispatch('getIpData');\n      }).catch(e => {\n        let logger = {\n          message: \"in store/signup.googleLogin. couldn't Login firebase user\",\n          name: window.location.pathname,\n          actualErrorName: e.code,\n          actualErrorMessage: e.message\n        };\n        context.commit('setLogger', logger);\n        router.push({\n          name: 'ConnectionError'\n        }); // Handle Errors here.\n\n        const errorCode = e.code;\n        const errorMessage = e.message; // The email of the user's account used.\n\n        const email = e.email; // The AuthCredential type that was used.\n\n        const credential = GoogleAuthProvider.credentialFromError(e); // ...\n      });\n    },\n\n    async sendEmailVerify(context) {\n      context.state.actionCodeSettings['url'] = context.state.accountURL;\n      console.log('sendEmail', context.state.user, context.state.actionCodeSettings);\n      await sendEmailVerification(context.state.user, context.state.actionCodeSettings);\n    },\n\n    async sentValidation(context) {\n      console.log('insentV');\n\n      try {\n        await context.state.user.sendEmailVerification();\n      } catch (e) {\n        // let logger = {\n        //     message: \"in store/signup.googleLogin. couldn't sentValidation firebase user\",\n        //     name: window.location.pathname,\n        //     actualErrorName: e.code,\n        //     actualErrorMessage: e.message,\n        // }\n        context.commit('setLogger', logger);\n        router.push({\n          name: 'ConnectionError'\n        });\n      }\n    },\n\n    async login(context, {\n      email,\n      password\n    }) {\n      // context.commit('setIsLoading', true, {root:true})\n      console.log('in_login');\n\n      try {\n        var ref = await signInWithEmailAndPassword(auth, email, password);\n      } catch {\n        console.log('error');\n        throw new Error('could not complite signin');\n      }\n\n      if (ref) {\n        console.log(\"IF YES\");\n        context.commit('setUser', ref.user);\n        context.dispatch('getDjangoUser');\n        context.commit(\"setTempUserReset\");\n        context.commit('emailVerifiedHandler', ref.user.emailVerified);\n        console.log(context.state.user, context.state.emailVerified);\n      } else {\n        console.log('error in sign in');\n        throw new Error('could not complite signin');\n      } // context.commit('setIsLoading', false, {root:true})                \n\n    },\n\n    async checkEmail(context, email) {\n      try {\n        const ref = await fetchSignInMethodsForEmail(auth, email);\n\n        if (ref == 'password') {\n          context.commit('checkEmailHandler', false);\n          console.log('already in use');\n        } else {\n          context.commit('checkEmailHandler', true);\n          console.log('you can use it');\n        }\n      } catch {\n        console.log('error in sign up');\n        throw new Error('could not check email');\n      }\n    },\n\n    async passwordReset(context, email) {\n      console.log('passreset action', email);\n\n      try {\n        context.state.actionCodeSettings['url'] = context.state.accountURL;\n        await sendPasswordResetEmail(auth, email, context.state.actionCodeSettings);\n        console.log('password reset sent');\n      } catch {\n        console.log('error in pass reset');\n        throw new Error('could not sent pass reset');\n      }\n    },\n\n    async logout(context) {\n      await signOut(auth);\n      context.commit('setUser', null);\n      context.commit('resetQuizKeyStorage');\n      router.push({\n        name: 'Home'\n      });\n    },\n\n    updateQuizTakerAction({\n      state,\n      commit,\n      getters\n    }, payload) {\n      console.log('inUQTA', getters);\n      commit('updateQuizTaker', payload);\n      console.log('UPaction', getters.quizNameIdInSignup);\n\n      for (let i of getters.quizNameIdInSignup) {\n        if (i.id == payload.grade) {\n          if (state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] < state.gradeDict[i.name]) {\n            commit('updateQuizTakerMax', i.name);\n            break;\n          } else if (state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] == state.gradeDict[i.name]) {\n            if (state.djangoUser.quiz_taker[0].max_level < payload.level) {\n              commit('updateQuizTakerMax', i.name);\n              break;\n            }\n          }\n        }\n      }\n    },\n\n    async getOrSignupDjangoUserForThirdParty(context) {\n      await context.dispatch('signupDjangoUserForThirdParty', context.getters.getUserInfo);\n      router.push({\n        name: 'Account'\n      });\n    },\n\n    async getIpData(context) {\n      await axios.get(\"https://ipinfo.io/json?token=32e16159d962c5\").then(response => {\n        context.commit('setIpData', response.data);\n        context.dispatch('getOrSignupDjangoUserForThirdParty');\n      });\n    } // async patchImage(context){\n    //     var list = context.getters.getDjangouser.thumbnail.split('/')\n    //     console.log('list',list)\n    //     if(list.includes('default.png')&&context.getters.getPhotoURL){\n    //         console.log('png');\n    //         const blob = await fetch(this.getPhotoURL).then(r => r.blob());\n    //         const headers = { \"content-type\": \"multipart/form-data\" };\n    //         const formData = new FormData();\n    //         formData.append('thumbnail',blob,`${blob}.png`)\n    //         console.log('getthumb',formData.get('thumbnail'),formData),\n    //         axios.patch(`/api/user/${context.getters.getDjangouser.UID}`,\n    //             formData,\n    //             {headers}\n    //         )\n    //     }\n    // },\n\n\n  }\n};\nconst unsub = onAuthStateChanged(auth, user => {\n  store.commit('setAuthIsReady', true);\n  store.commit('setUser', user);\n  console.log('unsub', user);\n\n  if (user) {\n    store.dispatch('getDjangoUser');\n    store.commit('emailVerifiedHandler', user.emailVerified);\n    store.dispatch('signupDjangoUserForException');\n  } else {\n    store.commit('resetQuizKeyStorage');\n  }\n\n  unsub();\n});","map":{"version":3,"names":["createPersistedState","Cookies","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","GoogleAuthProvider","signInWithPopup","getAuth","store","namespace","state","username","email","email2","country","password","user","registeredUser","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","tempUser","test","statusList","grade","level","favoriteQuestion","logger","actualErrorName","actualErrorMessage","message","name","userInfo","exceptUserInfo","beingException","reloadForException","apiError","django","firebase","ipinfo","any","onSigningup","myQuestion","myQuizInfo","id","max","gradeDict","thirdPartyLogindata","thirdPartyError","photoURL","countryData","getters","getUID","getUser","getDjangouser","getEmailVerified","getTempUser","getMyQuestion","getMyQuizInfo","quizNameIdInSignup","rootState","quiz","quizNameId","getUserInfo","getThirdPartyError","getPhotoURL","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","setDjangoUser","emailVerifiedHandler","checkEmailHandler","setTempUser","status","setTempUserReset","remove","tempUserTestTrue","resetQuizKeyStorage","setLogger","setUserInfo","checkBeingException","reloadForExceptionTrueForGeneralApiError","reloadForExceptionTrue","reloadForExceptionFalse","handleapiError","checkDjangoError","push","resetDjangoError","handleOnSigningup","deleteMyQuestion","filter","question","addMyQuestion","updateQuizTaker","quiz_taker","updateQuizTakerMax","max_level","max_grade","setTirdPartyLoginData","displayName","setIpData","city","ip","loc","org","postal","region","timezone","setPhotoURL","resetPhotoURL","actions","signupDjangoUser","commit","method","data","then","response","e","window","location","pathname","signupDjangoUserForException","get","IP","ip_data","signupDjangoUserForThirdParty","dispatch","getDjangoUser","my_quiz","my_question","max_num","getFavoriteQuestion","questionId","i","favorite_question","catch","signup","context","ref","currentUser","code","googleLogin","provider","result","credential","credentialFromResult","token","accessToken","errorCode","errorMessage","credentialFromError","sendEmailVerify","sentValidation","login","Error","checkEmail","passwordReset","logout","updateQuizTakerAction","getOrSignupDjangoUserForThirdParty","getIpData","unsub"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport Cookies from 'js-cookie'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  GoogleAuthProvider,\n  signInWithPopup,\n  getAuth,\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        registeredUser: false,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n        },\n        tempUser: {\n            test: false,\n            statusList:'',\n            grade:'',\n            level:''\n        },\n        favoriteQuestion:'',\n        logger:{\n            actualErrorName:'',\n            actualErrorMessage:'',\n            message:'',\n            name:''\n        },\n        userInfo:'',\n        exceptUserInfo:'',\n        beingException:false,\n        reloadForException: false,\n        apiError:{\n            // this is for connection Error\n            django: false,\n            firebase: false,\n            ipinfo: false,\n            any: false\n        },\n        onSigningup:false,\n        myQuestion:'',\n        myQuizInfo:{\n            id:'',\n            max:'',\n        },\n        gradeDict:{\n            '超初級':0,\n            '初級':10,\n            '中級':20,\n            '上級':30\n        },\n        thirdPartyLogindata:'',\n        thirdPartyError:'',\n        photoURL:'',\n        countryData:'',\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getUser(state){\n            return state.user\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        },\n        getEmailVerified(state){\n            return state.emailVerified\n        },\n        getTempUser(state){\n            return state.tempUser\n        },\n        logger(state){\n            return state.logger\n        },\n        onSigningup(state){\n            return state.onSigningup\n        },\n        getMyQuestion(state){\n            return state.myQuestion\n        },\n        getMyQuizInfo(state){\n            return state.myQuizInfo\n        },\n        quizNameIdInSignup(state, getters, rootState){\n            return rootState.quiz.quizNameId\n        },\n        getUserInfo(state){\n            return state.userInfo\n        },\n        getThirdPartyError(state){\n            return state.thirdPartyError\n        },\n        getPhotoURL(state){\n            return state.photoURL\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            if(state.user){\n                state.registeredUser = true\n                state.UID = state.user.uid\n            }\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        setDjangoUser(state,payload){\n            state.djangoUser = payload\n            console.log('set Django user',state.djangoUser)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        },\n        setTempUser(state,payload){\n            state.tempUser.test = true\n            state.tempUser.statusList = payload.status\n            state.tempUser.grade = payload.grade\n            state.tempUser.level = payload.level\n            console.log('set-temp-user', state.tempUser)\n        },\n        setTempUserReset(state){\n            state.tempUser.test = false\n            state.tempUser.statusList = '',\n            state.tempUser.grade = '',\n            state.tempUser.level = ''\n            Cookies.remove('tempKey')\n            console.log('reset-TempUser',state.tempUser)\n        },\n        tempUserTestTrue(state){\n            state.tempUser.test = true\n        },\n        resetQuizKeyStorage(state){\n            // this is for log out\n            state.UID = null\n            state.djangoUser = null\n            state.emailVerified = null\n            state.beingException = false,\n            state.reloadForException = false\n            state.apiError.django = false\n            state.apiError.firebase = false\n            state.apiError.ipinfo = false\n            state.apiError.any = false\n            state.myQuizInfo.id = ''\n            state.myQuizInfo.max = ''\n            state.myQuestion = ''\n            state.registeredUser = false\n            console.log('all-Reset')\n        },\n        setLogger(state,payload){\n            state.logger.actualErrorName = payload.actualErrorName\n            state.logger.actualErrorMessage = payload.actualErrorMessage\n            state.logger.name = payload.name\n            state.logger.message = payload.message\n        },\n        setUserInfo(state,payload){\n            state.userInfo = payload\n        },\n        checkBeingException(state,payload){\n            if(state.user&&!state.djangoUser){\n                state.beingException = true\n                console.log('set-being-exception',state.beingException)\n            }\n        },\n        reloadForExceptionTrueForGeneralApiError(state){\n            state.reloadForException = true\n            console.log('setRUFEtrue')\n        },\n        reloadForExceptionTrue(state){\n            if(state.user&&!state.djangoUser){\n                state.reloadForException = true\n                console.log('setRUFEtrue')\n            }\n        },\n        reloadForExceptionFalse(state){\n            state.reloadForException = false\n            console.log('setRUFEfalse')\n        },\n        handleapiError(state,payload){\n            if(payload=='django'){\n                state.apiError.django = true\n            }\n            else if(payload=='firebase'){\n                state.apiError.firebase = true\n            }\n            else if(payload=='ipinfo'){\n                state.apiError.ipinfo = true\n            }\n        },\n        checkDjangoError(state,payload){\n            if(state.apiError.django){\n                router.push({ name: 'ConnectionError' })\n            }\n            else if(payload==\"Network Error\"){\n                state.apiError.django = true\n                state.apiError.any = true\n            }else{\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        resetDjangoError(state){\n            state.apiError.django = false\n            state.apiError.any = false\n        },\n        handleOnSigningup(state){\n            state.onSigningup = !state.onSigningup\n        },\n        deleteMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion = state.myQuestion.filter(item =>{\n                console.log('item',item)\n                return (item.question.id !=payload)\n            })\n            console.log(\"after\",state.myQuestion)\n        },\n        addMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion.push(payload)\n            console.log(\"after\",state.myQuestion)\n        },\n        updateQuizTaker(state,payload) {\n            state.djangoUser.quiz_taker[0].grade = payload.grade\n            state.djangoUser.quiz_taker[0].level = payload.level\n            console.log('set', state.djangoUser)\n        },\n        updateQuizTakerMax(state, payload) {\n            // this is for session storage only to reduce API hit\n            state.djangoUser.quiz_taker[0].max_level = state.djangoUser.quiz_taker[0].level\n            state.djangoUser.quiz_taker[0].max_grade = payload\n                    \n            console.log('set_max', state.djangoUser)\n        },\n        setTirdPartyLoginData(state, payload){\n            if(state.tempUser.test){\n                console.log('YES TEMP')\n                state.userInfo={\n                    UID: payload.uid,\n                    name: payload.displayName,\n                    email: payload.email,\n                    quiz_taker: [\n                        {grade: state.tempUser.grade},\n                        {level: state.tempUser.level},\n                    ],\n                }\n            }else{\n                console.log('NO TEMP')\n                state.userInfo={\n                    UID: payload.uid,\n                    name: payload.displayName,\n                    email: payload.email,\n                }\n            }\n            // try{\n            //     console.log(\"try\",this.userInfo)\n            //     this.$store.dispatch('signupDjangoUser',this.userInfo)\n            // }\n            // catch(error){\n            //     console.log('error',error.message)\n            // }\n        },\n        setIpData(state, payload){\n            state.userInfo['ip_data'] = [{\n                city: payload.city,\n                ip: payload.ip,\n                loc: payload.loc,\n                org: payload.org,\n                postal: payload.postal,\n                region: payload.region,\n                timezone: payload.timezone,\n                country: payload.country\n            }]\n            console.log('setIpdata',state.userInfo)\n        },\n        setPhotoURL(state,payload){\n            state.photoURL = payload\n        },\n        resetPhotoURL(state,payload){\n            state.photoURL = ''\n        },\n    },\n    actions:{\n        async signupDjangoUser( {state, commit},payload ){\n            console.log(\"INSDU\",payload)\n            try{\n                // throw new Error('could not sent validation')\n                await axios({\n                    method: 'post',\n                    url: '/api/user/',\n                    data: payload\n                })\n                .then(response => {\n                    commit('setDjangoUser',response.data)\n                })\n                state.beingException = false\n                commit(\"resetDjangoError\")\n                commit(\"setTempUserReset\")\n                state.userInfo = ''\n            }\n            catch(e){\n                state.userInfo = payload\n                let logger = {\n                    message: \"in store/signup.SignupDjangoUser. couldn't signup django user\",\n                    name: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n\n                }\n                console.log('error',e)\n                commit('setLogger',logger)\n                commit(\"checkDjangoError\", e.message)\n            }\n        },\n        async signupDjangoUserForException( {state, commit},payload ){\n            // this is only for unsub below. dont use other part\n            console.log(\"INSDUFX\")\n            if(!state.djangoUser&&state.beingException){\n                if(state.userInfo){\n                    try{\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.userInfo\n                        })\n                        .then(response => {\n                            commit('setDjangoUser',response.data)\n                        })\n                        state.beingException = false\n                        commit('resetDjangoError')\n                        commit(\"setTempUserReset\")\n                        state.userInfo = ''\n                    }\n                    catch(e){\n                        console.log('catchdayo',e.message)\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.SignupDjangoUserException1. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualErrorName: e.name,\n                            actualErrorMessage: e.message,\n                        }\n                        commit('setLogger',logger)\n                        commit(\"checkDjangoError\", e.message)\n                    }\n                }\n                else{\n                    try{\n                        console.log('NO TEMP')\n                        await axios\n                        .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n                        .then(response => {\n                            let IP = response.data\n                            state.exceptUserInfo = {\n                                UID: state.user.uid,\n                                name: '名前を変更しよう',\n                                email: state.user.email,\n                                ip_data: [{\n                                    city: IP.city,\n                                    ip: IP.ip,\n                                    loc: IP.loc,\n                                    org: IP.org,\n                                    postal: IP.postal,\n                                    region: IP.region,\n                                    timezone: IP.timezone,\n                                    country: IP.country\n                                }]\n                            } \n                        })\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.SignupDjangoUserException2. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualErrorName: e.name,\n                            actualErrorMessage: e.message,\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                     \n                    try{\n                        console.log('try non_userINFO',state.exceptUserInfo)\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.exceptUserInfo\n                        })\n                        state.beingException = false\n                        commit(\"resetDjangoError\")\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.SignupDjangoUserException3. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualErrorName: e.name,\n                            actualErrorMessage: e.message,\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                }   \n            }\n        },\n        async signupDjangoUserForThirdParty( {state, commit, dispatch},payload ){\n            console.log(\"INSDUTH\",payload)\n            try{\n                await axios({\n                    method: 'post',\n                    url: '/api/user/',\n                    data: payload,\n                })\n                .then(response => {\n                    if(response.status==222){\n                        console.log('response222')\n                        commit('resetPhotoURL')\n                        commit('setDjangoUser',response.data)\n                    }else{\n                        commit('setDjangoUser',response.data)\n                    }\n                })\n                // state.beingException = false\n                commit(\"resetDjangoError\")\n                commit(\"setTempUserReset\")\n                // await dispatch(\"patchImage\")\n                state.userInfo = ''\n            }\n            catch(e){\n                // console.log('e',e,e.response.data)\n                // if(e.response.data = 'user-exists-django'){\n                //     state.thirdPartyError = e.response.data;\n                //     state.userInfo = payload\n                // }\n                // else{\n                let logger = {\n                    message: \"in store/signup.SignupDjangoUserFoeThirdParty. couldn't signup django user\",\n                    name: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n                }\n                console.log('error',e)\n                commit('setLogger',logger)\n                commit(\"checkDjangoError\", e.message)\n                // }\n            }\n        },\n        async getDjangoUser({ state, commit,dispatch }){\n            // commit('setIsLoading', true, {root:true})\n            if(state.user&&!state.beingException){\n                console.log('GDU_pass',state.beingException)\n                try{\n                    await axios\n                    .get(`/api/user/${state.user.uid}`)\n                    .then(response => {\n                        commit('setDjangoUser',response.data)\n                        state.myQuestion = response.data.my_quiz[0].my_question\n                        state.myQuizInfo.id = response.data.my_quiz[0].id\n                        state.myQuizInfo.max = response.data.my_quiz[0].max_num\n                        console.log(\"MQ\",state.myQuestion)\n                    })\n                    commit(\"resetDjangoError\")\n                }\n                catch(e){\n                    console.log('catch')\n                    let logger = {\n                        message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n                        name: window.location.pathname,\n                        actualErrorName: e.name,\n                        actualErrorMessage: e.message,\n                    }\n                    commit('setLogger',logger)\n                    commit(\"checkDjangoError\", e.message)\n                }\n            }\n            // commit('setIsLoading', false, {root:true})\n        },\n        async getFavoriteQuestion({ state, commit }){\n            state.favoriteQuestion = null\n            if(state.djangoUser){\n                try{\n                    const questionId = []\n                    for(let i of state.djangoUser.favorite_question[0].question){\n                        questionId.push(i)\n                    }\n                    if(questionId[0]){\n                        await axios\n                        .get(`/api/board/question-favorite?question_id=${questionId}`)\n                        .then(response => {\n                            state.favoriteQuestion = response.data\n                            })\n                        .catch(e => {\n                            let logger = {\n                                message: \"in store/signup.getFavoriteQuestion. couldn't get favoriteQuestion \",\n                                name: window.location.pathname,\n                                actualErrorName: e.name,\n                                actualErrorMessage: e.message,\n                            }\n                            commit('setLogger',logger)\n                            commit(\"checkDjangoError\", e.message)\n                        \n                        })\n                    }\n                }catch{\n                    \n                }\n            }\n        },\n        // async getCountryData({ state, commit,dispatch }){\n        //     // commit('setIsLoading', true, {root:true})\n        //         console.log('country')\n        //         try{\n        //             await fetch('@/vue_front/src/assets/country.json')\n        //             .then(response => {\n        //                 console.log('res',response.data)\n        //             })\n        //         }\n        //         catch(e){\n        //             console.log('catch',e)\n        //             // let logger = {\n        //             //     message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n        //             //     name: window.location.pathname,\n        //             //     actualErrorName: e.name,\n        //             //     actualErrorMessage: e.message,\n        //             // }\n        //             // commit('setLogger',logger)\n        //             // commit(\"checkDjangoError\", e.message)\n        //         }\n            \n        // },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch(e){\n                let logger = {\n                    message: \"in store/signup.signup. couldn't signup firebase user\",\n                    name: window.location.pathname,\n                    actualErrorName: e.code,\n                    actualErrorMessage: e.message,\n                }\n                context.commit('setLogger',logger)\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        async googleLogin(context){\n            const provider = new GoogleAuthProvider();\n            const auth = getAuth();\n            signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                context.commit('setPhotoURL',result.user.photoURL)\n                context.commit('setUser',result.user)\n                context.commit('emailVerifiedHandler',result.user.emailVerified)\n                context.commit('setTirdPartyLoginData',result.user)\n                context.dispatch('getIpData')\n            }).catch((e) => {\n                let logger = {\n                    message: \"in store/signup.googleLogin. couldn't Login firebase user\",\n                    name: window.location.pathname,\n                    actualErrorName: e.code,\n                    actualErrorMessage: e.message,\n                }\n                context.commit('setLogger',logger)\n                router.push({ name: 'ConnectionError' })\n                // Handle Errors here.\n                const errorCode = e.code;\n                const errorMessage = e.message;\n                // The email of the user's account used.\n                const email = e.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(e);\n                // ...\n            });\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch(e){\n                // let logger = {\n                //     message: \"in store/signup.googleLogin. couldn't sentValidation firebase user\",\n                //     name: window.location.pathname,\n                //     actualErrorName: e.code,\n                //     actualErrorMessage: e.message,\n                // }\n                context.commit('setLogger',logger)\n                router.push({ name: 'ConnectionError' })\n            }\n        },\n        async login(context, {email,password}){\n            // context.commit('setIsLoading', true, {root:true})\n            console.log('in_login')\n            try{\n                var ref = await signInWithEmailAndPassword(auth, email, password)\n            }catch{\n                console.log('error')\n                throw new Error('could not complite signin')\n            }\n            if(ref){\n                console.log(\"IF YES\")\n                context.commit('setUser',ref.user)\n                context.dispatch('getDjangoUser')\n                context.commit(\"setTempUserReset\")\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log(context.state.user,context.state.emailVerified)\n            }else{\n                console.log('error in sign in')\n                throw new Error('could not complite signin')\n            }\n            // context.commit('setIsLoading', false, {root:true})                \n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            context.commit('resetQuizKeyStorage')\n            router.push({ name: 'Home' })\n        },\n        updateQuizTakerAction({state, commit, getters},payload){\n            console.log('inUQTA',getters)\n            commit('updateQuizTaker',payload);\n            console.log('UPaction',getters.quizNameIdInSignup)\n            for(let i of getters.quizNameIdInSignup){\n                if(i.id == payload.grade){\n                    if(state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] < state.gradeDict[i.name]){\n                        commit('updateQuizTakerMax',i.name);\n                        break\n                    }\n                    else if(state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] == state.gradeDict[i.name]){\n                        if(state.djangoUser.quiz_taker[0].max_level < payload.level){\n                            commit('updateQuizTakerMax',i.name);\n                            break\n                        }\n                    }\n                }\n            }\n        },\n        async getOrSignupDjangoUserForThirdParty(context){\n            await context.dispatch('signupDjangoUserForThirdParty',context.getters.getUserInfo)\n            router.push({ name: 'Account' })\n        },\n        async getIpData(context){\n            await axios\n            .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n            .then(response => {\n                context.commit('setIpData',response.data)\n                context.dispatch('getOrSignupDjangoUserForThirdParty')\n                \n            }) \n        },\n        // async patchImage(context){\n        //     var list = context.getters.getDjangouser.thumbnail.split('/')\n        //     console.log('list',list)\n        //     if(list.includes('default.png')&&context.getters.getPhotoURL){\n        //         console.log('png');\n        //         const blob = await fetch(this.getPhotoURL).then(r => r.blob());\n        //         const headers = { \"content-type\": \"multipart/form-data\" };\n        //         const formData = new FormData();\n        //         formData.append('thumbnail',blob,`${blob}.png`)\n        //         console.log('getthumb',formData.get('thumbnail'),formData),\n        //         axios.patch(`/api/user/${context.getters.getDjangouser.UID}`,\n        //             formData,\n        //             {headers}\n        //         )\n        //     }\n        // },\n    }\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    console.log('unsub',user)\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n        store.dispatch('signupDjangoUserForException')\n    }else{\n        store.commit('resetQuizKeyStorage')\n    }\n    unsub()\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}