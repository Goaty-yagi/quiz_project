{"ast":null,"code":"import _typeof from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport Result from '@/components/quiz_components/Result.vue';\nimport TestResult from '@/components/initial/TestResult.vue';\nexport default {\n  components: {\n    Result: Result,\n    TestResult: TestResult\n  },\n  data: function data() {\n    return {\n      questionLengthForHTML: 1,\n      questionLengthCounter: 1,\n      SelectedAnswerInfo: {},\n      selectedAnswer: {},\n      answerIDAndOrder: {},\n      showResult: false,\n      showNextOrFinishButton: false,\n      result: false,\n      countupDict: {\n        answerID: '',\n        questionID: '',\n        questionType: ''\n      },\n      pagination: {\n        a: 0,\n        b: 1\n      },\n      resultHandleDict: {\n        isCorrect: false,\n        IsNotCorrect: false,\n        answerIDType3: '',\n        questionType4: false,\n        answerAllTrueType4: false,\n        answerIDType4: '',\n        answerIDType5: ''\n      },\n      maxSelectReach: false,\n      // currentQuestionType:{\n      //     select: false,\n      //     manySelect: false,\n      //     order: false\n      // },\n      selectedIndexNum: null,\n      showSelectNum: true,\n      selectedOrderAnswer: {},\n      selectAnswerCounter: 0,\n      NumOfIscorrect: 0,\n      // here for status attribute\n      userStatusDict: {\n        status: '',\n        isCorrect: 0,\n        isFalse: 0\n      },\n      // from here for test attributes\n      quizTestInfo: {\n        level: '',\n        quizId: 4\n      },\n      LevelCounters: {\n        handleLevelUp: 0,\n        handleLevelDown: 0\n      },\n      finalResult: {\n        grade: '',\n        level: ''\n      },\n      finishTest: false,\n      currentLevel: 1,\n      currentGrade: \"超初級\",\n      correctAnswer: {},\n      tempStatusDict: {\n        'status': [],\n        'grade': '',\n        'level': ''\n      },\n      init: true\n    };\n  },\n  created: function created() {\n    console.log(\"created\"); // this.getquiz()\n\n    this.getTestQuestions();\n  },\n  mounted: function mounted() {\n    this.$store.commit('onQuizTrue');\n    this.SelectedAnswerInfo = {};\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.$store.commit('onQuizFalse');\n  },\n  computed: mapGetters(['questions', 'quiz']),\n  methods: _objectSpread(_objectSpread({}, mapActions(['getTestQuestions'])), {}, {\n    nextQuestion: function nextQuestion(questionType, questionID) {\n      this.handleCountUpDict(this.selectedAnswer, questionType, questionID);\n      this.pagination.a += 1;\n      this.pagination.b += 1;\n      this.selectedIndexNum = null;\n      this.showNextOrFinishButton = false;\n      this.selectAnswerHandler(questionType);\n      this.setTempStatusDict();\n      this.questionLengthCounter += 1;\n      this.questionLengthForHTML += 1;\n      this.checkConsecutiveResult();\n      this.NumOfIscorrect = 0;\n      this.maxSelectReach = false;\n      this.selectedOrderAnswer = {};\n      this.selectedAnswer = {};\n      this.answerIDAndOrder = {};\n      this.selectAnswerCounter = 0;\n      console.log(this.SelectedAnswerInfo, 'current', this.currentLevel);\n      this.scrollTop();\n    },\n    // Finish(questionType){\n    //     this.showResult = true\n    //     this.result = true\n    //     this.selectedIndexNum= null\n    //     this.selectAnswerHandler(\n    //         questionType,\n    //         )\n    //     this.NumOfIscorrect = 0\n    //     this.maxSelectReach = false\n    //     this.selectedOrderAnswer = {}\n    //     this.selectedAnswer = {}\n    //     this.selectAnswerCounter = 0\n    //     console.log(this.SelectedAnswerInfo)\n    //     this.resultAnswerHandler()\n    //     this.scrollTop()\n    // },\n    onClick: function onClick(answerindex, answer, question) {\n      // this is for 2 things,\n      // first is for controling CSS return selectedIndexNum\n      // which used for questionType 3, and selectedOrderAnswer\n      // which used for questionType 4 and 5.\n      // second is for selected-answer and is_correct.\n      // return selectedAnswer for questionType 3.\n      // for questionType 4, use getAnswerIDAndOrder function.\n      // for questionType 5, use getIDAndIsCorrect function.\n      if (question.question_type == 3) {\n        if (this.selectedIndexNum == answerindex) {\n          this.selectedIndexNum = null;\n          this.selectedAnswer = {};\n          this.showNextOrFinishButton = false;\n        } else {\n          this.selectedIndexNum = answerindex;\n          this.selectedAnswer['answerID'] = answer.id;\n          this.selectedAnswer['isCorrect'] = answer.is_correct;\n          this.handleShowNextOrFinishButton();\n        }\n      } else if (question.question_type == 4) {\n        console.log(\"in No4 DELETE\");\n\n        if (this.selectedOrderAnswer[answerindex + 1]) {\n          this.selectedOrderAnswer = this.changeOrder(this.selectedOrderAnswer, answerindex + 1);\n          this.getAnswerIDAndOrder(answer.answer_id, this.selectAnswerCounter);\n          this.selectAnswerCounter -= 1;\n          this.showNextOrFinishButton = false;\n        } else {\n          console.log(\"in No4 ADD\");\n          this.selectAnswerCounter += 1;\n          this.selectedOrderAnswer[answerindex + 1] = this.selectAnswerCounter;\n          this.getAnswerIDAndOrder(answer.answer_id, this.selectAnswerCounter);\n          console.log(\"Onclick-No4\", Object.keys(this.selectedOrderAnswer).length, question.length);\n\n          if (Object.keys(this.selectedOrderAnswer).length == question.answer.length) {\n            this.handleShowNextOrFinishButton();\n          }\n        }\n      } else if (question.question_type == 5) {\n        console.log(\"on click_type5 question\", question);\n        this.getNumOfIscorrect(question.answer);\n\n        if (this.selectedOrderAnswer[answerindex + 1]) {\n          this.selectedOrderAnswer = this.changeOrder(this.selectedOrderAnswer, answerindex + 1); // console.log('SOA',this.selectedOrderAnswer)\n\n          this.getIDAndIsCorrect(answer.id, answer.is_correct);\n          this.selectAnswerCounter -= 1;\n\n          if (question.max_select) {\n            if (Object.keys(this.selectedOrderAnswer).length < question.max_select) {\n              this.showNextOrFinishButton = false;\n              this.maxSelectReach = false;\n            }\n          } else if (Object.keys(this.selectedOrderAnswer).length == 0) {\n            this.showNextOrFinishButton = false;\n          }\n        } else {\n          this.selectAnswerCounter += 1;\n          this.selectedOrderAnswer[answerindex + 1] = this.selectAnswerCounter;\n          this.getIDAndIsCorrect(answer.id, answer.is_correct);\n\n          if (question.max_select) {\n            if (Object.keys(this.selectedOrderAnswer).length == question.max_select) {\n              this.handleShowNextOrFinishButton();\n              this.maxSelectReach = true;\n            }\n          } else {\n            this.handleShowNextOrFinishButton();\n          }\n        }\n      }\n    },\n    changeOrder: function changeOrder(dict, index) {\n      // if deleted, the num or nums before the deleted items order num\n      // change\n      var orderNum = dict[index];\n      delete dict[index];\n\n      if (dict) {\n        var changeDict = {};\n        Object.keys(dict).forEach(function (key) {\n          if (dict[key] > orderNum) {\n            dict[key] -= 1;\n          }\n        });\n      }\n\n      return dict;\n    },\n    selectAnswerHandler: function selectAnswerHandler(questionType) {\n      var _this = this;\n\n      // this is get informations about selected-answer for result component\n      // return SelectedAnswerInfo\n      if (questionType == 3) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect;\n        this.handleUserStatus(this.selectedAnswer.isCorrect);\n        this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID;\n      } else if (questionType == 4) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        var stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function (a) {\n          return Number(a);\n        });\n\n        if (JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true;\n          this.handleUserStatus(true);\n        } else {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false;\n          this.handleUserStatus(false);\n        }\n\n        this.makeOrderBoolean();\n        this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder;\n      } else if (questionType == 5) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        var isCorrectCounter = 0;\n        var type5IsCorrect = true;\n        Object.values(this.selectedAnswer).forEach(function (value) {\n          if (value == false) {\n            _this.SelectedAnswerInfo[_this.questionLengthCounter]['isCorrect'] = false;\n\n            _this.handleUserStatus(false);\n\n            type5IsCorrect = false;\n          } else {\n            isCorrectCounter += 1;\n          }\n        });\n        console.log('SAH', this.NumOfIscorrect, isCorrectCounter);\n\n        if (this.NumOfIscorrect == isCorrectCounter && type5IsCorrect) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true;\n          this.handleUserStatus(true);\n        } else if (type5IsCorrect == false && isCorrectCounter > 0) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null;\n          this.handleUserStatus(false);\n        } // else if(this.maxSelectReach){\n        //     this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n        // }\n\n\n        this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer;\n      }\n    },\n    getAnswerIDAndOrder: function getAnswerIDAndOrder(answerID, orderNum) {\n      // this is for collecting answer from questionType 4\n      console.log(\"GAID\");\n\n      if (this.questionLengthCounter in this.answerIDAndOrder) {\n        console.log(\"first-IF TRUE\", this.questionLengthCounter, this.answerIDAndOrder);\n        console.log(\"sono2daze\", orderNum, this.answerIDAndOrder[this.questionLengthCounter]);\n\n        if (orderNum in this.answerIDAndOrder[this.questionLengthCounter]) {\n          this.answerIDAndOrder[this.questionLengthCounter] = this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter], orderNum);\n        } else {\n          this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID;\n        }\n      } else {\n        this.answerIDAndOrder[this.questionLengthCounter] = {};\n        this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID;\n      }\n    },\n    makeOrderBoolean: function makeOrderBoolean() {\n      // this is for AnswerIDAndOrder{1:1} to be {1:true}\n      var newDict = {};\n      var IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function (a) {\n        return Number(a);\n      });\n\n      for (var i = 0; i < IntegerKeys.length; i++) {\n        if (IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]) {\n          newDict[i + 1] = true;\n        } else {\n          newDict[i + 1] = false;\n        }\n      }\n\n      this.answerIDAndOrder = newDict; // stringKeys.forEach(num =>{\n      //     Object.values(this.answerIDAndOrder[this.questionLengthCounter]).forEach(value =>{\n      //         if(num == )\n      //     })\n      // })\n    },\n    getIDAndIsCorrect: function getIDAndIsCorrect(id, isCorrect) {\n      // this is for questionType 5 \n      if (id in this.selectedAnswer) {\n        delete this.selectedAnswer[id];\n        console.log(id, \"deleted\", this.selectedAnswer);\n      } else {\n        this.selectedAnswer[id] = isCorrect;\n        console.log(id, \"added\", this.selectedAnswer);\n      }\n    },\n    getNumOfIscorrect: function getNumOfIscorrect(answers) {\n      var _this2 = this;\n\n      // this is for questionType 5\n      console.log('inGNOI', this.NumOfIscorrect, answers);\n\n      if (this.NumOfIscorrect == false) {\n        console.log('Gp');\n        Object.values(answers).forEach(function (value) {\n          if (value.is_correct) {\n            _this2.NumOfIscorrect += 1;\n          }\n        });\n      }\n    },\n    handleShowNextOrFinishButton: function handleShowNextOrFinishButton() {\n      this.showNextOrFinishButton = true;\n    },\n    resultAnswerHandler: function resultAnswerHandler() {\n      var _this3 = this;\n\n      if (this.result) {\n        this.resultHandleDict.isCorrect = false;\n        this.resultHandleDict.isNotCorrect = false;\n        this.resultHandleDict.answerAllTrueType4 = false;\n        this.resultHandleDict.questionType4 = false;\n        this.resultHandleDict.answerIDType3 = '';\n        this.resultHandleDict.answerIDType4 = '';\n        this.resultHandleDict.answerIDType5 = '';\n        Object.keys(this.SelectedAnswerInfo).forEach(function (key) {\n          if (key == _this3.questionLengthCounter) {\n            console.log(\"currentType\", _this3.SelectedAnswerInfo[key].questionType, _this3.SelectedAnswerInfo[key].isCorrect);\n\n            if (_this3.SelectedAnswerInfo[key].isCorrect) {\n              if (_this3.SelectedAnswerInfo[key].questionType == 4) {\n                _this3.resultHandleDict.answerAllTrueType4 = true;\n              } else if (_this3.SelectedAnswerInfo[key].questionType == 5) {\n                _this3.resultHandleDict.answerIDType5 = _this3.SelectedAnswerInfo[key].selectedAnswer;\n              }\n\n              _this3.resultHandleDict.isCorrect = true;\n            } else if (_this3.SelectedAnswerInfo[key].isCorrect == false && _this3.SelectedAnswerInfo[key].questionType == 3) {\n              _this3.resultHandleDict.isCorrect = true;\n              _this3.resultHandleDict.isNotCorrect = true;\n              _this3.resultHandleDict.answerIDType3 = _this3.SelectedAnswerInfo[key].answerID;\n            } else if (_this3.SelectedAnswerInfo[key].questionType == 5) {\n              console.log(\"in type5\");\n              _this3.resultHandleDict.isCorrect = true;\n              _this3.resultHandleDict.isNotCorrect = true;\n              _this3.resultHandleDict.answerIDType5 = _this3.SelectedAnswerInfo[key].selectedAnswer;\n              console.log(\"type5\", _this3.resultHandleDict.answerIDType5);\n            } else if (_this3.SelectedAnswerInfo[key].isCorrect == false && _this3.SelectedAnswerInfo[key].questionType == 4) {\n              _this3.resultHandleDict.questionType4 = true;\n              _this3.resultHandleDict.isCorrect = true;\n              _this3.resultHandleDict.isNotCorrect = true;\n              _this3.resultHandleDict.answerIDType4 = _this3.SelectedAnswerInfo[key].orderAnswer;\n            }\n          }\n        });\n      }\n    },\n    type3And5CheckResult: function type3And5CheckResult(selectedAnswer5, selectedAnswer3, answerID) {\n      // console.log(selectedAnswer, answerID)\n      if (this.result) {\n        console.log(\"type\", this.SelectedAnswerInfo[this.questionLengthCounter].questionType, \"5\", selectedAnswer5, \"3\", selectedAnswer3, answerID, this.questionLengthCounter);\n\n        if (this.SelectedAnswerInfo[this.questionLengthCounter].questionType == 5) {\n          console.log(\"go\");\n\n          if (answerID in selectedAnswer5) {\n            return true;\n          } else {\n            return false;\n          }\n        } else if (this.SelectedAnswerInfo[this.questionLengthCounter].questionType == 3) {\n          if (answerID == selectedAnswer3) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n    },\n    handlePagination: function handlePagination(a, b) {\n      // this is for result component\n      console.log(\"HP\", a, b);\n      this.pagination.a = a;\n      this.pagination.b = b;\n      this.questionLengthCounter = b;\n    },\n    handleCountUpDict: function handleCountUpDict(selectedAnswer, questionType, questionID) {\n      var _this4 = this;\n\n      this.countupDict.questionType = questionType;\n      this.countupDict.questionID = questionID;\n\n      if (questionType == 5) {\n        this.countupDict.answerID = Object.keys(selectedAnswer);\n      } else if (questionType == 3) {\n        Object.keys(selectedAnswer).forEach(function (key) {\n          if (key = \"answerID\") {\n            _this4.countupDict.answerID = selectedAnswer[key];\n          }\n        });\n      }\n\n      this.$store.dispatch('countUpAnswerAndQuestion', this.countupDict);\n    },\n    HandleShowResult: function HandleShowResult() {\n      this.showResult = !this.showResult;\n    },\n    handleResult: function handleResult() {\n      this.result = !this.result;\n    },\n    handleUserStatus: function handleUserStatus(selectedAnswer) {\n      // this is for only is_true and is_false\n      console.log(selectedAnswer);\n      this.userStatusDict.isCorrect = 0;\n      this.userStatusDict.isFalse = 0;\n\n      if (selectedAnswer) {\n        this.userStatusDict.isCorrect = 1;\n      } else {\n        this.userStatusDict.isFalse = 1;\n      } // this.$store.dispatch('userStatusPost',this.userStatusDict)\n\n\n      console.log('HUS', this.userStatusDict);\n    },\n    getQuestionStatus: function getQuestionStatus(lavel, status) {\n      this.userStatusDict.status = status;\n      return lavel;\n    },\n    resultNext: function resultNext() {\n      this.pagination.a += 1;\n      this.pagination.b += 1;\n      this.questionLengthCounter += 1;\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    resultBack: function resultBack() {\n      this.pagination.a -= 1;\n      this.pagination.b -= 1;\n      this.questionLengthCounter -= 1;\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    scrollTop: function scrollTop() {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    setTempStatusDict: function setTempStatusDict() {\n      console.log('IN-setSD', this.tempStatusDict, this.userStatusDict);\n\n      var _ = require('lodash');\n\n      var copyObject = _.cloneDeep(this.userStatusDict);\n\n      if (!this.tempStatusDict.status[0]) {\n        this.tempStatusDict.status.push(copyObject);\n        console.log('pushed');\n      } else {\n        for (var i in this.tempStatusDict.status) {\n          console.log('loop', i, _typeof(i), this.tempStatusDict.status[i].status, copyObject.status);\n\n          if (this.tempStatusDict.status[i].status == copyObject.status) {\n            console.log('true', this.tempStatusDict);\n\n            if (copyObject.isCorrect) {\n              console.log('correct');\n              this.tempStatusDict.status[i].isCorrect += 1;\n              console.log('correct', this.tempStatusDict);\n              break;\n            } else {\n              console.log('notcorrect');\n              this.tempStatusDict.status[i].isFalse += 1;\n              console.log('notcorrect', this.tempStatusDict);\n              break;\n            }\n          } else {\n            console.log('false', i, this.tempStatusDict.status.length - 1);\n\n            if (Number(i) == this.tempStatusDict.status.length - 1) {\n              this.tempStatusDict.status.push(copyObject);\n              console.log('pushed2', this.tempStatusDict.status);\n            }\n          }\n        }\n      }\n    },\n    // from here for test function\n    checkConsecutiveResult: function checkConsecutiveResult() {\n      var correctCounter = 0;\n      console.log('SS', this.SelectedAnswerInfo);\n\n      if (Object.keys(this.SelectedAnswerInfo).length >= 4) {\n        if (Object.keys(this.SelectedAnswerInfo).length == 10) {\n          var isTrue = 0;\n          var isFalse = 0;\n\n          for (var i = 1; i <= 10; i++) {\n            if (this.SelectedAnswerInfo[i].isCorrect) {\n              isTrue += 1;\n            } else {\n              isFalse += 1;\n            }\n          }\n\n          console.log(\"isT\", isTrue);\n          console.log(\"isF\", isFalse);\n\n          if (isTrue >= 7) {\n            this.LevelCounters.handleLevelUp += 1;\n            this.currentLevel += 1;\n\n            if (this.LevelCounters.handleLevelUp + this.LevelCounters.handleLevelDown == 3) {\n              this.finishTest = true;\n              this.getFinalResult();\n              this.LevelCounters.handleLevelUp = 0;\n              this.LevelCounters.handleLevelDown = 0;\n            } else {\n              this.quizTestInfo.level = this.currentLevel;\n              this.$store.commit('getTestQuizInfo', this.quizTestInfo);\n              this.getTestQuestions();\n              this.pagination.a = 0;\n              this.pagination.b = 1;\n              this.SelectedAnswerInfo = {};\n              correctCounter = 0;\n              this.questionLengthCounter = 1;\n            }\n          } else if (isTrue > 4 && isTrue < 7) {\n            this.finishTest = true;\n            this.getFinalResult();\n            this.LevelCounters.handleLevelUp = 0;\n            this.LevelCounters.handleLevelDown = 0;\n          } else {\n            this.LevelCounters.handleLevelDown += 1;\n\n            if (this.currentGrade != \"超初級\" && this.currentLevel != 1) {\n              this.currentLevel -= 1;\n\n              if (this.LevelCounters.handleLevelUp + this.LevelCounters.handleLevelDown == 3) {\n                this.finishTest = true;\n                this.getFinalResult();\n                this.LevelCounters.handleLevelUp = 0;\n                this.LevelCounters.handleLevelDown = 0;\n              } else {\n                this.quizTestInfo.level = this.currentLevel;\n                this.$store.commit('getTestQuizInfo', this.quizTestInfo);\n                this.getTestQuestions();\n                correctCounter = 0;\n                this.pagination.a = 0;\n                this.pagination.b = 1;\n                this.questionLengthCounter = 1;\n                this.SelectedAnswerInfo = {};\n              }\n            }\n          }\n\n          if (this.LevelCounters.handleLevelUp + this.LevelCounters.handleLevelDown == 3) {\n            this.finishTest = true;\n            this.getFinalResult();\n            this.LevelCounters.handleLevelUp = 0;\n            this.LevelCounters.handleLevelDown = 0;\n          }\n        } else {\n          console.log(\"longer than 4\");\n          var num4 = 0;\n          num4 = Object.keys(this.SelectedAnswerInfo).length - 4;\n\n          for (var _i = 1; _i <= 4; _i++) {\n            console.log(\"forloop\", this.SelectedAnswerInfo);\n\n            if (this.SelectedAnswerInfo[_i + num4].isCorrect) {\n              correctCounter += 1;\n            }\n          }\n\n          if (correctCounter == 4) {\n            console.log(\"correct4\", this.LevelCounters.handleLevelUp, this.LevelCounters.handleLevelDown);\n            this.LevelCounters.handleLevelUp += 1;\n\n            if (this.LevelCounters.handleLevelUp >= 3 && this.LevelCounters.handleLevelDown == 0) {\n              this.finishTest = true;\n              this.getFinalResult();\n              this.LevelCounters.handleLevelUp = 0;\n            } else if (this.LevelCounters.handleLevelUp + this.LevelCounters.handleLevelDown == 3) {\n              console.log(\"quiz done\", this.LevelCounters.handleLevelUp + this.LevelCounters.handleLevelDown);\n              this.finishTest = true;\n              this.getFinalResult();\n              this.LevelCounters.handleLevelUp = 0;\n              this.LevelCounters.handleLevelDown = 0;\n            } else {\n              console.log('UP');\n              this.quizTestInfo.level = this.currentLevel + 1;\n              this.currentLevel += 1;\n              this.$store.commit('getTestQuizInfo', this.quizTestInfo);\n              this.getTestQuestions();\n              this.pagination.a = 0;\n              this.pagination.b = 1;\n              this.SelectedAnswerInfo = {};\n              correctCounter = 0;\n              this.questionLengthCounter = 1;\n            }\n          } else if (correctCounter == 0) {\n            console.log(\"zeroCA\");\n\n            if (this.currentLevel == 1) {\n              console.log(\"no more low level\");\n            } else {\n              this.LevelCounters.handleLevelDown += 1;\n              console.log(\"in down-part\", this.LevelCounters.handleLevelUp, this.LevelCounters.handleLevelDown);\n\n              if (this.LevelCounters.handleLevelDown >= 3 && this.LevelCounters.handleLevelUp == 0) {\n                this.finishTest = true;\n                this.getFinalResult();\n                this.LevelCounters.handleLevelDown = 0;\n              } else if (this.LevelCounters.handleLevelUp + this.LevelCounters.handleLevelDown == 3) {\n                this.finishTest = true;\n                this.getFinalResult();\n                this.LevelCounters.handleLevelUp = 0;\n                this.LevelCounters.handleLevelDown = 0;\n              } else {\n                console.log('down');\n                this.quizTestInfo.level = this.currentLevel - 1;\n                this.currentLevel -= 1;\n                this.$store.commit('getTestQuizInfo', this.quizTestInfo);\n                this.getTestQuestions();\n                correctCounter = 0;\n                this.pagination.a = 0;\n                this.pagination.b = 1;\n                this.questionLengthCounter = 1;\n                this.SelectedAnswerInfo = {};\n              }\n            }\n          }\n        }\n      }\n    },\n    // async updateQuizTaker(){\n    //     console.log('UQT',\n    //     this.$store.state.signup.djangoUser.quiz_taker)\n    //     this.$store.commit(\"convertGradeFromIntToID\",this.finalResult.grade)\n    //     await axios.patch(`api/quiz-taker-test/?quiz_taker=${this.$store.state.signup.djangoUser.quiz_taker[0].id}&grade=${this.$store.state.quiz.gradeForConvert}&level=${this.finalResult.level}`)\n    // },\n    getFinalResult: function getFinalResult() {\n      console.log(\"GFR\", this.currentGrade);\n      this.finalResult.grade = this.currentGrade;\n      this.finalResult.level = this.currentLevel;\n      this.tempStatusDict.level = this.currentLevel;\n      this.$store.dispatch('convertGradeFromIntToIDForNewUser', this.currentGrade);\n      this.tempStatusDict.grade = this.$store.getters.gradeForConvert;\n      this.tempStatusDict.grade = this.$store.state.quiz.gradeForConvert;\n\n      if (!this.tempStatusDict.grade) {\n        // 4 is 超初級. it might be chainge\n        this.tempStatusDict.grade = 4;\n      }\n\n      this.$store.commit('setTempUser', this.tempStatusDict);\n      this.$store.commit('tempUserTestTrue'); // this.updateQuizTaker()\n    }\n  })\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","Result","TestResult","components","data","questionLengthForHTML","questionLengthCounter","SelectedAnswerInfo","selectedAnswer","answerIDAndOrder","showResult","showNextOrFinishButton","result","countupDict","answerID","questionID","questionType","pagination","a","b","resultHandleDict","isCorrect","IsNotCorrect","answerIDType3","questionType4","answerAllTrueType4","answerIDType4","answerIDType5","maxSelectReach","selectedIndexNum","showSelectNum","selectedOrderAnswer","selectAnswerCounter","NumOfIscorrect","userStatusDict","status","isFalse","quizTestInfo","level","quizId","LevelCounters","handleLevelUp","handleLevelDown","finalResult","grade","finishTest","currentLevel","currentGrade","correctAnswer","tempStatusDict","init","created","console","log","getTestQuestions","mounted","$store","commit","beforeUnmount","computed","methods","nextQuestion","handleCountUpDict","selectAnswerHandler","setTempStatusDict","checkConsecutiveResult","scrollTop","onClick","answerindex","answer","question","question_type","id","is_correct","handleShowNextOrFinishButton","changeOrder","getAnswerIDAndOrder","answer_id","Object","keys","length","getNumOfIscorrect","getIDAndIsCorrect","max_select","dict","index","orderNum","changeDict","forEach","key","handleUserStatus","stringKeys","map","Number","JSON","stringify","values","makeOrderBoolean","isCorrectCounter","type5IsCorrect","value","newDict","IntegerKeys","i","answers","resultAnswerHandler","isNotCorrect","orderAnswer","type3And5CheckResult","selectedAnswer5","selectedAnswer3","handlePagination","dispatch","HandleShowResult","handleResult","getQuestionStatus","lavel","resultNext","resultBack","window","scrollTo","top","behavior","_","require","copyObject","cloneDeep","push","correctCounter","isTrue","getFinalResult","num4","getters","gradeForConvert","state","quiz"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/QuizTestInit.vue"],"sourcesContent":["<template>\n    <div class=\"quiz-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div v-if=\"finishTest==false&&$store.state.isLoading==false\">\n                <p class=\"quiz-description title-white\">テスト問題</p>\n                <div v-if=\"finishTest\" class=\"finishTest\">\"finishTest is TRUE\"{{ finishTest }}</div>\n                <div class='quiz-countainer'>\n                    <div\n                    class=\"question-loop\"\n                    v-for=\"(question,questionindex) in questions.slice(pagination.a,pagination.b)\"\n                    v-bind:key=\"questionindex\">\n                        <div class='question-wrapper'>\n                            <div class=\"question-header\"><i class='q'>Q</i>第{{ questionLengthForHTML }}問</div>\n                            <div class='question-body'>{{ getQuestionStatus(question.label,question.status[0]) }}{{ question.quiz_level }}</div>\n                        </div>\n                        \n                        <!-- <div :class='showPic(question.image)'> -->\n                        <div class=\"image-container\" v-if=\"question.image\">\n                            <img class=\"image\" v-bind:src=\"question.get_image\"/>\n                        </div>\n\n                        <!-- answer part -->\n                        <!-- questiontype 3 is '選択'\n                        ４ is '並び替え'\n                        5 is '多答' -->\n                        <div class='answer-wrapper'>\n                            <button \n                            class=\"answer-loop\"\n                            :class=\"{'selected-answer':selectedIndexNum==answerindex||\n                            answerindex+1 in selectedOrderAnswer,\n                            'is-correct-answer':resultHandleDict.isCorrect&&answer.is_correct||\n                            resultHandleDict.answerAllTrueType4||\n                            resultHandleDict.answerIDType4[answer.answer_id],\n                            'isnot-correct-answer':resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                            resultHandleDict.answerIDType5[answer.id]==false||\n                            resultHandleDict.answerIDType4[answer.answer_id]==false}\"\n                            @click=\"e => result==false && onClick(answerindex,answer,question)\"\n                            :disabled=\"maxSelectReach&&answer.id in selectedAnswer==false\"\n                            v-for=\"(answer,answerindex) in question.answer\"\n                            v-bind:key=\"answerindex\">\n                                <div class='answer-select-bases'>\n                                    <div class=\"answer-select\">\n                                        <div class=\"selecter\">{{ String.fromCharCode(answerindex+65) }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"answer-label-bases\">\n                                    <div class=\"answer-label\">\n                                        {{ answer.label }}\n                                    </div>\n                                </div>\n                                <div class=\"selected-answer-bases\">\n                                    <div v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==4\" class=\"selected-answer-order\">\n                                        {{ selectedOrderAnswer[answerindex+1] }}\n                                    </div>\n                                    <div class=\"result-answer-order\">\n                                        <div class=\"order\" v-if=\"resultHandleDict.questionType4\">\n                                            {{ answer.answer_id}}\n                                        </div>\n                                        <div v-if=\"type3And5CheckResult(resultHandleDict.answerIDType5,resultHandleDict.answerIDType3,answer.id)&&question.question_type!=4\">\n                                            <i class=\"fas fa-check\"></i>\n                                        </div>\n                                    </div>\n                                    <i v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==5\" class=\"fas fa-check\"></i>\n                                    <!-- for result -->\n                                    <!-- <i v-if=\"answer.id in resultHandleDict.answerIDType5&&question.question_type==5\" class=\"fas fa-check\"></i> -->\n                                    <i v-if=\"resultHandleDict.isCorrect&&answer.is_correct||\n                                    resultHandleDict.answerAllTrueType4||\n                                    resultHandleDict.answerIDType4[answer.answer_id]\" class=\"far fa-circle\"></i>\n                                    <i v-if=\"resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                                    resultHandleDict.answerIDType5[answer.id]==false||\n                                    resultHandleDict.answerIDType4[answer.answer_id]==false\" class=\"fas fa-times\"></i>\n                                </div>\n                            </button>\n                        </div>\n                        <div v-if=\"showNextOrFinishButton&&\n                        result==false\" class=\"button-quiz-container\">\n                            <!-- <div v-if=\"questions.length==questionLengthCounter\"\n                            @click=\"Finish(question.question_type)\" class=\"btn-tr-white-base-sq\">FINSH</div> -->\n                            <div\n                            @click=\"nextQuestion(question.question_type,question.id)\" class=\"btn-tr-white-base-sq\">\n                                NEXT ＞\n                            </div>\n                        </div>\n\n                        <!-- here for buttun in result -->\n                        <div v-if=\"result\" class=\"buttun-in-result\">\n                            <div v-if=\"questionLengthCounter!=1\" \n                            @click=\"resultBack()\" class=\"btn-tr-white-base-sq\">＜BACK</div>\n                            <div \n                            @click=\"HandleShowResult()\"\n                            class=\"btn-base-black-db-ov\">結果画面</div>\n                            <div v-if=\"questions.length!=questionLengthCounter\"\n                            @click=\"resultNext()\" class=\"btn-tr-white-base-sq\">NEXT＞</div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <Result\n                v-if=\"showResult\"\n                :SelectedAnswerInfo='SelectedAnswerInfo'\n                :question_length='questions.length'\n                @handlePagination='handlePagination'\n                @HandleShowResult='HandleShowResult'\n                @resultAnswerHandler='resultAnswerHandler'\n                @handleResult='handleResult'\n                /> -->\n                <!-- <Result\n                v-if=\"showResult\"\n                :question_length='questions.length'\n                :rerultAnswer='rerultAnswer'\n                @show='showDetail'/> -->\n\n            </div>\n            <TestResult\n            v-if=\"finishTest\"\n            :finalResult=\"finalResult\"\n            :init=\"init\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport Result from '@/components/quiz_components/Result.vue'\nimport TestResult from '@/components/initial/TestResult.vue'\n\nexport default {\n    components: {\n    Result,\n    TestResult\n  },  \n    data(){\n        return{\n            questionLengthForHTML:1,\n            questionLengthCounter:1,\n            SelectedAnswerInfo:{},\n            selectedAnswer: {},\n            answerIDAndOrder:{},\n            showResult: false,\n            showNextOrFinishButton:false,\n            result: false,\n            countupDict:{\n                answerID:'',\n                questionID:'',\n                questionType:''\n            },\n            pagination:{\n                a: 0,\n                b: 1,\n            },\n            resultHandleDict:{\n                isCorrect: false,\n                IsNotCorrect: false,\n                answerIDType3: '',\n                questionType4: false,\n                answerAllTrueType4: false,\n                answerIDType4: '',\n                answerIDType5: '',\n            },\n            \n            maxSelectReach: false,\n            // currentQuestionType:{\n            //     select: false,\n            //     manySelect: false,\n            //     order: false\n            // },\n            selectedIndexNum: null,\n            showSelectNum: true,\n            selectedOrderAnswer:{},\n            selectAnswerCounter:0,\n            NumOfIscorrect:0,\n            // here for status attribute\n            userStatusDict:{\n                status:'',\n                isCorrect:0,\n                isFalse:0\n            },\n            // from here for test attributes\n            quizTestInfo:{\n                level:'',\n                quizId:4\n            },\n            LevelCounters:{\n                handleLevelUp:0,\n                handleLevelDown:0\n            },\n            finalResult:{\n                grade:'',\n                level:''\n            },\n            finishTest:false,\n            currentLevel:1,\n            currentGrade:\"超初級\",\n            correctAnswer:{},\n            tempStatusDict:{\n                'status':[],\n                'grade':'',\n                'level':''\n            },\n            init: true,\n        }\n    },\n    created(){\n        console.log(\"created\")\n        // this.getquiz()\n        this.getTestQuestions()\n    },\n    mounted(){\n        this.$store.commit('onQuizTrue')\n        this.SelectedAnswerInfo = {}\n    },\n    beforeUnmount(){\n        this.$store.commit('onQuizFalse')\n    },\n    computed: mapGetters(['questions','quiz']),\n    methods:{\n        ...mapActions(['getTestQuestions']),\n        nextQuestion(questionType,questionID){\n            this.handleCountUpDict(this.selectedAnswer,questionType,questionID)\n            this.pagination.a += 1\n            this.pagination.b += 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.setTempStatusDict()\n            this.questionLengthCounter += 1\n            this.questionLengthForHTML += 1\n            this.checkConsecutiveResult()\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.answerIDAndOrder = {}\n            this.selectAnswerCounter = 0\n            console.log(this.SelectedAnswerInfo,'current',this.currentLevel)\n            this.scrollTop()\n        },\n        // Finish(questionType){\n        //     this.showResult = true\n        //     this.result = true\n        //     this.selectedIndexNum= null\n        //     this.selectAnswerHandler(\n        //         questionType,\n        //         )\n        //     this.NumOfIscorrect = 0\n        //     this.maxSelectReach = false\n        //     this.selectedOrderAnswer = {}\n        //     this.selectedAnswer = {}\n        //     this.selectAnswerCounter = 0\n        //     console.log(this.SelectedAnswerInfo)\n        //     this.resultAnswerHandler()\n        //     this.scrollTop()\n        // },\n        onClick(answerindex, answer, question){\n            // this is for 2 things,\n            // first is for controling CSS return selectedIndexNum\n            // which used for questionType 3, and selectedOrderAnswer\n            // which used for questionType 4 and 5.\n            // second is for selected-answer and is_correct.\n            // return selectedAnswer for questionType 3.\n            // for questionType 4, use getAnswerIDAndOrder function.\n            // for questionType 5, use getIDAndIsCorrect function.\n            if(question.question_type == 3){\n                if(this.selectedIndexNum==answerindex){\n                    this.selectedIndexNum = null\n                    this.selectedAnswer = {}\n                    this.showNextOrFinishButton = false\n                }else{\n                    this.selectedIndexNum = answerindex\n                    this.selectedAnswer['answerID'] = answer.id\n                    this.selectedAnswer['isCorrect'] = answer.is_correct\n                    this.handleShowNextOrFinishButton()\n                }\n            }else if(question.question_type == 4){\n                console.log(\"in No4 DELETE\")\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    this.selectAnswerCounter -= 1\n                    this.showNextOrFinishButton = false\n                    \n                }else{\n                    console.log(\"in No4 ADD\")\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    console.log(\"Onclick-No4\",Object.keys(this.selectedOrderAnswer).length, question.length)\n                    if(Object.keys(this.selectedOrderAnswer).length == question.answer.length){\n                    this.handleShowNextOrFinishButton()\n                    }\n                }\n            }else if(question.question_type == 5){\n                console.log(\"on click_type5 question\",question)\n                this.getNumOfIscorrect(question.answer)\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    // console.log('SOA',this.selectedOrderAnswer)\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    this.selectAnswerCounter -= 1\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length < question.max_select){\n                            this.showNextOrFinishButton = false\n                            this.maxSelectReach = false\n                        }\n                    }else if(Object.keys(this.selectedOrderAnswer).length == 0){\n                        this.showNextOrFinishButton = false\n                    }\n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length == question.max_select){\n                            this.handleShowNextOrFinishButton()\n                            this.maxSelectReach = true\n                        }\n                    }else{\n                        this.handleShowNextOrFinishButton()\n                    }\n                }\n            }\n        },\n        changeOrder(dict, index){\n            // if deleted, the num or nums before the deleted items order num\n            // change\n            let orderNum = dict[index]\n            delete dict[index]\n            if(dict){\n                let changeDict = {}\n                Object.keys(dict).forEach(key =>{\n                    if(dict[key] > orderNum){\n                        dict[key] -= 1\n                    }\n                })\n            }\n        return dict\n        },\n        selectAnswerHandler(questionType){\n            // this is get informations about selected-answer for result component\n            // return SelectedAnswerInfo\n            if(questionType == 3){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect\n                this.handleUserStatus(this.selectedAnswer.isCorrect)\n                this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID\n            }\n            else if(questionType == 4){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n                if(JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else{\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                    this.handleUserStatus(false)\n                }\n                this.makeOrderBoolean()\n                this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder\n            }else if(questionType == 5){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let isCorrectCounter = 0\n                var type5IsCorrect = true\n                Object.values(this.selectedAnswer).forEach(value =>{\n                    if(value == false){\n                        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                        this.handleUserStatus(false)\n                        type5IsCorrect = false\n                    }else{\n                        isCorrectCounter += 1\n                    }\n                })\n                console.log('SAH',this.NumOfIscorrect, isCorrectCounter)\n                if(this.NumOfIscorrect == isCorrectCounter&&\n                type5IsCorrect){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else if(type5IsCorrect==false&&\n                isCorrectCounter > 0){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                    this.handleUserStatus(false)\n                }\n                // else if(this.maxSelectReach){\n                //     this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                // }\n                this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer\n            }\n        },\n        getAnswerIDAndOrder(answerID,orderNum){\n            // this is for collecting answer from questionType 4\n            console.log(\"GAID\")\n            if(this.questionLengthCounter in this.answerIDAndOrder){\n                console.log(\"first-IF TRUE\",this.questionLengthCounter, this.answerIDAndOrder)\n                console.log(\"sono2daze\",orderNum, this.answerIDAndOrder[this.questionLengthCounter])\n                if(orderNum in this.answerIDAndOrder[this.questionLengthCounter]){\n                    this.answerIDAndOrder[this.questionLengthCounter] =\n                    this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter],orderNum)\n                }else{\n                    this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID   \n                }\n            }else{\n                this.answerIDAndOrder[this.questionLengthCounter] = {}\n                this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID\n            }   \n        },\n        makeOrderBoolean(){\n            // this is for AnswerIDAndOrder{1:1} to be {1:true}\n            let newDict = {}\n            let IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n            for(let i = 0; i < IntegerKeys.length; i++){\n                if(IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]){\n                    newDict[i+1] = true\n                }else{\n                    newDict[i+1] = false\n                }\n            }\n            this.answerIDAndOrder = newDict\n            // stringKeys.forEach(num =>{\n            //     Object.values(this.answerIDAndOrder[this.questionLengthCounter]).forEach(value =>{\n            //         if(num == )\n            //     })\n            // })\n        },\n        getIDAndIsCorrect(id, isCorrect){\n            // this is for questionType 5 \n            if(id in this.selectedAnswer){\n                delete this.selectedAnswer[id]\n                console.log(id,\"deleted\",this.selectedAnswer)\n            }else{\n                this.selectedAnswer[id] = isCorrect\n                console.log(id,\"added\",this.selectedAnswer)\n            }\n        },\n        getNumOfIscorrect(answers){\n            // this is for questionType 5\n            console.log('inGNOI',this.NumOfIscorrect,answers)\n            if(this.NumOfIscorrect==false){\n                console.log('Gp')\n                 Object.values(answers).forEach(value =>{\n                    if(value.is_correct){\n                        this.NumOfIscorrect += 1\n                    }\n                })\n            }\n        },\n        handleShowNextOrFinishButton(){\n            this.showNextOrFinishButton = true\n        },\n        resultAnswerHandler(){\n            if(this.result){\n                this.resultHandleDict.isCorrect = false\n                this.resultHandleDict.isNotCorrect = false\n                this.resultHandleDict.answerAllTrueType4 = false\n                this.resultHandleDict.questionType4 = false\n                this.resultHandleDict.answerIDType3 = ''\n                this.resultHandleDict.answerIDType4 = ''\n                this.resultHandleDict.answerIDType5 = ''\n                Object.keys(this.SelectedAnswerInfo).forEach(key =>{\n                    if(key==this.questionLengthCounter){\n                        console.log(\"currentType\",this.SelectedAnswerInfo[key].questionType,this.SelectedAnswerInfo[key].isCorrect)\n                        if(this.SelectedAnswerInfo[key].isCorrect){\n                            if(this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.answerAllTrueType4 = true\n                            }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                            }\n                            this.resultHandleDict.isCorrect = true\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==3){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType3 = this.SelectedAnswerInfo[key].answerID\n                        }else if(this.SelectedAnswerInfo[key].questionType==5){\n                            console.log(\"in type5\")\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                                console.log(\"type5\",this.resultHandleDict.answerIDType5)\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.questionType4 = true\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType4 = this.SelectedAnswerInfo[key].orderAnswer\n                        }\n                    }\n                })      \n            }\n        },\n        type3And5CheckResult(selectedAnswer5,selectedAnswer3, answerID){\n            // console.log(selectedAnswer, answerID)\n            if(this.result){\n                console.log(\"type\",this.SelectedAnswerInfo[this.questionLengthCounter].questionType,\"5\",selectedAnswer5, \"3\",selectedAnswer3,answerID,this.questionLengthCounter)\n                if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==5){\n                    console.log(\"go\")\n                    if(answerID in selectedAnswer5){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n                else if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==3){\n                    if(answerID == selectedAnswer3){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n        },\n        handlePagination(a,b){\n            // this is for result component\n            console.log(\"HP\",a,b)\n            this.pagination.a = a\n            this.pagination.b = b\n            this.questionLengthCounter = b\n        },\n        handleCountUpDict(selectedAnswer,questionType,questionID){\n            this.countupDict.questionType = questionType\n            this.countupDict.questionID = questionID\n            if(questionType == 5){\n                this.countupDict.answerID = Object.keys(selectedAnswer)\n            }else if(questionType == 3){\n                Object.keys(selectedAnswer).forEach(key => {\n                    if(key = \"answerID\"){\n                        this.countupDict.answerID = selectedAnswer[key]\n                    }\n                })\n            }\n            this.$store.dispatch('countUpAnswerAndQuestion',this.countupDict)\n        },\n        HandleShowResult(){\n            this.showResult = !this.showResult          \n        },\n        handleResult(){\n            this.result = ! this.result\n        },\n        handleUserStatus(selectedAnswer){\n            // this is for only is_true and is_false\n            console.log(selectedAnswer)\n            this.userStatusDict.isCorrect = 0\n            this.userStatusDict.isFalse = 0\n            if(selectedAnswer){\n                this.userStatusDict.isCorrect = 1\n            }else{\n                this.userStatusDict.isFalse = 1\n            }\n            // this.$store.dispatch('userStatusPost',this.userStatusDict)\n            console.log('HUS',this.userStatusDict)\n            \n        },\n        getQuestionStatus(lavel,status){\n            this.userStatusDict.status = status\n            return lavel\n        },\n        resultNext(){\n            this.pagination.a += 1 \n            this.pagination.b += 1\n            this.questionLengthCounter += 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        resultBack(){\n            this.pagination.a -= 1 \n            this.pagination.b -= 1\n            this.questionLengthCounter -= 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        scrollTop(){\n            window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n            });\n        },\n        setTempStatusDict(){\n            console.log('IN-setSD',this.tempStatusDict,this.userStatusDict)\n            const _ = require('lodash');\n            let copyObject = _.cloneDeep(this.userStatusDict)\n            if(!this.tempStatusDict.status[0]){\n                this.tempStatusDict.status.push(copyObject)\n                console.log('pushed')\n            }\n            else{\n                for(let i in this.tempStatusDict.status){\n                    console.log('loop',i,typeof(i),this.tempStatusDict.status[i].status,copyObject.status)\n                    if(this.tempStatusDict.status[i].status==copyObject.status){\n                        console.log('true',this.tempStatusDict)\n                        if(copyObject.isCorrect){\n                            console.log('correct')\n                            this.tempStatusDict.status[i].isCorrect+=1\n                            console.log('correct',this.tempStatusDict)\n                            break\n                        }else{\n                            console.log('notcorrect')\n                            this.tempStatusDict.status[i].isFalse+=1\n                            console.log('notcorrect',this.tempStatusDict)\n                            break\n                        }\n                    }\n                    else{\n                        console.log('false',i,this.tempStatusDict.status.length -1)\n                        if(Number(i) == this.tempStatusDict.status.length -1){\n                            this.tempStatusDict.status.push(copyObject)\n                            console.log('pushed2',this.tempStatusDict.status)\n                        }\n                    }\n                }\n            }\n        },\n        \n        // from here for test function\n        checkConsecutiveResult(){\n            var correctCounter = 0\n        \n            console.log('SS',this.SelectedAnswerInfo)\n            if(Object.keys(this.SelectedAnswerInfo).length >= 4){\n                if(Object.keys(this.SelectedAnswerInfo).length == 10){\n                    let isTrue = 0\n                    let isFalse = 0\n                    for (let i = 1; i <= 10; i++){\n                        if(this.SelectedAnswerInfo[i].isCorrect){\n                            isTrue += 1\n                        }else{\n                            isFalse += 1\n                        }\n                    }\n                    console.log(\"isT\",isTrue)\n                    console.log(\"isF\",isFalse)\n                    if(isTrue >= 7){\n                        this.LevelCounters.handleLevelUp += 1\n                        this.currentLevel += 1\n                        if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown == 3){\n                            this.finishTest = true\n                            this.getFinalResult()\n                            this.LevelCounters.handleLevelUp = 0\n                            this.LevelCounters.handleLevelDown = 0\n                        }\n                        else{\n                            this.quizTestInfo.level = this.currentLevel\n                            this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                            this.getTestQuestions()\n                            this.pagination.a = 0\n                            this.pagination.b = 1\n                            this.SelectedAnswerInfo = {}\n                            correctCounter = 0\n                            this.questionLengthCounter = 1\n                        }\n                    }\n                    else if(isTrue > 4&& isTrue < 7){\n                        this.finishTest = true\n                        this.getFinalResult()\n                        this.LevelCounters.handleLevelUp = 0\n                        this.LevelCounters.handleLevelDown = 0\n                    }\n                    else{\n                        this.LevelCounters.handleLevelDown += 1\n                        if(this.currentGrade !=\"超初級\"&&this.currentLevel!=1){\n                            this.currentLevel -= 1\n                            if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown == 3){\n                                this.finishTest = true\n                                this.getFinalResult()\n                                this.LevelCounters.handleLevelUp = 0\n                                this.LevelCounters.handleLevelDown = 0\n                            }\n                            else{\n                                this.quizTestInfo.level = this.currentLevel\n                                this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                                this.getTestQuestions()\n                                correctCounter = 0\n                                this.pagination.a = 0\n                                this.pagination.b = 1\n                                this.questionLengthCounter = 1\n                                this.SelectedAnswerInfo = {}\n                            }\n                        }\n                    }\n                    if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown == 3){\n                        this.finishTest = true\n                        this.getFinalResult()\n                        this.LevelCounters.handleLevelUp = 0\n                        this.LevelCounters.handleLevelDown = 0\n                    }\n                }else{\n                    console.log(\"longer than 4\")\n                    let num4 = 0\n                    num4 = Object.keys(this.SelectedAnswerInfo).length - 4\n                    for (let i = 1; i <= 4; i++){\n                        console.log(\"forloop\",this.SelectedAnswerInfo)\n                        if(this.SelectedAnswerInfo[i + num4].isCorrect){\n                            correctCounter += 1\n                        }\n                    }\n                    if(correctCounter == 4){\n                        console.log(\"correct4\",this.LevelCounters.handleLevelUp,this.LevelCounters.handleLevelDown)\n                        this.LevelCounters.handleLevelUp += 1\n                        if(this.LevelCounters.handleLevelUp>=3&&this.LevelCounters.handleLevelDown==0){\n                            this.finishTest = true\n                            this.getFinalResult()\n                            this.LevelCounters.handleLevelUp = 0\n                        }else if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown==3){\n                            console.log(\"quiz done\", this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown)\n                            this.finishTest = true\n                            this.getFinalResult()\n                            this.LevelCounters.handleLevelUp = 0\n                            this.LevelCounters.handleLevelDown = 0\n                        }else{\n                            console.log('UP')\n                            this.quizTestInfo.level = this.currentLevel + 1\n                            this.currentLevel += 1\n                            this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                            this.getTestQuestions()\n                            this.pagination.a = 0\n                            this.pagination.b = 1\n                            this.SelectedAnswerInfo = {}\n                            correctCounter = 0\n                            this.questionLengthCounter = 1\n                        }                \n                    }else if(correctCounter == 0){\n                        console.log(\"zeroCA\")\n                        if(this.currentLevel==1){\n                            console.log(\"no more low level\")\n                        }\n                        else{\n                            this.LevelCounters.handleLevelDown += 1\n                            console.log(\"in down-part\",this.LevelCounters.handleLevelUp,this.LevelCounters.handleLevelDown)\n                            if(this.LevelCounters.handleLevelDown>=3&&this.LevelCounters.handleLevelUp==0){\n                                this.finishTest = true\n                                this.getFinalResult()\n                                this.LevelCounters.handleLevelDown = 0\n                            }\n                            else if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown==3){\n                                this.finishTest = true\n                                this.getFinalResult()\n                                this.LevelCounters.handleLevelUp = 0\n                                this.LevelCounters.handleLevelDown = 0\n                            }else{\n                                console.log('down')\n                                this.quizTestInfo.level = this.currentLevel -1\n                                this.currentLevel -= 1\n                                this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                                this.getTestQuestions()\n                                correctCounter = 0\n                                this.pagination.a = 0\n                                this.pagination.b = 1\n                                this.questionLengthCounter = 1\n                                this.SelectedAnswerInfo = {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        // async updateQuizTaker(){\n        //     console.log('UQT',\n        //     this.$store.state.signup.djangoUser.quiz_taker)\n        //     this.$store.commit(\"convertGradeFromIntToID\",this.finalResult.grade)\n        //     await axios.patch(`api/quiz-taker-test/?quiz_taker=${this.$store.state.signup.djangoUser.quiz_taker[0].id}&grade=${this.$store.state.quiz.gradeForConvert}&level=${this.finalResult.level}`)\n        // },\n        getFinalResult(){\n            console.log(\"GFR\",this.currentGrade)\n            this.finalResult.grade = this.currentGrade\n            this.finalResult.level = this.currentLevel\n            this.tempStatusDict.level = this.currentLevel\n            this.$store.dispatch('convertGradeFromIntToIDForNewUser',this.currentGrade)\n            this.tempStatusDict.grade = this.$store.getters.gradeForConvert\n            this.tempStatusDict.grade = this.$store.state.quiz.gradeForConvert\n            if(!this.tempStatusDict.grade){\n                // 4 is 超初級. it might be chainge\n                this.tempStatusDict.grade = 4\n            }\n            this.$store.commit('setTempUser',this.tempStatusDict)\n            this.$store.commit('tempUserTestTrue')\n            // this.updateQuizTaker()\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n.main-wrapper{\n    width: 100%;\n}\n.quiz-wrapper{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-top: 0.5rem;\n    padding-bottom: 2rem;\n    // align-items: center;\n    .quiz-countainer{\n        width: 100%;\n        display: flex;\n        // align-items: center;\n        justify-content: center;\n        .question-loop{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .question-wrapper{\n            width: 95%;\n            border: solid  rgba(243, 91, 36, 0.808);\n            border-radius: 1rem;\n            overflow:hidden;\n                .question-header{\n                background: linear-gradient($base-lite,$base-color);\n                color:white;\n                padding:0.5rem;\n                font-weight:bold;\n                position:relative;\n                }\n                .question-body{\n                    background-color: rgb(253, 245, 239);\n                    padding:1rem;\n                    font-weight:bold;\n                }\n                .q{\n                position:absolute;\n                left:5%;\n                bottom:2%;\n                font-size:1.5rem;  \n                }\n            }\n            .image-container{\n                display: flex;\n                justify-content: center;\n                margin-top: 0.5rem;\n                width: 100%;\n                .image{\n                    width: 40%;\n                }\n            }\n            .answer-wrapper{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                margin-top: 1rem;\n                .is-correct-answer{\n                    background: rgb(148, 255, 235);\n                }\n                .answer-loop:hover{\n                    border: solid $base-color;\n                    // background: $base-lite-3;\n                    .answer-select{\n                        background: $base-lite-2;\n                    }\n                }\n                .answer-loop{\n                    width: 95%;\n                    height: 3rem;\n                    border: solid black;\n                    border-radius: 0.5rem;\n                    background: white;\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 0.5rem;\n                    transition:0.3s;\n                    .answer-select-bases{\n                        flex-basis: 15%;\n                        .answer-select{\n                            border: solid black;\n                            border-radius: 50vh;\n                            width: 2.5rem;\n                            height: 2.5rem;\n                            margin-left: 0.5rem;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            transition:0.3s;\n                            .selecter{\n                                font-weight: bold;\n                                font-size: 1.5rem;\n                            }\n                        }\n                    }\n                    .answer-label-bases{\n                        flex-basis: 70%;\n                        .answer-label{\n\n                        }\n                    }\n                    .selected-answer-bases{\n                        flex-basis: 15%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        .selected-answer-order{\n                            font-size: 1.5rem;\n                            font-weight: bold;\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .result-answer-order{\n                            flex-basis: 50%;\n                            .order{\n                                font-size: 1.5rem;\n                                font-weight: bold;\n                                color: gray;\n                                margin-right: 0.5rem;\n                            }\n                        }\n                        .fa-check{\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .fa-circle{\n                            color: rgba(0, 84, 75, 0.839);\n                            font-size: 1.5rem;\n                            flex-basis: 50%;\n                            margin-right: 0.1rem;\n                        }\n                        .fa-times{\n                            color: rgba(244, 10, 10, 0.839);\n                            font-size: 1.5rem;\n                            margin-right: 0.1rem;\n                            flex-basis: 50%;\n                        }\n                    }\n                }\n                .is-correct-answer{\n                    background: rgb(177, 243, 231);\n                }\n                .isnot-correct-answer{\n                    background: rgb(255, 147, 147)\n                }\n                .selected-answer{\n                    background: $base-lite-3;\n                    .answer-select{\n                        background: $base-color;\n                        color: white;\n                    }\n                }\n            }\n            .button-quiz-container{\n                display: flex;\n                margin-top: 1rem;\n                align-items: center;\n                div{\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                    padding-right: 0.4rem;\n                    padding-left: 0.4rem;\n                }\n            }\n            .buttun-in-result{\n                display: flex;\n                margin-top: 1rem;\n                .btn-base-black-db-ov{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                    margin-right: 0.5rem;\n                    margin-left: 0.5rem;\n                    font-weight: bold;                    \n                }\n                .btn-tr-white-base-sq{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                }\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}