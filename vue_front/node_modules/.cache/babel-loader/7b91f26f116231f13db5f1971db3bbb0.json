{"ast":null,"code":"import ID from './ID.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    ID\n  },\n  props: ['viewableCountry'],\n\n  data() {\n    return {\n      error: null,\n      errorMessage: 'このメールアドレスはすでに使われています。',\n      errorMessage2: '登録できませんでした。もう一度お試しください。',\n      userInfo: '',\n      gotIP: false,\n      IPInfo: [{\n        city: \"\",\n        ip: \"\",\n        loc: \"\",\n        org: \"\",\n        postal: \"\",\n        region: \"\",\n        timezone: \"\",\n        country: \"\"\n      }]\n    };\n  },\n\n  mounted() {\n    this.$store.commit('fixedScrollTrue');\n    this.getCountry();\n    console.log('mail', this.$store.state.signup.email, 'password', this.$store.state.signup.password);\n    console.log('mounted at confiem', this.$store.getters.fixedScroll);\n  },\n\n  beforeUnmount() {\n    this.$store.commit('fixedScrollFalse');\n  },\n\n  computed: {\n    user() {\n      try {\n        return this.$store.state.signup.djangoUser;\n      } catch {\n        return null;\n      }\n    }\n\n  },\n  methods: {\n    async addStep() {\n      await this.$store.dispatch('signup', {\n        email: this.$store.state.signup.email,\n        password: this.$store.state.signup.password\n      });\n      this.$emit('confHandle');\n      this.$emit('sentHandle');\n      this.$store.commit('addStep');\n      this.$emit('handle');\n      await this.registerUserAndDjango();\n    },\n\n    async registerUserAndDjango() {\n      if (this.$store.getters.getTempUser.test) {\n        console.log('YES TEMP');\n        this.userInfo = {\n          UID: this.$store.state.signup.user.uid,\n          name: this.$store.state.signup.username,\n          email: this.$store.state.signup.email,\n          country: this.$store.state.signup.country,\n          quiz_taker: [{\n            grade: this.$store.getters.getTempUser.grade\n          }, {\n            level: this.$store.getters.getTempUser.level\n          }, {\n            user_status: this.$store.getters.getTempUser.statusList\n          }],\n          ip_data: [{\n            city: this.IPInfo.city,\n            ip: this.IPInfo.ip,\n            loc: this.IPInfo.loc,\n            org: this.IPInfo.org,\n            postal: this.IPInfo.postal,\n            region: this.IPInfo.region,\n            timezone: this.IPInfo.timezone,\n            country: this.IPInfo.country\n          }]\n        };\n      } else {\n        console.log('NO TEMP');\n        this.userInfo = {\n          UID: this.$store.state.signup.user.uid,\n          name: this.$store.state.signup.username,\n          email: this.$store.state.signup.email,\n          country: this.$store.state.signup.country,\n          ip_data: [{\n            city: this.IPInfo.city,\n            ip: this.IPInfo.ip,\n            loc: this.IPInfo.loc,\n            org: this.IPInfo.org,\n            postal: this.IPInfo.postal,\n            region: this.IPInfo.region,\n            timezone: this.IPInfo.timezone,\n            country: this.IPInfo.country\n          }]\n        };\n      }\n\n      try {\n        console.log(\"try\", this.userInfo);\n        this.$store.dispatch('signupDjangoUser', this.userInfo); // await axios({\n        //     method: 'post',\n        //     url: '/api/user/',\n        //     data: this.userInfo\n        // {\n        //     UID: this.$store.state.signup.user.uid,\n        //     name: this.$store.state.signup.username,\n        //     email: this.$store.state.signup.email,\n        //     quiz_taker: [\n        //         {grade: this.$store.getters.getTempUser.grade},\n        //         {level: this.$store.getters.getTempUser.level}\n        //     ],\n        // ip_data: [{\n        //    city: this.IPInfo.city,\n        //    ip: this.IPInfo.ip,\n        //    loc: this.IPInfo.loc,\n        //    org: this.IPInfo.org,\n        //    postal: this.IPInfo.postal,\n        //    region: this.IPInfo.region,\n        //    timezone: this.IPInfo.timezone,\n        //    country: this.IPInfo.country\n        // }]\n        // },\n        // })\n      } catch (error) {\n        console.log('error', error.message);\n      }\n    },\n\n    async goEdit() {\n      this.$emit('showPasswordFalse');\n      this.$emit('handle');\n      this.$emit('edithandle');\n    },\n\n    async getCountry() {\n      if (!this.gotIP) {\n        await axios.get(\"https://ipinfo.io/json?token=32e16159d962c5\") // .then(response => {\n        //     this.IPInfo = response.data\n        //     console.log(this.IPInfo)\n        //     })\n        .then(response => {\n          let IP = response.data;\n          this.IPInfo.city = IP.city;\n          this.IPInfo.ip = IP.ip;\n          this.IPInfo.loc = IP.loc;\n          this.IPInfo.org = IP.org;\n          this.IPInfo.postal = IP.postal;\n          this.IPInfo.region = IP.region;\n          this.IPInfo.timezone = IP.timezone;\n          this.IPInfo.country = IP.country;\n          console.log(this.IPInfo);\n        }).catch(error => {\n          console.log(error);\n        });\n        this.gotIP = true;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["ID","axios","components","props","data","error","errorMessage","errorMessage2","userInfo","gotIP","IPInfo","city","ip","loc","org","postal","region","timezone","country","mounted","$store","commit","getCountry","console","log","state","signup","email","password","getters","fixedScroll","beforeUnmount","computed","user","djangoUser","methods","addStep","dispatch","$emit","registerUserAndDjango","getTempUser","test","UID","uid","name","username","quiz_taker","grade","level","user_status","statusList","ip_data","message","goEdit","get","then","response","IP","catch"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/signin/RegisterConfirm.vue"],"sourcesContent":["<template>\n    <div class='notification-wrapper'>\n        <div class='notice-wrapper'>\n            <img class='image' src=\"@/assets/logo.png\">\n            <p class='text1'>以下の情報で登録しますか。</p>\n            <div class=\"field\">\n                <div class=\"input-box\">\n                    <div><i class=\"fas fa-robot\" id='in-font'></i></div>\n                    <div class=\"text-box\">{{ $store.state.signup.username }}</div>\n                </div>         \n            </div>\n            <div class=\"field\">\n                <div class=\"input-box\">\n                    <div><i class=\"far fa-envelope\" id='in-font'></i></div>      \n                        <div class=\"text-box\" id='mail'>{{ $store.state.signup.email }}</div>\n                </div>         \n            </div>\n            <div class=\"field\">\n                <div class=\"input-box\">\n                    <div><i class=\"fas fa-globe\" id='in-font'></i></div>\n                    <div class=\"text-box\">{{ viewableCountry }}</div>\n                </div>         \n            </div>\n            <div class=\"field\">\n                <div class=\"input-box\">\n                    <i class=\"fas fa-unlock-alt\" id='in-font'></i>\n                    <div class=\"text-box\">{{ $store.state.signup.password }}</div>\n                </div>         \n            </div>\n            <div class=\"buttons\">\n                <button  @click='goEdit' class='button' :disabled='error' id='color-button'><p>編集する</p></button>\n                <button  @click='addStep' class='button' :disabled='error' id='color-button'><p>登録</p></button>\n            </div>\n            <transition name=\"notice\">\n                <div v-if='error' class=\"error\">\n                    <p class='error-message' v-if='error'> {{ error }} </p>\n                    <button class='fbottun' id='color-button'>戻る</button>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n\n<script>\nimport ID from './ID.vue'\nimport axios from 'axios'\nexport default {\n  components: { ID },\n  props:[\n        'viewableCountry',\n    ],\n    data(){\n        return{\n            error: null,\n            errorMessage:'このメールアドレスはすでに使われています。',\n            errorMessage2:'登録できませんでした。もう一度お試しください。',\n            userInfo:'',\n            gotIP:false,\n            IPInfo:[\n                {city:\"\",\n                ip:\"\",\n                loc:\"\",\n                org:\"\",\n                postal:\"\",\n                region:\"\",\n                timezone:\"\",\n                country:\"\"\n                }\n            ],\n        }\n    },\n    mounted(){\n        this.$store.commit('fixedScrollTrue')\n        this.getCountry()\n        console.log('mail',this.$store.state.signup.email, 'password',this.$store.state.signup.password)\n        console.log('mounted at confiem',this.$store.getters.fixedScroll)\n\n    },\n    beforeUnmount(){\n        this.$store.commit('fixedScrollFalse')\n    },\n    computed:{\n        user(){\n            try{\n                return this.$store.state.signup.djangoUser\n            }\n            catch{\n                return null\n            }\n        },\n    },\n    methods:{\n        async addStep(){\n            await this.$store.dispatch('signup',{\n            email: this.$store.state.signup.email,\n            password: this.$store.state.signup.password\n            })\n            this.$emit('confHandle')\n            this.$emit('sentHandle')\n            this.$store.commit('addStep')\n            this.$emit('handle')\n            await this.registerUserAndDjango()\n        },\n        async registerUserAndDjango(){\n            if(this.$store.getters.getTempUser.test){\n                console.log('YES TEMP')\n                this.userInfo={\n                    UID: this.$store.state.signup.user.uid,\n                    name: this.$store.state.signup.username,\n                    email: this.$store.state.signup.email,\n                    country: this.$store.state.signup.country,\n                    quiz_taker: [\n                        {grade: this.$store.getters.getTempUser.grade},\n                        {level: this.$store.getters.getTempUser.level},\n                        {user_status: this.$store.getters.getTempUser.statusList}\n                    ],\n                    ip_data: [{\n                        city: this.IPInfo.city,\n                        ip: this.IPInfo.ip,\n                        loc: this.IPInfo.loc,\n                        org: this.IPInfo.org,\n                        postal: this.IPInfo.postal,\n                        region: this.IPInfo.region,\n                        timezone: this.IPInfo.timezone,\n                        country: this.IPInfo.country\n                    }]\n                }\n            }else{\n                console.log('NO TEMP')\n                this.userInfo={\n                    UID: this.$store.state.signup.user.uid,\n                    name: this.$store.state.signup.username,\n                    email: this.$store.state.signup.email,\n                    country: this.$store.state.signup.country,\n                    ip_data: [{\n                        city: this.IPInfo.city,\n                        ip: this.IPInfo.ip,\n                        loc: this.IPInfo.loc,\n                        org: this.IPInfo.org,\n                        postal: this.IPInfo.postal,\n                        region: this.IPInfo.region,\n                        timezone: this.IPInfo.timezone,\n                        country: this.IPInfo.country\n                    }]\n                }\n            }\n            try{\n                console.log(\"try\",this.userInfo)\n                this.$store.dispatch('signupDjangoUser',this.userInfo)\n                // await axios({\n                //     method: 'post',\n                //     url: '/api/user/',\n                //     data: this.userInfo\n                    // {\n                    //     UID: this.$store.state.signup.user.uid,\n                    //     name: this.$store.state.signup.username,\n                    //     email: this.$store.state.signup.email,\n                    //     quiz_taker: [\n                    //         {grade: this.$store.getters.getTempUser.grade},\n                    //         {level: this.$store.getters.getTempUser.level}\n                    //     ],\n                        // ip_data: [{\n                        //    city: this.IPInfo.city,\n                        //    ip: this.IPInfo.ip,\n                        //    loc: this.IPInfo.loc,\n                        //    org: this.IPInfo.org,\n                        //    postal: this.IPInfo.postal,\n                        //    region: this.IPInfo.region,\n                        //    timezone: this.IPInfo.timezone,\n                        //    country: this.IPInfo.country\n                        // }]\n                    // },\n                // })\n            }\n            catch(error){\n                console.log('error',error.message)\n                }\n            \n        },\n        async goEdit(){\n            this.$emit('showPasswordFalse')\n            this.$emit('handle')\n            this.$emit('edithandle')\n        },\n        async getCountry(){\n            if(!this.gotIP){\n                await axios\n                .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n                // .then(response => {\n                //     this.IPInfo = response.data\n                //     console.log(this.IPInfo)\n                //     })\n                .then(response => {\n                    let IP = response.data\n                    this.IPInfo.city = IP.city\n                    this.IPInfo.ip = IP.ip\n                    this.IPInfo.loc = IP.loc\n                    this.IPInfo.org = IP.org\n                    this.IPInfo.postal = IP.postal\n                    this.IPInfo.region = IP.region\n                    this.IPInfo.timezone = IP.timezone\n                    this.IPInfo.country = IP.country\n                    console.log(this.IPInfo)\n                    })\n                .catch(error => {\n                    console.log(error)\n                })\n                this.gotIP = true\n            }\n        }    \n    },\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"style/_variables.scss\";\n    .notification-wrapper{\n        top:0;\n        position: fixed;\n        background:rgba(0,0,0,0.5);\n        width:100vw;\n        height:100vh;\n        flex-direction: column;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .notice-wrapper{\n        border: solid $base-color;\n        border-radius: 2vh;\n        background:$back-white;\n        text-align: center;       \n        position:relative;\n        padding-top:1.5rem;\n        height:30rem;\n        width: 20rem;\n    }\n    .image{\n        width:15%;\n        height:auto;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .text1{\n        font-size:1rem;\n        font-weight: bold;\n        margin:2rem;\n    }\n    .input-box{\n        border: solid $base-color;\n        border-radius: 100Vh;\n        // display: flex;\n        // justify-content: flex-start;\n        // align-items: center;\n        margin-left: 1rem;\n        margin-right: 1rem;\n        height: 3rem;\n        position:relative;\n        font-size:1.5rem;\n    }\n    #in-font{\n        // font-size:1rem;\n        margin-left: 1rem;\n        position:absolute;\n        left:0;\n        top:0.6rem;\n    }\n    .text-box{\n        // position: absolute;\n        left:0;\n        right:0;\n        top:0;\n        bottom: 0;\n        font-size:1.2rem;\n        font-weight: bold;\n        margin-top:0.5rem;\n        margin-left:3rem;\n        margin-right:2rem;\n    }\n    #mail{\n        overflow-wrap: break-word;\n        line-height: 0.9rem;\n        margin-top:0.8rem;        \n    }\n    .buttons{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n    }\n    .button{\n        font-weight: bold;\n    }\n    .error{\n        position:absolute;\n        border:solid red;\n        background: rgb(247, 230, 232);\n        border-radius: 1rem;\n        height:70%;\n        left:0;\n        right:0;\n        bottom:0;\n        top:0;\n        margin:auto;\n        transition: 0.3s;\n        padding:2rem;\n        display:flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n    }\n    .error-message{\n        font-weight: bold;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}