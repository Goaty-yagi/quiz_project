{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7d2aa228\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"main-wrapper\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"create-question-container\"\n};\nconst _hoisted_3 = {\n  class: \"field\"\n};\nconst _hoisted_4 = {\n  class: \"input-box\",\n  ref: \"formName\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title-container\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title\"\n}, \" quiz_grade \")], -1));\n\nconst _hoisted_6 = {\n  class: \"option\"\n};\nconst _hoisted_7 = {\n  class: \"field\"\n};\nconst _hoisted_8 = {\n  class: \"input-box\",\n  ref: \"formMail\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title-container\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title\"\n}, \" quiz_level \")], -1));\n\nconst _hoisted_10 = {\n  class: \"text-box level\"\n};\nconst _hoisted_11 = {\n  class: \"field\"\n};\nconst _hoisted_12 = {\n  class: \"input-box\",\n  ref: \"formName\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title-container\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title\"\n}, \" quiz_type \")], -1));\n\nconst _hoisted_14 = {\n  class: \"option\"\n};\nconst _hoisted_15 = {\n  class: \"field\"\n};\nconst _hoisted_16 = {\n  class: \"input-box\",\n  ref: \"formName\"\n};\n\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title-container\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title\"\n}, \" quiz_field \")], -1));\n\nconst _hoisted_18 = {\n  disabled: \"\"\n};\nconst _hoisted_19 = {\n  class: \"option\"\n};\nconst _hoisted_20 = {\n  class: \"texarea-field\"\n};\nconst _hoisted_21 = {\n  class: \"texarea-box\"\n};\n\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title-container\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"each-title\"\n}, \" quiz_label \")], -1));\n\nconst _hoisted_23 = {\n  class: \"answer-wrapper\"\n};\nconst _hoisted_24 = {\n  class: \"answer-title-container\"\n};\n\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"answer-title\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Answer\")], -1));\n\nconst _hoisted_26 = {\n  class: \"num-con\"\n};\nconst _hoisted_27 = {\n  class: \"num\"\n};\nconst _hoisted_28 = [\"onUpdate:modelValue\"];\nconst _hoisted_29 = {\n  class: \"right-side-answer-container\"\n};\nconst _hoisted_30 = {\n  key: 0,\n  class: \"checkbox-container\"\n};\n\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"true\", -1));\n\nconst _hoisted_32 = [\"onUpdate:modelValue\"];\nconst _hoisted_33 = {\n  key: 1,\n  class: \"correct-order-container\"\n};\nconst _hoisted_34 = {\n  class: \"correct-order\"\n};\n\nconst _hoisted_35 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"order\", -1));\n\nconst _hoisted_36 = [\"max\", \"onUpdate:modelValue\"];\nconst _hoisted_37 = {\n  key: 0\n};\nconst _hoisted_38 = {\n  key: 1\n};\nconst _hoisted_39 = {\n  key: 0,\n  class: \"image-container\"\n};\nconst _hoisted_40 = [\"src\"];\nconst _hoisted_41 = {\n  class: \"notification-text\"\n};\nconst _hoisted_42 = {\n  class: \"fbottun\",\n  ref: \"bform\",\n  id: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Thumbnail = _resolveComponent(\"Thumbnail\");\n\n  const _component_QuizConfirm = _resolveComponent(\"QuizConfirm\");\n\n  return $options.questionTypeId ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"create-question-wrapper\", {\n      'scroll-fixed': $options.fixedScroll,\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_ctx.$store.state.isLoading == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[9] || (_cache[9] = _withModifiers((...args) => $options.showConfirmTrue && $options.showConfirmTrue(...args), [\"prevent\"])),\n    class: \"field-wrapper\"\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    required: \"\",\n    class: \"text-box\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.tempQuiz = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.quizNameId, (id, idindex) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: idindex\n    }, [_createElementVNode(\"p\", _hoisted_6, _toDisplayString(id.name), 1)]);\n  }), 128))], 512), [[_vModelSelect, _ctx.tempQuiz]])], 512)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    required: \"\",\n    type: \"number\",\n    min: \"1\",\n    max: \"10\",\n    step: \"1\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.formQuestionData.quiz_level = $event)\n  }, null, 512), [[_vModelText, _ctx.formQuestionData.quiz_level]])])], 512)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"select\", {\n    required: \"\",\n    class: \"text-box\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.formQuestionData.question_type = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.questionTypeId, (id, idindex) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: idindex\n    }, [_createElementVNode(\"p\", _hoisted_14, _toDisplayString(id.name), 1)]);\n  }), 128))], 512), [[_vModelSelect, _ctx.formQuestionData.question_type]])], 512)]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _withDirectives(_createElementVNode(\"select\", {\n    required: \"\",\n    class: \"text-box\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.formQuestionData.field = $event)\n  }, [_createElementVNode(\"option\", _hoisted_18, _toDisplayString(_ctx.tempField), 1), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.quizFieldList, (id, idindex) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: idindex\n    }, [_createElementVNode(\"p\", _hoisted_19, _toDisplayString(id), 1)]);\n  }), 128))], 512), [[_vModelSelect, _ctx.formQuestionData.field]])], 512)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_hoisted_22, _withDirectives(_createElementVNode(\"textarea\", {\n    required: \"\",\n    class: \"text-box\",\n    onFocus: _cache[4] || (_cache[4] = (...args) => _ctx.onFocus && _ctx.onFocus(...args)),\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.formQuestionData.label = $event)\n  }, \"\\n                            \", 544), [[_vModelText, _ctx.formQuestionData.label]])])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"i\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.subtractAnswer()),\n    class: \"fas fa-minus\"\n  }), _hoisted_25, _createElementVNode(\"i\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.addAnswer()),\n    class: \"fas fa-plus\"\n  })]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.handleAnswerLength, num => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"answer-container\",\n      key: num\n    }, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"p\", _hoisted_27, _toDisplayString(num), 1)]), _withDirectives(_createElementVNode(\"input\", {\n      required: \"\",\n      class: \"answer-label\",\n      type: \"text\",\n      placeholder: \"答え\",\n      \"onUpdate:modelValue\": $event => _ctx.formAnswerDataList[num - 1].label = $event\n    }, null, 8, _hoisted_28), [[_vModelText, _ctx.formAnswerDataList[num - 1].label]]), _createElementVNode(\"div\", _hoisted_29, [_ctx.formQuestionData.question_type != '並び替え' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_hoisted_31, _withDirectives(_createElementVNode(\"input\", {\n      class: \"checkbox\",\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => _ctx.formAnswerDataList[num - 1].is_correct = $event\n    }, null, 8, _hoisted_32), [[_vModelCheckbox, _ctx.formAnswerDataList[num - 1].is_correct]])])) : _createCommentVNode(\"\", true), _ctx.formQuestionData.question_type == '並び替え' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_hoisted_35, _withDirectives(_createElementVNode(\"input\", {\n      required: \"\",\n      input: \"\",\n      type: \"number\",\n      min: \"1\",\n      max: _ctx.handleAnswerLength,\n      step: \"1\",\n      \"onUpdate:modelValue\": $event => _ctx.formAnswerDataList[num - 1].answer_id = $event\n    }, null, 8, _hoisted_36), [[_vModelText, _ctx.formAnswerDataList[num - 1].answer_id]])])])) : _createCommentVNode(\"\", true)])]);\n  }), 128)), _createElementVNode(\"div\", {\n    class: \"image-bottun\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.handleShowThumbnail && $options.handleShowThumbnail(...args))\n  }, [!_ctx.image ? (_openBlock(), _createElementBlock(\"p\", _hoisted_37, \"画像を入れますか？\")) : _createCommentVNode(\"\", true), _ctx.image ? (_openBlock(), _createElementBlock(\"p\", _hoisted_38, \"画像を変更しますか？\")) : _createCommentVNode(\"\", true)]), _ctx.image ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, [_createElementVNode(\"img\", {\n    class: \"image\",\n    src: _ctx.image\n  }, null, 8, _hoisted_40)])) : _createCommentVNode(\"\", true), _ctx.errorOccurred ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass({\n      'notification-red': _ctx.errorOccurred\n    })\n  }, [_createElementVNode(\"div\", _hoisted_41, _toDisplayString(_ctx.errorMessage), 1)], 2)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", _hoisted_42, \"作成する\", 512)])], 32)])) : _createCommentVNode(\"\", true)]), _ctx.showThumbnail ? (_openBlock(), _createBlock(_component_Thumbnail, {\n    key: 0,\n    onShowThumbnailFalse: $options.showThumbnailFalse,\n    onSetImageBlob: $options.setImageBlob\n  }, null, 8, [\"onShowThumbnailFalse\", \"onSetImageBlob\"])) : _createCommentVNode(\"\", true), _ctx.showConfirm ? (_openBlock(), _createBlock(_component_QuizConfirm, {\n    key: 1,\n    questionDetailInfo: _ctx.questionDetailInfo,\n    onSubmitForm: $options.submitForm,\n    onShowConfirmFalse: $options.showConfirmFalse,\n    onChancelAction: $options.chancelAction\n  }, null, 8, [\"questionDetailInfo\", \"onSubmitForm\", \"onShowConfirmFalse\", \"onChancelAction\"])) : _createCommentVNode(\"\", true)], 2)) : _createCommentVNode(\"\", true);\n}","map":{"version":3,"mappings":"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","names":["class","ref","_createElementVNode","disabled","id","$options","_createElementBlock","_ctx","state","isLoading","onSubmit","_hoisted_5","required","$event","_Fragment","_renderList","idindex","key","_toDisplayString","name","_hoisted_9","type","min","max","step","quiz_level","_hoisted_13","question_type","_hoisted_17","field","_hoisted_22","onFocus","label","onClick","_hoisted_25","num","placeholder","_hoisted_31","is_correct","_hoisted_35","input","answer_id","_hoisted_37","_hoisted_38","src","_createBlock","_component_Thumbnail","onShowThumbnailFalse","onSetImageBlob","_component_QuizConfirm","questionDetailInfo","onSubmitForm","onShowConfirmFalse","onChancelAction"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/CreateQuizQuestion.vue"],"sourcesContent":["<template>\n    <div v-if=\"questionTypeId\" class=\"create-question-wrapper\" :class=\"{'scroll-fixed':fixedScroll, 'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-container\" v-if=\"$store.state.isLoading==false\">\n                <form @submit.prevent='showConfirmTrue' class=\"field-wrapper\">\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_grade\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model='tempQuiz'>\n                                <option\n                                    v-for=\"(id,idindex) in quizNameId\" \n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formMail'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_level\n                                </div>\n                            </div>\n                            <div class=\"text-box level\">\n                                <input required type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model=\"formQuestionData.quiz_level\">\n                            </div>\n                        </div>         \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_type\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.question_type\">\n                                <option\n                                    v-for=\"(id,idindex) in questionTypeId\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <!-- {{ formQuestionData}} -->\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_field\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.field\">\n                                <option disabled>{{ tempField }}</option>\n                                <option\n                                    v-for=\"(id,idindex) in quizFieldList\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"texarea-field\">\n                        <div class=\"texarea-box\">\n                            <div class=\"each-title-container\">\n                                <div class=\"each-title\">\n                                    quiz_label\n                                </div>\n                            </div>\n                            <textarea required class=\"text-box\" v-on:focus=\"onFocus\" v-model='formQuestionData.label'>\n                            </textarea>\n                        </div>       \n                    </div>\n                    <div class=\"answer-wrapper\" >\n                        <div class=\"answer-title-container\">\n                            <i @click=\"subtractAnswer()\" class=\"fas fa-minus\"></i>\n                            <div class=\"answer-title\">\n                                <p>Answer</p>\n                            </div>\n                            <i @click=\"addAnswer()\" class=\"fas fa-plus\"></i>\n                        </div>\n                        <div class=\"answer-container\"\n                            v-for=\"(num) of handleAnswerLength\" \n                                v-bind:key=\"num\">\n                            <div class=\"num-con\">\n                                <p class=\"num\">{{ num }}</p>\n                            </div>\n                            <input required class=\"answer-label\" type=\"text\" placeholder=\"答え\" v-model='formAnswerDataList[num-1].label'>\n                            <div class=\"right-side-answer-container\">\n                                <div v-if=\"formQuestionData.question_type!='並び替え'\" class=\"checkbox-container\">\n                                    <p>true</p>\n                                    <input class=\"checkbox\" type=\"checkbox\" v-model='formAnswerDataList[num-1].is_correct'>\n                                </div>\n                                <div v-if=\"formQuestionData.question_type=='並び替え'\" class=\"correct-order-container\">\n                                    <div class=\"correct-order\">\n                                        <p>order</p>\n                                        <input required input type=\"number\" min=\"1\" :max=\"handleAnswerLength\" step=\"1\" v-model='formAnswerDataList[num-1].answer_id'>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"image-bottun\" @click='handleShowThumbnail'>\n                            <p v-if=\"!image\">画像を入れますか？</p>\n                            <p v-if=\"image\">画像を変更しますか？</p>\n                        </div>\n                        <div v-if=\"image\" class=\"image-container\">\n                            <img class=\"image\" :src=\"image\">\n                        </div>\n                        <!-- <div v-if=\"!errorOccurred\" class=\"space-height\"></div> -->\n                        <div v-if=\"errorOccurred\" :class=\"{'notification-red':errorOccurred}\">\n                            <div class=\"notification-text\">\n                            {{ errorMessage }}\n                            </div>\n                        </div>\n                        <!-- <input type=\"file\" enctype=\"multipart/form-data\"> -->\n                    </div>\n                    <!-- <p class=\"po\">{{formAnswerDataList }}</p> -->\n                    <div>\n                        <button class='fbottun' ref='bform' id=''>作成する</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <Thumbnail v-if=\"showThumbnail\"\n        @showThumbnailFalse=\"showThumbnailFalse\"\n        @setImageBlob=\"setImageBlob\"/>\n        <QuizConfirm\n        v-if=\"showConfirm\"\n        :questionDetailInfo=\"questionDetailInfo\"\n        @submitForm=\"submitForm\"\n        @showConfirmFalse=\"showConfirmFalse\"\n        @chancelAction=\"chancelAction\"/>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex';\nimport axios from 'axios'\nimport Thumbnail from '@/components/account/Thumbnail.vue'\nimport QuizConfirm from '@/components/dashboard/QuizConfirm.vue'\n\nfunction initialData() {\n    return{\n        showThumbnail: false,\n        showSideBar: true,\n        showConfirm: false,\n        tempQuiz:'初級',\n        tempField:'フィールドを選択してください。',\n        // tempQuizType: '選択',\n        questionDetailInfo:{},\n        formQuestionData:{\n            quiz:'初級',\n            quiz_level:1,\n            question_type:'選択',\n            field:'フィールドを選択してください。',\n            label:'',\n            status:'',\n            max_select:'',\n            image:''\n        },\n        formAnswerDataList:[{\n            label:'',\n            is_correct:false,\n            answer_id:1,\n        },\n        {\n            label:'',\n            is_correct:false,\n            answer_id:2,\n        },\n        {\n            label:'',\n            is_correct:false,\n            answer_id:3,\n        },\n        {\n            label:'',\n            is_correct:false,\n            answer_id:4,\n        },\n        ],\n        formAnswerData:{\n            label:'',\n            is_correct:false,\n            answer_id:0,\n        },\n        formDataError:{\n            noFieldError: \"クイズフィールドを選んでください。\",\n            // highLevelError: \"レベルは１０以内の数字を入力してください。\",\n            noSetAnswerIdError: \"答えの順番を指定してください。\",\n            wrongNumOrderError:\"答えの順番に間違いがあります。\",\n            notSelectOneError: \"正解を一つ選んでください。\",\n            noMoreThanThreeError: \"多答問題は答えを３つ以上指定してください。\",\n            moreThanTwoError:\"多答問題は正解を２つ以上指定してください。\",\n            AllTrueError:\"全ての答えが正解になっています。\"\n            },\n        errorOccurred: false,\n        errorMessage:'',\n        answerNum: 4,\n        handleAnswerLength: 4,\n        formDataReady: false,\n        image: '',\n    }\n}\n\nexport default {\n    components: {\n        Thumbnail,\n        QuizConfirm,\n    },\n    data(){\n        return initialData()\n        \n    },\n    created(){\n        this.$store.dispatch('getQuestionTypeId')\n    },\n    beforeMount(){\n        // this.$store.dispatch('getQuestionTypeId')\n    },\n    mounted(){\n        console.log('mounted at create-question',this.quizNameId,this.fieldNameId)\n    },\n    watch:{\n        answerNum:function(v) {\n            console.log('v',v)\n            if (this.handleAnswerLength > v){\n                this.handleAnswerLength = v\n                this.formAnswerDataList.pop()   \n            } else {\n                const _ = require('lodash');\n                let copyObject = _.cloneDeep(this.formAnswerData)\n                this.formAnswerDataList.push(copyObject)\n                this.handleAnswerLength = v\n            }\n        },\n        tempQuiz:function(v) {\n            console.log('T',v)\n            this.formQuestionData.quiz = v\n            this.formQuestionData.field = this.tempField\n        },\n        // tempQuizType:function(v) {\n        //     this.formQuestionData.question_type = v\n        //     for(let i of this.formAnswerDataList) {\n        //         i.is_correct = ''\n        //     }\n        // }\n    },\n    computed:{\n        quizNameId() {\n            return this.$store.getters.quizNameId\n        },\n        fieldNameId() {\n            return this.$store.getters.fieldNameId\n        },\n        questionTypeId() {\n            return this.$store.getters.questionTypeId\n        },\n        quizFieldList() {\n            let list = [];\n            for (let i of this.fieldNameId) {\n                if (this.convertQuizGradeToId(this.tempQuiz) == i.grade) {\n                    list.push(i.name)\n                }\n            }\n            return list\n        },\n        fixedScroll(){\n            return this.$store.getters.fixedScroll\n        },\n    },\n    // mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n    methods:{\n        // ...mapActions(['getQuestionTypeId']),\n        handleShowSideBar(){\n            console.log(this.showSideBar)\n            this.showSideBar = !this.showSideBar \n            console.log(this.showSideBar)\n        },\n        addAnswer(){\n            this.answerNum += 1\n        },\n        subtractAnswer(){\n            if(this.answerNum > 1){\n                this.answerNum -= 1\n            }\n        },\n        async submitForm(){\n            // await this.setAllFormData()\n            let response =''\n            try{\n                console.log('GO',this.formQuestionData)\n                if(this.formDataReady){\n                    response = await axios({\n                        method: 'post',\n                        url: '/api/questions-create/',                            \n                        data: {\n                            'quiz': this.formQuestionData.quiz,\n                            'label': this.formQuestionData.label,\n                            'field': [this.formQuestionData.field],\n                            'question_type':this.formQuestionData.question_type,\n                            'quiz_level': this.formQuestionData.quiz_level,\n                            'answer': this.formAnswerDataList\n                        },\n                    })\n                }\n                if(this.formQuestionData.image){\n                    console.log(response.data)\n                    const formdata = new FormData\n                    formdata.append('image',this.formQuestionData.image,`${this.formQuestionData.image}.png`)\n                    axios\n                    .patch(\n                        `/api/questions-image-dispatch/${response.data.id}`,formdata)\n                }\n            } catch(e) {\n                console.log('error',e)\n            }\n            this.allResetVars()\n        },\n        setAllFormData(){\n            // need to think about status part regarding of field\n            if (this.formQuestionData.field == this.tempField) {\n                this.errorMessage = this.formDataError.noFieldError\n                this.setTimeForNotification()\n                return \n            }\n            if(this.formQuestionData.question_type == \"並び替え\") {\n                this.formAnswerDataList.forEach((elem, index) => {\n                    this.formAnswerDataList[index].is_correct = false\n                })\n                let answerIdList = []\n                this.formAnswerDataList.forEach((elem, index) => {\n                    answerIdList.push(elem.answer_id)\n                    if(!this.formAnswerDataList[index].answer_id) {\n                        this.errorMessage = this.formDataError.noSetAnswerIdError\n                        this.setTimeForNotification()\n                        return \n                    } \n                })\n                const answerIdListSet = [... new Set(answerIdList)];\n                if(answerIdListSet.length == answerIdList.length){\n                    this.formDataReady = true\n                } else {\n                    this.errorMessage = this.formDataError.wrongNumOrderError\n                    this.setTimeForNotification()\n                    return \n                }\n            } else {\n                let counter = 0\n                for(let i of this.formAnswerDataList){\n                    if(i.is_correct) {\n                        counter += 1\n                    }\n                }\n                if(this.formQuestionData.question_type == \"選択\") {\n                    if(counter !=1) {\n                        this.errorMessage = this.formDataError.notSelectOneError\n                        this.setTimeForNotification()\n                        return \n                    } else {\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = 0\n                            }\n                        })\n                        this.formDataReady = true\n                    }\n                }\n                else if(this.formQuestionData.question_type == \"多答\") {\n                    if(this.formAnswerDataList.length < 3) {\n                        this.errorMessage = this.formDataError.noMoreThanThreeError\n                        this.setTimeForNotification()\n                        return\n                    } else if(counter <= 0 || counter == 1) {\n                        this.errorMessage = this.formDataError.moreThanTwoError\n                        this.setTimeForNotification()\n                        return\n                    } else if(this.formAnswerDataList.length == counter) {\n                        this.errorMessage = this.formDataError.AllTrueError\n                        this.setTimeForNotification()\n                        return\n                    } else {\n                        this.formQuestionData.max_select = counter\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = 0\n                            }\n                        })\n                        this.formDataReady = true\n                    }\n                }\n            }\n            this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type)\n            this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz)\n            this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field)\n            console.log(\"set\", this.formQuestionData)\n        },\n        setTimeForNotification(){\n            this.errorOccurred = true\n            setTimeout(this.errorOccurredFalse, 3000);\n        },\n        errorOccurredFalse(){\n            this.errorOccurred = false\n        },\n        convertQuizGradeToId(grade) {\n            for (let i of this.quizNameId){\n                if (i.name == grade){\n                    return i.id\n                }\n            }\n        },\n        convertQuizTypeToId(type) {\n            for (let i of this.questionTypeId){\n                if (i.name == type){\n                    return i.id\n                }\n            }\n        },\n        convertQuizFieldToId(field) {\n            for (let i of this.fieldNameId){\n                if (i.name == field){\n                    return i.id\n                }\n            }\n        },\n        handleShowThumbnail(){\n            this.showThumbnail = true\n        },\n        showThumbnailFalse(){\n            this.showThumbnail = false\n        },\n        setImageBlob(blob,url) {\n            console.log('set-blob',blob)\n            this.image = url\n            this.questionDetailInfo.image = url\n            this.formQuestionData.image = blob\n        },\n        showConfirmTrue(){\n            this.formDataReady = false\n            this.setQuestionDetailInfo()\n            this.setAllFormData()\n            if(this.formDataReady){\n                this.$store.commit('fixedScrollTrue')\n                this.showConfirm = true\n            }\n        },\n        showConfirmFalse() {\n            this.showConfirm = false\n            this.$store.commit('fixedScrollFalse')\n        },\n        allResetVars() {\n            Object.assign(this.$data, initialData())\n        },\n        setQuestionDetailInfo() {\n            console.log('info')\n            this.questionDetailInfo.grade = this.formQuestionData.quiz\n            this.questionDetailInfo.level = this.formQuestionData.quiz_level\n            this.questionDetailInfo.question_type = this.formQuestionData.question_type\n            this.questionDetailInfo.field = this.formQuestionData.field\n            this.questionDetailInfo.label = this.formQuestionData.label\n            this.questionDetailInfo.answers = this.formAnswerDataList\n            console.log('doneinfo')\n        },\n        chancelAction() {\n            this.tempQuiz = this.questionDetailInfo.grade\n            this.formQuestionData.quiz = this.questionDetailInfo.grade\n            this.formQuestionData.question_type = this.questionDetailInfo.question_type\n            this.formQuestionData.field = this.questionDetailInfo.field\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n\n.po{\n    color: white;\n}\n.create-question-wrapper{\n    width: 100%;\n    margin: 0;margin-top: 2rem;\n    display: flex;\n    justify-content: center;\n    .create-question-container{\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n}\n.field-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    .field{\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        // border: solid red;\n        .input-box{\n            display: flex;\n            font-size: 1.2rem;\n            width: 80%;\n            justify-content: center;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            min-height: 40px;\n            background: $back-white;\n            // padding: 0.2rem 0.5rem;\n            overflow:hidden;\n            .each-title-container{\n                flex-basis: 30%;\n                min-width: 40%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-right: solid $base-color;\n                background: $dark-blue;                \n                .each-title{\n                    color: $base-white;\n                    width: 100px;\n                    font-weight: bold;\n                    // font-size: 1rem;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .text-box{\n                flex-basis: 70%;\n                width: 30%;\n                height: auto;\n                background: transparent;\n                border: none;\n                margin-right: 1rem;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: $back-white;\n                .option{\n                    font-weight: bold;\n                }\n            }\n            .text-box:focus{\n                outline: none;\n            }\n            .level{\n                display: flex;\n            }\n        }\n    }\n    .texarea-field{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        .texarea-box{\n            width: 80%;\n            .each-title-container{\n                display: flex;\n                justify-content: center;\n                .each-title{\n                    width: 40%;\n                    border-top: solid $base-color;\n                    border-right: solid $base-color;\n                    border-left: solid $base-color;\n                    background: $dark-blue;\n                    color: $base-white;\n                    font-weight: bold;\n                    border-radius: 0.5rem 0.5rem 0 0;\n                }\n            }\n             .text-box{\n                width: 100%;\n                background: $back-white;\n                height: auto;\n                min-height: 100px;\n                border: 0.1rem solid $base-color;\n                border-radius: 1vh;\n                padding: 1rem;\n                resize: none;\n                transition: 0.5s;\n            }\n            .text-box:focus{\n                outline: none;\n                border: solid $middle-blue;\n            }\n        }\n    }\n    .answer-wrapper{\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        width: 100%;\n        .answer-title-container{\n            display: flex;\n            align-items: center;\n            .fa-minus{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-minus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n            .answer-title{\n                border: solid $base-color;\n                border-radius: 0.5rem;\n                padding-right: 0.5rem;\n                padding-left: 0.5rem;\n                background: $dark-blue;\n                margin-bottom: 0.2rem;\n                color: $base-white;\n                font-weight: bold;\n            }\n            .fa-plus{\n                margin-left: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-plus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n        }\n        .answer-container{\n            display: flex;\n            align-items: center;\n            // justify-content: center;\n            min-width: 80%;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            background: $back-white;\n            margin-bottom: 0.4rem;\n            .num-con{\n                flex-basis: 10%;\n                .num {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    width: 2rem;\n                    height: 2rem;\n                    background: $dark-blue;\n                    border-radius: 50vh;\n                    border: solid $base-color;\n                    color: $base-white;\n                    font-weight: bold;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .answer-label{\n                height: 2rem;\n                flex-basis: 70%;\n                padding: 0 0.5rem;\n            }\n            .right-side-answer-container{\n                flex-basis: 16%;\n                display: flex;\n                justify-content: flex-end;\n                width: 10%;\n                padding-right: 0.1rem;\n                // margin-right: 1rem;\n                .checkbox-container{\n                    margin-left: 1rem;\n                    .checkbox{\n                    }\n                }\n                .correct-order-container{\n                    margin-left: 0.5rem;\n                }\n            }\n        }\n        .image-bottun{\n            margin-top: 1rem;\n            color: $lite-gray;\n            border: solid gray;\n            padding: 0.1rem 0.7rem;\n            transition: .5s;\n        }\n        .image-bottun:hover {\n            border: solid $base-color;\n        }\n        .image-container{\n            display: flex;\n            justify-content: center;\n            width: 100%;\n            margin-top: 1rem;\n            .image{\n                width: 40%;\n                // height: 40%;\n            }\n        }\n    }\n    .space-height{\n        min-height: 3rem;\n    }\n    // .additional-field-wrapper{\n    //     width: 100%;\n    //     display: flex;\n    //     justify-content: center;\n    //     flex-direction: column;\n    //     align-items: center;\n    //     .additional-field{\n    //         display: flex;\n    //         flex-direction: column;\n    //         align-items: flex-end;\n    //         width: 80%;\n    //         .input-box{\n    //             display: flex;\n    //             font-size: 1.2rem;\n    //             width: 80%;\n    //             justify-content: center;\n    //             border: solid $base-color;\n    //             border-radius: 0.5rem;\n    //             min-height: 20px;\n    //             background: $back-white;\n    //             // padding: 0.2rem 0.5rem;\n    //             overflow:hidden;\n    //             .each-title-container{\n    //                 flex-basis: 30%;\n    //                 display: flex;\n    //                 align-items: center;\n    //                 justify-content: center;\n    //                 border-right: solid $base-color;\n    //                 background: $dark-blue;                \n    //                 .each-title{\n    //                     color: $base-white;\n    //                     width: 100px;\n    //                     font-weight: bold;\n    //                     margin: 0.2rem 0.5rem;\n    //                 }\n    //             }\n    //             .text-box{\n    //                 flex-basis: 70%;\n    //                 background: transparent;\n    //                 border: none;\n    //                 margin-right: 1rem;\n    //                 margin-left: 1rem;\n    //                 font-size: 1rem;\n    //                 background: $back-white;\n    //                 .option{\n    //                     font-weight: bold;\n    //                 }\n    //             }\n    //             .text-box:focus{\n    //                 outline: none;\n    //             }\n    //             .level{\n    //                 display: flex;\n    //             }\n    //         }\n    //     }\n    // }\n}\n</style>"]},"metadata":{},"sourceType":"module"}