{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, Transition as _Transition, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-27b54e63\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"main-wrapper\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"lds-dual-ring\"\n  }, null, -1);\n});\n\nvar _hoisted_3 = [_hoisted_2];\nvar _hoisted_4 = {\n  key: 0,\n  class: \"question-wrapper\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", {\n    class: \"title-white\"\n  }, \"質問板\", -1);\n});\n\nvar _hoisted_6 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"notification-text\"\n  }, \" 返信しました。 \", -1);\n});\n\nvar _hoisted_7 = [_hoisted_6];\n\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"notification-text\"\n  }, \" 回答しました。 \", -1);\n});\n\nvar _hoisted_9 = [_hoisted_8];\n\nvar _hoisted_10 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"notification-text\"\n  }, \" 投稿しました。 \", -1);\n});\n\nvar _hoisted_11 = [_hoisted_10];\nvar _hoisted_12 = {\n  class: \"question-box\"\n};\nvar _hoisted_13 = {\n  class: \"question-box-header\"\n};\nvar _hoisted_14 = {\n  class: \"image\"\n};\nvar _hoisted_15 = [\"src\"];\nvar _hoisted_16 = {\n  class: \"username-date\"\n};\nvar _hoisted_17 = {\n  class: \"question-status-container\"\n};\nvar _hoisted_18 = {\n  class: \"question-status\"\n};\nvar _hoisted_19 = {\n  class: \"tag-container\"\n};\nvar _hoisted_20 = {\n  class: \"title-question\"\n};\nvar _hoisted_21 = {\n  class: \"question-title\"\n};\nvar _hoisted_22 = {\n  class: \"question-description\"\n};\nvar _hoisted_23 = {\n  class: \"question-box-footer\"\n};\nvar _hoisted_24 = {\n  class: \"like-wrapper\"\n};\nvar _hoisted_25 = {\n  key: 1,\n  class: \"fas fa-heart\"\n};\nvar _hoisted_26 = {\n  key: 2,\n  class: \"good\"\n};\nvar _hoisted_27 = {\n  class: \"viewed-wrapper\"\n};\nvar _hoisted_28 = {\n  class: \"viewed\"\n};\nvar _hoisted_29 = {\n  key: 0,\n  class: \"far fa-star\"\n};\nvar _hoisted_30 = {\n  key: 1,\n  class: \"added-favorite\"\n};\n\nvar _hoisted_31 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"far fa-star\"\n  }, null, -1);\n});\n\nvar _hoisted_32 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"fas fa-star\"\n  }, null, -1);\n});\n\nvar _hoisted_33 = [_hoisted_31, _hoisted_32];\nvar _hoisted_34 = {\n  class: \"relative-box\"\n};\n\nvar _hoisted_35 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"関連した質問\", -1);\n});\n\nvar _hoisted_36 = [\"onClick\"];\nvar _hoisted_37 = {\n  class: \"tag-wrapper\"\n};\nvar _hoisted_38 = {\n  class: \"question-description\"\n};\nvar _hoisted_39 = {\n  class: \"good-like-wrapper\"\n};\n\nvar _hoisted_40 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"far fa-heart\"\n  }, null, -1);\n});\n\nvar _hoisted_41 = {\n  key: 0,\n  class: \"good\"\n};\nvar _hoisted_42 = {\n  class: \"date\"\n};\nvar _hoisted_43 = {\n  class: \"see-more\"\n};\n\nvar _hoisted_44 = /*#__PURE__*/_createTextVNode(\"もっと見る>\");\n\nvar _hoisted_45 = {\n  key: 3,\n  class: \"answer-box\"\n};\nvar _hoisted_46 = {\n  class: \"answer-box-title\"\n};\nvar _hoisted_47 = {\n  key: 0\n};\nvar _hoisted_48 = {\n  class: \"answer-box-header\"\n};\nvar _hoisted_49 = [\"src\"];\nvar _hoisted_50 = {\n  class: \"username-date\"\n};\nvar _hoisted_51 = {\n  class: \"answer-description-container\"\n};\nvar _hoisted_52 = {\n  class: \"answer-box-footer\"\n};\nvar _hoisted_53 = [\"onClick\"];\nvar _hoisted_54 = {\n  key: 1,\n  class: \"fas fa-heart\"\n};\nvar _hoisted_55 = {\n  class: \"good\"\n};\nvar _hoisted_56 = {\n  key: 0\n};\nvar _hoisted_57 = [\"onClick\"];\nvar _hoisted_58 = {\n  key: 1,\n  class: \"reply-wrapper\"\n};\n\nvar _hoisted_59 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", null, \"コメント\", -1);\n});\n\nvar _hoisted_60 = {\n  class: \"reply-wrapper-header\"\n};\nvar _hoisted_61 = [\"src\"];\nvar _hoisted_62 = {\n  class: \"username-date\"\n};\nvar _hoisted_63 = {\n  class: \"replay-description\"\n};\nvar _hoisted_64 = {\n  key: 0\n};\nvar _hoisted_65 = [\"onClick\"];\n\nvar _hoisted_66 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"line-flex\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"line\"\n  })], -1);\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n\n  var _component_NotVerified = _resolveComponent(\"NotVerified\");\n\n  var _component_NotLogin = _resolveComponent(\"NotLogin\");\n\n  var _component_Answer = _resolveComponent(\"Answer\");\n\n  var _component_Reply = _resolveComponent(\"Reply\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"board-detail-wrapper\", {\n      'scroll-fixed': $options.fixedScroll,\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading\n    }])\n  }, _hoisted_3, 2), $data.question && $data.relatedQuestion.results && _ctx.$store.state.isLoading == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _ctx.$store.state.board.notifications.reply ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass({\n      'notification-blue': _ctx.$store.state.board.notifications.reply\n    })\n  }, _hoisted_7, 2)) : _createCommentVNode(\"\", true), _ctx.$store.state.board.notifications.answer ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass({\n      'notification-blue': _ctx.$store.state.board.notifications.answer\n    })\n  }, _hoisted_9, 2)) : _createCommentVNode(\"\", true), _ctx.$store.state.board.notifications.post ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: _normalizeClass({\n      'notification-blue': _ctx.$store.state.board.notifications.post\n    })\n  }, _hoisted_11, 2)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"img\", {\n    class: \"img\",\n    src: $data.question.user.thumbnail\n  }, null, 8, _hoisted_15)]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", null, _toDisplayString($data.question.user.name) + \"さん \", 1), _createElementVNode(\"p\", null, _toDisplayString($options.dateConvert($data.question.created_on)), 1)]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"p\", _hoisted_18, _toDisplayString($options.handleQuestionStatus($data.question.solved)), 1)])]), _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.question.tag, function (tag, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"tag\",\n      key: questionindex\n    }, _toDisplayString(tag.tag), 1);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"p\", _hoisted_21, _toDisplayString($data.question.title), 1), _createElementVNode(\"p\", _hoisted_22, _toDisplayString($data.question.description), 1)]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [$data.addedLiked == false ? (_openBlock(), _createElementBlock(\"i\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.addLikedNum && $options.addLikedNum.apply($options, arguments);\n    }),\n    class: \"far fa-heart\"\n  })) : _createCommentVNode(\"\", true), $data.addedLiked ? (_openBlock(), _createElementBlock(\"i\", _hoisted_25)) : _createCommentVNode(\"\", true), $data.question.liked_num[0] ? (_openBlock(), _createElementBlock(\"p\", _hoisted_26, _toDisplayString($data.liked_num), 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"p\", _hoisted_28, \" viewed \" + _toDisplayString($data.question.viewed), 1)]), _createElementVNode(\"div\", {\n    class: \"favorite\",\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.handleAddedFavorite();\n    })\n  }, [$data.addedFavorite == false ? (_openBlock(), _createElementBlock(\"i\", _hoisted_29)) : _createCommentVNode(\"\", true), $data.addedFavorite ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, _hoisted_33)) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", null, [$data.question.user.UID != $options.UID ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn-base-white-db-sq\",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.handleShowAnswerPage && $options.handleShowAnswerPage.apply($options, arguments);\n    })\n  }, \"回答する\")) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_34, [_hoisted_35, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.slicedRelatedQuestion, function (question, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"question-wrapper\",\n      key: questionindex\n    }, [_createElementVNode(\"div\", {\n      class: \"question-list\",\n      onClick: function onClick($event) {\n        return $options.getRelatedSlug(question.slug);\n      }\n    }, [_createElementVNode(\"div\", _hoisted_37, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.tag, function (tag, tagindex) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"tag\",\n        key: tagindex\n      }, _toDisplayString(tag.tag), 1);\n    }), 128))]), _createElementVNode(\"div\", _hoisted_38, _toDisplayString(question.description.substr(0, 10) + '...'), 1), _createElementVNode(\"div\", _hoisted_39, [_hoisted_40, question.liked_num[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, _toDisplayString(question.liked_num[0].liked_num), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_42, \"投稿日：\" + _toDisplayString($options.dateConvert(question.created_on)), 1)])], 8, _hoisted_36)]);\n  }), 128)), _createElementVNode(\"div\", _hoisted_43, [_createVNode(_component_router_link, {\n    to: {\n      name: 'RelatedQuestion'\n    }\n  }, {\n    default: _withCtx(function () {\n      return [_hoisted_44];\n    }),\n    _: 1\n  })])]), $data.question.answer[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_45, [_createElementVNode(\"div\", _hoisted_46, [$data.question.answer[0] ? (_openBlock(), _createElementBlock(\"p\", _hoisted_47, \" 回答\")) : _createCommentVNode(\"\", true), _createTextVNode(\" (\" + _toDisplayString($data.question.answer.length) + \"件) \", 1)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.question.answer, function (answer, answerindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"under-line\",\n      key: answerindex\n    }, [_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"img\", {\n      class: \"img\",\n      src: answer.user.thumbnail\n    }, null, 8, _hoisted_49), _createElementVNode(\"div\", _hoisted_50, [_createElementVNode(\"p\", null, _toDisplayString(answer.user.name) + \"さん \", 1), _createElementVNode(\"p\", null, _toDisplayString($options.dateConvert(answer.created_on)), 1)])]), _createElementVNode(\"p\", _hoisted_51, _toDisplayString(answer.description), 1), _createElementVNode(\"div\", _hoisted_52, [$data.answerDict[answer.id].addedAnswerLiked == false ? (_openBlock(), _createElementBlock(\"i\", {\n      key: 0,\n      onClick: function onClick($event) {\n        return $options.addAnsweerLikedNum(answer.id);\n      },\n      class: \"far fa-heart\"\n    }, null, 8, _hoisted_53)) : _createCommentVNode(\"\", true), $data.answerDict[answer.id].addedAnswerLiked ? (_openBlock(), _createElementBlock(\"i\", _hoisted_54)) : _createCommentVNode(\"\", true), _createElementVNode(\"p\", _hoisted_55, _toDisplayString($data.answerDict[answer.id].liked_num), 1)]), $options.loginUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_56, [$data.question.user.UID == _ctx.$store.state.signup.user.uid && answer.reply.length == 0 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"btn-base-white-db-sq\",\n      onClick: function onClick($event) {\n        return $options.handleReplyPage(answer.id, answer.description);\n      }\n    }, \" 返信する \", 8, _hoisted_57)) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true), answer.reply[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_58, [_hoisted_59, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(answer.reply, function (reply, replyindex) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"reply-flex\",\n        key: replyindex\n      }, [_createElementVNode(\"div\", _hoisted_60, [_createElementVNode(\"img\", {\n        class: \"img\",\n        src: reply.user.thumbnail\n      }, null, 8, _hoisted_61), _createElementVNode(\"div\", _hoisted_62, [_createElementVNode(\"p\", null, _toDisplayString(reply.user.name) + \"さん \", 1), _createElementVNode(\"p\", null, _toDisplayString(reply.created_on), 1)])]), _createElementVNode(\"p\", _hoisted_63, _toDisplayString(reply.description), 1), $options.loginUser ? (_openBlock(), _createElementBlock(\"div\", _hoisted_64, [_ctx.$store.state.signup.user.uid == $data.question.user.UID && answer.reply.slice(-1)[0].id == reply.id && answer.reply.slice(-1)[0].user.UID != $data.question.user.UID || _ctx.$store.state.signup.user.uid == answer.user.UID && answer.reply.slice(-1)[0].id == reply.id && answer.reply.slice(-1)[0].user.UID == $data.question.user.UID ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"btn-base-white-db-sq\",\n        onClick: function onClick($event) {\n          return $options.handleReplyPage(answer.id, reply.description);\n        }\n      }, \" 返信する \", 8, _hoisted_65)) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)]);\n    }), 128))])) : _createCommentVNode(\"\", true), _hoisted_66]);\n  }), 128))])) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true), _createVNode(_Transition, {\n    name: \"notice\"\n  }, {\n    default: _withCtx(function () {\n      return [$data.showEmailVerified ? (_openBlock(), _createBlock(_component_NotVerified, {\n        key: 0,\n        class: \"components\",\n        onHandleShowEmailVerified: $options.handleShowEmailVerified\n      }, null, 8, [\"onHandleShowEmailVerified\"])) : _createCommentVNode(\"\", true)];\n    }),\n    _: 1\n  }), _createVNode(_Transition, {\n    name: \"notice\"\n  }, {\n    default: _withCtx(function () {\n      return [$data.showNotLogin ? (_openBlock(), _createBlock(_component_NotLogin, {\n        key: 0,\n        class: \"components\",\n        onHandleShowNotLogin: $options.handleShowNotLogin\n      }, null, 8, [\"onHandleShowNotLogin\"])) : _createCommentVNode(\"\", true)];\n    }),\n    _: 1\n  }), $data.showAnswerPage ? (_openBlock(), _createBlock(_component_Answer, {\n    key: 1,\n    class: \"components\",\n    onHandleShowAnswerPage: $options.handleShowAnswerPage,\n    onGetDetail: $options.getDetail,\n    questionTitle: $data.questionTitle,\n    questionDescription: $data.questionDescription,\n    questionId: $data.questionId\n  }, null, 8, [\"onHandleShowAnswerPage\", \"onGetDetail\", \"questionTitle\", \"questionDescription\", \"questionId\"])) : _createCommentVNode(\"\", true), $data.showReplyPage ? (_openBlock(), _createBlock(_component_Reply, {\n    key: 2,\n    class: \"components\",\n    onHandleShowReplyPage: $options.handleShowReplyPage,\n    onGetDetail: $options.getDetail,\n    answerId: $data.answerId,\n    reply: $data.reply\n  }, null, 8, [\"onHandleShowReplyPage\", \"onGetDetail\", \"answerId\", \"reply\"])) : _createCommentVNode(\"\", true)])], 2);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_2","_hoisted_6","_hoisted_8","_hoisted_10","_hoisted_31","_hoisted_32","_createElementBlock","$options","_ctx","state","isLoading","$data","results","_hoisted_5","board","notifications","reply","answer","post","src","user","thumbnail","_toDisplayString","name","created_on","solved","_Fragment","_renderList","tag","questionindex","key","title","description","onClick","liked_num","viewed","_hoisted_33","UID","_hoisted_35","question","slug","tagindex","substr","_hoisted_40","_createVNode","_component_router_link","to","_hoisted_47","length","answerindex","id","addedAnswerLiked","_hoisted_56","signup","uid","_hoisted_57","_hoisted_59","replyindex","_hoisted_64","slice","_hoisted_65","_hoisted_66","_Transition","_createBlock","_component_NotVerified","onHandleShowEmailVerified","_component_NotLogin","onHandleShowNotLogin","_component_Answer","onHandleShowAnswerPage","onGetDetail","questionTitle","questionDescription","questionId","_component_Reply","onHandleShowReplyPage","answerId"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue"],"sourcesContent":["<template>\n<!-- this scroll fixed should be change -->\n    <div  class=\"board-detail-wrapper\" :class=\"{'scroll-fixed':fixedScroll, 'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div class=\"question-wrapper\" v-if=\"question&&relatedQuestion.results&&$store.state.isLoading==false\">\n                <p class='title-white'>質問板</p>\n                    <div v-if=\"$store.state.board.notifications.reply\" :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n                        <div class=\"notification-text\">\n                            返信しました。\n                        </div>\n                    </div>\n                    <div v-if=\"$store.state.board.notifications.answer\" :class=\"{'notification-blue':$store.state.board.notifications.answer}\">\n                        <div class=\"notification-text\">\n                            回答しました。\n                        </div>\n                    </div>\n                    <div v-if=\"$store.state.board.notifications.post\" :class=\"{'notification-blue':$store.state.board.notifications.post}\">\n                        <div class=\"notification-text\">\n                            投稿しました。\n                        </div>\n                    </div>\n                <div class='question-box'> \n                    <div class=\"question-box-header\">\n                        <div class=\"image\">\n                            <img class='img' v-bind:src=\"question.user.thumbnail\"/>\n                        </div>\n                        <div class=\"username-date\">\n                            <p> {{ question.user.name}}さん </p>\n                            <p> {{ dateConvert(question.created_on) }} </p>\n                        </div>\n                        <div class=\"question-status-container\">\n                            <p class=\"question-status\"> {{ handleQuestionStatus(question.solved) }} </p>\n                        </div>\n                    </div>\n                    <div\n                     class=\"tag-container\">\n                        <div\n                         class=\"tag\"\n                         v-for=\"(tag,questionindex) in question.tag\"\n                         v-bind:key=\"questionindex\">\n                            {{ tag.tag }}\n                        </div>\n                    </div>\n                    <div class=\"title-question\">\n                        <p class=\"question-title\">  {{ question.title }} </p>        \n                        <p class='question-description'> {{ question.description}} </p>\n                    </div>\n                    <div class=\"question-box-footer\">\n                        <div class=\"like-wrapper\">\n                            <i v-if=\"addedLiked==false\" @click=\"addLikedNum\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"addedLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\" v-if=\"question.liked_num[0]\">{{ liked_num }} </p>\n                        </div>\n                        <div class=\"viewed-wrapper\">\n                            <p class=\"viewed\"> viewed {{ question.viewed}} </p>\n                        </div>\n                        <div class=\"favorite\" @click=\"handleAddedFavorite()\">\n                            <i v-if=\"addedFavorite==false\" class=\"far fa-star\"></i>\n                            <div  v-if=\"addedFavorite\" class=\"added-favorite\">\n                                <i class=\"far fa-star\"></i>\n                                <i class=\"fas fa-star\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <button v-if=\"question.user.UID != UID\" class=\"btn-base-white-db-sq\" @click='handleShowAnswerPage'>回答する</button>\n                    </div>\n                    <!-- <button @click=\"handleNotifications('reply')\" >unko</button> -->\n                </div>\n                <div class=\"relative-box\">\n                    <p>関連した質問</p>\n                    <div\n                        class=\"question-wrapper\"\n                        v-for=\"(question,questionindex) in slicedRelatedQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class='question-list' @click=\"getRelatedSlug(question.slug)\">\n                            <div class=\"tag-wrapper\">\n                                <div \n                                class=\"tag\"\n                                v-for=\"(tag,tagindex) in question.tag\" \n                                v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                            </div>\n                            <!-- <div class=\"question-title\">{{ question.title }}</div> -->\n                            <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                            <div class='good-like-wrapper'>\n                                <i class=\"far fa-heart\"></i>\n                                <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                                <div class=\"date\">投稿日：{{ dateConvert(question.created_on) }}</div>\n                            </div>\n                        </div>        \n                    </div>\n                    <div class=\"see-more\">\n                        <router-link :to=\"{name:'RelatedQuestion'}\">もっと見る></router-link>\n                    </div>\n                </div>\n                <div class=\"answer-box\" v-if='question.answer[0]'>\n                    <div class=\"answer-box-title\">\n                        <p v-if='question.answer[0]'> 回答</p>\n                        ({{ question.answer.length }}件)\n                    </div>\n                    <div\n                     class=\"under-line\"\n                     v-for=\"(answer,answerindex) in question.answer\"\n                     v-bind:key=\"answerindex\">\n                        <div class=\"answer-box-header\">\n                            <img class='img' v-bind:src=\"answer.user.thumbnail\"/>\n                            <div class=\"username-date\">\n                                <p> {{ answer.user.name}}さん </p>\n                                <p> {{ dateConvert(answer.created_on) }} </p>\n                            </div>\n                        </div>\n                        <p class=\"answer-description-container\">{{ answer.description }} </p>\n                        <div class=\"answer-box-footer\">\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked==false\" @click=\"addAnsweerLikedNum(answer.id)\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\"> {{ answerDict[answer.id].liked_num }} </p>\n                        </div>\n                        <div v-if=\"loginUser\">\n                            <button v-if=\"question.user.UID == $store.state.signup.user.uid && answer.reply.length == 0\"\n                            class='btn-base-white-db-sq' \n                            @click='handleReplyPage(answer.id, answer.description)'>\n                            返信する\n                            </button>\n                        </div>\n                        <!-- reply should be appir if post user or replyer -->\n                        <div class='reply-wrapper' v-if='answer.reply[0]'>\n                            <div>コメント</div>\n                            <div class='reply-flex' \n                            v-for=\"(reply,replyindex) in answer.reply\"\n                            v-bind:key=\"replyindex\">\n                                <div class=\"reply-wrapper-header\">\n                                    <img class='img' v-bind:src=\"reply.user.thumbnail\"/>\n                                    <div class=\"username-date\">\n                                        <p> {{ reply.user.name}}さん </p>\n                                        <p> {{ reply.created_on }} </p>\n                                    </div>\n                                </div>\n                                <p class=\"replay-description\">{{ reply.description }}</p>\n                                <div v-if=\"loginUser\">\n                                    <button v-if='$store.state.signup.user.uid==question.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID!=question.user.UID || $store.state.signup.user.uid==answer.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID==question.user.UID'\n                                    class='btn-base-white-db-sq' \n                                    @click='handleReplyPage(answer.id, reply.description)'>\n                                    返信する\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class='line-flex'>\n                            <div class=\"line\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <transition name=\"notice\">\n                <NotVerified\n                    class=\"components\"\n                    v-if=\"showEmailVerified\"\n                    @handleShowEmailVerified=\"handleShowEmailVerified\"\n                />\n            </transition>\n            <transition name=\"notice\">\n                <NotLogin\n                    class=\"components\"\n                    v-if=\"showNotLogin\"\n                    @handleShowNotLogin=\"handleShowNotLogin\"\n                />\n            </transition>\n            <Answer v-if='showAnswerPage'\n            class=\"components\"\n            @handleShowAnswerPage='handleShowAnswerPage'\n            @getDetail=\"getDetail\"\n            :questionTitle='questionTitle'\n            :questionDescription='questionDescription'\n            :questionId='questionId'\n            />\n            <Reply v-if='showReplyPage'\n            class=\"components\"\n            @handleShowReplyPage='handleShowReplyPage'\n            @getDetail=\"getDetail\"\n            :answerId='answerId'\n            :reply=\"reply\"\n            />\n        <!-- {{ questions }} -->\n        <!-- <div class=question \n         v-for=\"(question,questionindex) in questions\"\n         v-bind:key=\"questionindex\">\n            <div class=\"tag\">tag:{{ question.tag }}</div>\n            <div class=\"title\">title:{{ question.title }}</div>\n            <div class=\"good\">good:{{ question.good }}</div>\n            <div class=\"date\">data:{{ remove_T_Z(question.timestamp) }}</div>\n        </div>\n        <CreateQuestion v-if='showCreateQuestion'\n        @handleShowConfirm='handleShowConfirm'/>\n        <Confirm v-if='showConfirm'/> -->\n         </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport NotLogin from '@/components/login/NotLogin.vue'\nimport  Answer from '@/components/board/Answer.vue'\nimport  Reply from '@/components/board/Reply.vue'\nexport default {\n    components: {\n        Answer,\n        Reply,\n        NotVerified,\n        NotLogin\n  },\n    data(){\n        return{\n            currentUserId:'',\n            question:'',\n            showAnswerPage: false,\n            showReplyPage: false,\n            questionTitle:'',\n            questionDescription:'',\n            questionSlug:'',\n            questionId:'',\n            answerId:'',\n            allAnswer:'',\n            answerDict:{},\n            addedAnswerLiked:{},\n            viewed:0,\n            questionStatus:['回答受付中','解決済み'],\n            reply:'',\n            questionUser: '',\n            questionUserBoolean: false,\n            liked_num: '',\n            addedLiked: false,\n            addedFavorite: false,\n            likedUserIdList:'',\n            checkedLikedUserList:[],\n            relatedQuestion:'',\n            slicedRelatedQuestion:'',\n            questionTags:[],\n            showEmailVerified:false,\n            showNotLogin: false,\n        }\n    },\n    mounted() {\n        this.getDetail()\n        console.log(\"mounted_detail\",this.$route.params.slug)\n    },\n    beforeUnmount(){\n        console.log('beforeUNMOUNT')\n        this.$store.dispatch('getDjangoUser')\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        UID(){\n            try{\n                return this.$store.state.signup.djangoUser.UID\n            }catch{\n                return ''\n            }\n        },\n        loginUser(){\n            return this.$store.state.signup.user\n        },\n        emailVerified(){\n            return this.$store.getters.getEmailVerified\n        },\n        fixedScroll(){\n            return this.$store.getters.fixedScroll\n        }\n    },\n    methods: {\n        dateConvert(date){\n            var date = date\n            var time = ''\n            var newDate = ''\n            var dt = new Date(date)\n            if(dt.getHours() > 11){\n                time = \" PM\"\n                dt = dt.setHours(dt.getHours()-12)\n                date = new Date(dt)\n            }else{\n                time = \" AM\"\n            }\n            newDate = date + time + \" UTC\"\n            dt = new Date(newDate)\n            var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n            return stringDT.replace(/\\//g,'-')\n        },\n        async getDetail(slug=\"\") {\n            this.$store.commit('setIsLoading', true)\n            this.scrollTop()\n            console.log('inthegetdetail')\n            if(slug==\"\"){\n                var url = `/api/board/question/${this.$route.params.slug}`\n            }else{\n                var url = `/api/board/question/${slug}`\n            }\n            await axios\n                .get(url)\n                .then(response => {\n                    this.question = response.data\n                    this.questionTitle = this.question.title\n                    this.questionDescription = this.question.description\n                    this.questionSlug = this.question.slug\n                    this.questionId = this.question.id\n                    this.liked_num = this.question.liked_num[0].liked_num\n                    this.likedUserIdList = this.question.liked_num[0].user\n                    this.questionUser = this.question.user.UID\n                    this.allAnswer = this.question.answer\n                    this.viewed = this.question.viewed\n                    this.patchOnReply()\n                    // this.patchOnAnswer()\n                    this.questionPatch()\n                    this.makeAnswerDict()\n                    console.log(\"after_makeAD\")\n                    this.getQuestionTagList(this.question.tag)\n                    console.log(\"after_taglist\")\n                    this.getRelatedQuestion()\n                    console.log(\"after_relation\")\n                    this.countViewedNumUp()\n                    console.log(\"after_numup\")\n                    this.favoriteCheck()\n                    console.log(\"after_favocheck\")\n                    // if(!this.loginUser){\n                    //     this.$store.commit('setIsLoading', false)\n                    // }\n                })\n                .catch(error => {\n                    console.log(error)\n            })\n            // this.$store.commit('setIsLoading', false)\n        },\n        async patchOnReply(){\n            console.log(\"patchOnReply\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(\"answer\",answer)\n                if(answer.on_reply==true&&answer.user.UID==this.$store.getters.user.UID){\n                    var url = `/api/board/answer-detail/${answer.id}`\n                    await axios({\n                        method: 'patch',\n                        url: url,\n                        data: {\n                            on_reply: false,\n                        },\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                }\n            }\n        },\n        async getRelatedQuestion() {\n            // relatedQuestion.results Start from here.\n            // => deleteSameQuestion to delete the same question in RQ as detail Q.\n            // => makeRandomSlicedArray to make random sliced RQ array\n            if(this.user){\n                this.$store.commit('setIsLoading', true)\n                if(this.questionTags.length == 1){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&uid=${this.user.UID}`\n                }\n                if(this.questionTags.length == 2){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&uid=${this.user.UID}`\n                }\n                if(this.questionTags.length == 3){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}&uid=${this.user.UID}`\n                }\n            }\n            else{\n                console.log('elsedayo')\n                this.$store.commit('setIsLoading', true)\n                if(this.questionTags.length == 1){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}`\n                }\n                if(this.questionTags.length == 2){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}`\n                }\n                if(this.questionTags.length == 3){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}`\n                }\n            }\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    this.relatedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            console.log('after-try',this.relatedQuestion)\n            this.$store.commit('setRelatedQuestion', this.relatedQuestion.results)\n            this.deleteSameQuestion()\n            this.makeRandomSlicedArray()\n            this.$store.commit('setIsLoading', false)\n        },\n        async createFavorite(){\n            await axios({\n                method: 'post',\n                url: '/api/board/favorite-question-create/',\n                data: {\n                    user: this.$store.state.signup.user.uid,\n                    question: [this.question.id]\n                },\n            })\n        },\n        handleAddedFavorite(){\n            if(this.user){\n                this.addedFavorite=!this.addedFavorite\n                this.createFavorite()\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        async countViewedNumUp(){\n            if(this.loginUser){\n                for (let i =0; i < this.question.tag.length; i++){\n                    await axios({\n                    method: 'post',\n                    url: '/api/board/user-tag/create/',\n                    data: {\n                        user: this.$store.state.signup.user.uid,\n                        tag: this.question.tag[i].id\n                        },  \n                    })\n                }\n            }\n        },\n        handleShowAnswerPage(){\n            console.log('clicked')\n            if(this.user){\n                if(this.emailVerified){\n                this.showAnswerPage = !this.showAnswerPage\n                this.$store.commit('handleFixedScroll')\n                }else{\n                    this.handleShowEmailVerified()\n                    this.$store.commit('fixedScrollTrue')\n                    this.$store.commit('showModalTrue')\n                }\n            }else{\n                this.handleShowNotLogin()\n                this.$store.commit('fixedScrollTrue')\n                this.$store.commit('showModalTrue')\n            }\n\n            // this.handleScrollFixed()\n        },\n        getReply(reply){\n            this.reply = reply\n        },\n        handleShowReplyPage(){\n            this.showReplyPage = !this.showReplyPage\n            this.$store.commit('handleFixedScroll')\n        },\n        handleReplyPage(id, reply=''){\n            this.$store.commit('handleFixedScroll')\n            this.getAnswerId(id)\n            this.showReplyPage = !this.showReplyPage\n            this.getReply(reply)\n        },\n        getAnswerId(id){\n            this.answerId = id\n        },\n        getReplyUserAndQuestionUser(reply, question){\n            this.questionAnswerUser.push(reply)\n            this.questionAnswerUser.push(question)\n        },\n        handleQuestionStatus(status){\n            if(status==true){\n                return this.questionStatus[1]\n            }\n            else{\n                return this.questionStatus[0]\n            }\n        },\n        getQuestionTagList(questionTags){\n            console.log(\"GQTL\",questionTags)\n            this.questionTags = []\n            for(let tag of questionTags){\n                this.questionTags.push(tag.id)\n            }\n        },\n        // G-method return a value from array invoked\n        // RandArray(array){\n        //     var rand = Math.random()*array.length | 0;\n        //     var rValue = array[rand];\n        //     console.log(\"RAndA\", rValue)\n        //     return rValue;\n        // },\n        makeRandomSlicedArray(){\n            let num = 3\n            console.log(\"MRSA\")\n            if (this.relatedQuestion.results.lendth < 3){\n                num = this.relatedQuestion.results.lendth\n            }\n            console.log(\"MRSA2\")\n            this.getRandomQuestion(this.relatedQuestion.results)\n            this.slicedRelatedQuestion = this.relatedQuestion.results.slice(0,num)\n            console.log(this.slicedRelatedQuestion)\n        },\n        deleteSameQuestion(){\n            if(this.loginUser){\n                for(let q of this.relatedQuestion.results){\n                    if (q.id == this.question.id){\n                        this.relatedQuestion.results.splice(this.relatedQuestion.results.indexOf(q),1)\n                        break\n                    }\n                }\n            }\n        },\n        getRandomQuestion(array){\n            for (let i = array.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[i]\n                array[i] = array[r]\n                array[r] = tmp\n                }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[k].answer[i]\n                array[k].answer[i] = array[k].answer[r]\n                array[k].answer[r] = tmp\n                }}\n                return array\n            },\n        getRelatedSlug(slug){\n            this.getDetail(slug)\n            router.push(slug)\n            },\n        addLikedNum(){\n            if(this.user){\n                this.liked_num += 1\n                this.addedLiked = true\n                for(let i=0; i<this.likedUserIdList.length; i++){\n                    this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n                }\n                this.checkedLikedUserList.push(this.$store.state.signup.user.uid)\n                this.countUpLiked()\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        clearAllLiked(){\n            this.addedLiked = false\n            for(let i in this.answerDict){\n                this.answerDict[i].addedAnswerLiked = false\n            }\n        },\n        checkUserLiked(){\n            // this is for question like\n            if(this.loginUser){\n                this.clearAllLiked()\n                for(let i of this.likedUserIdList){\n                    if(i.UID == this.$store.state.signup.user.uid){\n                    this.addedLiked = true\n                    }\n                }\n                console.log(\"likedhere\",this.addedLiked)\n                // this is for answer like\n                for(let answerId in this.answerDict){\n                    // console.log(Array.isArray(this.answerDict[answerId].likedUsers))\n                    for( let user of this.answerDict[answerId].likedUsers[0]){\n                        if(user == this.$store.state.signup.user.uid){\n                            this.answerDict[answerId].addedAnswerLiked = true\n                        }\n                    }\n                }   \n            }\n        },\n        favoriteCheck(){\n            try{\n                if(this.$store.state.signup.djangoUser.favorite_question[0]){\n                    this.addedFavorite = false\n                    for(let i of this.$store.state.signup.djangoUser.favorite_question[0].question){\n                        console.log('loop',this.addedFavorite,i,this.question.id)\n                        if(this.question.id==i){\n                            this.addedFavorite = true\n                            console.log(this.addedFavorite)\n                            break\n                        }\n                    }\n                }\n            }\n            catch{\n                \n            }\n        },\n        countUpLiked(){\n            // console.log('in countUPLiked',this.question.liked_num[0].id ,this.addedLiked)\n            if(this.addedLiked){\n                axios.patch(`/api/board/question-liked/${this.question.liked_num[0].id}/`,\n                {\n                    user: this.checkedLikedUserList,\n                    liked_num: this.liked_num\n                })\n                console.log('done')\n            }\n        },\n        async questionPatch(){\n            // patch view count_up and on_answer\n            console.log(\"inPatch-question\")\n            if(this.user){\n                console.log(\"patch Question\",this.questionUserBoolean,this.question.on_answer,this.question.on_reply,this.question.user.UID,this.user.UID)\n                if(this.questionUserBoolean == false&&this.question.on_answer==true&&this.question.on_reply==true&&this.question.user.UID==this.user.UID){\n                    console.log('count', this.questionSlug)\n                    await axios.patch(`/api/board/question/${this.questionSlug}`,{\n                        viewed: this.viewed + 1,\n                        on_answer: false,\n                        on_reply: false\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                    console.log('done patch 2')\n                }\n                else if(this.questionUserBoolean == false&&this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n                    await axios.patch(`/api/board/question/${this.questionSlug}`,{\n                        viewed: this.viewed + 1,\n                        on_answer: false\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                    console.log('done patch answer')\n                }\n                else if(!this.questionUserBoolean&&this.question.on_reply&&this.question.user.UID==this.user.UID){\n                    console.log(\"in_reply\")\n                    await axios.patch(`/api/board/question/${this.questionSlug}`,{\n                        viewed: this.viewed + 1,\n                        on_reply: false\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                    console.log('done patch reply')\n                }\n                else if(this.questionUserBoolean == false){\n                    axios.patch(`/api/board/question/${this.questionSlug}`,{\n                        viewed: this.viewed + 1\n                    })\n                    console.log('done patch count')\n                }\n            }\n        },\n        makeAnswerDict(){\n            // liked_answer start from here to make each answer dict\n            // to hold information\n            console.log(\"in make dict\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(answer,'id',answer.id)\n                this.answerDict[answer.id] = {\n                    \"liked_id\":answer.liked_answer[0].id,\n                    \"liked_num\":answer.liked_answer[0].liked_num,\n                    \"addedAnswerLiked\":false,\n                    \"likedUsers\":[answer.liked_answer[0].user]\n                }\n                console.log(\"oneloop done\")\n            }\n            console.log('answer-dict',this.answerDict)\n            this.checkUserLiked()\n        },\n        addAnsweerLikedNum(answerId){\n            // add answer id start from here. answerDict has each answers liked num.\n            // invoke answerId to att liked num, then addedAnswerLiked = true \n            if(this.user){\n                this.answerDict[answerId].liked_num += 1\n                this.answerDict[answerId].addedAnswerLiked = true\n                this.answerDict[answerId].likedUsers[0].push(this.$store.state.signup.user.uid)\n                console.log(\"is addliked\",this.answerDict)\n                this.countUpLikedAnswer(answerId)\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        countUpLikedAnswer(answerId){\n            console.log(\"countUpLikedAnswer\")\n                axios.patch(`/api/board/answer-liked/${this.answerDict[answerId].liked_id}/`,\n                {\n                    user: this.answerDict[answerId].likedUsers[0],\n                    liked_num: this.answerDict[answerId].liked_num\n                })\n                console.log('done')\n        },\n        handleShowEmailVerified(){\n            console.log('V')\n            this.showEmailVerified = !this.showEmailVerified\n            console.log('V',this.showEmailVerified)\n        },\n        handleShowNotLogin(){\n            this.showNotLogin = !this.showNotLogin\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n                // behavior: \"smooth\"\n            });\n        },\n        // falseNotifications(elem){\n        //     if(elem == \"answer\"){\n        //         this.notifications.answer = false\n        //     }\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = false\n        //     }\n        // },\n        // handleScrollFixed(){\n        //     this.scrollFixed = !this.scrollFixed\n        // },\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n@import \"style/_board.scss\";\n.scroll{\n    position:fixed;\n}\n.components{\n    z-index: 3;\n}\n\n.board-detail-wrapper{\n    display: flex;\n    justify-content: center;\n    width: 100vw;\n    min-height: 80vh;\n    margin-bottom: 1rem;\n    // align-items: center;\n}\n.question-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // width: 100%;\n    .question-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        .question-box-header{\n            display: flex;\n            .image{\n                .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n                }\n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n                width:40%;\n            }\n            .question-status-container{\n                display: flex;\n                justify-content: flex-end;\n                width: 50%;\n                position: relative;\n                .question-status{\n                    position: absolute;\n                    right:0;\n                    top: 0.5rem;\n                    color: rgb(255, 43, 209);\n                    margin-right: 1rem;\n                }\n            }\n        }\n        .tag-container{\n            display: flex;\n            width: 100%;\n            padding-left: 1rem;\n            .tag{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 1rem;\n                padding:0.5rem; \n            }\n        }\n        .title-question{\n            padding:1rem;\n            .question-title{\n                text-align: center;\n                margin-bottom: 1rem;\n                border-bottom: solid $dark-blue;\n                display: inline-block;\n                padding-bottom: 1rem;\n            }\n            .question-description{\n                text-align: left;\n                padding: 1rem; \n                background: rgb(236, 236, 236);\n                white-space: pre-wrap;\n            }\n        }\n        .question-box-footer{\n            display: flex;\n            margin-bottom: 0.5rem;\n            width:100%;\n            .like-wrapper{\n                flex-basis: 10%;\n                display: flex;\n                .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 0.5rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n                // flex-basis: 10%;\n                }\n            }\n            .viewed-wrapper{\n                flex-basis: 40%;\n                display: flex;\n                .viewed{\n                margin-left: 1rem;\n                margin-right: 0.5rem;\n                }\n            }\n            .favorite{\n                display: flex;\n                position:relative;\n                justify-content:flex-end;\n                flex-basis: 50%;\n                margin-top: 0.1rem;\n                margin-right: 1rem;\n                box-sizing: border-box;\n                position:relative;\n                .far{\n                    position: absolute;\n                    right: 0.1rem;\n                }\n                .added-favorite{\n                    position: relative;\n                    .far{\n                        position: absolute;\n                        z-index:2;\n                        right: 0.1rem;\n                    }\n                    .fas{\n                        position: absolute;\n                        color: yellow;\n                        right: 0.1rem;\n                        z-index:1;\n                    }\n                }\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n    }\n    .relative-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n        padding: 0.5rem;\n        display: flex;\n        flex-direction: column;\n        P{\n            margin-bottom: 0.5rem;\n        }\n        .question-wrapper{\n            width: 100%;\n            display: flex;\n            .question-list{\n                border-bottom: solid rgb(236, 234, 234);\n                margin-bottom: 0.5rem;\n                width:100%;\n                padding: 0.2rem;\n                // background: rgb(236, 234, 234);\n                display: flex;\n                flex-direction: column;\n                .tag-wrapper{\n                    display: flex;\n                    width: 100%;\n                    .tag{\n                        border: solid rgb(230, 230, 230);\n                        margin-left: 0.3rem;\n                        min-width: 2rem;\n                    }\n                }\n                .good-like-wrapper{\n                    display: flex;\n                    font-size: 0.7rem;\n                    .fa-heart{\n                        // color: rgb(221, 36, 221);\n                        margin-left: 0.5rem;\n                        margin-right: 0.3rem;\n                        margin-top: 0.2rem;\n                    }\n                    .date{\n                        margin-left: 0.5rem;\n                    }\n                }\n            }\n            // .question-list:hover{\n            //     background: rgb(230, 136, 136);\n            // }\n        }\n        .see-more{\n            display: flex;\n            justify-content: flex-end;\n            margin-right: 0.5rem;\n            margin-top: 0.5rem;\n\n        }\n    }\n    .answer-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .answer-box-title{\n            display: flex;\n            justify-content: center;\n            margin-top: 1rem;\n        }\n        .under-line{\n            width: 90%;\n            border-bottom: 0.2rem solid rgb(236, 236, 236);\n            margin-top: 2rem;\n            margin-bottom: 1rem;\n            &:last-child{\n                border-bottom: none;\n            }\n        }\n        .answer-box-header{\n            display: flex;\n            .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n            }\n        }\n        .answer-description-container{\n            margin: 1rem;\n            background: rgb(236, 236, 236);\n            padding: 1rem;\n            text-align: left;\n        }\n        .answer-box-footer{\n            display: flex;\n            .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 1rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n        .reply-wrapper{\n            // display: flex;\n            // flex-direction: column;\n            // justify-content: center;\n            // align-items: center;\n            .reply-flex{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                margin-bottom: 1rem;\n                .reply-wrapper-header{\n                    width: 80%;\n                    height: 100%;\n                    display: flex;              \n                    .img{\n                        border-radius: 50%; \n                        width:  3rem;   \n                        height: 3rem;\n                        margin: 0.5rem; \n                    }\n                    .username-date{\n                        display: flex;\n                        flex-direction: column;\n                        align-items: flex-start;\n                        margin-top: 0.5rem;\n                    }\n                \n                }\n                .replay-description{\n                    width: 63%;\n                    // border-left: solid $dark-blue;\n                    background: rgb(236, 236, 236);\n                    text-align: left;\n                    padding: 0.5rem;\n                }\n            }\n        }\n        .line-flex{\n            display: flex;\n            width: 100%;\n            justify-content: center;\n            align-items: center;\n            margin-top: 0.5rem;\n            // .line-flex:last-of-type{\n            //     border-bottom: none;\n            // }\n            &.line{\n                width: 90%;\n                border-bottom: 0.2rem solid rgb(236, 236, 236);\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n                &:last-child{\n                    border-bottom: none;\n                }\n            }\n        }\n    }\n}\n.icon{\n    animation: icon 0.5s ;\n\n}\n@keyframes icon {\n    0% {\n        transform: scale(1);\n        \n        opacity: 0;\n      }\n    30%{\n        opacity: 1;\n    }\n    80%{\n        opacity: 1;\n    }\n    100% {\n        opacity: 0;\n        transform: scale(1.5);\n      }\n}\n</style>"]},"metadata":{},"sourceType":"module"}