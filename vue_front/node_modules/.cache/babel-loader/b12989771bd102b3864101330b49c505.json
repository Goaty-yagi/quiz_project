{"ast":null,"code":"import store from '..';\nimport axios from 'axios';\nimport { extractIdentifiers } from '@vue/compiler-core';\nexport default {\n  namespace: true,\n  state: {\n    title: '',\n    description: '',\n    selectedTagList: '',\n    relatedQuestion: '',\n    searchedQuestions: '',\n    reccomendedQuestion: '',\n    answeredQuestion: '',\n    // favoriteQuestion:'',\n    notificationApi: '',\n    showNoticeOnAcount: {\n      answer: false,\n      reply: false\n    },\n    notifications: {\n      reply: false,\n      answer: false,\n      post: false\n    }\n  },\n  getters: {\n    user(state, getters, rootState) {\n      return rootState.signup.djangoUser;\n    },\n\n    gettersAnsweredQuestions(state) {\n      return state.answeredQuestion;\n    },\n\n    gettersReccomendedQuestion(state) {\n      return state.reccomendedQuestion;\n    },\n\n    gettersAnswer(state) {\n      return state.showNoticeOnAcount.answer;\n    },\n\n    gettersReply(state) {\n      return state.showNoticeOnAcount.reply;\n    },\n\n    // notificationApi(state){\n    //     return state.notificationApi\n    // },\n    getUserTags(state, getters) {\n      if (getters.user) {\n        let checkDict = {}; // let checkedDict = {}\n\n        let checkedList = [];\n        let checkedlist2 = [];\n        console.log('GUT', getters.user.user_tag);\n\n        for (let i of getters.user.user_tag) {\n          checkDict[i.tag.id] = i.total_num;\n          checkedList.push(i.tag);\n          console.log('loop', Object.keys(checkDict).length, checkDict);\n        }\n\n        if (Object.keys(checkDict).length <= 3) {\n          console.log('list', checkedList);\n          let checkedIdList = [];\n\n          for (let i of checkedList) {\n            checkedIdList.push(i.id);\n          }\n\n          return checkedIdList;\n        }\n\n        if (Object.keys(checkDict).length > 3) {\n          console.log('333');\n\n          for (let m = 0; m < 3; m++) {\n            const aryMax = function (a, b) {\n              return Math.max(a, b);\n            };\n\n            let max = Object.values(checkDict).reduce(aryMax);\n            const result = Object.keys(checkDict).reduce((r, key) => {\n              return checkDict[key] === max ? key : r;\n            }, null); // checkedDict[result] = max\n\n            delete checkDict[result];\n            checkedlist2.push(result);\n          }\n\n          return checkedlist2;\n        }\n      }\n    },\n\n    notificationApi(state) {\n      console.log('NAPI', state.notificationApi.length);\n      var noty = state.notificationApi;\n\n      if (noty.length == 0) {\n        return false;\n      } else if (noty.length == 1) {\n        for (let i of noty.length[0]) {\n          console.log(i);\n\n          if (i.on_answer || i.on_reply) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      } else if (noty.length == 2) {\n        console.log(\"d2desu\", noty[0]);\n\n        for (let o of noty[0]) {\n          console.log(o);\n\n          if (o.on_answer || o.on_reply) {\n            return true;\n          } else {\n            for (let k of noty[1]) {\n              if (k.on_reply) {\n                return true;\n              } else {\n                return false;\n              }\n            }\n          }\n        }\n      }\n    } // handleOnReplyAndOnAnswer(state, getters, rootState){\n    //     console.log(\"handleOnREPLY\")\n    //     for(let question of getters.gettersAnsweredQuestions){\n    //         for(let answer of question.answer){\n    //             if(answer.on_reply==true&&answer.user.UID==getters.user.UID){\n    //                 return  true\n    //             }else{\n    //                 return false\n    //             }\n    //         }\n    //     }\n    //     console.log(\"end\")\n    // },\n\n\n  },\n  mutations: {\n    resetNotifications(state) {\n      console.log(\"in_reset\");\n      state.notifications.answer = false;\n      state.notifications.reply = false;\n      state.notifications.post = false;\n    },\n\n    getTitle(state, payload) {\n      state.title = payload;\n      console.log('Got title', state.title);\n    },\n\n    getDescription(state, payload) {\n      state.description = payload;\n      console.log('Got description', state.description);\n    },\n\n    // getSelectedTagList(state, payload){\n    //     state.selectedTagList = payload\n    // },\n    setReccomendedQuestion(state, payload) {\n      state.reccomendedQuestion = payload;\n      console.log('set-reccomendedQuestion');\n    },\n\n    setRelatedQuestion(state, payload) {\n      state.relatedQuestion = payload;\n      console.log(\"commited relatedQ\", state.relatedQuestion);\n    },\n\n    getTagList(state, payload) {\n      state.selectedTagList = payload;\n      console.log('Got tagID', state.selectedTagList);\n    } // dateConvert(state,payload){\n    //     console.log(\"first\",payload)\n    //     var date = payload\n    //     var time = ''\n    //     var newDate = ''\n    //     var dt = new Date(date)\n    //     console.log(\"S\",dt)\n    //     if(dt.getHours() > 11){\n    //         time = \" PM\"\n    //         dt = dt.setHours(dt.getHours()-12)\n    //         date = new Date(dt)\n    //         console.log('pm',date)\n    //     }else{\n    //         time = \" AM\"\n    //     }\n    //     newDate = date + time + \" UTC\"\n    //     dt = new Date(newDate)\n    //     console.log(\"newdata IN Store\",newDate,'dt',dt)\n    //     var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n    //     console.log('before',stringDT)\n    //     stringDT = stringDT.replace(/\\//g,'-')\n    //     console.log('beforeafter',stringDT)\n    //     return stringDT\n    // },\n\n\n  },\n  actions: {\n    commitHandleOnReplyAndOnAnswer({\n      commit,\n      getters\n    }) {\n      commit('handleOnReplyAndOnAnswer', getters.user);\n    },\n\n    handleNotifications(context, payload) {\n      if (payload == \"reply\") {\n        context.state.notifications.reply = true;\n        setTimeout(context.commit, 4500, \"resetNotifications\");\n      }\n\n      if (payload == \"answer\") {\n        context.state.notifications.answer = true;\n        setTimeout(context.commit, 4500, \"resetNotifications\");\n      }\n\n      if (payload == \"post\") {\n        context.state.notifications.post = true;\n        setTimeout(context.commit, 4500, \"resetNotifications\");\n      }\n    },\n\n    async getSearchQuestion(state, payload) {\n      await axios.get(`/api/board/question/search/?keyword=${payload}`).then(response => {\n        state.searchedQuestions = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    async getRelatedQuestion({\n      state,\n      getters,\n      commit\n    }, payload) {\n      // for reccomended-question, if user and user.user_tag exist, get reccomended-question.\n      // else, get question-viewed-order.\n      console.log('GRQ', getters.getUserTags);\n\n      if (getters.user) {\n        try {\n          if (getters.getUserTags.length == 1) {\n            var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&uid=${getters.user.UID}`;\n          }\n\n          if (getters.getUserTags.length == 2) {\n            var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&uid=${getters.user.UID}`;\n          }\n\n          if (getters.getUserTags.length == 3) {\n            var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&tag=${getters.getUserTags[2]}&uid=${getters.user.UID}`;\n          } else {\n            var url = '/api/board/question-viewed-order';\n          }\n        } catch {\n          var url = '/api/board/question-viewed-order';\n        }\n      } else {\n        var url = '/api/board/question-viewed-order';\n      }\n\n      try {\n        console.log(\"try2\", url);\n        await axios.get(url).then(response => {\n          commit('setReccomendedQuestion', response.data); // state.reccomendedQuestion = response.data\n        });\n      } catch {\n        error => {\n          console.log(error);\n        };\n      } // this.$store.commit('setIsLoading', false)\n\n    },\n\n    async getAnsweredQuestion({\n      state,\n      getters,\n      rootState,\n      rootGetters\n    }, payload) {\n      // this.$store.commit('setIsLoading', true)\n      console.log(\"INGAQ\");\n      var url = `/api/board/question-answered?user=${rootGetters.getUID}`;\n\n      try {\n        await axios.get(url).then(response => {\n          state.answeredQuestion = response.data;\n          console.log('A', state.answeredQuestion);\n        });\n      } catch {\n        error => {\n          console.log(\"error\", error);\n        };\n      } // this.$store.commit('setIsLoading', false)\n\n    },\n\n    async getNotificationApi({\n      state,\n      getters,\n      rootState,\n      rootGetters\n    }, payload) {\n      // this.$store.commit('setIsLoading', true)\n      console.log(\"INGNAPI\");\n      var url = `/api/board/user-question-answer-notification?user=${rootGetters.getUID}`;\n\n      try {\n        await axios.get(url).then(response => {\n          state.notificationApi = response.data;\n          console.log('gotAPI', state.answeredQuestion, state.notificationApi);\n        });\n      } catch {\n        error => {\n          console.log(\"error\", error);\n        };\n      } // this.$store.commit('setIsLoading', false)\n\n    } // async getFavoriteQuestion({ state , getters }, payload){\n    //     const questionId = []\n    //     for(let i of getters.user.question){\n    //         questionId.push(i.id)\n    //     }\n    //     await axios\n    //     .get(`/api/board/question-favorite?question_id=${questionId}`)\n    //     .then(response => {\n    //         state.favoriteQuestion = response.data\n    //         console.log('GetFQ', state.favoriteQuestion)\n    //         })\n    //     .catch(error => {\n    //         console.log(error)\n    //     })\n    // },\n    // async getSearchQuestion({ state, commit }){\n    //     await axios({\n    //         method: 'get',\n    //         url: `/api/board/question/search/`,\n    //         data: {\n    //             keyword: state.searchKeywords\n    //         },\n    //     })\n    //     .then()\n    //     .catch(error => {\n    //         console.log(error)\n    //     })\n    // },          \n\n\n  }\n};","map":{"version":3,"names":["store","axios","extractIdentifiers","namespace","state","title","description","selectedTagList","relatedQuestion","searchedQuestions","reccomendedQuestion","answeredQuestion","notificationApi","showNoticeOnAcount","answer","reply","notifications","post","getters","user","rootState","signup","djangoUser","gettersAnsweredQuestions","gettersReccomendedQuestion","gettersAnswer","gettersReply","getUserTags","checkDict","checkedList","checkedlist2","console","log","user_tag","i","tag","id","total_num","push","Object","keys","length","checkedIdList","m","aryMax","a","b","Math","max","values","reduce","result","r","key","noty","on_answer","on_reply","o","k","mutations","resetNotifications","getTitle","payload","getDescription","setReccomendedQuestion","setRelatedQuestion","getTagList","actions","commitHandleOnReplyAndOnAnswer","commit","handleNotifications","context","setTimeout","getSearchQuestion","get","then","response","data","catch","error","getRelatedQuestion","url","UID","getAnsweredQuestion","rootGetters","getUID","getNotificationApi"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js"],"sourcesContent":["import store from '..'\nimport axios from 'axios'\nimport { extractIdentifiers } from '@vue/compiler-core'\n\nexport default {\n    namespace: true,\n    state: {\n        title:'',\n        description:'',\n        selectedTagList:'',\n        relatedQuestion:'',\n        searchedQuestions:'',\n        reccomendedQuestion:'',\n        answeredQuestion:'',\n        // favoriteQuestion:'',\n        notificationApi:'',\n        showNoticeOnAcount:{\n            answer:false,\n            reply:false,\n        },\n        notifications:{\n            reply: false,\n            answer: false,\n            post: false,\n        },\n    },\n    getters:{\n        user(state, getters, rootState){\n            return rootState.signup.djangoUser\n        },\n        gettersAnsweredQuestions(state){\n            return state.answeredQuestion\n        },\n        gettersReccomendedQuestion(state){\n            return state.reccomendedQuestion\n        },\n        gettersAnswer(state){\n            return state.showNoticeOnAcount.answer\n        },\n        gettersReply(state){\n            return state.showNoticeOnAcount.reply\n        },\n        // notificationApi(state){\n        //     return state.notificationApi\n        // },\n        getUserTags(state, getters){\n            if(getters.user){\n                let checkDict = {}  \n                // let checkedDict = {}\n                let checkedList = []\n                let checkedlist2 = []\n                console.log('GUT',getters.user.user_tag)\n                for(let i of getters.user.user_tag){\n                    checkDict[i.tag.id] = i.total_num\n                    checkedList.push(i.tag)\n                    console.log('loop',Object.keys(checkDict).length,checkDict)\n                }\n                if(Object.keys(checkDict).length <= 3){\n                    console.log('list',checkedList)\n                    let checkedIdList = []\n                    for (let i of checkedList){\n                        checkedIdList.push(i.id)\n                    }\n                    return checkedIdList\n                }\n                if(Object.keys(checkDict).length > 3){\n                    console.log('333')\n                    for(let m=0; m < 3; m++){\n                        const aryMax = function (a, b) {return Math.max(a, b);}\n                        let max = Object.values(checkDict).reduce(aryMax);\n                        const result = Object.keys(checkDict).reduce( (r, key) => {\n                            return checkDict[key] === max ? key : r \n                            }, null);\n                        // checkedDict[result] = max\n                        delete checkDict[result]\n                        checkedlist2.push(result)\n                    }\n                    return checkedlist2\n                }\n            }\n        },\n        notificationApi(state){\n            console.log('NAPI',state.notificationApi.length)\n            var noty = state.notificationApi\n            if(noty.length==0){\n                return false\n            }\n            else if(noty.length==1){\n                for(let i of noty.length[0]){\n                    console.log(i)\n                    if(i.on_answer||i.on_reply){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n            else if(noty.length==2){\n                console.log(\"d2desu\",noty[0])\n                for(let o of noty[0]){\n                    console.log(o)\n                    if(o.on_answer||o.on_reply){\n                        return true\n                    }else{\n                        for(let k of noty[1]){\n                            if(k.on_reply){\n                                return true\n                            }\n                            else{\n                                return false\n                            }\n                        }\n                    }\n                }\n            }\n        },        \n        // handleOnReplyAndOnAnswer(state, getters, rootState){\n        //     console.log(\"handleOnREPLY\")\n        //     for(let question of getters.gettersAnsweredQuestions){\n        //         for(let answer of question.answer){\n        //             if(answer.on_reply==true&&answer.user.UID==getters.user.UID){\n        //                 return  true\n        //             }else{\n        //                 return false\n        //             }\n        //         }\n        //     }\n        //     console.log(\"end\")\n        // },\n    },\n    mutations:{\n        resetNotifications(state){\n            console.log(\"in_reset\")\n            state.notifications.answer = false\n            state.notifications.reply = false\n            state.notifications.post = false\n        },\n        getTitle(state,payload){\n            state.title = payload\n            console.log('Got title',state.title)\n        },\n        getDescription(state, payload){\n            state.description = payload\n            console.log('Got description',state.description)\n        },\n        // getSelectedTagList(state, payload){\n        //     state.selectedTagList = payload\n        // },\n        setReccomendedQuestion(state, payload){\n            state.reccomendedQuestion = payload\n            console.log('set-reccomendedQuestion')\n        },\n        setRelatedQuestion(state, payload){\n            state.relatedQuestion = payload\n            console.log(\"commited relatedQ\",state.relatedQuestion )\n        },\n        getTagList(state, payload){\n                state.selectedTagList = payload\n                console.log('Got tagID',state.selectedTagList)\n        },\n        // dateConvert(state,payload){\n        //     console.log(\"first\",payload)\n        //     var date = payload\n        //     var time = ''\n        //     var newDate = ''\n        //     var dt = new Date(date)\n        //     console.log(\"S\",dt)\n        //     if(dt.getHours() > 11){\n        //         time = \" PM\"\n        //         dt = dt.setHours(dt.getHours()-12)\n        //         date = new Date(dt)\n        //         console.log('pm',date)\n        //     }else{\n        //         time = \" AM\"\n        //     }\n        //     newDate = date + time + \" UTC\"\n        //     dt = new Date(newDate)\n        //     console.log(\"newdata IN Store\",newDate,'dt',dt)\n        //     var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n        //     console.log('before',stringDT)\n        //     stringDT = stringDT.replace(/\\//g,'-')\n        //     console.log('beforeafter',stringDT)\n        //     return stringDT\n        // },\n    },\n    \n    actions:{\n        commitHandleOnReplyAndOnAnswer({commit,getters}){\n            commit('handleOnReplyAndOnAnswer', getters.user)\n        },\n        handleNotifications(context, payload){\n            if(payload == \"reply\"){\n                context.state.notifications.reply = true\n                setTimeout(context.commit, 4500,\"resetNotifications\")      \n            }\n            if(payload == \"answer\"){\n                context.state.notifications.answer = true\n                setTimeout(context.commit, 4500,\"resetNotifications\")\n            }\n            if(payload == \"post\"){\n                context.state.notifications.post = true\n                setTimeout(context.commit, 4500,\"resetNotifications\")\n            }\n        },\n        async getSearchQuestion(state,payload){            \n            await axios\n                .get(`/api/board/question/search/?keyword=${payload}`)\n                .then(response => {\n                    state.searchedQuestions = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async getRelatedQuestion({ state , getters, commit }, payload) {\n            // for reccomended-question, if user and user.user_tag exist, get reccomended-question.\n            // else, get question-viewed-order.\n            console.log('GRQ',getters.getUserTags)\n            if(getters.user){\n                try{\n                    if(getters.getUserTags.length == 1){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 2){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 3){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&tag=${getters.getUserTags[2]}&uid=${getters.user.UID}`\n                    }\n                    else{\n                        var url = '/api/board/question-viewed-order'\n                    }\n                }\n                catch{\n                    var url = '/api/board/question-viewed-order'  \n                }\n            }else{\n                var url = '/api/board/question-viewed-order'\n            }\n            try{\n                console.log(\"try2\",url)\n                await axios.get(url)\n                    .then(response => {\n                        commit('setReccomendedQuestion', response.data)\n                    // state.reccomendedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getAnsweredQuestion({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            console.log(\"INGAQ\")\n            var url = `/api/board/question-answered?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.answeredQuestion = response.data\n                    console.log('A',state.answeredQuestion)\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getNotificationApi({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            console.log(\"INGNAPI\")\n            var url = `/api/board/user-question-answer-notification?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.notificationApi = response.data\n                    console.log('gotAPI',state.answeredQuestion,state.notificationApi)\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async getFavoriteQuestion({ state , getters }, payload){\n        //     const questionId = []\n        //     for(let i of getters.user.question){\n        //         questionId.push(i.id)\n        //     }\n        //     await axios\n        //     .get(`/api/board/question-favorite?question_id=${questionId}`)\n        //     .then(response => {\n        //         state.favoriteQuestion = response.data\n        //         console.log('GetFQ', state.favoriteQuestion)\n        //         })\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },\n        // async getSearchQuestion({ state, commit }){\n        //     await axios({\n        //         method: 'get',\n        //         url: `/api/board/question/search/`,\n        //         data: {\n        //             keyword: state.searchKeywords\n        //         },\n        //     })\n        //     .then()\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },          \n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,IAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,eAAe;EACXC,SAAS,EAAE,IADA;EAEXC,KAAK,EAAE;IACHC,KAAK,EAAC,EADH;IAEHC,WAAW,EAAC,EAFT;IAGHC,eAAe,EAAC,EAHb;IAIHC,eAAe,EAAC,EAJb;IAKHC,iBAAiB,EAAC,EALf;IAMHC,mBAAmB,EAAC,EANjB;IAOHC,gBAAgB,EAAC,EAPd;IAQH;IACAC,eAAe,EAAC,EATb;IAUHC,kBAAkB,EAAC;MACfC,MAAM,EAAC,KADQ;MAEfC,KAAK,EAAC;IAFS,CAVhB;IAcHC,aAAa,EAAC;MACVD,KAAK,EAAE,KADG;MAEVD,MAAM,EAAE,KAFE;MAGVG,IAAI,EAAE;IAHI;EAdX,CAFI;EAsBXC,OAAO,EAAC;IACJC,IAAI,CAACf,KAAD,EAAQc,OAAR,EAAiBE,SAAjB,EAA2B;MAC3B,OAAOA,SAAS,CAACC,MAAV,CAAiBC,UAAxB;IACH,CAHG;;IAIJC,wBAAwB,CAACnB,KAAD,EAAO;MAC3B,OAAOA,KAAK,CAACO,gBAAb;IACH,CANG;;IAOJa,0BAA0B,CAACpB,KAAD,EAAO;MAC7B,OAAOA,KAAK,CAACM,mBAAb;IACH,CATG;;IAUJe,aAAa,CAACrB,KAAD,EAAO;MAChB,OAAOA,KAAK,CAACS,kBAAN,CAAyBC,MAAhC;IACH,CAZG;;IAaJY,YAAY,CAACtB,KAAD,EAAO;MACf,OAAOA,KAAK,CAACS,kBAAN,CAAyBE,KAAhC;IACH,CAfG;;IAgBJ;IACA;IACA;IACAY,WAAW,CAACvB,KAAD,EAAQc,OAAR,EAAgB;MACvB,IAAGA,OAAO,CAACC,IAAX,EAAgB;QACZ,IAAIS,SAAS,GAAG,EAAhB,CADY,CAEZ;;QACA,IAAIC,WAAW,GAAG,EAAlB;QACA,IAAIC,YAAY,GAAG,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBd,OAAO,CAACC,IAAR,CAAac,QAA/B;;QACA,KAAI,IAAIC,CAAR,IAAahB,OAAO,CAACC,IAAR,CAAac,QAA1B,EAAmC;UAC/BL,SAAS,CAACM,CAAC,CAACC,GAAF,CAAMC,EAAP,CAAT,GAAsBF,CAAC,CAACG,SAAxB;UACAR,WAAW,CAACS,IAAZ,CAAiBJ,CAAC,CAACC,GAAnB;UACAJ,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBO,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBa,MAA1C,EAAiDb,SAAjD;QACH;;QACD,IAAGW,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBa,MAAvB,IAAiC,CAApC,EAAsC;UAClCV,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,WAAnB;UACA,IAAIa,aAAa,GAAG,EAApB;;UACA,KAAK,IAAIR,CAAT,IAAcL,WAAd,EAA0B;YACtBa,aAAa,CAACJ,IAAd,CAAmBJ,CAAC,CAACE,EAArB;UACH;;UACD,OAAOM,aAAP;QACH;;QACD,IAAGH,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBa,MAAvB,GAAgC,CAAnC,EAAqC;UACjCV,OAAO,CAACC,GAAR,CAAY,KAAZ;;UACA,KAAI,IAAIW,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,CAAjB,EAAoBA,CAAC,EAArB,EAAwB;YACpB,MAAMC,MAAM,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;cAAC,OAAOC,IAAI,CAACC,GAAL,CAASH,CAAT,EAAYC,CAAZ,CAAP;YAAuB,CAAvD;;YACA,IAAIE,GAAG,GAAGT,MAAM,CAACU,MAAP,CAAcrB,SAAd,EAAyBsB,MAAzB,CAAgCN,MAAhC,CAAV;YACA,MAAMO,MAAM,GAAGZ,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBsB,MAAvB,CAA+B,CAACE,CAAD,EAAIC,GAAJ,KAAY;cACtD,OAAOzB,SAAS,CAACyB,GAAD,CAAT,KAAmBL,GAAnB,GAAyBK,GAAzB,GAA+BD,CAAtC;YACC,CAFU,EAER,IAFQ,CAAf,CAHoB,CAMpB;;YACA,OAAOxB,SAAS,CAACuB,MAAD,CAAhB;YACArB,YAAY,CAACQ,IAAb,CAAkBa,MAAlB;UACH;;UACD,OAAOrB,YAAP;QACH;MACJ;IACJ,CAtDG;;IAuDJlB,eAAe,CAACR,KAAD,EAAO;MAClB2B,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB5B,KAAK,CAACQ,eAAN,CAAsB6B,MAAzC;MACA,IAAIa,IAAI,GAAGlD,KAAK,CAACQ,eAAjB;;MACA,IAAG0C,IAAI,CAACb,MAAL,IAAa,CAAhB,EAAkB;QACd,OAAO,KAAP;MACH,CAFD,MAGK,IAAGa,IAAI,CAACb,MAAL,IAAa,CAAhB,EAAkB;QACnB,KAAI,IAAIP,CAAR,IAAaoB,IAAI,CAACb,MAAL,CAAY,CAAZ,CAAb,EAA4B;UACxBV,OAAO,CAACC,GAAR,CAAYE,CAAZ;;UACA,IAAGA,CAAC,CAACqB,SAAF,IAAarB,CAAC,CAACsB,QAAlB,EAA2B;YACvB,OAAO,IAAP;UACH,CAFD,MAEK;YACD,OAAO,KAAP;UACH;QACJ;MACJ,CATI,MAUA,IAAGF,IAAI,CAACb,MAAL,IAAa,CAAhB,EAAkB;QACnBV,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBsB,IAAI,CAAC,CAAD,CAAzB;;QACA,KAAI,IAAIG,CAAR,IAAaH,IAAI,CAAC,CAAD,CAAjB,EAAqB;UACjBvB,OAAO,CAACC,GAAR,CAAYyB,CAAZ;;UACA,IAAGA,CAAC,CAACF,SAAF,IAAaE,CAAC,CAACD,QAAlB,EAA2B;YACvB,OAAO,IAAP;UACH,CAFD,MAEK;YACD,KAAI,IAAIE,CAAR,IAAaJ,IAAI,CAAC,CAAD,CAAjB,EAAqB;cACjB,IAAGI,CAAC,CAACF,QAAL,EAAc;gBACV,OAAO,IAAP;cACH,CAFD,MAGI;gBACA,OAAO,KAAP;cACH;YACJ;UACJ;QACJ;MACJ;IACJ,CAzFG,CA0FJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAtGI,CAtBG;EA8HXG,SAAS,EAAC;IACNC,kBAAkB,CAACxD,KAAD,EAAO;MACrB2B,OAAO,CAACC,GAAR,CAAY,UAAZ;MACA5B,KAAK,CAACY,aAAN,CAAoBF,MAApB,GAA6B,KAA7B;MACAV,KAAK,CAACY,aAAN,CAAoBD,KAApB,GAA4B,KAA5B;MACAX,KAAK,CAACY,aAAN,CAAoBC,IAApB,GAA2B,KAA3B;IACH,CANK;;IAON4C,QAAQ,CAACzD,KAAD,EAAO0D,OAAP,EAAe;MACnB1D,KAAK,CAACC,KAAN,GAAcyD,OAAd;MACA/B,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB5B,KAAK,CAACC,KAA9B;IACH,CAVK;;IAWN0D,cAAc,CAAC3D,KAAD,EAAQ0D,OAAR,EAAgB;MAC1B1D,KAAK,CAACE,WAAN,GAAoBwD,OAApB;MACA/B,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B5B,KAAK,CAACE,WAApC;IACH,CAdK;;IAeN;IACA;IACA;IACA0D,sBAAsB,CAAC5D,KAAD,EAAQ0D,OAAR,EAAgB;MAClC1D,KAAK,CAACM,mBAAN,GAA4BoD,OAA5B;MACA/B,OAAO,CAACC,GAAR,CAAY,yBAAZ;IACH,CArBK;;IAsBNiC,kBAAkB,CAAC7D,KAAD,EAAQ0D,OAAR,EAAgB;MAC9B1D,KAAK,CAACI,eAAN,GAAwBsD,OAAxB;MACA/B,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC5B,KAAK,CAACI,eAAtC;IACH,CAzBK;;IA0BN0D,UAAU,CAAC9D,KAAD,EAAQ0D,OAAR,EAAgB;MAClB1D,KAAK,CAACG,eAAN,GAAwBuD,OAAxB;MACA/B,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB5B,KAAK,CAACG,eAA9B;IACP,CA7BK,CA8BN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EArDM,CA9HC;EAsLX4D,OAAO,EAAC;IACJC,8BAA8B,CAAC;MAACC,MAAD;MAAQnD;IAAR,CAAD,EAAkB;MAC5CmD,MAAM,CAAC,0BAAD,EAA6BnD,OAAO,CAACC,IAArC,CAAN;IACH,CAHG;;IAIJmD,mBAAmB,CAACC,OAAD,EAAUT,OAAV,EAAkB;MACjC,IAAGA,OAAO,IAAI,OAAd,EAAsB;QAClBS,OAAO,CAACnE,KAAR,CAAcY,aAAd,CAA4BD,KAA5B,GAAoC,IAApC;QACAyD,UAAU,CAACD,OAAO,CAACF,MAAT,EAAiB,IAAjB,EAAsB,oBAAtB,CAAV;MACH;;MACD,IAAGP,OAAO,IAAI,QAAd,EAAuB;QACnBS,OAAO,CAACnE,KAAR,CAAcY,aAAd,CAA4BF,MAA5B,GAAqC,IAArC;QACA0D,UAAU,CAACD,OAAO,CAACF,MAAT,EAAiB,IAAjB,EAAsB,oBAAtB,CAAV;MACH;;MACD,IAAGP,OAAO,IAAI,MAAd,EAAqB;QACjBS,OAAO,CAACnE,KAAR,CAAcY,aAAd,CAA4BC,IAA5B,GAAmC,IAAnC;QACAuD,UAAU,CAACD,OAAO,CAACF,MAAT,EAAiB,IAAjB,EAAsB,oBAAtB,CAAV;MACH;IACJ,CAjBG;;IAkBJ,MAAMI,iBAAN,CAAwBrE,KAAxB,EAA8B0D,OAA9B,EAAsC;MAClC,MAAM7D,KAAK,CACNyE,GADC,CACI,uCAAsCZ,OAAQ,EADlD,EAEDa,IAFC,CAEIC,QAAQ,IAAI;QACdxE,KAAK,CAACK,iBAAN,GAA0BmE,QAAQ,CAACC,IAAnC;MACH,CAJC,EAKDC,KALC,CAKKC,KAAK,IAAI;QACZhD,OAAO,CAACC,GAAR,CAAY+C,KAAZ;MACH,CAPC,CAAN;IAQH,CA3BG;;IA4BJ,MAAMC,kBAAN,CAAyB;MAAE5E,KAAF;MAAUc,OAAV;MAAmBmD;IAAnB,CAAzB,EAAsDP,OAAtD,EAA+D;MAC3D;MACA;MACA/B,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBd,OAAO,CAACS,WAA1B;;MACA,IAAGT,OAAO,CAACC,IAAX,EAAgB;QACZ,IAAG;UACC,IAAGD,OAAO,CAACS,WAAR,CAAoBc,MAApB,IAA8B,CAAjC,EAAmC;YAC/B,IAAIwC,GAAG,GAAI,uCAAsC/D,OAAO,CAACS,WAAR,CAAoB,CAApB,CAAuB,QAAOT,OAAO,CAACC,IAAR,CAAa+D,GAAI,EAAhG;UACH;;UACD,IAAGhE,OAAO,CAACS,WAAR,CAAoBc,MAApB,IAA8B,CAAjC,EAAmC;YAC/B,IAAIwC,GAAG,GAAI,uCAAsC/D,OAAO,CAACS,WAAR,CAAoB,CAApB,CAAuB,QAAOT,OAAO,CAACS,WAAR,CAAoB,CAApB,CAAuB,QAAOT,OAAO,CAACC,IAAR,CAAa+D,GAAI,EAA9H;UACH;;UACD,IAAGhE,OAAO,CAACS,WAAR,CAAoBc,MAApB,IAA8B,CAAjC,EAAmC;YAC/B,IAAIwC,GAAG,GAAI,uCAAsC/D,OAAO,CAACS,WAAR,CAAoB,CAApB,CAAuB,QAAOT,OAAO,CAACS,WAAR,CAAoB,CAApB,CAAuB,QAAOT,OAAO,CAACS,WAAR,CAAoB,CAApB,CAAuB,QAAOT,OAAO,CAACC,IAAR,CAAa+D,GAAI,EAA5J;UACH,CAFD,MAGI;YACA,IAAID,GAAG,GAAG,kCAAV;UACH;QACJ,CAbD,CAcA,MAAK;UACD,IAAIA,GAAG,GAAG,kCAAV;QACH;MACJ,CAlBD,MAkBK;QACD,IAAIA,GAAG,GAAG,kCAAV;MACH;;MACD,IAAG;QACClD,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBiD,GAAnB;QACA,MAAMhF,KAAK,CAACyE,GAAN,CAAUO,GAAV,EACDN,IADC,CACIC,QAAQ,IAAI;UACdP,MAAM,CAAC,wBAAD,EAA2BO,QAAQ,CAACC,IAApC,CAAN,CADc,CAElB;QACC,CAJC,CAAN;MAKC,CAPL,CAQA,MAAK;QAAEE,KAAK,IAAI;UACRhD,OAAO,CAACC,GAAR,CAAY+C,KAAZ;QACP,CAFK;MAEH,CAnCwD,CAoC3D;;IACH,CAjEG;;IAkEJ,MAAMI,mBAAN,CAA0B;MAAE/E,KAAF;MAAUc,OAAV;MAAkBE,SAAlB;MAA4BgE;IAA5B,CAA1B,EAAoEtB,OAApE,EAA6E;MACzE;MACA/B,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA,IAAIiD,GAAG,GAAI,qCAAoCG,WAAW,CAACC,MAAO,EAAlE;;MACA,IAAG;QACC,MAAMpF,KAAK,CAACyE,GAAN,CAAUO,GAAV,EACDN,IADC,CACIC,QAAQ,IAAI;UAClBxE,KAAK,CAACO,gBAAN,GAAyBiE,QAAQ,CAACC,IAAlC;UACA9C,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAgB5B,KAAK,CAACO,gBAAtB;QACC,CAJC,CAAN;MAKC,CANL,CAOA,MAAK;QAAEoE,KAAK,IAAI;UACRhD,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB+C,KAApB;QACP,CAFK;MAEH,CAbsE,CAczE;;IACH,CAjFG;;IAkFJ,MAAMO,kBAAN,CAAyB;MAAElF,KAAF;MAAUc,OAAV;MAAkBE,SAAlB;MAA4BgE;IAA5B,CAAzB,EAAmEtB,OAAnE,EAA4E;MACxE;MACA/B,OAAO,CAACC,GAAR,CAAY,SAAZ;MACA,IAAIiD,GAAG,GAAI,qDAAoDG,WAAW,CAACC,MAAO,EAAlF;;MACA,IAAG;QACC,MAAMpF,KAAK,CAACyE,GAAN,CAAUO,GAAV,EACDN,IADC,CACIC,QAAQ,IAAI;UAClBxE,KAAK,CAACQ,eAAN,GAAwBgE,QAAQ,CAACC,IAAjC;UACA9C,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqB5B,KAAK,CAACO,gBAA3B,EAA4CP,KAAK,CAACQ,eAAlD;QACC,CAJC,CAAN;MAKC,CANL,CAOA,MAAK;QAAEmE,KAAK,IAAI;UACRhD,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB+C,KAApB;QACP,CAFK;MAEH,CAbqE,CAcxE;;IACH,CAjGG,CAkGJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EA7HI;AAtLG,CAAf"},"metadata":{},"sourceType":"module"}