{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a77abbc\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"quiz-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"main-wrapper\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"lds-dual-ring\"\n}, null, -1));\n\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = {\n  class: \"quiz-description title-white\"\n};\nconst _hoisted_6 = {\n  class: \"progress-wrapper\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"progress-bar-outer\"\n};\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"progress\",\n  class: \"progress-bar-inner\"\n}, null, -1));\n\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"quiz-countainer\"\n};\nconst _hoisted_11 = {\n  class: \"question-wrapper\"\n};\nconst _hoisted_12 = {\n  class: \"question-header\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"q\"\n}, \"Q\", -1));\n\nconst _hoisted_14 = {\n  class: \"question-body\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"image-container\"\n};\nconst _hoisted_16 = [\"src\"];\nconst _hoisted_17 = {\n  class: \"answer-wrapper\"\n};\nconst _hoisted_18 = [\"onClick\", \"disabled\"];\nconst _hoisted_19 = {\n  class: \"answer-select-bases\"\n};\nconst _hoisted_20 = {\n  class: \"answer-select\"\n};\nconst _hoisted_21 = {\n  class: \"selecter\"\n};\nconst _hoisted_22 = {\n  class: \"answer-label-bases\"\n};\nconst _hoisted_23 = {\n  class: \"answer-label\"\n};\nconst _hoisted_24 = {\n  class: \"selected-answer-bases\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"selected-answer-order\"\n};\nconst _hoisted_26 = {\n  class: \"result-answer-order\"\n};\nconst _hoisted_27 = {\n  key: 0,\n  class: \"order\"\n};\nconst _hoisted_28 = {\n  key: 1\n};\n\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-check\"\n}, null, -1));\n\nconst _hoisted_30 = [_hoisted_29];\nconst _hoisted_31 = {\n  key: 1,\n  class: \"fas fa-check\"\n};\nconst _hoisted_32 = {\n  key: 2,\n  class: \"far fa-circle\"\n};\nconst _hoisted_33 = {\n  key: 3,\n  class: \"fas fa-times\"\n};\nconst _hoisted_34 = {\n  key: 1,\n  class: \"button-container\"\n};\nconst _hoisted_35 = [\"onClick\"];\nconst _hoisted_36 = [\"onClick\"];\nconst _hoisted_37 = {\n  key: 2,\n  class: \"buttun-in-result\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Result = _resolveComponent(\"Result\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading\n    }])\n  }, _hoisted_4, 2), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString(_ctx.quiz.description), 1), _createElementVNode(\"div\", _hoisted_6, [$data.result == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _hoisted_9)) : _createCommentVNode(\"\", true)]), $data.showResult == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questions.slice($data.pagination.a, $data.pagination.b), (question, questionindex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"question-loop\",\n      key: questionindex\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createTextVNode(\"第\" + _toDisplayString($data.questionLengthCounter) + \"問\", 1)]), _createElementVNode(\"div\", _hoisted_14, _toDisplayString(question.label), 1)]), question.image ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"img\", {\n      class: \"image\",\n      src: question.get_image\n    }, null, 8, _hoisted_16)])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.answer, (answer, answerindex) => {\n      return _openBlock(), _createElementBlock(\"button\", {\n        class: _normalizeClass([\"answer-loop\", {\n          'selected-answer': $data.selectedIndexNum == answerindex || answerindex + 1 in $data.selectedOrderAnswer,\n          'is-correct-answer': $data.resultHandleDict.isCorrect && answer.is_correct || $data.resultHandleDict.answerAllTrueType4 || $data.resultHandleDict.answerIDType4[answer.answer_id],\n          'isnot-correct-answer': $data.resultHandleDict.isNotCorrect && $data.resultHandleDict.answerIDType3 == answer.id || $data.resultHandleDict.answerIDType5[answer.id] == false || $data.resultHandleDict.answerIDType4[answer.answer_id] == false\n        }]),\n        onClick: e => $data.result == false && $options.onClick(answerindex, answer, question),\n        disabled: $data.maxSelectReach && answer.id in $data.selectedAnswer == false,\n        key: answerindex\n      }, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, _toDisplayString(String.fromCharCode(answerindex + 65)), 1)])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, _toDisplayString(answer.label), 1)]), _createElementVNode(\"div\", _hoisted_24, [$data.selectedOrderAnswer[answerindex + 1] && question.question_type == 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, _toDisplayString($data.selectedOrderAnswer[answerindex + 1]), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_26, [$data.resultHandleDict.questionType4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, _toDisplayString(answer.answer_id), 1)) : _createCommentVNode(\"\", true), $options.type3And5CheckResult($data.resultHandleDict.answerIDType5, $data.resultHandleDict.answerIDType3, answer.id) && question.question_type != 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, _hoisted_30)) : _createCommentVNode(\"\", true)]), $data.selectedOrderAnswer[answerindex + 1] && question.question_type == 5 ? (_openBlock(), _createElementBlock(\"i\", _hoisted_31)) : _createCommentVNode(\"\", true), $data.resultHandleDict.isCorrect && answer.is_correct || $data.resultHandleDict.answerAllTrueType4 || $data.resultHandleDict.answerIDType4[answer.answer_id] ? (_openBlock(), _createElementBlock(\"i\", _hoisted_32)) : _createCommentVNode(\"\", true), $data.resultHandleDict.isNotCorrect && $data.resultHandleDict.answerIDType3 == answer.id || $data.resultHandleDict.answerIDType5[answer.id] == false || $data.resultHandleDict.answerIDType4[answer.answer_id] == false ? (_openBlock(), _createElementBlock(\"i\", _hoisted_33)) : _createCommentVNode(\"\", true)])], 10, _hoisted_18);\n    }), 128))]), $data.showNextOrFinishButton && $data.result == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_ctx.questions.length == $data.questionLengthCounter ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      onClick: $event => $options.Finish(question.question_type),\n      class: \"btn-tr-white-base-sq\"\n    }, \"FINSH\", 8, _hoisted_35)) : _createCommentVNode(\"\", true), _ctx.questions.length != $data.questionLengthCounter ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      onClick: $event => $options.nextQuestion(question.question_type),\n      class: \"btn-tr-white-base-sq\"\n    }, \"NEXT ＞\", 8, _hoisted_36)) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true), $data.result ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [$data.questionLengthCounter != 1 ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      onClick: _cache[0] || (_cache[0] = $event => $options.resultBack()),\n      class: \"btn-tr-white-base-sq\"\n    }, \"＜BACK\")) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", {\n      onClick: _cache[1] || (_cache[1] = $event => $options.HandleShowResult()),\n      class: \"btn-base-black-db-ov\"\n    }, \"結果画面\"), _ctx.questions.length != $data.questionLengthCounter ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      onClick: _cache[2] || (_cache[2] = $event => $options.resultNext()),\n      class: \"btn-tr-white-base-sq\"\n    }, \"NEXT＞\")) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)]);\n  }), 128))])) : _createCommentVNode(\"\", true), $data.showResult ? (_openBlock(), _createBlock(_component_Result, {\n    key: 1,\n    SelectedAnswerInfo: $data.SelectedAnswerInfo,\n    question_length: _ctx.questions.length,\n    onHandlePagination: $options.handlePagination,\n    onHandleShowResult: $options.HandleShowResult,\n    onResultAnswerHandler: $options.resultAnswerHandler,\n    onHandleResult: $options.handleResult\n  }, null, 8, [\"SelectedAnswerInfo\", \"question_length\", \"onHandlePagination\", \"onHandleShowResult\", \"onResultAnswerHandler\", \"onHandleResult\"])) : _createCommentVNode(\"\", true)])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_3","id","_hoisted_8","_hoisted_29","_createElementBlock","_ctx","state","isLoading","_toDisplayString","description","$data","_hoisted_9","_Fragment","_renderList","slice","a","b","question","questionindex","key","_hoisted_13","label","image","src","get_image","answer","answerindex","isCorrect","is_correct","answerAllTrueType4","answerIDType4","answer_id","isNotCorrect","answerIDType3","answerIDType5","onClick","e","$options","disabled","String","fromCharCode","question_type","questionType4","_hoisted_28","_hoisted_30","length","_hoisted_35","_hoisted_36","_createBlock","_component_Result","SelectedAnswerInfo","question_length","onHandlePagination","onHandleShowResult","onResultAnswerHandler","onHandleResult"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/QuizPractice.vue"],"sourcesContent":["<template>\n    <div class=\"quiz-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <!-- <Start v-if=\"startQuiz==false\"/> -->\n            <div >\n                <p class=\"quiz-description title-white\">{{ quiz.description }}</p>\n                <div class=\"progress-wrapper\">\n                    <div v-if=\"result==false\" class=\"progress-bar-outer\">\n                        <div id=\"progress\" class=\"progress-bar-inner\"></div>\n                    </div>\n                </div>\n\n                <div v-if=\"showResult==false\" class='quiz-countainer'>\n                    <div\n                    class=\"question-loop\"\n                    v-for=\"(question,questionindex) in questions.slice(pagination.a,pagination.b)\"\n                    v-bind:key=\"questionindex\">\n                        <div class='question-wrapper'>\n                            <div class=\"question-header\"><i class='q'>Q</i>第{{ questionLengthCounter }}問</div>\n                            <div class='question-body'>{{ question.label }}</div>\n                        </div>\n                        \n                        <!-- <div :class='showPic(question.image)'> -->\n                        <div class=\"image-container\" v-if=\"question.image\">\n                            <img class=\"image\" v-bind:src=\"question.get_image\"/>\n                        </div>\n\n                        <!-- answer part -->\n                        <!-- questiontype 3 is '選択'\n                        ４ is '並び替え'\n                        5 is '多答' -->\n                        <div class='answer-wrapper'>\n                            <button \n                            class=\"answer-loop\"\n                            :class=\"{'selected-answer':selectedIndexNum==answerindex||\n                            answerindex+1 in selectedOrderAnswer,\n                            'is-correct-answer':resultHandleDict.isCorrect&&answer.is_correct||\n                            resultHandleDict.answerAllTrueType4||\n                            resultHandleDict.answerIDType4[answer.answer_id],\n                            'isnot-correct-answer':resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                            resultHandleDict.answerIDType5[answer.id]==false||\n                            resultHandleDict.answerIDType4[answer.answer_id]==false}\"\n                            @click=\"e => result==false && onClick(answerindex,answer,question)\"\n                            :disabled=\"maxSelectReach&&answer.id in selectedAnswer==false\"\n                            v-for=\"(answer,answerindex) in question.answer\"\n                            v-bind:key=\"answerindex\">\n                                <div class='answer-select-bases'>\n                                    <div class=\"answer-select\">\n                                        <div class=\"selecter\">{{ String.fromCharCode(answerindex+65) }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"answer-label-bases\">\n                                    <div class=\"answer-label\">\n                                        {{ answer.label }}\n                                    </div>\n                                </div>\n                                <div class=\"selected-answer-bases\">\n                                    <div v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==4\" class=\"selected-answer-order\">\n                                        {{ selectedOrderAnswer[answerindex+1] }}\n                                    </div>\n                                    <div class=\"result-answer-order\">\n                                        <div class=\"order\" v-if=\"resultHandleDict.questionType4\">\n                                            {{ answer.answer_id}}\n                                        </div>\n                                        <div v-if=\"type3And5CheckResult(resultHandleDict.answerIDType5,resultHandleDict.answerIDType3,answer.id)&&question.question_type!=4\">\n                                            <i class=\"fas fa-check\"></i>\n                                        </div>\n                                    </div>\n                                    <i v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==5\" class=\"fas fa-check\"></i>\n                                    <!-- for result -->\n                                    <!-- <i v-if=\"answer.id in resultHandleDict.answerIDType5&&question.question_type==5\" class=\"fas fa-check\"></i> -->\n                                    <i v-if=\"resultHandleDict.isCorrect&&answer.is_correct||\n                                    resultHandleDict.answerAllTrueType4||\n                                    resultHandleDict.answerIDType4[answer.answer_id]\" class=\"far fa-circle\"></i>\n                                    <i v-if=\"resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                                    resultHandleDict.answerIDType5[answer.id]==false||\n                                    resultHandleDict.answerIDType4[answer.answer_id]==false\" class=\"fas fa-times\"></i>\n                                </div>\n                            </button>\n                        </div>\n                        <div v-if=\"showNextOrFinishButton&&\n                        result==false\" class=\"button-container\">\n                            <div v-if=\"questions.length==questionLengthCounter\"\n                            @click=\"Finish(question.question_type)\" class=\"btn-tr-white-base-sq\">FINSH</div>\n                            <div v-if=\"questions.length!=questionLengthCounter\"\n                            @click=\"nextQuestion(question.question_type)\" class=\"btn-tr-white-base-sq\">NEXT ＞</div>\n                        </div>\n\n                        <!-- here for buttun in result -->\n                        <div v-if=\"result\" class=\"buttun-in-result\">\n                            <div v-if=\"questionLengthCounter!=1\" \n                            @click=\"resultBack()\" class=\"btn-tr-white-base-sq\">＜BACK</div>\n                            <div \n                            @click=\"HandleShowResult()\"\n                            class=\"btn-base-black-db-ov\">結果画面</div>\n                            <div v-if=\"questions.length!=questionLengthCounter\"\n                            @click=\"resultNext()\" class=\"btn-tr-white-base-sq\">NEXT＞</div>\n                        </div>\n                    </div>\n                </div>\n                <Result\n                v-if=\"showResult\"\n                :SelectedAnswerInfo='SelectedAnswerInfo'\n                :question_length='questions.length'\n                @handlePagination='handlePagination'\n                @HandleShowResult='HandleShowResult'\n                @resultAnswerHandler='resultAnswerHandler'\n                @handleResult='handleResult'\n                />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport Result from '@/components/quiz_components/Result.vue'\nimport Start from '@/components/quiz_components/Start.vue'\n\nexport default {\n    components: {\n    Result,\n    Start\n  },  \n    data(){\n        return{\n            questionLengthCounter:1,\n            SelectedAnswerInfo:{},\n            selectedAnswer: {},\n            answerIDAndOrder:{},\n            showResult: false,\n            showNextOrFinishButton:false,\n            result: false,\n            startQuiz: false,\n            pagination:{\n                a: 0,\n                b: 1,\n            },\n            resultHandleDict:{\n                isCorrect: false,\n                IsNotCorrect: false,\n                answerIDType3: '',\n                questionType4: false,\n                answerAllTrueType4: false,\n                answerIDType4: '',\n                answerIDType5: '',\n            },\n            \n            maxSelectReach: false,\n            selectedIndexNum: null,\n            showSelectNum: true,\n            selectedOrderAnswer:{},\n            selectAnswerCounter:0,\n            NumOfIscorrect:0\n        }\n    },\n    created(){\n        // this.getquiz()\n        this.getquestions()\n    },\n    mounted(){\n        this.SelectedAnswerInfo = {}\n        this.progressBar()\n    },\n    watch:{\n        questions:function(v) {\n            let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n            let a = document.getElementById('progress')\n            a.setAttribute('style',`width:${percentage}%`)},\n    },\n    computed: mapGetters(['questions','quiz']),\n    methods:{\n        ...mapActions(['getquestions']),\n        nextQuestion(questionType){\n            this.pagination.a += 1\n            this.pagination.b += 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.questionLengthCounter += 1\n            this. progressBar()\n            this.scrollTop()\n        },\n        Finish(questionType){\n            this.showResult = true\n            this.result = true\n            this.selectedIndexNum= null\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        onClick(answerindex, answer, question){\n            // this is for 2 things,\n            // first is for controling CSS return selectedIndexNum\n            // which used for questionType 3, and selectedOrderAnswer\n            // which used for questionType 4 and 5.\n            // second is for selected-answer and is_correct.\n            // return selectedAnswer for questionType 3.\n            // for questionType 4, use getAnswerIDAndOrder function.\n            // for questionType 5, use getIDAndIsCorrect function.\n            if(question.question_type == 3){\n                if(this.selectedIndexNum==answerindex){\n                    this.selectedIndexNum = null\n                    this.selectedAnswer = {}\n                    this.showNextOrFinishButton = false\n                }else{\n                    this.selectedIndexNum = answerindex\n                    this.selectedAnswer['answerID'] = answer.id\n                    this.selectedAnswer['isCorrect'] = answer.is_correct\n                    this.handleShowNextOrFinishButton()\n                }\n            }else if(question.question_type == 4){\n                if(this.selectedOrderAnswer[answerindex+1]&&\n                this.questions.length>=this.selectAnswerCounter){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    this.selectAnswerCounter -= 1\n                    this.showNextOrFinishButton = false\n                    \n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    if(Object.keys(this.selectedOrderAnswer).length == this.questions.length){\n                    this.handleShowNextOrFinishButton()\n                    }\n                }\n            }else if(question.question_type == 5){\n                this.getNumOfIscorrect(question.answer)\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    this.selectAnswerCounter -= 1\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length < question.max_select){\n                            this.showNextOrFinishButton = false\n                            this.maxSelectReach = false\n                        }\n                    }else if(Object.keys(this.selectedOrderAnswer).length == 0){\n                        this.showNextOrFinishButton = false\n                    }\n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length == question.max_select){\n                            this.handleShowNextOrFinishButton()\n                            this.maxSelectReach = true\n                        }\n                    }else{\n                        this.handleShowNextOrFinishButton()\n                    }\n                }\n            }\n        },\n        changeOrder(dict, index){\n            // if deleted, the num or nums before the deleted items order num\n            // change\n            let orderNum = dict[index]\n            delete dict[index]\n            if(dict){\n                let changeDict = {}\n                Object.keys(dict).forEach(key =>{\n                    if(dict[key] > orderNum){\n                        dict[key] -= 1\n                    }\n                })\n            }\n        return dict\n        },\n        selectAnswerHandler(questionType){\n            // this is get informations about selected-answer for result component\n            // return SelectedAnswerInfo\n            if(questionType == 3){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect\n                this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID\n            }\n            else if(questionType == 4){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n                if(JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                }else{\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                }\n                this.makeOrderBoolean()\n                this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder\n            }else if(questionType == 5){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let isCorrectCounter = 0\n                var type5IsCorrect = true\n                Object.values(this.selectedAnswer).forEach(value =>{\n                    if(value == false){\n                        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                        type5IsCorrect = false\n                    }else{\n                        isCorrectCounter += 1\n                    }\n                })\n                if(this.NumOfIscorrect == isCorrectCounter&&\n                type5IsCorrect){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                }else if(type5IsCorrect==false&&\n                isCorrectCounter > 0){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                }\n                this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer\n            }\n        },\n        getAnswerIDAndOrder(answerID,orderNum){\n            // this is for collecting answer from questionType 4\n            if(this.questionLengthCounter in this.answerIDAndOrder){\n                if(orderNum in this.answerIDAndOrder[this.questionLengthCounter]){\n                    this.answerIDAndOrder[this.questionLengthCounter] =\n                    this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter],orderNum)\n                }else{\n                    this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID   \n                }\n            }else{\n                this.answerIDAndOrder[this.questionLengthCounter] = {}\n                this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID\n            }   \n        },\n        makeOrderBoolean(){\n            // this is for AnswerIDAndOrder{1:1} to be {1:true}\n            let newDict = {}\n            let IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n            for(let i = 0; i < IntegerKeys.length; i++){\n                if(IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]){\n                    newDict[i+1] = true\n                }else{\n                    newDict[i+1] = false\n                }\n            }\n            this.answerIDAndOrder = newDict\n        },\n        getIDAndIsCorrect(id, isCorrect){\n            // this is for questionType 5 \n            if(id in this.selectedAnswer){\n                delete this.selectedAnswer[id]\n            }else{\n                this.selectedAnswer[id] = isCorrect\n            }\n        },\n        getNumOfIscorrect(answers){\n            // this is for questionType 5\n            if(this.NumOfIscorrect==false){\n                 Object.values(answers).forEach(value =>{\n                    if(value.is_correct){\n                        this.NumOfIscorrect += 1\n                    }\n                })\n            }\n        },\n        handleShowNextOrFinishButton(){\n            this.showNextOrFinishButton = true\n        },\n        resultAnswerHandler(){\n            if(this.result){\n                this.resultHandleDict.isCorrect = false\n                this.resultHandleDict.isNotCorrect = false\n                this.resultHandleDict.answerAllTrueType4 = false\n                this.resultHandleDict.questionType4 = false\n                this.resultHandleDict.answerIDType3 = ''\n                this.resultHandleDict.answerIDType4 = ''\n                this.resultHandleDict.answerIDType5 = ''\n                Object.keys(this.SelectedAnswerInfo).forEach(key =>{\n                    if(key==this.questionLengthCounter){\n                        if(this.SelectedAnswerInfo[key].isCorrect){\n                            if(this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.answerAllTrueType4 = true\n                            }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                            }\n                            this.resultHandleDict.isCorrect = true\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==3){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType3 = this.SelectedAnswerInfo[key].answerID\n                        }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.questionType4 = true\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType4 = this.SelectedAnswerInfo[key].orderAnswer\n                        }\n                    }\n                })      \n            }\n        },\n        type3And5CheckResult(selectedAnswer5,selectedAnswer3, answerID){\n            if(this.result){\n                if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==5){\n                    if(answerID in selectedAnswer5){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n                else if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==3){\n                    if(answerID == selectedAnswer3){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n        },\n        handlePagination(a,b){\n            // this is for result component\n            this.pagination.a = a\n            this.pagination.b = b\n            this.questionLengthCounter = b\n        },\n        HandleShowResult(){\n            this.showResult = !this.showResult          \n        },\n        handleResult(){\n            this.result = ! this.result\n        },\n        resultNext(){\n            this.pagination.a += 1 \n            this.pagination.b += 1\n            this.questionLengthCounter += 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        resultBack(){\n            this.pagination.a -= 1 \n            this.pagination.b -= 1\n            this.questionLengthCounter -= 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        scrollTop(){\n            window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n            });\n        },\n        progressBar(){\n            console.log(this.questionLengthCounter,(this.questions.length))\n            let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n            let a = document.getElementById('progress')\n            a.setAttribute('style',`width:${percentage}%`)\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.progress-wrapper{\n    display: flex;\n    justify-content: center;\n    .progress-bar-outer{\n        position: relative;\n        border: solid black;\n        border-radius: 50vh;\n        width:80%;\n        height: 2rem;\n        background: rgb(238, 238, 238);\n        margin-bottom: 0.5rem;\n        overflow: hidden;\n        .progress-bar-inner{\n            position:absolute;\n            top:0;\n            left:0;\n            box-sizing: inherit;\n            height: 1.8rem;\n            transform:skewX(-10deg);\n            transition: 1s;\n            background: linear-gradient(to bottom right,#F6F3E4 1%,#ffc890);       \n        }\n    }\n}\n.quiz-wrapper{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    .quiz-countainer{\n        width: 100%;\n        display: flex;\n        // align-items: center;\n        justify-content: center;\n        .question-loop{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .question-wrapper{\n            width: 95%;\n            border: solid  rgba(243, 91, 36, 0.808);\n            border-radius: 1rem;\n            overflow:hidden;\n                .question-header{\n                background: linear-gradient($base-lite,$base-color);\n                color:white;\n                padding:0.5rem;\n                font-weight:bold;\n                position:relative;\n                }\n                .question-body{\n                    background-color: rgb(253, 245, 239);\n                    padding:1rem;\n                    font-weight:bold;\n                }\n                .q{\n                position:absolute;\n                left:5%;\n                bottom:2%;\n                font-size:1.5rem;  \n                }\n            }\n            .image-container{\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                .image{\n                    width: 40%;\n                }\n            }\n            .answer-wrapper{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                margin-top: 1rem;\n                .is-correct-answer{\n                    background: rgb(148, 255, 235);\n                }\n                .answer-loop{\n                    width: 95%;\n                    height: 3rem;\n                    border: solid black;\n                    border-radius: 0.5rem;\n                    background: white;\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 0.5rem;\n                    transition:0.3s;\n                    .answer-select-bases{\n                        flex-basis: 15%;\n                        .answer-select{\n                            border: solid black;\n                            border-radius: 50vh;\n                            width: 2.5rem;\n                            height: 2.5rem;\n                            margin-left: 0.5rem;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            transition:0.3s;\n                            .selecter{\n                                font-weight: bold;\n                                font-size: 1.5rem;\n                            }\n                        }\n                    }\n                    .answer-label-bases{\n                        flex-basis: 70%;\n                        .answer-label{\n\n                        }\n                    }\n                    .selected-answer-bases{\n                        flex-basis: 15%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        .selected-answer-order{\n                            font-size: 1.5rem;\n                            font-weight: bold;\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .result-answer-order{\n                            flex-basis: 50%;\n                            .order{\n                                font-size: 1.5rem;\n                                font-weight: bold;\n                                color: gray;\n                                margin-right: 0.5rem;\n                            }\n                        }\n                        .fa-check{\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .fa-circle{\n                            color: rgba(0, 84, 75, 0.839);\n                            font-size: 1.5rem;\n                            flex-basis: 50%;\n                            margin-right: 0.1rem;\n                        }\n                        .fa-times{\n                            color: rgba(244, 10, 10, 0.839);\n                            font-size: 1.5rem;\n                            margin-right: 0.1rem;\n                            flex-basis: 50%;\n                        }\n                    }\n                }\n                .is-correct-answer{\n                    background: rgb(177, 243, 231);\n                }\n                .isnot-correct-answer{\n                    background: rgb(255, 147, 147)\n                }\n                .selected-answer{\n                    background: $base-lite-3;\n                    .answer-select{\n                        background: $base-color;\n                        color: white;\n                    }\n                }\n            }\n            .button-container{\n                display: flex;\n                margin-top: 1rem;\n                div{\n                    padding-right: 0.3rem;\n                    padding-left: 0.3rem;\n                }\n            }\n            .buttun-in-result{\n                display: flex;\n                margin-top: 1rem;\n                .btn-base-black-db-ov{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                    margin-right: 0.5rem;\n                    margin-left: 0.5rem;\n                    font-weight: bold;                    \n                }\n                .btn-tr-white-base-sq{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                }\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}