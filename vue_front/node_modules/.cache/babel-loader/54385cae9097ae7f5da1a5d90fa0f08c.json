{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","mtime":1651321769093},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvVXNlcnMvb3NzYW4vZ2l0LWNsb25lL3F1aXpfcHJvamVjdC92dWVfZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgc3RvcmUgZnJvbSAnLi4nOwppbXBvcnQgeyByb3V0ZXIgfSBmcm9tICJAL21haW4uanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwoKdmFyIGdldERlZmF1bHRTdGF0ZSA9IGZ1bmN0aW9uIGdldERlZmF1bHRTdGF0ZSgpIHsKICByZXR1cm4gewogICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgIHF1aXpJRDogMSwKICAgIGNvdW50VXBEaWN0OiB7CiAgICAgIHF1ZXN0aW9uSUQ6ICcnLAogICAgICBhbnN3ZXJJRDogJycsCiAgICAgIHF1ZXN0aW9uVHlwZTogJycKICAgIH0sCiAgICB1c2VyU3RhdHVzRGljdDogewogICAgICBzdGF0dXM6ICcnLAogICAgICBncmFkZTogJycsCiAgICAgIHF1aXpUYWtlcjogJycsCiAgICAgIGlzQ29ycmVjdDogMCwKICAgICAgaXNGYWxzZTogMAogICAgfSwKICAgIGdyYWRlRm9yQ29udmVydDogJycsCiAgICBudW1PZlF1aXo6IDMsCiAgICBxdWVzdGlvbkZpZWxkOiBbMSwgMl0sCiAgICBsZXZlbDogMSwKICAgIHF1ZXN0aW9uczogW10sCiAgICBxdWl6OiBbXSwKICAgIHF1aXpOYW1lSWQ6ICcnLAogICAgZmllbGROYW1lSWQ6ICcnLAogICAgcmFuZG9tVVJMOiAnJywKICAgIHRlc3Q6IG51bGwsCiAgICBub3RpY2U6IGZhbHNlLAogICAgc3RlcDogMQogIH07Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlOiB0cnVlLAogIHN0YXRlOiBnZXREZWZhdWx0U3RhdGUoKSwKICBnZXR0ZXJzOiB7CiAgICBxdWVzdGlvbnM6IGZ1bmN0aW9uIHF1ZXN0aW9ucyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucXVlc3Rpb25zOwogICAgfSwKICAgIHF1aXo6IGZ1bmN0aW9uIHF1aXooc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnF1aXo7CiAgICB9LAogICAgcXVpek5hbWVJZDogZnVuY3Rpb24gcXVpek5hbWVJZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucXVpek5hbWVJZDsKICAgIH0sCiAgICBmaWVsZE5hbWVJZDogZnVuY3Rpb24gZmllbGROYW1lSWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmZpZWxkTmFtZUlkOwogICAgfSwKICAgIGdyYWRlRm9yQ29udmVydDogZnVuY3Rpb24gZ3JhZGVGb3JDb252ZXJ0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5ncmFkZUZvckNvbnZlcnQ7CiAgICB9LAogICAgcXVpelRha2VyOiBmdW5jdGlvbiBxdWl6VGFrZXIoc3RhdGUsIGdldHRlcnMsIHJvb3RTdGF0ZSkgewogICAgICB0cnkgewogICAgICAgIHJldHVybiByb290U3RhdGUuc2lnbnVwLmRqYW5nb1VzZXIucXVpel90YWtlclswXS5pZDsKICAgICAgfSBjYXRjaCAoX3VudXNlZCkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICB9LAogICAgcXVpeklEOiBmdW5jdGlvbiBxdWl6SUQoc3RhdGUsIGdldHRlcnMsIHJvb3RTdGF0ZSkgewogICAgICB0cnkgewogICAgICAgIHJldHVybiByb290U3RhdGUuc2lnbnVwLmRqYW5nb1VzZXIucXVpel90YWtlclswXS5ncmFkZTsKICAgICAgfSBjYXRjaCAoX3VudXNlZDIpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBnZXRSYW5kb21RdWVzdGlvbjogZnVuY3Rpb24gZ2V0UmFuZG9tUXVlc3Rpb24oc3RhdGUsIGFycmF5KSB7CiAgICAgIGNvbnNvbGUubG9nKCdpbiByYW5kb21RJywgYXJyYXkpOyAvLyBmb3IgKGxldCBpID0gYXJyYXkubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsKICAgICAgLy8gICAgIGxldCByID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSkKICAgICAgLy8gICAgIGxldCB0bXAgPSBhcnJheVtpXQogICAgICAvLyAgICAgYXJyYXlbaV0gPSBhcnJheVtyXQogICAgICAvLyAgICAgYXJyYXlbcl0gPSB0bXAKICAgICAgLy8gfQoKICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBhcnJheS5sZW5ndGg7IGsrKykgewogICAgICAgIGZvciAodmFyIGkgPSBhcnJheVtrXS5hbnN3ZXIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsKICAgICAgICAgIHZhciByID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSk7CiAgICAgICAgICB2YXIgdG1wID0gYXJyYXlba10uYW5zd2VyW2ldOwogICAgICAgICAgYXJyYXlba10uYW5zd2VyW2ldID0gYXJyYXlba10uYW5zd2VyW3JdOwogICAgICAgICAgYXJyYXlba10uYW5zd2VyW3JdID0gdG1wOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGFycmF5OwogICAgfSwKICAgIHNldFF1ZXN0aW9uczogZnVuY3Rpb24gc2V0UXVlc3Rpb25zKHN0YXRlLCBxdWVzdGlvbnMpIHsKICAgICAgcmV0dXJuIHN0YXRlLnF1ZXN0aW9ucyA9IHF1ZXN0aW9uczsKICAgIH0sCiAgICBzZXRUZXN0UXVlc3Rpb25zOiBmdW5jdGlvbiBzZXRUZXN0UXVlc3Rpb25zKHN0YXRlLCBxdWVzdGlvbnMpIHsKICAgICAgcmV0dXJuIHN0YXRlLnF1ZXN0aW9ucyA9IHF1ZXN0aW9uczsKICAgIH0sCiAgICBnZXRRdWl6OiBmdW5jdGlvbiBnZXRRdWl6KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnF1aXogPSBwYXlsb2FkOwogICAgICBjb25zb2xlLmxvZyhzdGF0ZS5xdWl6KTsKICAgIH0sCiAgICBzZXRBbnN3ZXJBbmRRdWVzdGlvbklEOiBmdW5jdGlvbiBzZXRBbnN3ZXJBbmRRdWVzdGlvbklEKHN0YXRlLCBJRHMpIHsKICAgICAgc3RhdGUuY291bnRVcERpY3QucXVlc3Rpb25JRCA9IElEcy5xdWVzdGlvbklEOwogICAgICBzdGF0ZS5jb3VudFVwRGljdC5hbnN3ZXJJRCA9IElEcy5hbnN3ZXJJRDsKICAgICAgc3RhdGUuY291bnRVcERpY3QucXVlc3Rpb25UeXBlID0gSURzLnF1ZXN0aW9uVHlwZTsKICAgIH0sCiAgICBnZXRRdWl6SW5mbzogZnVuY3Rpb24gZ2V0UXVpekluZm8oc3RhdGUsIHF1aXpJbmZvKSB7CiAgICAgIGNvbnNvbGUubG9nKCdHUUlTdG9yZScsIHF1aXpJbmZvKTsKICAgICAgc3RhdGUucXVlc3Rpb25GaWVsZCA9IFtdOwogICAgICBzdGF0ZS5xdWl6SUQgPSAnJzsKICAgICAgc3RhdGUubnVtT2ZRdWl6ID0gJyc7CiAgICAgIHN0YXRlLnF1aXpJRCA9IHF1aXpJbmZvLnF1aXpJZDsKCiAgICAgIGlmIChxdWl6SW5mby5maWVsZElkKSB7CiAgICAgICAgc3RhdGUucXVlc3Rpb25GaWVsZCA9IHF1aXpJbmZvLmZpZWxkSWQ7CiAgICAgIH0KCiAgICAgIHN0YXRlLm51bU9mUXVpeiA9IHF1aXpJbmZvLnF1aXpOdW07CiAgICAgIGNvbnNvbGUubG9nKCdHUUlORk9TdG9yZScsIHN0YXRlLnF1aXpJRCwgc3RhdGUucXVlc3Rpb25GaWVsZCk7CiAgICB9LAogICAgZ2V0VGVzdFF1aXpJbmZvOiBmdW5jdGlvbiBnZXRUZXN0UXVpekluZm8oc3RhdGUsIHF1aXpJbmZvKSB7CiAgICAgIHN0YXRlLnF1aXpJRCA9IHF1aXpJbmZvLnF1aXpJZDsKICAgICAgc3RhdGUubGV2ZWwgPSBxdWl6SW5mby5sZXZlbDsKICAgIH0sCiAgICBzZXRRdWl6TmFtZUlkOiBmdW5jdGlvbiBzZXRRdWl6TmFtZUlkKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnF1aXpOYW1lSWQgPSBwYXlsb2FkOwogICAgfSwKICAgIHNldEZpZWxkTmFtZUlkOiBmdW5jdGlvbiBzZXRGaWVsZE5hbWVJZChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5maWVsZE5hbWVJZCA9IHBheWxvYWQ7CiAgICB9LAogICAgZ2V0VXNlclN0YXR1c0luZm86IGZ1bmN0aW9uIGdldFVzZXJTdGF0dXNJbmZvKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnVzZXJTdGF0dXNEaWN0LnN0YXR1cyA9IHBheWxvYWQuc3RhdHVzOyAvLyBzdGF0ZS51c2VyU3RhdHVzRGljdC5ncmFkZSA9IHBheWxvYWQuZ3JhZGUKICAgICAgLy8gc3RhdGUudXNlclN0YXR1c0RpY3QucXVpel90YWtlciA9IHBheWxvYWQucXVpel90YWtlcgoKICAgICAgc3RhdGUudXNlclN0YXR1c0RpY3QuaXNDb3JyZWN0ID0gcGF5bG9hZC5pc0NvcnJlY3Q7CiAgICAgIHN0YXRlLnVzZXJTdGF0dXNEaWN0LmlzRmFsc2UgPSBwYXlsb2FkLmlzRmFsc2U7CiAgICAgIGNvbnNvbGUubG9nKCJHVVNJIiwgc3RhdGUudXNlclN0YXR1c0RpY3QpOwogICAgfSwKICAgIHNldFF1aXpJRDogZnVuY3Rpb24gc2V0UXVpeklEKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnVzZXJTdGF0dXNEaWN0LmdyYWRlID0gcGF5bG9hZC5uYW1lOwogICAgfSwKICAgIHNldFF1aXpUYWtlcklEOiBmdW5jdGlvbiBzZXRRdWl6VGFrZXJJRChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS51c2VyU3RhdHVzRGljdC5xdWl6VGFrZXIgPSBwYXlsb2FkOwogICAgfSwKICAgIGNvbnZlcnRHcmFkZUZyb21JbnRUb0lEOiBmdW5jdGlvbiBjb252ZXJ0R3JhZGVGcm9tSW50VG9JRChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBjb25zb2xlLmxvZygnQ0dGSVRJJywgc3RhdGUucXVpek5hbWVJZCwgcGF5bG9hZCk7CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoc3RhdGUucXVpek5hbWVJZCksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBpID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICBjb25zb2xlLmxvZygnbG9vcCcsIGkubmFtZSwgaS5uYW1lID09IHBheWxvYWQpOwoKICAgICAgICAgIGlmIChpLm5hbWUgPT0gcGF5bG9hZCkgewogICAgICAgICAgICBzdGF0ZS5ncmFkZUZvckNvbnZlcnQgPSBpLmlkOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CiAgICB9IC8vIGNsZWFyUXVpeihzdGF0ZSwgcGF5bG9hZCl7CiAgICAvLyAgICAgY29uc29sZS5sb2coJ2luX2NsZWFyZWQnKQogICAgLy8gICAgIHN0YXRlLnF1ZXN0aW9ucyA9IFtdCiAgICAvLyAgICAgc3RhdGUucXVpeiA9IFtdCiAgICAvLyAgICAgY29uc29sZS5sb2coJ2NsZWFyZWQnKQogICAgLy8gfQoKICB9LAogIGFjdGlvbnM6IHsKICAgIGdldHF1ZXN0aW9uczogZnVuY3Rpb24gZ2V0cXVlc3Rpb25zKF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgZ2V0dGVycywgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlLCBjb21taXQgPSBfcmVmLmNvbW1pdCwgZ2V0dGVycyA9IF9yZWYuZ2V0dGVyczsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhY3Rpb24yJywgc3RhdGUubnVtKTsKICAgICAgICAgICAgICAgIHN0YXRlLnF1ZXN0aW9ucyA9IFtdOwogICAgICAgICAgICAgICAgc3RhdGUucXVpeiA9IFtdOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJc0xvYWRpbmcnLCB0cnVlLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGlmICghc3RhdGUucXVlc3Rpb25GaWVsZFswXSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiL2FwaS9xdWl6emVzLXF1ZXN0aW9ucy8/cXVpej0iLmNvbmNhdChzdGF0ZS5xdWl6SUQsICImbnVtPSIpLmNvbmNhdChzdGF0ZS5udW1PZlF1aXosICImZmllbGQ9IikuY29uY2F0KHN0YXRlLnF1ZXN0aW9uRmllbGQpKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIvYXBpL3F1aXp6ZXMtcXVlc3Rpb25zLz9xdWl6PSIuY29uY2F0KHN0YXRlLnF1aXpJRCwgIiZudW09IikuY29uY2F0KHN0YXRlLm51bU9mUXVpeikpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZ2V0dGVycy5xdWl6VGFrZXIpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRRdWl6VGFrZXJJRCcsIGdldHRlcnMucXVpelRha2VyKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnZ2V0UXVpeicsIHJlc3BvbnNlLmRhdGFbMF0pOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRRdWl6SUQnLCByZXNwb25zZS5kYXRhWzBdKTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuc2hpZnQoKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnZ2V0UmFuZG9tUXVlc3Rpb24nLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0UXVlc3Rpb25zJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldElzTG9hZGluZycsIGZhbHNlLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldFF1aXpOYW1lSWQ6IGZ1bmN0aW9uIGdldFF1aXpOYW1lSWQoX3JlZjIpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYyLnN0YXRlLCBjb21taXQgPSBfcmVmMi5jb21taXQ7CgogICAgICAgICAgICAgICAgaWYgKCEoc3RhdGUucXVpek5hbWVJZCA9PSBmYWxzZSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb21taXQoJ3NldElzTG9hZGluZycsIHRydWUsIHsKICAgICAgICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIvYXBpL3F1aXp6ZXMtbmFtZS1pZC8iKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0UXVpek5hbWVJZCcsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coc3RhdGUucXVpek5hbWVJZCk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldElzTG9hZGluZycsIGZhbHNlLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRGaWVsZE5hbWVJZDogZnVuY3Rpb24gZ2V0RmllbGROYW1lSWQoX3JlZjMpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYzLnN0YXRlLCBjb21taXQgPSBfcmVmMy5jb21taXQ7CgogICAgICAgICAgICAgICAgaWYgKCEoc3RhdGUuZmllbGROYW1lSWQgPT0gZmFsc2UpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gOTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJc0xvYWRpbmcnLCB0cnVlLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiL2FwaS9maWVsZC1saXN0LyIpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRGaWVsZE5hbWVJZCcsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coc3RhdGUuZmllbGROYW1lSWQpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJc0xvYWRpbmcnLCBmYWxzZSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0VGVzdFF1ZXN0aW9uczogZnVuY3Rpb24gZ2V0VGVzdFF1ZXN0aW9ucyhfcmVmNCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgZ2V0dGVycywgcmVzcG9uc2UsIF9yZXNwb25zZTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjQuc3RhdGUsIGNvbW1pdCA9IF9yZWY0LmNvbW1pdCwgZ2V0dGVycyA9IF9yZWY0LmdldHRlcnM7CgogICAgICAgICAgICAgICAgaWYgKCEoZ2V0dGVycy5xdWl6SUQgIT0gbnVsbCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJc0xvYWRpbmcnLCB0cnVlLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiL2FwaS9xdWl6emVzLXRlc3RzLz9xdWl6PSIuY29uY2F0KGdldHRlcnMucXVpeklELCAiJmxldmVsPSIpLmNvbmNhdChzdGF0ZS5sZXZlbCkpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCdnZXRRdWl6JywgcmVzcG9uc2UuZGF0YVswXSk7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldFF1aXpUYWtlcklEJywgZ2V0dGVycy5xdWl6VGFrZXIpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRRdWl6SUQnLCByZXNwb25zZS5kYXRhWzBdKTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuc2hpZnQoKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnZ2V0UmFuZG9tUXVlc3Rpb24nLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0VGVzdFF1ZXN0aW9ucycsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJc0xvYWRpbmcnLCBmYWxzZSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0SXNMb2FkaW5nJywgdHJ1ZSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIvYXBpL3F1aXp6ZXMtdGVzdHMvP3F1aXo9NCZsZXZlbD0iLmNvbmNhdChzdGF0ZS5sZXZlbCkpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgX3Jlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ2dldFF1aXonLCBfcmVzcG9uc2UuZGF0YVswXSk7CgogICAgICAgICAgICAgICAgX3Jlc3BvbnNlLmRhdGEuc2hpZnQoKTsKCiAgICAgICAgICAgICAgICBjb21taXQoJ2dldFJhbmRvbVF1ZXN0aW9uJywgX3Jlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRUZXN0UXVlc3Rpb25zJywgX3Jlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRJc0xvYWRpbmcnLCBmYWxzZSwgewogICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNvdW50VXBBbnN3ZXJBbmRRdWVzdGlvbjogZnVuY3Rpb24gY291bnRVcEFuc3dlckFuZFF1ZXN0aW9uKF9yZWY1LCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHZhciBzdGF0ZSwgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWY1LnN0YXRlLCBjb21taXQgPSBfcmVmNS5jb21taXQ7CiAgICAgICAgICAgICAgICAvLyBjb21taXQoJ3NldElzTG9hZGluZycsIHRydWUsIHtyb290OnRydWV9KQogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRBbnN3ZXJBbmRRdWVzdGlvbklEJywgcGF5bG9hZCk7CgogICAgICAgICAgICAgICAgaWYgKCEoc3RhdGUuY291bnRVcERpY3QucXVlc3Rpb25UeXBlICE9IDQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBhdGNoKCIvYXBpL2Fuc3dlcnMtY291bnQvP2Fuc3dlcj0iLmNvbmNhdChzdGF0ZS5jb3VudFVwRGljdC5hbnN3ZXJJRCwgIiZxdWVzdGlvbj0iKS5jb25jYXQoc3RhdGUuY291bnRVcERpY3QucXVlc3Rpb25JRCkpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB1c2VyU3RhdHVzUG9zdDogZnVuY3Rpb24gdXNlclN0YXR1c1Bvc3QoX3JlZjYsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjYuc3RhdGUsIGNvbW1pdCA9IF9yZWY2LmNvbW1pdDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJ1c2VyU3RhdHVzUG9zdCIsIHN0YXRlLnVzZXJTdGF0dXNEaWN0KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnZ2V0VXNlclN0YXR1c0luZm8nLCBwYXlsb2FkKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgICAgICB1cmw6ICcvYXBpL3VzZXItc3RhdHVzLycsCiAgICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHN0YXRlLnVzZXJTdGF0dXNEaWN0LnN0YXR1cywKICAgICAgICAgICAgICAgICAgICBncmFkZTogc3RhdGUudXNlclN0YXR1c0RpY3QuZ3JhZGUsCiAgICAgICAgICAgICAgICAgICAgcXVpel90YWtlcjogc3RhdGUudXNlclN0YXR1c0RpY3QucXVpelRha2VyLAogICAgICAgICAgICAgICAgICAgIGlzX2NvcnJlY3Q6IHN0YXRlLnVzZXJTdGF0dXNEaWN0LmlzQ29ycmVjdCwKICAgICAgICAgICAgICAgICAgICBpc19mYWxzZTogc3RhdGUudXNlclN0YXR1c0RpY3QuaXNGYWxzZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU2KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgY29udmVydEdyYWRlRnJvbUludFRvSURGb3JOZXdVc2VyOiBmdW5jdGlvbiBjb252ZXJ0R3JhZGVGcm9tSW50VG9JREZvck5ld1VzZXIoX3JlZjcsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBkaXNwYXRjaCwgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWY3LnN0YXRlLCBkaXNwYXRjaCA9IF9yZWY3LmRpc3BhdGNoLCBjb21taXQgPSBfcmVmNy5jb21taXQ7CgogICAgICAgICAgICAgICAgaWYgKHN0YXRlLnF1aXpOYW1lSWQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ2dldFF1aXpOYW1lSWQnKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgY29tbWl0KCdjb252ZXJ0R3JhZGVGcm9tSW50VG9JRCcsIHBheWxvYWQpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2RvbmUgY29udmVydCcpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTcpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js"],"names":["store","router","axios","getDefaultState","isLoading","quizID","countUpDict","questionID","answerID","questionType","userStatusDict","status","grade","quizTaker","isCorrect","isFalse","gradeForConvert","numOfQuiz","questionField","level","questions","quiz","quizNameId","fieldNameId","randomURL","test","notice","step","namespace","state","getters","rootState","signup","djangoUser","quiz_taker","id","mutations","getRandomQuestion","array","console","log","k","length","i","answer","r","Math","floor","random","tmp","setQuestions","setTestQuestions","getQuiz","payload","setAnswerAndQuestionID","IDs","getQuizInfo","quizInfo","quizId","fieldId","quizNum","getTestQuizInfo","setQuizNameId","setFieldNameId","getUserStatusInfo","setQuizID","name","setQuizTakerID","convertGradeFromIntToID","actions","getquestions","commit","num","root","get","response","data","shift","getQuizNameId","getFieldNameId","getTestQuestions","countUpAnswerAndQuestion","patch","userStatusPost","method","url","is_correct","is_false","convertGradeFromIntToIDForNewUser","dispatch"],"mappings":"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","sourcesContent":["import store from '..'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\n\n\nlet getDefaultState = () => {\n    return {\n        isLoading: false,\n        quizID: 1,\n        countUpDict:{\n            questionID: '',\n            answerID: '',\n            questionType:''\n        },\n        userStatusDict:{\n            status:'',\n            grade:'',\n            quizTaker:'',\n            isCorrect:0,\n            isFalse:0\n        },\n        gradeForConvert:'',\n        numOfQuiz: 3,\n        questionField: [1,2],\n        level: 1,\n        questions:[],\n        quiz:[],\n        quizNameId:'',\n        fieldNameId:'',\n        randomURL:'',\n        test:null,\n        notice:false,\n        step:1,\n    }\n}\n\nexport default {\n    namespace: true,\n    state: getDefaultState(),\n    getters:{\n        questions:(state) => state.questions,\n        quiz:(state) => state.quiz,\n        quizNameId:(state) => state.quizNameId,\n        fieldNameId:(state) => state.fieldNameId,\n        gradeForConvert:(state) => state.gradeForConvert,\n        quizTaker(state, getters, rootState){\n            try{\n                return rootState.signup.djangoUser.quiz_taker[0].id\n            }catch{\n                return null\n            }\n        },\n        quizID(state, getters, rootState){\n            try{\n                return rootState.signup.djangoUser.quiz_taker[0].grade\n            }catch{\n                return null\n            }\n        }\n    },\n    mutations:{\n        getRandomQuestion(state,array){\n            console.log('in randomQ', array)\n            // for (let i = array.length - 1; i >= 0; i--) {\n            //     let r = Math.floor(Math.random() * (i + 1))\n            //     let tmp = array[i]\n            //     array[i] = array[r]\n            //     array[r] = tmp\n            // }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                    let r = Math.floor(Math.random() * (i + 1))\n                    let tmp = array[k].answer[i]\n                    array[k].answer[i] = array[k].answer[r]\n                    array[k].answer[r] = tmp\n                }\n            }\n            return array\n        },\n        setQuestions:(state,questions) => (state.questions = questions),\n        setTestQuestions:(state,questions) => (state.questions = questions),\n        getQuiz(state, payload){\n            state.quiz = payload\n            console.log(state.quiz)\n        },\n        setAnswerAndQuestionID(state,IDs){\n            state.countUpDict.questionID = IDs.questionID\n            state.countUpDict.answerID = IDs.answerID\n            state.countUpDict.questionType = IDs.questionType\n        },\n        getQuizInfo(state, quizInfo){\n            console.log('GQIStore',quizInfo)\n            state.questionField = []\n            state.quizID = ''\n            state.numOfQuiz = ''\n            state.quizID = quizInfo.quizId\n            if(quizInfo.fieldId){\n                state.questionField = quizInfo.fieldId\n            }\n            state.numOfQuiz = quizInfo.quizNum\n            console.log('GQINFOStore',state.quizID,state.questionField)\n        },\n        getTestQuizInfo(state, quizInfo){\n            state.quizID = quizInfo.quizId\n            state.level = quizInfo.level\n        },\n        setQuizNameId(state, payload){\n            state.quizNameId = payload\n        },\n        setFieldNameId(state, payload){\n            state.fieldNameId = payload\n        },\n        getUserStatusInfo(state, payload){\n            state.userStatusDict.status = payload.status\n            // state.userStatusDict.grade = payload.grade\n            // state.userStatusDict.quiz_taker = payload.quiz_taker\n            state.userStatusDict.isCorrect = payload.isCorrect\n            state.userStatusDict.isFalse = payload.isFalse\n            console.log(\"GUSI\",state.userStatusDict)\n        },\n        setQuizID(state, payload){\n            state.userStatusDict.grade = payload.name\n        },\n        setQuizTakerID(state, payload){\n            state.userStatusDict.quizTaker = payload\n        },\n        convertGradeFromIntToID(state, payload){\n            console.log('CGFITI',state.quizNameId,payload)\n            for(let i of state.quizNameId){\n                console.log('loop',i.name,i.name==payload)\n                if(i.name == payload){\n                    state.gradeForConvert = i.id\n                }\n            }\n        }\n        // clearQuiz(state, payload){\n        //     console.log('in_cleared')\n        //     state.questions = []\n        //     state.quiz = []\n        //     console.log('cleared')\n        // }\n    },\n    actions:{\n        async getquestions({ state, commit,getters }){\n            console.log('action2',state.num)\n            state.questions = []\n            state.quiz = []\n            commit('setIsLoading', true, {root:true})\n            if(state.questionField[0]){\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}&field=${state.questionField}`)\n            }else{\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}`)\n            }\n            console.log(getters.quizTaker)\n            commit('setQuizTakerID',getters.quizTaker)\n            commit('getQuiz',response.data[0])\n            commit('setQuizID',response.data[0])\n            response.data.shift()\n            commit('getRandomQuestion',response.data)\n            commit('setQuestions',response.data);\n            commit('setIsLoading', false,{root:true})\n        },\n        async getQuizNameId({ state, commit }){\n            if(state.quizNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/quizzes-name-id/\")\n                commit('setQuizNameId',response.data)\n                console.log(state.quizNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getFieldNameId({ state, commit }){\n            if(state.fieldNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/field-list/\")\n                commit('setFieldNameId',response.data)\n                console.log(state.fieldNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getTestQuestions({ state, commit, getters }){\n            // need things for non login\n            if(getters.quizID!=null){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(`/api/quizzes-tests/?quiz=${getters.quizID}&level=${state.level}`)\n                commit('getQuiz',response.data[0])\n                commit('setQuizTakerID',getters.quizTaker)\n                commit('setQuizID',response.data[0])\n                response.data.shift()\n                commit('getRandomQuestion',response.data)\n                commit('setTestQuestions',response.data);\n                commit('setIsLoading', false,{root:true})\n            }else{\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(`/api/quizzes-tests/?quiz=4&level=${state.level}`)\n                commit('getQuiz',response.data[0])\n                response.data.shift()\n                commit('getRandomQuestion',response.data)\n                commit('setTestQuestions',response.data);\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async countUpAnswerAndQuestion({ state , commit }, payload){\n            // commit('setIsLoading', true, {root:true})\n            commit('setAnswerAndQuestionID',payload)\n            if(state.countUpDict.questionType!=4){\n                await axios.patch(`/api/answers-count/?answer=${state.countUpDict.answerID}&question=${state.countUpDict.questionID}`)\n            }\n            // commit('setIsLoading', false,{root:true})\n            \n        },\n        async userStatusPost({ state , commit }, payload){\n            console.log(\"userStatusPost\",state.userStatusDict)\n            commit('getUserStatusInfo',payload)\n            await axios({\n                method: 'post',\n                url: '/api/user-status/',\n                data: {\n                    status: state.userStatusDict.status,\n                    grade: state.userStatusDict.grade,\n                    quiz_taker: state.userStatusDict.quizTaker,\n                    is_correct: state.userStatusDict.isCorrect,\n                    is_false: state.userStatusDict.isFalse,\n                }\n            })\n        },\n        async convertGradeFromIntToIDForNewUser({ state , dispatch, commit }, payload){\n            if(!state.quizNameId){\n                await dispatch('getQuizNameId')\n            }\n            commit('convertGradeFromIntToID', payload)\n            console.log('done convert')\n        }\n    }\n}"]}]}