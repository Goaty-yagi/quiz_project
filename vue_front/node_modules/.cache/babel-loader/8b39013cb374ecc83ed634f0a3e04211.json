{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue","mtime":1645925339666},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEFuc3dlciBmcm9tICdAL2NvbXBvbmVudHMvYm9hcmQvQW5zd2VyLnZ1ZSc7CmltcG9ydCBSZXBseSBmcm9tICdAL2NvbXBvbmVudHMvYm9hcmQvUmVwbHkudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEFuc3dlcjogQW5zd2VyLAogICAgUmVwbHk6IFJlcGx5CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFVzZXJJZDogJycsCiAgICAgIHF1ZXN0aW9uOiAnJywKICAgICAgc2hvd0Fuc3dlclBhZ2U6IGZhbHNlLAogICAgICBzaG93UmVwbHlQYWdlOiBmYWxzZSwKICAgICAgcXVlc3Rpb25UaXRsZTogJycsCiAgICAgIHF1ZXN0aW9uRGVzY3JpcHRpb246ICcnLAogICAgICBxdWVzdGlvbklkOiAnJywKICAgICAgYW5zd2VySWQ6ICcnLAogICAgICBxdWVzdGlvblN0YXR1czogJ+acquino+axuicsCiAgICAgIHJlcGx5OiAnJywKICAgICAgbm90aWZpY2F0aW9uczogewogICAgICAgIHJlcGx5OiBmYWxzZSwKICAgICAgICBhbnN3ZXI6IGZhbHNlLAogICAgICAgIHF1ZXN0aW9uOiBmYWxzZQogICAgICB9LAogICAgICBxdWVzdGlvbkFuc3dlclVzZXI6IFtdCiAgICB9OwogIH0sCiAgYmVmb3JlTW91bnQ6IGZ1bmN0aW9uIGJlZm9yZU1vdW50KCkgey8vIHRoaXMuY3VycmVudFVzZXJJZCA9IHRoaXMuJHN0b3JlLnN0YXRlLnNpZ251cC51c2VyLnVpZAogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8vIHRoaXMuY3VycmVudFVzZXJJZCA9IHRoaXMuJHN0b3JlLnN0YXRlLnNpZ251cC51c2VyLnVpZAogICAgY29uc29sZS5sb2codGhpcy5jdXJyZW50VXNlcklkKTsgLy8gY29uc29sZS5sb2coJ21vdW50ZWQgYXQgZGV0YWlsJywgdGhpcy4kc3RvcmUuc3RhdGUuc2lnbnVwLnVzZXIudWlkKSAKCiAgICB0aGlzLmdldERldGFpbCgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RGV0YWlsOiBmdW5jdGlvbiBnZXREZXRhaWwoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiL2FwaS9ib2FyZC9xdWVzdGlvbi8iLmNvbmNhdChfdGhpcy4kcm91dGUucGFyYW1zLnNsdWcpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBfdGhpcy5xdWVzdGlvbiA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICAgIF90aGlzLnF1ZXN0aW9uVGl0bGUgPSBfdGhpcy5xdWVzdGlvbi50aXRsZTsKICAgICAgICAgICAgICAgICAgX3RoaXMucXVlc3Rpb25EZXNjcmlwdGlvbiA9IF90aGlzLnF1ZXN0aW9uLmRlc2NyaXB0aW9uOwogICAgICAgICAgICAgICAgICBfdGhpcy5xdWVzdGlvbklkID0gX3RoaXMucXVlc3Rpb24uaWQ7CiAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBoYW5kbGVTaG93QW5zd2VyUGFnZTogZnVuY3Rpb24gaGFuZGxlU2hvd0Fuc3dlclBhZ2UoKSB7CiAgICAgIHRoaXMuc2hvd0Fuc3dlclBhZ2UgPSAhdGhpcy5zaG93QW5zd2VyUGFnZTsgLy8gdGhpcy5oYW5kbGVTY3JvbGxGaXhlZCgpCiAgICB9LAogICAgZ2V0UmVwbHk6IGZ1bmN0aW9uIGdldFJlcGx5KHJlcGx5KSB7CiAgICAgIHRoaXMucmVwbHkgPSByZXBseTsKICAgIH0sCiAgICBoYW5kbGVTaG93UmVwbHlQYWdlOiBmdW5jdGlvbiBoYW5kbGVTaG93UmVwbHlQYWdlKCkgewogICAgICB0aGlzLnNob3dSZXBseVBhZ2UgPSAhdGhpcy5zaG93UmVwbHlQYWdlOwogICAgfSwKICAgIGhhbmRsZVJlcGx5UGFnZTogZnVuY3Rpb24gaGFuZGxlUmVwbHlQYWdlKGlkKSB7CiAgICAgIHZhciByZXBseSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7CiAgICAgIHRoaXMuZ2V0QW5zd2VySWQoaWQpOwogICAgICB0aGlzLnNob3dSZXBseVBhZ2UgPSAhdGhpcy5zaG93UmVwbHlQYWdlOwogICAgICB0aGlzLmdldFJlcGx5KHJlcGx5KTsKICAgIH0sCiAgICBnZXRBbnN3ZXJJZDogZnVuY3Rpb24gZ2V0QW5zd2VySWQoaWQpIHsKICAgICAgdGhpcy5hbnN3ZXJJZCA9IGlkOwogICAgfSwKICAgIGdldFJlcGx5VXNlckFuZFF1ZXN0aW9uVXNlcjogZnVuY3Rpb24gZ2V0UmVwbHlVc2VyQW5kUXVlc3Rpb25Vc2VyKHJlcGx5LCBxdWVzdGlvbikgewogICAgICB0aGlzLnF1ZXN0aW9uQW5zd2VyVXNlci5wdXNoKHJlcGx5KTsKICAgICAgdGhpcy5xdWVzdGlvbkFuc3dlclVzZXIucHVzaChxdWVzdGlvbik7CiAgICB9LAogICAgcmVzZXROb3RpZmljYXRpb25zOiBmdW5jdGlvbiByZXNldE5vdGlmaWNhdGlvbnMoKSB7CiAgICAgIHRoaXMubm90aWZpY2F0aW9ucy5hbnN3ZXIgPSBmYWxzZTsKICAgICAgdGhpcy5ub3RpZmljYXRpb25zLnJlcGx5ID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlTm90aWZpY2F0aW9uczogZnVuY3Rpb24gaGFuZGxlTm90aWZpY2F0aW9ucyhlbGVtKSB7CiAgICAgIC8vIHRoaXMubm90aWZpY2F0aW9ucy5yZXBseSA9IGZhbHNlCiAgICAgIC8vIHRoaXMubm90aWZpY2F0aW9ucy5hbnN3ZXIgPSBmYWxzZQogICAgICAvLyBjb25zb2xlLmxvZygnaW5oYW5nbGVub3R1JyxlbGVtKQogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLm5vdGlmaWNhdGlvbnMuYW5zd2VyKQogICAgICBpZiAoZWxlbSA9PSAicmVwbHkiKSB7CiAgICAgICAgdGhpcy5ub3RpZmljYXRpb25zLnJlcGx5ID0gdHJ1ZTsKICAgICAgICBzZXRUaW1lb3V0KHRoaXMucmVzZXROb3RpZmljYXRpb25zLCAzMDAwKTsKICAgICAgfQoKICAgICAgaWYgKGVsZW0gPT0gImFuc3dlciIpIHsKICAgICAgICBjb25zb2xlLmxvZygiaW4gYW5zd2VyIik7CiAgICAgICAgdGhpcy5ub3RpZmljYXRpb25zLmFuc3dlciA9IHRydWU7CiAgICAgICAgc2V0VGltZW91dCh0aGlzLnJlc2V0Tm90aWZpY2F0aW9ucywgMzAwMCk7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5ub3RpZmljYXRpb25zLmFuc3dlcik7CiAgICAgIH0KICAgIH0gLy8gZmFsc2VOb3RpZmljYXRpb25zKGVsZW0pewogICAgLy8gICAgIGlmKGVsZW0gPT0gImFuc3dlciIpewogICAgLy8gICAgICAgICB0aGlzLm5vdGlmaWNhdGlvbnMuYW5zd2VyID0gZmFsc2UKICAgIC8vICAgICB9CiAgICAvLyAgICAgaWYoZWxlbSA9PSAicmVwbHkiKXsKICAgIC8vICAgICAgICAgdGhpcy5ub3RpZmljYXRpb25zLnJlcGx5ID0gZmFsc2UKICAgIC8vICAgICB9CiAgICAvLyB9LAogICAgLy8gaGFuZGxlU2Nyb2xsRml4ZWQoKXsKICAgIC8vICAgICB0aGlzLnNjcm9sbEZpeGVkID0gIXRoaXMuc2Nyb2xsRml4ZWQKICAgIC8vIH0sCgogIH0KfTs="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div  class=\"board-detail-wrapper\" v-if=\"question\">\n        <div class=\"main-wrapper\">\n            <div class=\"question-wrapper\">\n                <p class='title-white'>質問板</p>\n                <div v-if=\"notifications.reply\" :class=\"{'notification-blue':notifications.reply}\">\n                    <div class=\"notification-text\">\n                        返信しました。\n                    </div>\n                </div>\n                <div v-if=\"notifications.answer\" :class=\"{'notification-blue':notifications.answer}\">\n                    <div class=\"notification-text\">\n                        回答しました。\n                    </div>\n                </div>\n                <div class='question-box'> \n                    <div class=\"question-box-header\">\n                        <div class=\"image\">\n                            <img class='img' v-bind:src=\"question.user.thumbnail\"/>\n                        </div>\n                        <div class=\"username-date\">\n                            <p> {{ question.user.name}}さん </p>\n                            <p> {{ question.created_on }} </p>\n                        </div>\n                        <div class=\"question-status-container\">\n                            <p class=\"question-status\"> {{ questionStatus }} </p>\n                        </div>\n                    </div>\n                    <div class=\"title-question\">\n                        <p class=\"question-title\">  {{ question.title }} </p>        \n                        <p class='question-description'> {{ question.description}} </p>\n                    </div>\n                    <div class=\"question-box-footer\">\n                        <i class=\"far fa-heart\"></i>\n                        <p class=\"good\"> {{ question.good}} </p>\n                        <p class=\"viewed\"> viewed {{ question.viewed}} </p>\n                    </div>\n                    <button v-if=\"question.user.UID != $store.state.signup.user.uid\" class=\"btn-base-white-db-sq\" @click='handleShowAnswerPage'>回答する</button>\n                    <button @click=\"handleNotifications('reply')\" >unko</button>\n                </div>\n                <div class=\"relative-box\">\n                    <p>関連した質問</p>\n                    <p>もっと見る></p>\n                </div>\n                <div class=\"answer-box\" v-if='question.answer[0]'>\n                    <div class=\"answer-box-title\">\n                        <p v-if='question.answer[0]'> 回答</p>\n                        ({{ question.answer.length }}件)\n                    </div>\n                    <div\n                     class=\"under-line\"\n                     v-for=\"(answer,answerindex) in question.answer\"\n                     v-bind:key=\"answerindex\">\n                        <div class=\"answer-box-header\">\n                            <img class='img' v-bind:src=\"answer.user.thumbnail\"/>\n                            <div class=\"username-date\">\n                                <p> {{ answer.user.name}}さん </p>\n                                <p> {{ answer.created_on }} </p>\n                            </div>\n                        </div>\n                        <p class=\"answer-description-container\">{{ answer.description }} </p>\n                        <div class=\"answer-box-footer\">\n                            <i class=\"far fa-heart\"></i>\n                            <p class=\"good\"> {{ answer.good}} </p>\n                        </div>\n                        <button v-if=\"question.user.UID == $store.state.signup.user.uid && answer.reply.length == 0\"\n                         class='btn-base-white-db-sq' \n                         @click='handleReplyPage(answer.id, answer.description)'>\n                         返信する\n                         </button>\n                        <!-- reply should be appir if post user or replyer -->\n                        <div class='reply-wrapper' v-if='answer.reply[0]'>\n                            <div>コメント</div>\n                            <div class='reply-flex' \n                            v-for=\"(reply,replyindex) in answer.reply\"\n                            v-bind:key=\"replyindex\">\n                                <div class=\"reply-wrapper-header\">\n                                    <img class='img' v-bind:src=\"reply.user.thumbnail\"/>\n                                    <div class=\"username-date\">\n                                        <p> {{ reply.user.name}}さん </p>\n                                        <p> {{ reply.created_on }} </p>\n                                    </div>\n                                </div>\n                                <p class=\"replay-description\">{{ reply.description }}</p>\n                                <button v-if='$store.state.signup.user.uid==question.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID!=question.user.UID || $store.state.signup.user.uid==answer.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID==question.user.UID'\n                                 class='btn-base-white-db-sq' \n                                 @click='handleReplyPage(answer.id)'>\n                                 返信する\n                                 </button>\n                            </div>\n                        </div>\n                        <div class='line-flex'>\n                            <div class=\"line\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        <Answer v-if='showAnswerPage'\n         @handleShowAnswerPage='handleShowAnswerPage'\n         @getDetail=\"getDetail\"\n         @handleNotifications=\"handleNotifications\"\n         :questionTitle='questionTitle'\n         :questionDescription='questionDescription'\n         :questionId='questionId'\n         />\n        <Reply v-if='showReplyPage'\n         @handleShowReplyPage='handleShowReplyPage'\n         @getDetail=\"getDetail\"\n         @handleNotifications=\"handleNotifications\"\n         :answerId='answerId'\n         :reply=\"reply\"\n         />\n        <!-- {{ questions }} -->\n        <!-- <div class=question \n         v-for=\"(question,questionindex) in questions\"\n         v-bind:key=\"questionindex\">\n            <div class=\"tag\">tag:{{ question.tag }}</div>\n            <div class=\"title\">title:{{ question.title }}</div>\n            <div class=\"good\">good:{{ question.good }}</div>\n            <div class=\"date\">data:{{ remove_T_Z(question.timestamp) }}</div>\n        </div>\n        <CreateQuestion v-if='showCreateQuestion'\n        @handleShowConfirm='handleShowConfirm'/>\n        <Confirm v-if='showConfirm'/> -->\n         </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport  Answer from '@/components/board/Answer.vue'\nimport  Reply from '@/components/board/Reply.vue'\nexport default {\n    components: {\n        Answer,\n        Reply\n  },\n    data(){\n        return{\n            currentUserId:'',\n            question:'',\n            showAnswerPage: false,\n            showReplyPage: false,\n            questionTitle:'',\n            questionDescription:'',\n            questionId:'',\n            answerId:'',\n            questionStatus:'未解決',\n            reply:'',\n            notifications:{\n                reply: false,\n                answer: false,\n                question: false,\n            },\n            questionAnswerUser:[\n            ]\n        }\n    },\n    beforeMount(){\n        // this.currentUserId = this.$store.state.signup.user.uid\n    },\n    mounted() {\n        // this.currentUserId = this.$store.state.signup.user.uid\n        console.log(this.currentUserId)\n        // console.log('mounted at detail', this.$store.state.signup.user.uid) \n        this.getDetail() \n    },\n    methods: {\n        async getDetail() {\n            await axios\n                .get(`/api/board/question/${this.$route.params.slug}`)\n                .then(response => {\n                    this.question = response.data\n                    this.questionTitle = this.question.title\n                    this.questionDescription = this.question.description\n                    this.questionId = this.question.id})\n                .catch(error => {\n                    console.log(error)\n            })\n        },\n        handleShowAnswerPage(){\n            this.showAnswerPage = !this.showAnswerPage\n            // this.handleScrollFixed()\n        },\n        getReply(reply){\n            this.reply = reply\n        },\n        handleShowReplyPage(){\n            this.showReplyPage = !this.showReplyPage\n        },\n        handleReplyPage(id, reply=''){\n            this.getAnswerId(id)\n            this.showReplyPage = !this.showReplyPage\n            this.getReply(reply)\n        },\n        getAnswerId(id){\n            this.answerId = id\n        },\n        getReplyUserAndQuestionUser(reply, question){\n            this.questionAnswerUser.push(reply)\n            this.questionAnswerUser.push(question)\n        },\n        resetNotifications(){\n            this.notifications.answer = false\n            this.notifications.reply = false\n        },\n        handleNotifications(elem){\n            // this.notifications.reply = false\n            // this.notifications.answer = false\n            // console.log('inhanglenotu',elem)\n            // console.log(this.notifications.answer)\n            if(elem == \"reply\"){\n                this.notifications.reply = true\n                setTimeout(this.resetNotifications, 3000)\n                \n            }\n            if(elem == \"answer\"){\n                console.log(\"in answer\")\n                this.notifications.answer = true\n                setTimeout(this.resetNotifications, 3000)\n                console.log(this.notifications.answer)\n            }            \n        },\n        // falseNotifications(elem){\n        //     if(elem == \"answer\"){\n        //         this.notifications.answer = false\n        //     }\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = false\n        //     }\n        // },\n        // handleScrollFixed(){\n        //     this.scrollFixed = !this.scrollFixed\n        // },\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n.scroll{\n    position:fixed;\n}\n\n.board-detail-wrapper{\n    display: flex;\n    justify-content: center;\n    width: 100vw;\n    align-items: center;\n}\n.question-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    .question-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        .question-box-header{\n            display: flex;\n            .image{\n                .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n                width:40%;\n            }\n            .question-status-container{\n                display: flex;\n                justify-content: flex-end;\n                width: 50%;\n                position: relative;\n                .question-status{\n                    position: absolute;\n                    right:0;\n                    top: 0.5rem;\n                    color: rgb(255, 43, 209);\n                    margin-right: 1rem;\n                }\n            }\n        }\n        .title-question{\n            padding:1rem;\n            .question-title{\n                text-align: center;\n                margin-bottom: 1rem;\n                border-bottom: solid $dark-blue;\n                display: inline-block;\n                padding-bottom: 1rem;\n            }\n            .question-description{\n                text-align: left;\n                padding: 1rem; \n                background: rgb(236, 236, 236);\n            }\n        }\n        .question-box-footer{\n            display: flex;\n            .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 0.5rem;\n                margin-right: 0.3rem;\n            }\n            .viewed{\n                margin-left: 1rem;\n                margin-right: 0.5rem;\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n    }\n    .relative-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n    }\n    .answer-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .answer-box-title{\n            display: flex;\n            justify-content: center;\n            margin-top: 1rem;\n        }\n        .under-line{\n            width: 90%;\n            border-bottom: 0.2rem solid rgb(236, 236, 236);\n            margin-top: 2rem;\n            margin-bottom: 1rem;\n            &:last-child{\n                border-bottom: none;\n            }\n        }\n        .answer-box-header{\n            display: flex;\n            .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n            }\n        }\n        .answer-description-container{\n            margin: 1rem;\n            background: rgb(236, 236, 236);\n            padding: 1rem;\n            text-align: left;\n        }\n        .answer-box-footer{\n            display: flex;\n            .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 1rem;\n                margin-right: 0.3rem;\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n        .reply-wrapper{\n            // display: flex;\n            // flex-direction: column;\n            // justify-content: center;\n            // align-items: center;\n            .reply-flex{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                margin-bottom: 1rem;\n                .reply-wrapper-header{\n                    width: 80%;\n                    height: 100%;\n                    display: flex;              \n                    .img{\n                        border-radius: 50%; \n                        width:  3rem;   \n                        height: 3rem;\n                        margin: 0.5rem; \n                    }\n                    .username-date{\n                        display: flex;\n                        flex-direction: column;\n                        align-items: flex-start;\n                        margin-top: 0.5rem;\n                    }\n                \n                }\n                .replay-description{\n                    width: 63%;\n                    // border-left: solid $dark-blue;\n                    background: rgb(236, 236, 236);\n                    text-align: left;\n                    padding: 0.5rem;\n                }\n            }\n        }\n        .line-flex{\n            display: flex;\n            width: 100%;\n            justify-content: center;\n            align-items: center;\n            // .line-flex:last-of-type{\n            //     border-bottom: none;\n            // }\n            &.line{\n                width: 90%;\n                border-bottom: 0.2rem solid rgb(236, 236, 236);\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n                &:last-child{\n                    border-bottom: none;\n                }\n            }\n        }\n    }\n}\n</style>"],"sourceRoot":""}]}