{"ast":null,"code":"import { createStore } from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { router } from \"../main.js\";\nimport signup from './modules/signup';\nimport board from './modules/board';\nimport quiz from './modules/quiz';\n\nlet getDefaultState = () => {\n  return {\n    isLoading: false,\n    id: 1,\n    field: '',\n    num: 3,\n    questions: [],\n    quizzes: [],\n    randomURL: '',\n    test: null,\n    notice: false,\n    step: 1,\n    showModal: false,\n    fixedScroll: false\n  };\n};\n\nexport default createStore({\n  modules: {\n    signup,\n    board,\n    quiz\n  },\n  state: getDefaultState(),\n  plugins: [createPersistedState({\n    key: 'quizkey',\n    // 設定しなければ'vuex'\n    paths: [\"signup.djangoUser\", \"signup.emailVerified\", \"signup.apiError\", \"signup.UID\", \"signup.registeredUser\", \"signup.myQuestion\", \"signup.myQuizInfo\"],\n    // 保存するモジュール：設定しなければ全部。\n    storage: window.sessionStorage\n  }), createPersistedState({\n    key: 'quiz-session',\n    paths: [// \"board.answeredQuestion\",\n    // \"board.reccomendedQuestion\",\n    \"board.centerTag\", \"quiz.quizNameId\", \"quiz.fieldNameId\" // \"quiz.questionTypeId\"\n    ],\n    storage: window.sessionStorage\n  }), createPersistedState({\n    key: 'tempKey',\n    // 設定しなければ'vuex'\n    paths: [\"signup.tempUser\", \"signup.userInfo\", \"signup.beingException\", \"signup.reloadForException\"],\n    // 保存するモジュール：設定しなければ全部。\n    storage: {\n      getItem: key => Cookies.get(key),\n      setItem: (key, value) => Cookies.set(key, value, {\n        expires: 3,\n        secure: true\n      }),\n      removeItem: key => Cookies.remove(key)\n    }\n  })],\n  getters: {\n    questions2: state => state.questions,\n    quizzes2: state => state.quizzes,\n    showModal: state => state.showModal,\n    fixedScroll: state => state.fixedScroll\n  },\n  mutations: {\n    setIsLoading(state, status) {\n      state.isLoading = status;\n    },\n\n    reset(state) {\n      console.log('reset');\n      Object.assign(state, getDefaultState());\n      router.push('/');\n    },\n\n    getURLs(state, item) {\n      state.num = item.num; // state.field= field\n\n      state.id = item.status;\n      state.test = item.test;\n      state.randomURL = `/quiz/${state.id}`;\n    },\n\n    // getRandomQuestion(state,array){\n    //   for (let i = array.length - 1; i >= 0; i--) {\n    //     let r = Math.floor(Math.random() * (i + 1))\n    //     let tmp = array[i]\n    //     array[i] = array[r]\n    //     array[r] = tmp\n    //     }\n    //   for ( let k =0; k < array.length; k++){\n    //     for (let i = array[k].answer.length - 1; i >= 0; i--) {\n    //       let r = Math.floor(Math.random() * (i + 1))\n    //       let tmp = array[k].answer[i]\n    //       array[k].answer[i] = array[k].answer[r]\n    //       array[k].answer[r] = tmp\n    //       }}\n    //     return array\n    // },\n    // setQuestions:(state,questions) => (state.questions = questions),\n    // setQuiz:(state,quizzes) => (state.quizzes = quizzes),\n    // initial\n    testHandler(state) {\n      state.test = false;\n    },\n\n    noticeHandler(state) {\n      state.notice = true;\n    },\n\n    noticeOff(state) {\n      state.notice = false;\n    },\n\n    addStep(state) {\n      state.step += 1;\n    },\n\n    stepClear(state) {\n      state.step = 1;\n    },\n\n    showModalTrue(state) {\n      state.showModal = true;\n    },\n\n    showModalFalse(state) {\n      state.showModal = false;\n    },\n\n    fixedScrollTrue(state) {\n      state.fixedScroll = true;\n    },\n\n    fixedScrollFalse(state) {\n      state.fixedScroll = false;\n    },\n\n    handleFixedScroll(state) {\n      state.fixedScroll = !state.fixedScroll;\n    } // quizRouter(i,f,n){\n    //   state.id = i\n    //   state.field = f\n    //   state.num = n\n    //   return { name: 'Quiz', params:{ id:state.id, field:state.field, num:state.num}}\n    // }\n\n\n  } // actions: {\n  //   }\n\n});","map":{"version":3,"names":["createStore","createPersistedState","Cookies","axios","router","signup","board","quiz","getDefaultState","isLoading","id","field","num","questions","quizzes","randomURL","test","notice","step","showModal","fixedScroll","modules","state","plugins","key","paths","storage","window","sessionStorage","getItem","get","setItem","value","set","expires","secure","removeItem","remove","getters","questions2","quizzes2","mutations","setIsLoading","status","reset","console","log","Object","assign","push","getURLs","item","testHandler","noticeHandler","noticeOff","addStep","stepClear","showModalTrue","showModalFalse","fixedScrollTrue","fixedScrollFalse","handleFixedScroll"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport Cookies from 'js-cookie'\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport  signup  from './modules/signup'\nimport  board  from './modules/board'\nimport  quiz  from './modules/quiz'\n\nlet getDefaultState = () => {\n  return {\n    isLoading: false,\n    id: 1,\n    field:'',\n    num:3,\n    questions:[],\n    quizzes:[],\n    randomURL:'',\n    test:null,\n    notice:false,\n    step:1,\n    showModal: false,\n    fixedScroll: false,\n  }}\n\n\nexport default createStore({\n  modules: {\n    signup,\n    board,\n    quiz\n  },\n  state: getDefaultState(),\n  plugins: [\n    createPersistedState({\n      key: 'quizkey',  // 設定しなければ'vuex'\n      paths: [\n        \"signup.djangoUser\",\n        \"signup.emailVerified\",\n        \"signup.apiError\",\n        \"signup.UID\",\n        \"signup.registeredUser\",\n        \"signup.myQuestion\",\n        \"signup.myQuizInfo\",\n      ],  // 保存するモジュール：設定しなければ全部。\n      storage: window.sessionStorage\n    }),\n    createPersistedState({\n      key: 'quiz-session',\n      paths:[\n        // \"board.answeredQuestion\",\n        // \"board.reccomendedQuestion\",\n        \"board.centerTag\",\n        \"quiz.quizNameId\",\n        \"quiz.fieldNameId\",\n        // \"quiz.questionTypeId\"\n        ],\n      storage: window.sessionStorage\n    }),\n    createPersistedState({\n        key: 'tempKey',  // 設定しなければ'vuex'\n        paths: [\n          \"signup.tempUser\",\n          \"signup.userInfo\",\n          \"signup.beingException\",\n          \"signup.reloadForException\",\n        ],  // 保存するモジュール：設定しなければ全部。\n        storage:{\n          getItem:(key) => Cookies.get(key),\n          setItem:(key,value) =>\n            Cookies.set(key,value, {expires: 3, secure: true}),\n          removeItem:(key) => Cookies.remove(key),\n        }\n      })\n  ],\n  getters:{\n    questions2:(state) => state.questions,\n    quizzes2:(state) => state.quizzes,\n    showModal:(state) => state.showModal,\n    fixedScroll:(state) => state.fixedScroll\n  },\n  mutations: {\n    setIsLoading(state, status) {\n      state.isLoading = status\n    },\n    reset(state) {\n      console.log('reset')\n      Object.assign(state, getDefaultState())\n      router.push('/')\n    },\n    getURLs(state,item){\n      state.num = item.num\n      // state.field= field\n      state.id = item.status\n      state.test = item.test\n      state.randomURL = `/quiz/${state.id}`\n    },\n    \n    // getRandomQuestion(state,array){\n    //   for (let i = array.length - 1; i >= 0; i--) {\n    //     let r = Math.floor(Math.random() * (i + 1))\n    //     let tmp = array[i]\n    //     array[i] = array[r]\n    //     array[r] = tmp\n    //     }\n    //   for ( let k =0; k < array.length; k++){\n    //     for (let i = array[k].answer.length - 1; i >= 0; i--) {\n    //       let r = Math.floor(Math.random() * (i + 1))\n    //       let tmp = array[k].answer[i]\n    //       array[k].answer[i] = array[k].answer[r]\n    //       array[k].answer[r] = tmp\n    //       }}\n    //     return array\n    // },\n    // setQuestions:(state,questions) => (state.questions = questions),\n    // setQuiz:(state,quizzes) => (state.quizzes = quizzes),\n    // initial\n    testHandler(state){\n      state.test = false\n    },\n    noticeHandler(state){\n      state.notice = true\n      \n    },\n    noticeOff(state){\n      state.notice = false  \n    },\n    addStep(state){\n      state.step += 1\n    },\n    stepClear(state){\n      state.step = 1\n    },\n    showModalTrue(state){\n      state.showModal = true\n    },\n    showModalFalse(state){\n      state.showModal = false\n    },\n    fixedScrollTrue(state){\n      state.fixedScroll = true\n    },\n    fixedScrollFalse(state){\n      state.fixedScroll = false\n    },\n    handleFixedScroll(state){\n      state.fixedScroll = !state.fixedScroll\n    }\n\n    // quizRouter(i,f,n){\n    //   state.id = i\n    //   state.field = f\n    //   state.num = n\n    //   return { name: 'Quiz', params:{ id:state.id, field:state.field, num:state.num}}\n    // }\n  },\n  // actions: {\n  //   }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}