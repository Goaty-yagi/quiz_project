{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { Bar } from 'vue-chartjs';\nimport Chart from 'chart.js/auto';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, ChartDataLabels);\nexport default {\n  name: 'BarChart',\n  components: {\n    Bar: Bar\n  },\n  props: {\n    chartId: {\n      type: String,\n      default: 'bar-chart'\n    },\n    datasetIdKey: {\n      type: String,\n      default: 'label'\n    },\n    width: {\n      type: Number,\n      default: 400\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    cssClasses: {\n      default: '',\n      type: String\n    },\n    styles: {\n      type: Object,\n      default: function _default() {}\n    },\n    plugins: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    Chart.defaults.color = '#fff';\n    Chart.defaults.plugins.title.display = false;\n    return {\n      index: '',\n      chartData: {\n        labels: ['ひらがな', 'カタカナ', 'ボキャブラリー', 'すうじ'],\n        datasets: [{\n          label: \"超初級正解率\",\n          data: [10, 9, 8.3, 7]\n        }]\n      },\n      //         borderWidth:1,\n      //         //   fill: true,\n      //         //   borderDash: [9],\n      //         //   borderDashOffset: 0.9,\n      //         //   clip: 'object',\n      //         //   order:1,\n      //         //   tension:1,\n      //         //   spanGaps: true,\n      //         //   borderJoinStyle: 'bevel',\n      //         //   pointRotation:90,\n      //         backgroundColor: 'rgba(255, 153, 51, 0.2)',\n      //         borderColor: ' #ff9933',\n      //         pointBackgroundColor: 'rgb(255, 99, 132)',\n      //         pointBorderColor: '#fff',\n      //         pointHoverBackgroundColor: '#fff',\n      //         pointHoverBorderColor: 'red'\n      //     }],\n      // },\n      chartOptions: {\n        responsive: true,\n        onClick: function onClick(e) {\n          var activePoints = this.getElementsAtEventForMode(e, 'nearest', {\n            intersect: true\n          }, false);\n\n          if (activePoints.length) {\n            this.index = activePoints[0].index;\n            console.log(this.index);\n          }\n        } // maintainAspectRatio: true,\n        // plugins: {\n        //     datalabels: {\n        //         display: false\n        //     },\n        //     legend: { display: false\n        //     },\n        // },\n        // scales:{\n        //     r:{\n        //         beginAtZero: true,\n        //         min:0,\n        //         max:10,\n        //         grid: {\n        //             color: \"gray\",\n        //         },\n        //         angleLines: {\n        //             color: 'white',\n        //         },\n        //         ticks: {\n        //             maxTicksLimit: 3,\n        //             display: false\n        //         },\n        //     }\n        // },        \n\n      }\n    };\n  },\n  mounted: function mounted() {\n    var ctx = document.getElementById('bar-chart'); // Chart.defaults.plugins.title.display = false\n    // Chart.defaults.plugins = false\n    // Chart.defaults.font.size = 16\n    // let a = document.getElementsByTagName('canvas')\n\n    console.log('bar-mounted', Chart, // Chart.defaults ,\n    ctx); // ctx.addEventListener( 'click', function( evt ){\n    // Chart.destroy()\n    // console.log('evt', Chart.toString(0)     \n  },\n  watch: {\n    index: function index(v) {\n      this.barChartDetail(v);\n    }\n  },\n  methods: {\n    barChartDetail: function barChartDetail(index) {\n      console.log('going');\n      this.$emit('barChartDetail', index);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","ChartDataLabels","register","name","components","props","chartId","type","String","default","datasetIdKey","width","Number","height","cssClasses","styles","Object","plugins","data","defaults","color","title","display","index","chartData","labels","datasets","label","chartOptions","responsive","onClick","e","activePoints","getElementsAtEventForMode","intersect","length","console","log","mounted","ctx","document","getElementById","watch","v","barChartDetail","methods","$emit"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/charts/Bar.vue"],"sourcesContent":["<template>\n    \n        <Bar\n            :chart-options=\"chartOptions\"\n            :chart-data=\"chartData\"\n            :chart-id=\"chartId\"\n            :dataset-id-key=\"datasetIdKey\"\n            :plugins=\"plugins\"\n            :css-classes=\"cssClasses\"\n            :styles=\"styles\"\n            :width=\"width\"\n            :height=\"height\"\n        />\n    \n</template>\n\n<script>\nimport { Bar } from 'vue-chartjs'\nimport Chart from 'chart.js/auto';\nimport { \n    Chart as \n    ChartJS, \n    Title, \n    Tooltip, \n    Legend, \n    BarElement, \n    CategoryScale, \n    LinearScale } from 'chart.js'\n\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale, ChartDataLabels)\n\nexport default {\n  name: 'BarChart',\n  components: { Bar },\n  props: {\n    chartId: {\n      type: String,\n      default: 'bar-chart'\n    },\n    datasetIdKey: {\n      type: String,\n      default: 'label'\n    },\n    width: {\n      type: Number,\n      default: 400\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    cssClasses: {\n      default: '',\n      type: String\n    },\n    styles: {\n      type: Object,\n      default: () => {}\n    },\n    plugins: {\n      type: Object,\n      default: () => {}\n    }\n  },\n    data() {\n        Chart.defaults.color = '#fff'\n        Chart.defaults.plugins.title.display = false\n        return {\n            index:'',\n            chartData: {\n                labels: [ 'ひらがな', 'カタカナ', 'ボキャブラリー', 'すうじ' ],\n                datasets: [{ \n                    label: \"超初級正解率\",\n                    data: [10, 9, 8.3, 7]}]},\n            //         borderWidth:1,\n            //         //   fill: true,\n            //         //   borderDash: [9],\n            //         //   borderDashOffset: 0.9,\n            //         //   clip: 'object',\n            //         //   order:1,\n            //         //   tension:1,\n            //         //   spanGaps: true,\n            //         //   borderJoinStyle: 'bevel',\n            //         //   pointRotation:90,\n            //         backgroundColor: 'rgba(255, 153, 51, 0.2)',\n            //         borderColor: ' #ff9933',\n            //         pointBackgroundColor: 'rgb(255, 99, 132)',\n            //         pointBorderColor: '#fff',\n            //         pointHoverBackgroundColor: '#fff',\n            //         pointHoverBorderColor: 'red'\n            //     }],\n            // },\n            chartOptions: {\n                responsive: true,\n                onClick(e) {\n                    const activePoints = this.getElementsAtEventForMode(e, 'nearest', {\n                        intersect: true\n                    }, false)\n                    if (activePoints.length) {\n                        this.index = activePoints[0].index;\n                        console.log(this.index);\n                    }\n                }\n                // maintainAspectRatio: true,\n                // plugins: {\n                //     datalabels: {\n                //         display: false\n                //     },\n                //     legend: { display: false\n                //     },\n                // },\n                // scales:{\n                //     r:{\n                //         beginAtZero: true,\n                //         min:0,\n                //         max:10,\n                //         grid: {\n                //             color: \"gray\",\n                //         },\n                //         angleLines: {\n                //             color: 'white',\n                //         },\n                //         ticks: {\n                //             maxTicksLimit: 3,\n                //             display: false\n                //         },\n                //     }\n                // },        \n            }\n        }\n    },\n    mounted(){\n         var ctx = document.getElementById( 'bar-chart' );\n        // Chart.defaults.plugins.title.display = false\n        // Chart.defaults.plugins = false\n        \n        // Chart.defaults.font.size = 16\n            // let a = document.getElementsByTagName('canvas')\n        console.log('bar-mounted',Chart,\n        // Chart.defaults ,\n        ctx)\n        // ctx.addEventListener( 'click', function( evt ){\n            // Chart.destroy()\n            // console.log('evt', Chart.toString(0)     \n\n\n    },\n    watch:{\n        index:function(v){this.barChartDetail(v)}\n    },\n    methods:{\n        barChartDetail(index){\n            console.log('going')\n            this.$emit('barChartDetail',index)\n        }\n    }\n}\n</script>\n<style scoped lang=\"scss\">\n// canvas{\n//     padding: 20rem;\n// }\n// .chart-container{\n    \n// }\n\n</style>"]},"metadata":{},"sourceType":"module"}