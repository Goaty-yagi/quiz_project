{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"l-wrapper\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"cropper-outer-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"cropper-wrapper\"\n};\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.previewFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    ref: \"image\",\n    src: $data.previewFile\n  }, null, 8, _hoisted_4), $data.previewFile ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"save-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.chancel && $options.chancel(...args))\n  }, \"chancel\")) : _createCommentVNode(\"\", true), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.saveImg && $options.saveImg(...args))\n  }, \"save\")])])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;;EACFA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;;uBAFnBC,oBAQM,KARN,cAQM,CAPuCC,mCAAzCD,oBAMM,KANN,cAMM,CALFE,oBAIM,KAJN,cAIM,CAHFA,oBAAoC,KAApC,EAAoC;IAA/BC,GAAG,EAAC,OAA2B;IAAlBC,GAAG,EAAEH;EAAa,CAApC,sBAGE,EAFgCA,mCAAlCD,oBAAgF,QAAhF,EAAgF;UAAA;IAAxED,KAAK,EAAC,aAAkE;IAAhCM,OAAK,yCAAEC,6CAAF;EAA2B,CAAhF,EAAgE,SAAhE,kCAEE,EADFJ,oBAAsC,QAAtC,EAAsC;IAA7BG,OAAK,yCAAEC,6CAAF;EAAwB,CAAtC,EAAyB,MAAzB,CACE,CAJN,CAKE,CANN,kCAOE,CARN","names":["class","_createElementBlock","$data","_createElementVNode","ref","src","onClick","$options"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/CropperField.vue"],"sourcesContent":["<template>\n    <div class='l-wrapper'>\n        <div class=\"cropper-outer-wrapper\" v-if=\"previewFile\">\n            <div class='cropper-wrapper'>\n                <img ref='image' :src=\"previewFile\">\n                <button class='save-button' v-if='previewFile' @click='chancel'>chancel</button>\n                <button @click=\"saveImg\">save</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Cropper from 'cropperjs';\nexport default {\n    \n    data(){\n        return{\n            previewFile:'',\n            canvas:''\n        }\n    },\n    props:[\n        'selectedFile',\n    ],\n    beforeMount(){\n        this.previewFile = this.selectedFile\n    },\n    mounted(){\n        console.log('cropperOpen',this.previewFile)\n        this.imageCropper()\n    },\n    methods:{\n        saveImg(){\n            this.canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minCropBoxHeight: 300,\n                minCropBoxWidth: 300,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n            });\n            console.log(this.canvas)\n            this.$emit('getCanvas', this.canvas)\n            this.$emit('handleShowCropper')\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: false,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.previewFile=null\n            this.$emit('handleShowCropper')\n        },\n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}