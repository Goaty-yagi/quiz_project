{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  class: \"home\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"lds-dual-ring\"\n}, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = [_hoisted_2];\nvar _hoisted_4 = {\n  key: 0\n};\nvar _hoisted_5 = [\"src\"];\n\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", null, \"save\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading\n    }])\n  }, _hoisted_3, 2\n  /* CLASS */\n  ), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers(function () {\n      return $options.registerUserOndDjango && $options.registerUserOndDjango.apply($options, arguments);\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = function () {\n      return $options.getImage && $options.getImage.apply($options, arguments);\n    })\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), $data.selectedFile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    ref: \"image\",\n    src: $data.selectedFile\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5)])) : _createCommentVNode(\"v-if\", true), _hoisted_6], 32\n  /* HYDRATE_EVENTS */\n  )]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;8BAEPC,oBAAiC,KAAjC,EAAiC;EAA5BD,KAAK,EAAC;AAAsB,CAAjC,EAA0B,IAA1B,EAA0B;AAAA;AAA1B;;kBAAAE;;;;;;8BAOMD,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;;uBATVE,oBAWM,KAXN,cAWM,CAVJF,oBAEM,KAFN,EAEM;IAFDD,KAAK,mBAAC,kCAAD,EAAmC;MAAA,cAA8BI,YAAOC,KAAP,CAAaC;IAA3C,CAAnC;EAEJ,CAFN;;EAAA,CAUI,EAPHL,oBAMQ,MANR,EAMQ;IANDM,QAAM;MAAA,OAAUC,2FAAV;IAAA,GAA+B,WAA/B;EAML,CANR,GACKP,oBAAsC,OAAtC,EAAsC;IAA/BQ,IAAI,EAAC,MAA0B;IAAlBC,QAAM;MAAA,OAAEF,iEAAF;IAAA;EAAY,CAAtC;;EAAA,GACWG,oCAAXR,oBAEM,KAFN,EAEMS,UAFN,EAEM,CADFX,oBAAqC,KAArC,EAAqC;IAAhCY,GAAG,EAAC,OAA4B;IAAnBC,GAAG,EAAEH;EAAc,CAArC;;EAAA,aACE,CAFN,wCAGEI,WALP;;EAAA,CAOG,CAXN","names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_ctx","state","isLoading","onSubmit","$options","type","onChange","$data","_hoisted_4","ref","src","_hoisted_6"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n      <div class=\"lds-dual-ring\"></div>\n    </div>\n     <form @submit.prevent='registerUserOndDjango' >\n          <input type=\"file\" @change='getImage'>\n          <div v-if=\"selectedFile\">\n              <img ref='image' :src=\"selectedFile\">\n          </div>\n            <button>save</button>\n      </form>\n  </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport axios from 'axios'\nexport default {\n  name:'questions',\n  data(){\n    return{\n      st:'o',\n      id: 5,\n      selectedFile:''\n    }\n  },\n  methods:{\n    async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files\n            await console.log()\n            // this.imageCropper()\n        },\n    registerUserOndDjango(){\n            console.log('start add')\n            const formData = new FormData()\n            formData.append('thumbnail',this.image[0])\n            formData.append('UID','kokomoko')\n            formData.append('name','mokokoko')\n            formData.append('email','ko@k.com')\n            formData.append('grade','kokomoko')\n            formData.append('country','japan')\n            axios({\n                method: 'post',\n                url: '/api/user/',\n                data: formData\n                // {\n                //   headers:{'Content-Type': \"multipart/form-data\"},\n                //     UID: 'kokomoko',\n                //     name: 'mokkoro',\n                //     email: 'koko@k.com',\n                //     grade: 'unko',\n                //     thumbnail: this.selectedFile,\n                //     country: 'japan'\n                // },\n            })\n        },\n      async userUpdate(){\n            const formData = new FormData()\n            formData.append('thumbnail',this.selectedFile)\n            console.log('getthumb',formData.get('thumbnail'))\n          await axios.patch(`/api/user/${this.$route.params.uid}`,\n              formData, formData.name\n          )\n        //   ({\n        //       methods: 'patch',\n        //       url: `/api/user/${this.$route.params.uid}`,\n        //       data:{\n        //         //   thumbnail: this.selectedFile\n        //         name: 'unko'\n        //             }\n        //         })      \n            },\n    quizRouter(i,f,n){\n      return { name: 'Quiz', params:{ id:i, field:f, num:n}}\n    },\n    ...mapActions(['getquiz','getquestions'])\n    // unko(){\n    //   this.$store.commit('unko',)\n    // }\n    },\n    \n    created(){\n      // this.$store.commit('setNum',this.id)\n      // this.getquiz()\n      // this.getquestions()\n    },\n    \n  // mounted(){\n  //     this.st = this.$store.commit('unko')\n  //     console.log(this.st)\n  // }\n  computed: mapGetters(['questions','quizzes'])\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}