{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-7cbffb3a\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"account-wrapper\"\n};\nvar _hoisted_2 = {\n  key: 1,\n  class: \"account\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"accountdayo\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_4 = {\n  class: \"cropper-wrapper\"\n};\nvar _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Sent = _resolveComponent(\"Sent\");\n\n  var _component_Thumbnail = _resolveComponent(\"Thumbnail\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <div v-if='emailVerified==false'>\\n        <div class='main-notification-wrapper'>\\n            <div class='main-notice-wrapper'>\\n                <img class='main-image' src=\\\"@/assets/logo.png\\\">\\n                <p class='main-text1'>メール承認が完了していません。</p>\\n                <p class='main-text1'>メール承認を完了してください。</p>\\n                <button @click='resent' onclick=\\\"disabled = true\\\" class='main-text1'>承認メールを送る。</button>                      \\n            </div>\\n        </div>\\n      </div> \"), _withDirectives(_createVNode(_component_Sent, null, null, 512\n  /* NEED_PATCH */\n  ), [[_vShow, $data.showSent]]), $data.showThumbnail ? (_openBlock(), _createBlock(_component_Thumbnail, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), this.$store.state.signup.emailVerified ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: $data.userData.thumbnail\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5), _createElementVNode(\"p\", {\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.handleShowThumbnail && $options.handleShowThumbnail.apply($options, arguments);\n    })\n  }, \"画像を変更する\")]), _createElementVNode(\"p\", null, \" Username \" + _toDisplayString($data.userData.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \" grade \" + _toDisplayString($data.userData.grade), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;;;;EACOA,KAAK,EAAC;;;;EAaFA,KAAK,EAAC;;;;sBACTC,oBAAkB,GAAlB,EAAkB,IAAlB,EAAG,aAAH,EAAc;EAAA;EAAd;;;;EACKD,KAAK,EAAC;;;;;;;;uBAfjBE,oBAsBM,KAtBN,cAsBM,CArBJC,ugBAqBI,kBAXFC,aAAyBC,eAAzB,EAAyB,IAAzB,EAAyB,IAAzB,EAAyB;EAAA;EAAzB,GAAyB,UAAXC,eAAW,EAWvB,EAVeA,qCAAjBC,aAAiCC,oBAAjC,EAAiC;IAAAC;EAAA,CAAjC,sCAUE,OAT+BC,OAAOC,MAAMC,OAAOC,+BAArDX,oBAQM,KARN,cAQM,CAPJY,UAOI,EANJb,oBAGM,KAHN,cAGM,CAFFA,oBAAsC,KAAtC,EAAsC;IAA1Bc,GAAG,EAAET,eAASU;EAAY,CAAtC;;EAAA,aAEE,EADFf,oBAA2C,GAA3C,EAA2C;IAAvCgB,OAAK;MAAA,OAAEC,uFAAF;IAAA;EAAkC,CAA3C,EAAgC,SAAhC,CACE,CAHN,CAMI,EAFJjB,oBAAmC,GAAnC,EAAmC,IAAnC,EAAG,eAAUkB,iBAAGb,eAASc,IAAZ,CAAb,EAA6B;EAAA;EAA7B,CAEI,EADJnB,oBAAiC,GAAjC,EAAiC,IAAjC,EAAG,YAAOkB,iBAAGb,eAASe,KAAZ,CAAV,EAA2B;EAAA;EAA3B,CACI,CARN,sCASE,CAtBN","names":["class","_createElementVNode","_createElementBlock","_createCommentVNode","_createVNode","_component_Sent","$data","_createBlock","_component_Thumbnail","key","$store","state","signup","emailVerified","_hoisted_3","src","thumbnail","onClick","$options","_toDisplayString","name","grade"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Account.vue"],"sourcesContent":["<template>\n  <div class=\"account-wrapper\">\n    <!-- <div v-if='emailVerified==false'>\n        <div class='main-notification-wrapper'>\n            <div class='main-notice-wrapper'>\n                <img class='main-image' src=\"@/assets/logo.png\">\n                <p class='main-text1'>メール承認が完了していません。</p>\n                <p class='main-text1'>メール承認を完了してください。</p>\n                <button @click='resent' onclick=\"disabled = true\" class='main-text1'>承認メールを送る。</button>                      \n            </div>\n        </div>\n      </div> -->\n      <Sent v-show='showSent'/>\n      <Thumbnail v-if=\"showThumbnail\"/>\n      <div class='account'  v-if='this.$store.state.signup.emailVerified'>\n        <p>accountdayo</p>\n        <div class=\"cropper-wrapper\">\n            <img v-bind:src=\"userData.thumbnail\"/>\n            <p @click='handleShowThumbnail'>画像を変更する</p>\n        </div>\n        <p> Username {{ userData.name}}</p>\n        <p> grade {{ userData.grade}}</p>\n      </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport 'cropperjs/dist/cropper.css';\nimport  Thumbnail from '@/components/account/Thumbnail.vue'\nimport Sent from '@/components/signin/Sent.vue'\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nexport default{\n  setup(){\n    const store = useStore()\n    return{\n      user: computed(() => store.state.signup.user),\n      email: computed(() => store.state.signup.email),\n      password: computed(() => store.state.signup.password),\n      emailVerified: computed(() => store.state.signup.emailVerified),\n    }\n  },\n  data(){\n    return{\n      showSent:false,\n      error:'',\n      userData:'',\n      showThumbnail:false\n    }\n  },\n  components: {\n    Sent,\n    Thumbnail\n  },\n  mounted(){\n    console.log('account mounted',this.$route.params.uid)\n    this.getUserData()\n  },\n  methods:{\n      async getUserData(){\n          await axios\n            .get(`/api/user/${this.$route.params.uid}`)\n            .then(response => {\n                this.userData = response.data\n                console.log('inGet', this.userData)\n                })\n            .catch(error => {\n                console.log(error)\n                })\n            },\n    async resent(){\n          try{\n              await this.$store.dispatch('sendEmailVerify')\n              this.handleShowSent()\n              console.log('showsent:',this.showSent)\n          }catch(err){\n            this.error = err\n            console.log(this.error)\n          }\n    },\n    handleShowSent(){\n      this.showSent = true\n    },\n    handleShowThumbnail(){\n        this.showThumbnail = true\n    }        \n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"style/_variables.scss\";\n// @import 'cropperjs/dist/cropper.css';\n.main-notification-wrapper{\n        top:0;\n        position: fixed;\n        background:rgba(0,0,0,0.5);\n        width:100vw;\n        height:100vh;\n        flex-direction: column;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .main-notice-wrapper{\n        border: solid $base-color;\n        border-radius: 2vh;\n        background:$back-white;\n        text-align: center;       \n        position:relative;\n        padding-top:1.5rem;\n        height:30rem;\n        width: 20rem;\n        }\n    .main-image{\n        width:15%;\n        height:auto;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .main-text1{\n        font-size:1rem;\n        font-weight: bold;\n        margin:2rem;\n    }\n    img {\n        border-radius: 50%; \n        width:  5rem;   \n        height: 5rem;       \n    }\n    .cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}