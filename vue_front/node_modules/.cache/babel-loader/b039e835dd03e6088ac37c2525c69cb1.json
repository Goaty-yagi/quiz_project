{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue","mtime":1651038530598},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC1zZWFyY2gtcGFyYW1zLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IENyb3BwZXIgZnJvbSAnY3JvcHBlcmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlOiAnJywKICAgICAgaW1hZ2U6ICcnLAogICAgICBzZWxlY3RlZEZpbGU6IG51bGwsCiAgICAgIGNvbXBvSGFuZGxlOiBmYWxzZSwKICAgICAgY3JvcHBlcjoge30sCiAgICAgIGRlc3RpbmF0aW9uOiB7fSwKICAgICAgaW5wdXRGaWxlOiAnJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyB0aGlzLmNyb3BwZXIoKQogICAgdGhpcy5hdXRvQ2xpY2soKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEltYWdlOiBmdW5jdGlvbiBnZXRJbWFnZShldmVudCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXZlbnQnLCBldmVudCk7CiAgICAgICAgICAgICAgICBfdGhpcy5zZWxlY3RlZEZpbGUgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGV2ZW50LnRhcmdldC5maWxlc1swXSk7CiAgICAgICAgICAgICAgICBfdGhpcy5pbWFnZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKF90aGlzLmltYWdlLCAnaW1nJywgX3RoaXMuc2VsZWN0ZWRGaWxlKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX3RoaXMuaW1hZ2VDcm9wcGVyKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBpbWFnZUNyb3BwZXI6IGZ1bmN0aW9uIGltYWdlQ3JvcHBlcigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLmNyb3BwZXIgPSBuZXcgQ3JvcHBlcihfdGhpczIuJHJlZnMuaW1hZ2UsIHsKICAgICAgICAgICAgICAgICAgem9vbWFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgIHNjYWxhYmxlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgem9vbU9uVG91Y2g6IHRydWUsCiAgICAgICAgICAgICAgICAgIGFzcGVjdFJhdGlvOiAxLAogICAgICAgICAgICAgICAgICBkcmFnTW9kZTogJ21vdmUnLAogICAgICAgICAgICAgICAgICBtaW5Db250YWluZXJIZWlnaHQ6IDQwMCwKICAgICAgICAgICAgICAgICAgY3JvcDogZnVuY3Rpb24gY3JvcChldmVudCkgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC54KTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwueSk7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLndpZHRoKTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwuaGVpZ2h0KTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwucm90YXRlKTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwuc2NhbGVYKTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwuc2NhbGVZKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNoYW5jZWw6IGZ1bmN0aW9uIGNoYW5jZWwoKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRGaWxlID0gbnVsbDsKICAgICAgdGhpcy5zaG93VGh1bWJuYWlsRmFsc2UoKTsKICAgIH0sCiAgICBhdXRvQ2xpY2s6IGZ1bmN0aW9uIGF1dG9DbGljaygpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZpbGVVcGxvYWQiKS5jbGljaygpOwogICAgICB0aGlzLmlucHV0RmlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWxlVXBsb2FkIik7CiAgICAgIGRvY3VtZW50LmJvZHkub25mb2N1cyA9IHRoaXMuZ2V0RXZlbnQ7CiAgICB9LAogICAgZ2V0RXZlbnQ6IGZ1bmN0aW9uIGdldEV2ZW50KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChfdGhpczMuaW5wdXRGaWxlLnZhbHVlLmxlbmd0aCkge30gZWxzZSB7CiAgICAgICAgICBfdGhpczMuc2hvd1RodW1ibmFpbEZhbHNlKCk7CiAgICAgICAgfQoKICAgICAgICBkb2N1bWVudC5ib2R5Lm9uZm9jdXMgPSBudWxsOwogICAgICB9LCA1MDApOwogICAgfSwKICAgIG9wZW5GaWxlT25DbGljazogZnVuY3Rpb24gb3BlbkZpbGVPbkNsaWNrKCkgewogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZmlsZVVwbG9hZCIpLnZhbHVlID0gIiI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWxlVXBsb2FkIikuZmlsZXMubGVuZ3RoID0gMDsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZpbGVVcGxvYWQiKS5jbGljaygpOwoKICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmaWxlVXBsb2FkIikuZmlsZXMubGVuZ3RoID49IDEpIHsvL0RvIHNvbWV0aGluZyAKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNob3dUaHVtYm5haWxGYWxzZSgpOyAvL0NhbmNlbCBidXR0b24gaGFzIGJlZW4gY2FsbGVkLgogICAgICB9CiAgICB9LAogICAgLy8gZ2V0Q3JvcHBlZFVSTCgpewogICAgLy8gICAgIGNvbnNvbGUubG9nKCdjcm9wcGVkVVJMJykKICAgIC8vICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3JvcC1idG4nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKICAgIC8vICAgICByZXN1bHRJbWdVcmwgPSB0aGlzLmNyb3BwZXIuZ2V0Q3JvcHBlZENhbnZhcygpLnRvRGF0YVVSTCgpOwogICAgLy8gICAgIHZhciByZXN1bHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdWx0LWltZycpOwogICAgLy8gICAgIHJlc3VsdC5zcmMgPSByZXN1bHRJbWdVcmw7CiAgICAvLyAgICAgIH0pOwogICAgLy8gfSwKICAgIHVzZXJVcGRhdGU6IGZ1bmN0aW9uIHVzZXJVcGRhdGUoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIGNhbnZhcyA9IHRoaXMuY3JvcHBlci5nZXRDcm9wcGVkQ2FudmFzKHsKICAgICAgICB3aWR0aDogMTYwLAogICAgICAgIGhlaWdodDogOTAsCiAgICAgICAgbWluQ3JvcEJveEhlaWdodDogMzAwLAogICAgICAgIG1pbkNyb3BCb3hXaWR0aDogMzAwLAogICAgICAgIG1heFdpZHRoOiA0MDk2LAogICAgICAgIG1heEhlaWdodDogNDA5NiwKICAgICAgICBmaWxsQ29sb3I6ICcjZmZmJywKICAgICAgICBpbWFnZVNtb290aGluZ0VuYWJsZWQ6IGZhbHNlLAogICAgICAgIGltYWdlU21vb3RoaW5nUXVhbGl0eTogJ2hpZ2gnCiAgICAgIH0pOwogICAgICBjYW52YXMudG9CbG9iKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhibG9iKSB7CiAgICAgICAgICB2YXIgZm9ybURhdGE7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3RodW1ibmFpbCcsIGJsb2IsICIiLmNvbmNhdChfdGhpczQuaW1hZ2UsICIucG5nIikpLCBjb25zb2xlLmxvZygnZ2V0dGh1bWInLCBmb3JtRGF0YS5nZXQoJ3RodW1ibmFpbCcpKSwgYXhpb3MucGF0Y2goIi9hcGkvdXNlci8iLmNvbmNhdChfdGhpczQuJHJvdXRlLnBhcmFtcy51aWQpLCBmb3JtRGF0YSk7CgogICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSwgJ2ltYWdlL3BuZycpOwogICAgICB0aGlzLnNob3dUaHVtYm5haWxGYWxzZSgpOwogICAgICBsb2NhdGlvbi5yZWxvYWQoKTsgLy8gdGhpcy4kcm91dGVyLmdvKHtwYXRoOiB0aGlzLiRyb3V0ZXIuY3VycmVudFJvdXRlLnBhdGgsIGZvcmNlOiB0cnVlfSkKICAgIH0sCiAgICBzaG93VGh1bWJuYWlsRmFsc2U6IGZ1bmN0aW9uIHNob3dUaHVtYm5haWxGYWxzZSgpIHsKICAgICAgdGhpcy4kZW1pdCgnc2hvd1RodW1ibmFpbEZhbHNlJyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class='thumbnail-wrapper l-wrapper'>\n        <form @submit.prevent='userUpdate'>\n            <input id=\"fileUpload\" type=\"file\" @change='getImage' hidden enctype=\"multipart/form-data\">\n            <div class=\"cropper-outer-wrapper\" v-if=\"selectedFile\">\n                <div class='cropperinner-wrapper'>\n                    <img ref='image' :src=\"selectedFile\" style=\"width: 300px; height: 300px;\">\n                </div>\n                <div class=\"thumbnail-button-container\">\n                    <button class='btn-base-white-db-sq thumbnail-save-button'>save</button>\n                    <button class='btn-tr-white-base-sq thumbnail-cancel-button' v-if='selectedFile' @click='chancel'>cancel</button>\n                </div>\n            </div>\n        </form>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Cropper from 'cropperjs';\nexport default {\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            compoHandle: false,\n            cropper:{},\n            destination:{},\n            inputFile:'',\n        }\n    },\n    mounted(){\n        // this.cropper()\n        this.autoClick()\n    },\n    methods:{\n        async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files[0]\n            await console.log(this.image,'img',this.selectedFile)\n            this.imageCropper()\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: true,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            dragMode: 'move',\n            minContainerHeight:400,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n            this.showThumbnailFalse()\n        },\n        autoClick(){\n            document.getElementById(\"fileUpload\").click()\n            this.inputFile = document.getElementById(\"fileUpload\");\n            document.body.onfocus = this.getEvent\n        },\n        getEvent(){\n            setTimeout(() => {\n                if (this.inputFile.value.length) {\n                \n                } else {\n                this.showThumbnailFalse()\n                }\n                document.body.onfocus = null;\n            }, 500);\n        },\n        openFileOnClick(){\n            document.getElementById(\"fileUpload\").value = \"\";\n            document.getElementById(\"fileUpload\").files.length = 0;            \n            document.getElementById(\"fileUpload\").click();\n            if(document.getElementById(\"fileUpload\").files.length >= 1){\n                //Do something \n            }\n            else{\n                this.showThumbnailFalse()\n                //Cancel button has been called.\n            }\n        },\n        // getCroppedURL(){\n        //     console.log('croppedURL')\n        //     document.getElementById('crop-btn').addEventListener('click', function () {\n        //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n        //     var result = document.getElementById('result-img');\n        //     result.src = resultImgUrl;\n        //      });\n        // },\n        userUpdate(){\n            const canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minCropBoxHeight: 300,\n                minCropBoxWidth: 300,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n                });\n            canvas.toBlob(async (blob) => {\n            const formData = new FormData();\n            formData.append('thumbnail',blob, `${this.image}.png`),\n            console.log('getthumb',formData.get('thumbnail')),\n            axios.patch(`/api/user/${this.$route.params.uid}`,\n                formData\n            )\n            }, 'image/png')\n            this.showThumbnailFalse()\n            location.reload()\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        },\n        showThumbnailFalse(){\n            this.$emit('showThumbnailFalse')\n        }\n    }\n}\n</script>\n\n<style  lang=\"scss\">\n// not scoped for cropper\n@import \"style/_variables.scss\";\n\n.thumbnail-wrapper{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    /* background: ; */\n    overflow:scroll;  \n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n.thumbnail-button-container{\n    display: flex;\n    justify-content: center;\n    margin-top: 1rem;\n    .thumbnail-save-button{\n        display: flex;\n        justify-content: center;\n        font-size: 1.2rem;\n        margin-right: 0.5rem;\n        min-width: 5rem;\n        min-height: 2rem;\n        font-weight: bold;\n    }\n    .thumbnail-cancel-button{\n        display: flex;\n        justify-content: center;\n        font-size: 1.2rem;\n        margin-left: 0.5rem;\n        min-width: 5rem;\n        min-height: 2rem;\n        font-weight: bold;\n    }\n}\n</style>"],"sourceRoot":""}]}