{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/QuizTest.vue?vue&type=template&id=ccf2aa12&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/QuizTest.vue","mtime":1651991441758},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgeyBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgbm9ybWFsaXplQ2xhc3MgYXMgX25vcm1hbGl6ZUNsYXNzLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoU2NvcGVJZCA9IGZ1bmN0aW9uIF93aXRoU2NvcGVJZChuKSB7CiAgcmV0dXJuIF9wdXNoU2NvcGVJZCgiZGF0YS12LWNjZjJhYTEyIiksIG4gPSBuKCksIF9wb3BTY29wZUlkKCksIG47Cn07Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInF1aXotd3JhcHBlciIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJtYWluLXdyYXBwZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6ICJsZHMtZHVhbC1yaW5nIgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzQgPSBbX2hvaXN0ZWRfM107CnZhciBfaG9pc3RlZF81ID0gewogIGtleTogMAp9OwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgICBjbGFzczogInF1aXotZGVzY3JpcHRpb24gdGl0bGUtd2hpdGUiCiAgfSwgIuODhuOCueODiOWVj+mhjCIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzcgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAiZmluaXNoVGVzdCIKfTsKdmFyIF9ob2lzdGVkXzggPSB7CiAgY2xhc3M6ICJxdWl6LWNvdW50YWluZXIiCn07CnZhciBfaG9pc3RlZF85ID0gewogIGNsYXNzOiAicXVlc3Rpb24td3JhcHBlciIKfTsKdmFyIF9ob2lzdGVkXzEwID0gewogIGNsYXNzOiAicXVlc3Rpb24taGVhZGVyIgp9OwoKdmFyIF9ob2lzdGVkXzExID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpIiwgewogICAgY2xhc3M6ICJxIgogIH0sICJRIiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMTIgPSB7CiAgY2xhc3M6ICJxdWVzdGlvbi1ib2R5Igp9Owp2YXIgX2hvaXN0ZWRfMTMgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAiaW1hZ2UtY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfMTQgPSBbInNyYyJdOwp2YXIgX2hvaXN0ZWRfMTUgPSB7CiAgY2xhc3M6ICJhbnN3ZXItd3JhcHBlciIKfTsKdmFyIF9ob2lzdGVkXzE2ID0gWyJvbkNsaWNrIiwgImRpc2FibGVkIl07CnZhciBfaG9pc3RlZF8xNyA9IHsKICBjbGFzczogImFuc3dlci1zZWxlY3QtYmFzZXMiCn07CnZhciBfaG9pc3RlZF8xOCA9IHsKICBjbGFzczogImFuc3dlci1zZWxlY3QiCn07CnZhciBfaG9pc3RlZF8xOSA9IHsKICBjbGFzczogInNlbGVjdGVyIgp9Owp2YXIgX2hvaXN0ZWRfMjAgPSB7CiAgY2xhc3M6ICJhbnN3ZXItbGFiZWwtYmFzZXMiCn07CnZhciBfaG9pc3RlZF8yMSA9IHsKICBjbGFzczogImFuc3dlci1sYWJlbCIKfTsKdmFyIF9ob2lzdGVkXzIyID0gewogIGNsYXNzOiAic2VsZWN0ZWQtYW5zd2VyLWJhc2VzIgp9Owp2YXIgX2hvaXN0ZWRfMjMgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAic2VsZWN0ZWQtYW5zd2VyLW9yZGVyIgp9Owp2YXIgX2hvaXN0ZWRfMjQgPSB7CiAgY2xhc3M6ICJyZXN1bHQtYW5zd2VyLW9yZGVyIgp9Owp2YXIgX2hvaXN0ZWRfMjUgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAib3JkZXIiCn07CnZhciBfaG9pc3RlZF8yNiA9IHsKICBrZXk6IDEKfTsKCnZhciBfaG9pc3RlZF8yNyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgIGNsYXNzOiAiZmFzIGZhLWNoZWNrIgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzI4ID0gW19ob2lzdGVkXzI3XTsKdmFyIF9ob2lzdGVkXzI5ID0gewogIGtleTogMSwKICBjbGFzczogImZhcyBmYS1jaGVjayIKfTsKdmFyIF9ob2lzdGVkXzMwID0gewogIGtleTogMiwKICBjbGFzczogImZhciBmYS1jaXJjbGUiCn07CnZhciBfaG9pc3RlZF8zMSA9IHsKICBrZXk6IDMsCiAgY2xhc3M6ICJmYXMgZmEtdGltZXMiCn07CnZhciBfaG9pc3RlZF8zMiA9IHsKICBrZXk6IDEsCiAgY2xhc3M6ICJidXR0b24tcXVpei1jb250YWluZXIiCn07CnZhciBfaG9pc3RlZF8zMyA9IFsib25DbGljayJdOwp2YXIgX2hvaXN0ZWRfMzQgPSB7CiAga2V5OiAyLAogIGNsYXNzOiAiYnV0dHVuLWluLXJlc3VsdCIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9UZXN0UmVzdWx0ID0gX3Jlc29sdmVDb21wb25lbnQoIlRlc3RSZXN1bHQiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogX25vcm1hbGl6ZUNsYXNzKFsiaXMtbG9hZGluZy1iYXIgaGFzLXRleHQtY2VudGVyZWQiLCB7CiAgICAgICdpcy1sb2FkaW5nJzogX2N0eC4kc3RvcmUuc3RhdGUuaXNMb2FkaW5nCiAgICB9XSkKICB9LCBfaG9pc3RlZF80LCAyCiAgLyogQ0xBU1MgKi8KICApLCAkZGF0YS5maW5pc2hUZXN0ID09IGZhbHNlICYmIF9jdHguJHN0b3JlLnN0YXRlLmlzTG9hZGluZyA9PSBmYWxzZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzUsIFtfaG9pc3RlZF82LCAkZGF0YS5maW5pc2hUZXN0ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfNywgIlwiZmluaXNoVGVzdCBpcyBUUlVFXCIiICsgX3RvRGlzcGxheVN0cmluZygkZGF0YS5maW5pc2hUZXN0KSwgMQogIC8qIFRFWFQgKi8KICApKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOCwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoX2N0eC5xdWVzdGlvbnMuc2xpY2UoJGRhdGEucGFnaW5hdGlvbi5hLCAkZGF0YS5wYWdpbmF0aW9uLmIpLCBmdW5jdGlvbiAocXVlc3Rpb24sIHF1ZXN0aW9uaW5kZXgpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIHsKICAgICAgY2xhc3M6ICJxdWVzdGlvbi1sb29wIiwKICAgICAga2V5OiBxdWVzdGlvbmluZGV4CiAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2hvaXN0ZWRfMTEsIF9jcmVhdGVUZXh0Vk5vZGUoIuesrCIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnF1ZXN0aW9uTGVuZ3RoRm9ySFRNTCkgKyAi5ZWPIiwgMQogICAgLyogVEVYVCAqLwogICAgKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMiwgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5nZXRRdWVzdGlvblN0YXR1cyhxdWVzdGlvbi5sYWJlbCwgcXVlc3Rpb24uc3RhdHVzWzBdKSkgKyBfdG9EaXNwbGF5U3RyaW5nKHF1ZXN0aW9uLnF1aXpfbGV2ZWwpLCAxCiAgICAvKiBURVhUICovCiAgICApXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8ZGl2IDpjbGFzcz0nc2hvd1BpYyhxdWVzdGlvbi5pbWFnZSknPiAiKSwgcXVlc3Rpb24uaW1hZ2UgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xMywgW19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgICAgY2xhc3M6ICJpbWFnZSIsCiAgICAgIHNyYzogcXVlc3Rpb24uZ2V0X2ltYWdlCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBfaG9pc3RlZF8xNCldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBhbnN3ZXIgcGFydCAiKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIHF1ZXN0aW9udHlwZSAzIGlzICfpgbjmip4nXG4gICAgICAgICAgICAgICAgICAgICAgICDvvJQgaXMgJ+S4puOBs+abv+OBiCdcbiAgICAgICAgICAgICAgICAgICAgICAgIDUgaXMgJ+WkmuetlCcgIiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE1LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChxdWVzdGlvbi5hbnN3ZXIsIGZ1bmN0aW9uIChhbnN3ZXIsIGFuc3dlcmluZGV4KSB7CiAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImJ1dHRvbiIsIHsKICAgICAgICBjbGFzczogX25vcm1hbGl6ZUNsYXNzKFsiYW5zd2VyLWxvb3AiLCB7CiAgICAgICAgICAnc2VsZWN0ZWQtYW5zd2VyJzogJGRhdGEuc2VsZWN0ZWRJbmRleE51bSA9PSBhbnN3ZXJpbmRleCB8fCBhbnN3ZXJpbmRleCArIDEgaW4gJGRhdGEuc2VsZWN0ZWRPcmRlckFuc3dlciwKICAgICAgICAgICdpcy1jb3JyZWN0LWFuc3dlcic6ICRkYXRhLnJlc3VsdEhhbmRsZURpY3QuaXNDb3JyZWN0ICYmIGFuc3dlci5pc19jb3JyZWN0IHx8ICRkYXRhLnJlc3VsdEhhbmRsZURpY3QuYW5zd2VyQWxsVHJ1ZVR5cGU0IHx8ICRkYXRhLnJlc3VsdEhhbmRsZURpY3QuYW5zd2VySURUeXBlNFthbnN3ZXIuYW5zd2VyX2lkXSwKICAgICAgICAgICdpc25vdC1jb3JyZWN0LWFuc3dlcic6ICRkYXRhLnJlc3VsdEhhbmRsZURpY3QuaXNOb3RDb3JyZWN0ICYmICRkYXRhLnJlc3VsdEhhbmRsZURpY3QuYW5zd2VySURUeXBlMyA9PSBhbnN3ZXIuaWQgfHwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5hbnN3ZXJJRFR5cGU1W2Fuc3dlci5pZF0gPT0gZmFsc2UgfHwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5hbnN3ZXJJRFR5cGU0W2Fuc3dlci5hbnN3ZXJfaWRdID09IGZhbHNlCiAgICAgICAgfV0pLAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZSkgewogICAgICAgICAgcmV0dXJuICRkYXRhLnJlc3VsdCA9PSBmYWxzZSAmJiAkb3B0aW9ucy5vbkNsaWNrKGFuc3dlcmluZGV4LCBhbnN3ZXIsIHF1ZXN0aW9uKTsKICAgICAgICB9LAogICAgICAgIGRpc2FibGVkOiAkZGF0YS5tYXhTZWxlY3RSZWFjaCAmJiBhbnN3ZXIuaWQgaW4gJGRhdGEuc2VsZWN0ZWRBbnN3ZXIgPT0gZmFsc2UsCiAgICAgICAga2V5OiBhbnN3ZXJpbmRleAogICAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTcsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xOCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE5LCBfdG9EaXNwbGF5U3RyaW5nKFN0cmluZy5mcm9tQ2hhckNvZGUoYW5zd2VyaW5kZXggKyA2NSkpLCAxCiAgICAgIC8qIFRFWFQgKi8KICAgICAgKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIwLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMjEsIF90b0Rpc3BsYXlTdHJpbmcoYW5zd2VyLmxhYmVsKSwgMQogICAgICAvKiBURVhUICovCiAgICAgICldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMjIsIFskZGF0YS5zZWxlY3RlZE9yZGVyQW5zd2VyW2Fuc3dlcmluZGV4ICsgMV0gJiYgcXVlc3Rpb24ucXVlc3Rpb25fdHlwZSA9PSA0ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMjMsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEuc2VsZWN0ZWRPcmRlckFuc3dlclthbnN3ZXJpbmRleCArIDFdKSwgMQogICAgICAvKiBURVhUICovCiAgICAgICkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yNCwgWyRkYXRhLnJlc3VsdEhhbmRsZURpY3QucXVlc3Rpb25UeXBlNCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzI1LCBfdG9EaXNwbGF5U3RyaW5nKGFuc3dlci5hbnN3ZXJfaWQpLCAxCiAgICAgIC8qIFRFWFQgKi8KICAgICAgKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksICRvcHRpb25zLnR5cGUzQW5kNUNoZWNrUmVzdWx0KCRkYXRhLnJlc3VsdEhhbmRsZURpY3QuYW5zd2VySURUeXBlNSwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5hbnN3ZXJJRFR5cGUzLCBhbnN3ZXIuaWQpICYmIHF1ZXN0aW9uLnF1ZXN0aW9uX3R5cGUgIT0gNCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzI2LCBfaG9pc3RlZF8yOCkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSksICRkYXRhLnNlbGVjdGVkT3JkZXJBbnN3ZXJbYW5zd2VyaW5kZXggKyAxXSAmJiBxdWVzdGlvbi5xdWVzdGlvbl90eXBlID09IDUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJpIiwgX2hvaXN0ZWRfMjkpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIGZvciByZXN1bHQgIiksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8aSB2LWlmPVwiYW5zd2VyLmlkIGluIHJlc3VsdEhhbmRsZURpY3QuYW5zd2VySURUeXBlNSYmcXVlc3Rpb24ucXVlc3Rpb25fdHlwZT09NVwiIGNsYXNzPVwiZmFzIGZhLWNoZWNrXCI+PC9pPiAiKSwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5pc0NvcnJlY3QgJiYgYW5zd2VyLmlzX2NvcnJlY3QgfHwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5hbnN3ZXJBbGxUcnVlVHlwZTQgfHwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5hbnN3ZXJJRFR5cGU0W2Fuc3dlci5hbnN3ZXJfaWRdID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiaSIsIF9ob2lzdGVkXzMwKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksICRkYXRhLnJlc3VsdEhhbmRsZURpY3QuaXNOb3RDb3JyZWN0ICYmICRkYXRhLnJlc3VsdEhhbmRsZURpY3QuYW5zd2VySURUeXBlMyA9PSBhbnN3ZXIuaWQgfHwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5hbnN3ZXJJRFR5cGU1W2Fuc3dlci5pZF0gPT0gZmFsc2UgfHwgJGRhdGEucmVzdWx0SGFuZGxlRGljdC5hbnN3ZXJJRFR5cGU0W2Fuc3dlci5hbnN3ZXJfaWRdID09IGZhbHNlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiaSIsIF9ob2lzdGVkXzMxKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKV0sIDEwCiAgICAgIC8qIENMQVNTLCBQUk9QUyAqLwogICAgICAsIF9ob2lzdGVkXzE2KTsKICAgIH0pLCAxMjgKICAgIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgICApKV0pLCAkZGF0YS5zaG93TmV4dE9yRmluaXNoQnV0dG9uICYmICRkYXRhLnJlc3VsdCA9PSBmYWxzZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzMyLCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxkaXYgdi1pZj1cInF1ZXN0aW9ucy5sZW5ndGg9PXF1ZXN0aW9uTGVuZ3RoQ291bnRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPVwiRmluaXNoKHF1ZXN0aW9uLnF1ZXN0aW9uX3R5cGUpXCIgY2xhc3M9XCJidG4tdHItd2hpdGUtYmFzZS1zcVwiPkZJTlNIPC9kaXY+ICIpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLm5leHRRdWVzdGlvbihxdWVzdGlvbi5xdWVzdGlvbl90eXBlLCBxdWVzdGlvbi5pZCk7CiAgICAgIH0sCiAgICAgIGNsYXNzOiAiYnRuLXRyLXdoaXRlLWJhc2Utc3EiCiAgICB9LCAiTkVYVCDvvJ4iLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBfaG9pc3RlZF8zMyldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBoZXJlIGZvciBidXR0dW4gaW4gcmVzdWx0ICIpLCAkZGF0YS5yZXN1bHQgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8zNCwgWyRkYXRhLnF1ZXN0aW9uTGVuZ3RoQ291bnRlciAhPSAxID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAgICBrZXk6IDAsCiAgICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy5yZXN1bHRCYWNrKCk7CiAgICAgIH0pLAogICAgICBjbGFzczogImJ0bi10ci13aGl0ZS1iYXNlLXNxIgogICAgfSwgIu+8nEJBQ0siKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLkhhbmRsZVNob3dSZXN1bHQoKTsKICAgICAgfSksCiAgICAgIGNsYXNzOiAiYnRuLWJhc2UtYmxhY2stZGItb3YiCiAgICB9LCAi57WQ5p6c55S76Z2iIiksIF9jdHgucXVlc3Rpb25zLmxlbmd0aCAhPSAkZGF0YS5xdWVzdGlvbkxlbmd0aENvdW50ZXIgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCB7CiAgICAgIGtleTogMSwKICAgICAgb25DbGljazogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLnJlc3VsdE5leHQoKTsKICAgICAgfSksCiAgICAgIGNsYXNzOiAiYnRuLXRyLXdoaXRlLWJhc2Utc3EiCiAgICB9LCAiTkVYVO+8niIpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8UmVzdWx0XG4gICAgICAgICAgICAgICAgdi1pZj1cInNob3dSZXN1bHRcIlxuICAgICAgICAgICAgICAgIDpTZWxlY3RlZEFuc3dlckluZm89J1NlbGVjdGVkQW5zd2VySW5mbydcbiAgICAgICAgICAgICAgICA6cXVlc3Rpb25fbGVuZ3RoPSdxdWVzdGlvbnMubGVuZ3RoJ1xuICAgICAgICAgICAgICAgIEBoYW5kbGVQYWdpbmF0aW9uPSdoYW5kbGVQYWdpbmF0aW9uJ1xuICAgICAgICAgICAgICAgIEBIYW5kbGVTaG93UmVzdWx0PSdIYW5kbGVTaG93UmVzdWx0J1xuICAgICAgICAgICAgICAgIEByZXN1bHRBbnN3ZXJIYW5kbGVyPSdyZXN1bHRBbnN3ZXJIYW5kbGVyJ1xuICAgICAgICAgICAgICAgIEBoYW5kbGVSZXN1bHQ9J2hhbmRsZVJlc3VsdCdcbiAgICAgICAgICAgICAgICAvPiAiKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxSZXN1bHRcbiAgICAgICAgICAgICAgICB2LWlmPVwic2hvd1Jlc3VsdFwiXG4gICAgICAgICAgICAgICAgOnF1ZXN0aW9uX2xlbmd0aD0ncXVlc3Rpb25zLmxlbmd0aCdcbiAgICAgICAgICAgICAgICA6cmVydWx0QW5zd2VyPSdyZXJ1bHRBbnN3ZXInXG4gICAgICAgICAgICAgICAgQHNob3c9J3Nob3dEZXRhaWwnLz4gIildKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksICRkYXRhLmZpbmlzaFRlc3QgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9UZXN0UmVzdWx0LCB7CiAgICBrZXk6IDEsCiAgICBmaW5hbFJlc3VsdDogJGRhdGEuZmluYWxSZXN1bHQKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiZmluYWxSZXN1bHQiXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSldKTsKfQ=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/QuizTest.vue"],"names":[],"mappings":";;;;;;;;AACS,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;;sBAEH,mBAAA,CAAiC,KAAjC,EAAiC;AAA5B,IAAA,KAAK,EAAC;AAAsB,GAAjC,EAA0B,IAA1B,EAA0B,CAAA;AAAA;AAA1B,G;;;kBAAA,U;;;;;;sBAGA,mBAAA,CAAiD,GAAjD,EAAiD;AAA9C,IAAA,KAAK,EAAC;AAAwC,GAAjD,EAAwC,OAAxC,EAA6C,CAAA;AAAA;AAA7C,G;;;;;AACuB,EAAA,KAAK,EAAC;;;AACxB,EAAA,KAAK,EAAC;;;AAKE,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;;sBAAkB,mBAAA,CAAkB,GAAlB,EAAkB;AAAf,IAAA,KAAK,EAAC;AAAS,GAAlB,EAAa,GAAb,EAAc,CAAA;AAAA;AAAd,G;;;;AACxB,EAAA,KAAK,EAAC;;;;AAIV,EAAA,KAAK,EAAC;;;;AAQN,EAAA,KAAK,EAAC;;;;AAeE,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AAId,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;AAIV,EAAA,KAAK,EAAC;;;;AACmE,EAAA,KAAK,EAAC;;;AAG3E,EAAA,KAAK,EAAC;;;;AACF,EAAA,KAAK,EAAC;;;;;;;sBAIP,mBAAA,CAA4B,GAA5B,EAA4B;AAAzB,IAAA,KAAK,EAAC;AAAmB,GAA5B,EAAuB,IAAvB,EAAuB,CAAA;AAAA;AAAvB,G;;;mBAAA,W;;;AAGgE,EAAA,KAAK,EAAC;;;;AAK5B,EAAA,KAAK,EAAC;;;;AAGC,EAAA,KAAK,EAAC;;;;AAK5D,EAAA,KAAK,EAAC;;;;;AAQF,EAAA,KAAK,EAAC;;;;;uBAtF7C,mBAAA,CAsHM,KAtHN,EAAA,UAAA,EAsHM,CArHF,mBAAA,CAoHM,KApHN,EAAA,UAAA,EAoHM,CAnHF,mBAAA,CAEM,KAFN,EAEM;AAFD,IAAA,KAAK,EAAA,eAAA,CAAA,CAAC,kCAAD,EAAmC;AAAA,oBAA8B,IAAA,CAAA,MAAA,CAAO,KAAP,CAAa;AAA3C,KAAnC,CAAA;AAEJ,GAFN,E,UAAA,E;;AAAA,GAmHE,EAhHS,KAAA,CAAA,UAAA,IAAU,KAAV,IAAmB,IAAA,CAAA,MAAA,CAAO,KAAP,CAAa,SAAb,IAAsB,K,kBAApD,mBAAA,CA2GM,KA3GN,EA2GM,UA3GN,EA2GM,CA1GF,UA0GE,EAzGS,KAAA,CAAA,U,kBAAX,mBAAA,CAAoF,KAApF,EAAA,UAAA,EAA0C,2BAAoB,gBAAA,CAAG,KAAA,CAAA,UAAH,CAA9D,EAA2E;AAAA;AAA3E,G,qCAyGE,EAxGF,mBAAA,CAwFM,KAxFN,EAAA,UAAA,EAwFM,E,kBAvFF,mBAAA,CAsFM,SAtFN,EAsFM,IAtFN,EAsFM,WAAA,CApF6B,IAAA,CAAA,SAAA,CAAU,KAAV,CAAgB,KAAA,CAAA,UAAA,CAAW,CAA3B,EAA6B,KAAA,CAAA,UAAA,CAAW,CAAxC,CAoF7B,EApFsE,UAApE,QAAoE,EAA3D,aAA2D,EAA9C;yBAF9B,mBAAA,CAsFM,KAtFN,EAsFM;AArFN,MAAA,KAAK,EAAC,eAqFA;AAnFC,MAAA,GAAG,EAAE;AAmFN,KAtFN,E,CAII,mBAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,mBAAA,CAAkF,KAAlF,EAAA,WAAA,EAAkF,CAArD,WAAqD,E,iBAAnC,MAAC,gBAAA,CAAG,KAAA,CAAA,qBAAH,CAAD,GAA4B,G,EAAC;AAAA;KAAM,CAAlF,CAEE,EADF,mBAAA,CAAoH,KAApH,EAAA,WAAA,EAAoH,gBAAA,CAAtF,QAAA,CAAA,iBAAA,CAAkB,QAAQ,CAAC,KAA3B,EAAiC,QAAQ,CAAC,MAAT,CAAe,CAAf,CAAjC,CAAsF,CAAA,GAAtC,gBAAA,CAAU,QAAQ,CAAC,UAAnB,CAA9E,EAA2G;AAAA;AAA3G,KACE,CAHN,C,EAKA,mBAAA,CAAA,0CAAA,C,EACmC,QAAQ,CAAC,K,kBAA5C,mBAAA,CAEM,KAFN,EAAA,WAAA,EAEM,CADF,mBAAA,CAAoD,KAApD,EAAoD;AAA/C,MAAA,KAAK,EAAC,OAAyC;AAA1B,MAAA,GAAG,EAAE,QAAQ,CAAC;AAAY,KAApD,E,IAAA,E;;AAAA,M,WAAA,CACE,CAFN,C,uCAIA,mBAAA,CAAA,eAAA,C,EACA,mBAAA,CAAA,kGAAA,C,EAGA,mBAAA,CAiDM,KAjDN,EAAA,WAAA,EAiDM,E,kBAhDF,mBAAA,CA+CS,SA/CT,EA+CS,IA/CT,EA+CS,WAAA,CAnCsB,QAAQ,CAAC,MAmC/B,EAnCqC,UAAtC,MAAsC,EAA/B,WAA+B,EAApB;2BAZ1B,mBAAA,CA+CS,QA/CT,EA+CS;AA9CT,QAAA,KAAK,EAAA,eAAA,CAAA,CAAC,aAAD,EAAc;AAAA,6BACQ,KAAA,CAAA,gBAAA,IAAkB,WAAlB,IAA4D,WAAW,GAAA,CAAX,IAAiB,KAAA,CAAA,mBADrF;+BAC0J,KAAA,CAAA,gBAAA,CAAiB,SAAjB,IAA4B,MAAM,CAAC,UAAnC,IAA4E,KAAA,CAAA,gBAAA,CAAiB,kBAA7F,IAA8I,KAAA,CAAA,gBAAA,CAAiB,aAAjB,CAA+B,MAAM,CAAC,SAAtC,CADxS;kCAC6Y,KAAA,CAAA,gBAAA,CAAiB,YAAjB,IAA+B,KAAA,CAAA,gBAAA,CAAiB,aAAjB,IAAgC,MAAM,CAAC,EAAtE,IAAuG,KAAA,CAAA,gBAAA,CAAiB,aAAjB,CAA+B,MAAM,CAAC,EAAtC,KAAwC,KAA/I,IAAsL,KAAA,CAAA,gBAAA,CAAiB,aAAjB,CAA+B,MAAM,CAAC,SAAtC,KAA+C;AADlnB,SAAd,CAAA,CA8CI;AArCR,QAAA,OAAK,EAAE,iBAAA,CAAC;AAAA,iBAAI,KAAA,CAAA,MAAA,IAAM,KAAN,IAAiB,QAAA,CAAA,OAAA,CAAQ,WAAR,EAAoB,MAApB,EAA2B,QAA3B,CAArB;AAAA,SAqCA;AApCR,QAAA,QAAQ,EAAE,KAAA,CAAA,cAAA,IAAgB,MAAM,CAAC,EAAP,IAAa,KAAA,CAAA,cAAb,IAA2B,KAoC7C;AAlCF,QAAA,GAAG,EAAE;AAkCH,OA/CT,E,CAcI,mBAAA,CAKM,KALN,EAAA,WAAA,EAKM,CAJF,mBAAA,CAGM,KAHN,EAAA,WAAA,EAGM,CAFF,mBAAA,CACM,KADN,EAAA,WAAA,EACM,gBAAA,CADmB,MAAM,CAAC,YAAP,CAAoB,WAAW,GAAA,EAA/B,CACnB,CADN,EAAwD;AAAA;AAAxD,OAEE,CAHN,CAIE,CALN,C,EAMA,mBAAA,CAIM,KAJN,EAAA,WAAA,EAIM,CAHF,mBAAA,CAEM,KAFN,EAAA,WAAA,EAEM,gBAAA,CADC,MAAM,CAAC,KACR,CAFN,EACmB;AAAA;AADnB,OAGE,CAJN,C,EAKA,mBAAA,CAqBM,KArBN,EAAA,WAAA,EAqBM,CApBS,KAAA,CAAA,mBAAA,CAAoB,WAAW,GAAA,CAA/B,KAAoC,QAAQ,CAAC,aAAT,IAAsB,C,kBAArE,mBAAA,CAEM,KAFN,EAAA,WAAA,EAEM,gBAAA,CADC,KAAA,CAAA,mBAAA,CAAoB,WAAW,GAAA,CAA/B,CACD,CAFN,EACsC;AAAA;AADtC,O,qCAoBE,EAjBF,mBAAA,CAOM,KAPN,EAAA,WAAA,EAOM,CANuB,KAAA,CAAA,gBAAA,CAAiB,a,kBAA1C,mBAAA,CAEM,KAFN,EAAA,WAAA,EAEM,gBAAA,CADC,MAAM,CAAC,SACR,CAFN,EACuB;AAAA;AADvB,O,qCAME,EAHS,QAAA,CAAA,oBAAA,CAAqB,KAAA,CAAA,gBAAA,CAAiB,aAAtC,EAAoD,KAAA,CAAA,gBAAA,CAAiB,aAArE,EAAmF,MAAM,CAAC,EAA1F,KAA+F,QAAQ,CAAC,aAAT,IAAsB,C,kBAAhI,mBAAA,CAEM,KAFN,EAEM,WAFN,EAEM,WAFN,C,qCAGE,CAPN,CAiBE,EATO,KAAA,CAAA,mBAAA,CAAoB,WAAW,GAAA,CAA/B,KAAoC,QAAQ,CAAC,aAAT,IAAsB,C,kBAAnE,mBAAA,CAAiG,GAAjG,EAAA,WAAA,C,qCASE,EARF,mBAAA,CAAA,cAAA,CAQE,EAPF,mBAAA,CAAA,kHAAA,CAOE,EANO,KAAA,CAAA,gBAAA,CAAiB,SAAjB,IAA4B,MAAM,CAAC,UAAnC,IAAoF,KAAA,CAAA,gBAAA,CAAiB,kBAArG,IAA8J,KAAA,CAAA,gBAAA,CAAiB,aAAjB,CAA+B,MAAM,CAAC,SAAtC,C,kBAAvK,mBAAA,CAE4E,GAF5E,EAAA,WAAA,C,qCAME,EAHO,KAAA,CAAA,gBAAA,CAAiB,YAAjB,IAA+B,KAAA,CAAA,gBAAA,CAAiB,aAAjB,IAAgC,MAAM,CAAC,EAAtE,IAA+G,KAAA,CAAA,gBAAA,CAAiB,aAAjB,CAA+B,MAAM,CAAC,EAAtC,KAAwC,KAAvJ,IAAsM,KAAA,CAAA,gBAAA,CAAiB,aAAjB,CAA+B,MAAM,CAAC,SAAtC,KAA+C,K,kBAA9P,mBAAA,CAEkF,GAFlF,EAAA,WAAA,C,qCAGE,CArBN,C,CAzBJ,E;;AAAA,Q,WAAA,C;KA+CS,CA/CT,E;;AAAA,KAgDE,EAjDN,C,EAkDW,KAAA,CAAA,sBAAA,IAAiD,KAAA,CAAA,MAAA,IAAM,K,kBAAlE,mBAAA,CAMM,KANN,EAAA,WAAA,EAMM,CAJF,mBAAA,CAAA,2KAAA,CAIE,EAFF,mBAAA,CACmG,KADnG,EACmG;AAAlG,MAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,eAAE,QAAA,CAAA,YAAA,CAAa,QAAQ,CAAC,aAAtB,EAAoC,QAAQ,CAAC,EAA7C,CAAF;AAAA,OAA6F;AAAzC,MAAA,KAAK,EAAC;AAAmC,KADnG,EACuF,QADvF,EAC6F;AAAA;AAD7F,MAC6F,WAD7F,CAEE,CANN,C,uCAQA,mBAAA,CAAA,6BAAA,C,EACW,KAAA,CAAA,M,kBAAX,mBAAA,CAQM,KARN,EAAA,WAAA,EAQM,CAPS,KAAA,CAAA,qBAAA,IAAqB,C,kBAAhC,mBAAA,CAC8D,KAD9D,EAC8D;YAAA;AAA7D,MAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,eAAE,QAAA,CAAA,UAAA,EAAF;AAAA,OAAA,CAAwD;AAAxC,MAAA,KAAK,EAAC;AAAkC,KAD9D,EACmD,OADnD,C,qCAOE,EALF,mBAAA,CAEuC,KAFvC,EAEuC;AADtC,MAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,eAAE,QAAA,CAAA,gBAAA,EAAF;AAAA,OAAA,CACiC;AAAvC,MAAA,KAAK,EAAC;AAAiC,KAFvC,EAE6B,MAF7B,CAKE,EAFS,IAAA,CAAA,SAAA,CAAU,MAAV,IAAkB,KAAA,CAAA,qB,kBAA7B,mBAAA,CAC8D,KAD9D,EAC8D;YAAA;AAA7D,MAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,eAAE,QAAA,CAAA,UAAA,EAAF;AAAA,OAAA,CAAwD;AAAxC,MAAA,KAAK,EAAC;AAAkC,KAD9D,EACmD,OADnD,C,qCAEE,CARN,C,sCA7EJ,C;GAsFM,CAtFN,E;;AAAA,GAuFE,EAxFN,CAwGE,EAfF,mBAAA,CAAA,yYAAA,CAeE,EANF,mBAAA,CAAA,yLAAA,CAME,CA3GN,C,qCAgHE,EAHI,KAAA,CAAA,U,kBADN,YAAA,CAGE,qBAHF,EAGE;UAAA;AADD,IAAA,WAAW,EAAE,KAAA,CAAA;AACZ,GAHF,E,IAAA,E;;AAAA,I,eAAA,C,qCAIE,CApHN,CAqHE,CAtHN,C","sourcesContent":["<template>\n    <div class=\"quiz-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div v-if=\"finishTest==false&&$store.state.isLoading==false\">\n                <p class=\"quiz-description title-white\">テスト問題</p>\n                <div v-if=\"finishTest\" class=\"finishTest\">\"finishTest is TRUE\"{{ finishTest }}</div>\n                <div class='quiz-countainer'>\n                    <div\n                    class=\"question-loop\"\n                    v-for=\"(question,questionindex) in questions.slice(pagination.a,pagination.b)\"\n                    v-bind:key=\"questionindex\">\n                        <div class='question-wrapper'>\n                            <div class=\"question-header\"><i class='q'>Q</i>第{{ questionLengthForHTML }}問</div>\n                            <div class='question-body'>{{ getQuestionStatus(question.label,question.status[0]) }}{{ question.quiz_level }}</div>\n                        </div>\n                        \n                        <!-- <div :class='showPic(question.image)'> -->\n                        <div class=\"image-container\" v-if=\"question.image\">\n                            <img class=\"image\" v-bind:src=\"question.get_image\"/>\n                        </div>\n\n                        <!-- answer part -->\n                        <!-- questiontype 3 is '選択'\n                        ４ is '並び替え'\n                        5 is '多答' -->\n                        <div class='answer-wrapper'>\n                            <button \n                            class=\"answer-loop\"\n                            :class=\"{'selected-answer':selectedIndexNum==answerindex||\n                            answerindex+1 in selectedOrderAnswer,\n                            'is-correct-answer':resultHandleDict.isCorrect&&answer.is_correct||\n                            resultHandleDict.answerAllTrueType4||\n                            resultHandleDict.answerIDType4[answer.answer_id],\n                            'isnot-correct-answer':resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                            resultHandleDict.answerIDType5[answer.id]==false||\n                            resultHandleDict.answerIDType4[answer.answer_id]==false}\"\n                            @click=\"e => result==false && onClick(answerindex,answer,question)\"\n                            :disabled=\"maxSelectReach&&answer.id in selectedAnswer==false\"\n                            v-for=\"(answer,answerindex) in question.answer\"\n                            v-bind:key=\"answerindex\">\n                                <div class='answer-select-bases'>\n                                    <div class=\"answer-select\">\n                                        <div class=\"selecter\">{{ String.fromCharCode(answerindex+65) }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"answer-label-bases\">\n                                    <div class=\"answer-label\">\n                                        {{ answer.label }}\n                                    </div>\n                                </div>\n                                <div class=\"selected-answer-bases\">\n                                    <div v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==4\" class=\"selected-answer-order\">\n                                        {{ selectedOrderAnswer[answerindex+1] }}\n                                    </div>\n                                    <div class=\"result-answer-order\">\n                                        <div class=\"order\" v-if=\"resultHandleDict.questionType4\">\n                                            {{ answer.answer_id}}\n                                        </div>\n                                        <div v-if=\"type3And5CheckResult(resultHandleDict.answerIDType5,resultHandleDict.answerIDType3,answer.id)&&question.question_type!=4\">\n                                            <i class=\"fas fa-check\"></i>\n                                        </div>\n                                    </div>\n                                    <i v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==5\" class=\"fas fa-check\"></i>\n                                    <!-- for result -->\n                                    <!-- <i v-if=\"answer.id in resultHandleDict.answerIDType5&&question.question_type==5\" class=\"fas fa-check\"></i> -->\n                                    <i v-if=\"resultHandleDict.isCorrect&&answer.is_correct||\n                                    resultHandleDict.answerAllTrueType4||\n                                    resultHandleDict.answerIDType4[answer.answer_id]\" class=\"far fa-circle\"></i>\n                                    <i v-if=\"resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                                    resultHandleDict.answerIDType5[answer.id]==false||\n                                    resultHandleDict.answerIDType4[answer.answer_id]==false\" class=\"fas fa-times\"></i>\n                                </div>\n                            </button>\n                        </div>\n                        <div v-if=\"showNextOrFinishButton&&\n                        result==false\" class=\"button-quiz-container\">\n                            <!-- <div v-if=\"questions.length==questionLengthCounter\"\n                            @click=\"Finish(question.question_type)\" class=\"btn-tr-white-base-sq\">FINSH</div> -->\n                            <div\n                            @click=\"nextQuestion(question.question_type,question.id)\" class=\"btn-tr-white-base-sq\">NEXT ＞</div>\n                        </div>\n\n                        <!-- here for buttun in result -->\n                        <div v-if=\"result\" class=\"buttun-in-result\">\n                            <div v-if=\"questionLengthCounter!=1\" \n                            @click=\"resultBack()\" class=\"btn-tr-white-base-sq\">＜BACK</div>\n                            <div \n                            @click=\"HandleShowResult()\"\n                            class=\"btn-base-black-db-ov\">結果画面</div>\n                            <div v-if=\"questions.length!=questionLengthCounter\"\n                            @click=\"resultNext()\" class=\"btn-tr-white-base-sq\">NEXT＞</div>\n                        </div>\n                    </div>\n                </div>\n                <!-- <Result\n                v-if=\"showResult\"\n                :SelectedAnswerInfo='SelectedAnswerInfo'\n                :question_length='questions.length'\n                @handlePagination='handlePagination'\n                @HandleShowResult='HandleShowResult'\n                @resultAnswerHandler='resultAnswerHandler'\n                @handleResult='handleResult'\n                /> -->\n                <!-- <Result\n                v-if=\"showResult\"\n                :question_length='questions.length'\n                :rerultAnswer='rerultAnswer'\n                @show='showDetail'/> -->\n\n            </div>\n            <TestResult\n            v-if=\"finishTest\"\n            :finalResult=\"finalResult\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {mapGetters,mapActions} from 'vuex'\nimport Result from '@/components/quiz_components/Result.vue'\nimport TestResult from '@/components/initial/TestResult.vue'\nimport { createHydrationRenderer } from '@vue/runtime-core'\n\nexport default {\n    components: {\n    Result,\n    TestResult\n  },  \n    data(){\n        return{\n            questionLengthForHTML:1,\n            questionLengthCounter:1,\n            SelectedAnswerInfo:{},\n            selectedAnswer: {},\n            answerIDAndOrder:{},\n            showResult: false,\n            showNextOrFinishButton:false,\n            result: false,\n            countupDict:{\n                answerID:'',\n                questionID:'',\n                questionType:''\n            },\n            pagination:{\n                a: 0,\n                b: 1,\n            },\n            resultHandleDict:{\n                isCorrect: false,\n                IsNotCorrect: false,\n                answerIDType3: '',\n                questionType4: false,\n                answerAllTrueType4: false,\n                answerIDType4: '',\n                answerIDType5: '',\n            },\n            \n            maxSelectReach: false,\n            // currentQuestionType:{\n            //     select: false,\n            //     manySelect: false,\n            //     order: false\n            // },\n            selectedIndexNum: null,\n            showSelectNum: true,\n            selectedOrderAnswer:{},\n            selectAnswerCounter:0,\n            NumOfIscorrect:0,\n            // here for status attribute\n            userStatusDict:{\n                status:'',\n                isCorrect:0,\n                isFalse:0\n            },\n            // from here for test attributes\n            quizTestInfo:{\n                level:'',\n                quizId:4\n            },\n            LevelCounters:{\n                handleLevelUp:0,\n                handleLevelDown:0\n            },\n            finalResult:{\n                grade:'',\n                level:''\n            },\n            finishTest:false,\n            currentLevel:1,\n            currentGrade:\"超初級\",\n            correctAnswer:{}\n        }\n    },\n    created(){\n        console.log(\"created\")\n        // this.getquiz()\n        this.getTestQuestions()\n    },\n    mounted(){\n        // let a = this.$store.commit(\"convertGradeFromIntToID\",'超初級')\n        // console.log('mounted',a)\n        this.SelectedAnswerInfo = {}\n    },\n    computed: mapGetters(['questions','quiz']),\n    methods:{\n        ...mapActions(['getTestQuestions']),\n        nextQuestion(questionType,questionID){\n            this.handleCounyUpDict(this.selectedAnswer,questionType,questionID)\n            this.pagination.a += 1\n            this.pagination.b += 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.questionLengthCounter += 1\n            this.questionLengthForHTML += 1\n            this.checkConsecutiveResult()\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.answerIDAndOrder = {}\n            this.selectAnswerCounter = 0\n            console.log(this.SelectedAnswerInfo)\n            this.scrollTop()\n        },\n        // Finish(questionType){\n        //     this.showResult = true\n        //     this.result = true\n        //     this.selectedIndexNum= null\n        //     this.selectAnswerHandler(\n        //         questionType,\n        //         )\n        //     this.NumOfIscorrect = 0\n        //     this.maxSelectReach = false\n        //     this.selectedOrderAnswer = {}\n        //     this.selectedAnswer = {}\n        //     this.selectAnswerCounter = 0\n        //     console.log(this.SelectedAnswerInfo)\n        //     this.resultAnswerHandler()\n        //     this.scrollTop()\n        // },\n        onClick(answerindex, answer, question){\n            // this is for 2 things,\n            // first is for controling CSS return selectedIndexNum\n            // which used for questionType 3, and selectedOrderAnswer\n            // which used for questionType 4 and 5.\n            // second is for selected-answer and is_correct.\n            // return selectedAnswer for questionType 3.\n            // for questionType 4, use getAnswerIDAndOrder function.\n            // for questionType 5, use getIDAndIsCorrect function.\n            if(question.question_type == 3){\n                if(this.selectedIndexNum==answerindex){\n                    this.selectedIndexNum = null\n                    this.selectedAnswer = {}\n                    this.showNextOrFinishButton = false\n                }else{\n                    this.selectedIndexNum = answerindex\n                    this.selectedAnswer['answerID'] = answer.id\n                    this.selectedAnswer['isCorrect'] = answer.is_correct\n                    this.handleShowNextOrFinishButton()\n                }\n            }else if(question.question_type == 4){\n                console.log(\"in No4 DELETE\")\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    this.selectAnswerCounter -= 1\n                    this.showNextOrFinishButton = false\n                    \n                }else{\n                    console.log(\"in No4 ADD\")\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    console.log(\"Onclick-No4\",Object.keys(this.selectedOrderAnswer).length, question.length)\n                    if(Object.keys(this.selectedOrderAnswer).length == question.answer.length){\n                    this.handleShowNextOrFinishButton()\n                    }\n                }\n            }else if(question.question_type == 5){\n                console.log(\"on click_type5 question\",question)\n                this.getNumOfIscorrect(question.answer)\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    // console.log('SOA',this.selectedOrderAnswer)\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    this.selectAnswerCounter -= 1\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length < question.max_select){\n                            this.showNextOrFinishButton = false\n                            this.maxSelectReach = false\n                        }\n                    }else if(Object.keys(this.selectedOrderAnswer).length == 0){\n                        this.showNextOrFinishButton = false\n                    }\n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length == question.max_select){\n                            this.handleShowNextOrFinishButton()\n                            this.maxSelectReach = true\n                        }\n                    }else{\n                        this.handleShowNextOrFinishButton()\n                    }\n                }\n            }\n        },\n        changeOrder(dict, index){\n            // if deleted, the num or nums before the deleted items order num\n            // change\n            let orderNum = dict[index]\n            delete dict[index]\n            if(dict){\n                let changeDict = {}\n                Object.keys(dict).forEach(key =>{\n                    if(dict[key] > orderNum){\n                        dict[key] -= 1\n                    }\n                })\n            }\n        return dict\n        },\n        selectAnswerHandler(questionType){\n            // this is get informations about selected-answer for result component\n            // return SelectedAnswerInfo\n            if(questionType == 3){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect\n                this.handleUserStatus(this.selectedAnswer.isCorrect)\n                this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID\n            }\n            else if(questionType == 4){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n                if(JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else{\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                    this.handleUserStatus(false)\n                }\n                this.makeOrderBoolean()\n                this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder\n            }else if(questionType == 5){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let isCorrectCounter = 0\n                var type5IsCorrect = true\n                Object.values(this.selectedAnswer).forEach(value =>{\n                    if(value == false){\n                        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                        this.handleUserStatus(false)\n                        type5IsCorrect = false\n                    }else{\n                        isCorrectCounter += 1\n                    }\n                })\n                console.log('SAH',this.NumOfIscorrect, isCorrectCounter)\n                if(this.NumOfIscorrect == isCorrectCounter&&\n                type5IsCorrect){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else if(type5IsCorrect==false&&\n                isCorrectCounter > 0){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                    this.handleUserStatus(false)\n                }\n                // else if(this.maxSelectReach){\n                //     this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                // }\n                this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer\n            }\n        },\n        getAnswerIDAndOrder(answerID,orderNum){\n            // this is for collecting answer from questionType 4\n            console.log(\"GAID\")\n            if(this.questionLengthCounter in this.answerIDAndOrder){\n                console.log(\"first-IF TRUE\",this.questionLengthCounter, this.answerIDAndOrder)\n                console.log(\"sono2daze\",orderNum, this.answerIDAndOrder[this.questionLengthCounter])\n                if(orderNum in this.answerIDAndOrder[this.questionLengthCounter]){\n                    this.answerIDAndOrder[this.questionLengthCounter] =\n                    this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter],orderNum)\n                }else{\n                    this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID   \n                }\n            }else{\n                this.answerIDAndOrder[this.questionLengthCounter] = {}\n                this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID\n            }   \n        },\n        makeOrderBoolean(){\n            // this is for AnswerIDAndOrder{1:1} to be {1:true}\n            let newDict = {}\n            let IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n            for(let i = 0; i < IntegerKeys.length; i++){\n                if(IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]){\n                    newDict[i+1] = true\n                }else{\n                    newDict[i+1] = false\n                }\n            }\n            this.answerIDAndOrder = newDict\n            // stringKeys.forEach(num =>{\n            //     Object.values(this.answerIDAndOrder[this.questionLengthCounter]).forEach(value =>{\n            //         if(num == )\n            //     })\n            // })\n        },\n        getIDAndIsCorrect(id, isCorrect){\n            // this is for questionType 5 \n            if(id in this.selectedAnswer){\n                delete this.selectedAnswer[id]\n                console.log(id,\"deleted\",this.selectedAnswer)\n            }else{\n                this.selectedAnswer[id] = isCorrect\n                console.log(id,\"added\",this.selectedAnswer)\n            }\n        },\n        getNumOfIscorrect(answers){\n            // this is for questionType 5\n            console.log('inGNOI',this.NumOfIscorrect,answers)\n            if(this.NumOfIscorrect==false){\n                console.log('Gp')\n                 Object.values(answers).forEach(value =>{\n                    if(value.is_correct){\n                        this.NumOfIscorrect += 1\n                    }\n                })\n            }\n        },\n        handleShowNextOrFinishButton(){\n            this.showNextOrFinishButton = true\n        },\n        resultAnswerHandler(){\n            if(this.result){\n                this.resultHandleDict.isCorrect = false\n                this.resultHandleDict.isNotCorrect = false\n                this.resultHandleDict.answerAllTrueType4 = false\n                this.resultHandleDict.questionType4 = false\n                this.resultHandleDict.answerIDType3 = ''\n                this.resultHandleDict.answerIDType4 = ''\n                this.resultHandleDict.answerIDType5 = ''\n                Object.keys(this.SelectedAnswerInfo).forEach(key =>{\n                    if(key==this.questionLengthCounter){\n                        console.log(\"currentType\",this.SelectedAnswerInfo[key].questionType,this.SelectedAnswerInfo[key].isCorrect)\n                        if(this.SelectedAnswerInfo[key].isCorrect){\n                            if(this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.answerAllTrueType4 = true\n                            }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                            }\n                            this.resultHandleDict.isCorrect = true\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==3){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType3 = this.SelectedAnswerInfo[key].answerID\n                        }else if(this.SelectedAnswerInfo[key].questionType==5){\n                            console.log(\"in type5\")\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                                console.log(\"type5\",this.resultHandleDict.answerIDType5)\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.questionType4 = true\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType4 = this.SelectedAnswerInfo[key].orderAnswer\n                        }\n                    }\n                })      \n            }\n        },\n        type3And5CheckResult(selectedAnswer5,selectedAnswer3, answerID){\n            // console.log(selectedAnswer, answerID)\n            if(this.result){\n                console.log(\"type\",this.SelectedAnswerInfo[this.questionLengthCounter].questionType,\"5\",selectedAnswer5, \"3\",selectedAnswer3,answerID,this.questionLengthCounter)\n                if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==5){\n                    console.log(\"go\")\n                    if(answerID in selectedAnswer5){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n                else if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==3){\n                    if(answerID == selectedAnswer3){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n        },\n        handlePagination(a,b){\n            // this is for result component\n            console.log(\"HP\",a,b)\n            this.pagination.a = a\n            this.pagination.b = b\n            this.questionLengthCounter = b\n        },\n        handleCounyUpDict(selectedAnswer,questionType,questionID){\n            this.countupDict.questionType = questionType\n            this.countupDict.questionID = questionID\n            if(questionType == 5){\n                this.countupDict.answerID = Object.keys(selectedAnswer)\n            }else if(questionType == 3){\n                Object.keys(selectedAnswer).forEach(key => {\n                    if(key = \"answerID\"){\n                        this.countupDict.answerID = selectedAnswer[key]\n                    }\n                })\n            }\n            this.$store.dispatch('countUpAnswerAndQuestion',this.countupDict)\n        },\n        HandleShowResult(){\n            this.showResult = !this.showResult          \n        },\n        handleResult(){\n            this.result = ! this.result\n        },\n        handleUserStatus(selectedAnswer){\n            // this is for only is_true and is_false\n            console.log(selectedAnswer)\n            this.userStatusDict.isCorrect = 0\n            this.userStatusDict.isFalse = 0\n            if(selectedAnswer){\n                this.userStatusDict.isCorrect = 1\n            }else{\n                this.userStatusDict.isFalse = 1\n            }\n            this.$store.dispatch('userStatusPost',this.userStatusDict)\n            console.log('HUS',this.userStatusDict)\n            \n        },\n        getQuestionStatus(lavel,status){\n            this.userStatusDict.status = status\n            return lavel\n        },\n        resultNext(){\n            this.pagination.a += 1 \n            this.pagination.b += 1\n            this.questionLengthCounter += 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        resultBack(){\n            this.pagination.a -= 1 \n            this.pagination.b -= 1\n            this.questionLengthCounter -= 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        scrollTop(){\n            window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n            });\n        },\n        // from here for test function\n        checkConsecutiveResult(){\n            var correctCounter = 0\n        \n            console.log('SS',this.SelectedAnswerInfo)\n            if(Object.keys(this.SelectedAnswerInfo).length >= 4){\n                if(Object.keys(this.SelectedAnswerInfo).length == 10){\n                    let isTrue = 0\n                    let isFalse = 0\n                    for (let i = 1; i <= 10; i++){\n                        if(this.SelectedAnswerInfo[i].isCorrect){\n                            isTrue += 1\n                        }else{\n                            isFalse += 1\n                        }\n                    }\n                    console.log(\"isT\",isTrue)\n                    console.log(\"isF\",isFalse)\n                    if(isTrue >= 7){\n                        this.LevelCounters.handleLevelUp += 1\n                        this.currentLevel += 1\n                        if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown == 3){\n                            this.finishTest = true\n                            this.getFinalResult()\n                            this.LevelCounters.handleLevelUp = 0\n                            this.LevelCounters.handleLevelDown = 0\n                        }\n                        else{\n                            this.quizTestInfo.level = this.currentLevel\n                            this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                            this.getTestQuestions()\n                            this.pagination.a = 0\n                            this.pagination.b = 1\n                            this.SelectedAnswerInfo = {}\n                            correctCounter = 0\n                            this.questionLengthCounter = 1\n                        }\n                    }\n                    else if(isTrue > 4&& isTrue < 7){\n                        this.finishTest = true\n                        this.getFinalResult()\n                        this.LevelCounters.handleLevelUp = 0\n                        this.LevelCounters.handleLevelDown = 0\n                    }\n                    else{\n                        this.LevelCounters.handleLevelDown += 1\n                        if(this.currentGrade !=\"超初級\"&&this.currentLevel!=1){\n                            this.currentLevel -= 1\n                            if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown == 3){\n                                this.finishTest = true\n                                this.getFinalResult()\n                                this.LevelCounters.handleLevelUp = 0\n                                this.LevelCounters.handleLevelDown = 0\n                            }\n                            else{\n                                this.quizTestInfo.level = this.currentLevel\n                                this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                                this.getTestQuestions()\n                                correctCounter = 0\n                                this.pagination.a = 0\n                                this.pagination.b = 1\n                                this.questionLengthCounter = 1\n                                this.SelectedAnswerInfo = {}\n                            }\n                        }\n                    }\n                    if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown == 3){\n                        this.finishTest = true\n                        this.getFinalResult()\n                        this.LevelCounters.handleLevelUp = 0\n                        this.LevelCounters.handleLevelDown = 0\n                    }\n                }else{\n                    console.log(\"longer than 4\")\n                    let num4 = 0\n                    num4 = Object.keys(this.SelectedAnswerInfo).length - 4\n                    for (let i = 1; i <= 4; i++){\n                        console.log(\"forloop\",this.SelectedAnswerInfo)\n                        if(this.SelectedAnswerInfo[i + num4].isCorrect){\n                            correctCounter += 1\n                        }\n                    }\n                    if(correctCounter == 4){\n                        console.log(\"correct4\",this.LevelCounters.handleLevelUp,this.LevelCounters.handleLevelDown)\n                        this.LevelCounters.handleLevelUp += 1\n                        if(this.LevelCounters.handleLevelUp>=3&&this.LevelCounters.handleLevelDown==0){\n                            this.finishTest = true\n                            this.getFinalResult()\n                            this.LevelCounters.handleLevelUp = 0\n                        }else if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown==3){\n                            console.log(\"quiz done\", this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown)\n                            this.finishTest = true\n                            this.getFinalResult()\n                            this.LevelCounters.handleLevelUp = 0\n                            this.LevelCounters.handleLevelDown = 0\n                        }else{\n                            console.log('UP')\n                            this.quizTestInfo.level = this.currentLevel + 1\n                            this.currentLevel += 1\n                            this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                            this.getTestQuestions()\n                            this.pagination.a = 0\n                            this.pagination.b = 1\n                            this.SelectedAnswerInfo = {}\n                            correctCounter = 0\n                            this.questionLengthCounter = 1\n                        }                \n                    }else if(correctCounter == 0){\n                        console.log(\"zeroCA\")\n                        if(this.currentLevel==1){\n                            console.log(\"no more low level\")\n                        }\n                        else{\n                            this.LevelCounters.handleLevelDown += 1\n                            console.log(\"in down-part\",this.LevelCounters.handleLevelUp,this.LevelCounters.handleLevelDown)\n                            if(this.LevelCounters.handleLevelDown>=3&&this.LevelCounters.handleLevelUp==0){\n                                this.finishTest = true\n                                this.getFinalResult()\n                                this.LevelCounters.handleLevelDown = 0\n                            }\n                            else if(this.LevelCounters.handleLevelUp+this.LevelCounters.handleLevelDown==3){\n                                this.finishTest = true\n                                this.getFinalResult()\n                                this.LevelCounters.handleLevelUp = 0\n                                this.LevelCounters.handleLevelDown = 0\n                            }else{\n                                console.log('down')\n                                this.quizTestInfo.level = this.currentLevel -1\n                                this.currentLevel -= 1\n                                this.$store.commit('getTestQuizInfo',this.quizTestInfo)\n                                this.getTestQuestions()\n                                correctCounter = 0\n                                this.pagination.a = 0\n                                this.pagination.b = 1\n                                this.questionLengthCounter = 1\n                                this.SelectedAnswerInfo = {}\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        async updateQuizTaker(){\n            console.log('UQT',\n            this.$store.state.signup.djangoUser.quiz_taker)\n            this.$store.commit(\"convertGradeFromIntToID\",this.finalResult.grade)\n            await axios.patch(`api/quiz-taker-test/?quiz_taker=${this.$store.state.signup.djangoUser.quiz_taker[0].id}&grade=${this.$store.state.quiz.gradeForConvert}&level=${this.finalResult.level}`)\n        },\n        getFinalResult(){\n            console.log(\"GFR\")\n            this.finalResult.grade = this.currentGrade\n            this.finalResult.level = this.currentLevel\n            console.log(this.finalResult)\n            this.updateQuizTaker()\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.quiz-wrapper{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .quiz-countainer{\n        width: 100%;\n        display: flex;\n        // align-items: center;\n        justify-content: center;\n        .question-loop{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .question-wrapper{\n            width: 95%;\n            border: solid  rgba(243, 91, 36, 0.808);\n            border-radius: 1rem;\n            overflow:hidden;\n                .question-header{\n                background: linear-gradient($base-lite,$base-color);\n                color:white;\n                padding:0.5rem;\n                font-weight:bold;\n                position:relative;\n                }\n                .question-body{\n                    background-color: rgb(253, 245, 239);\n                    padding:1rem;\n                    font-weight:bold;\n                }\n                .q{\n                position:absolute;\n                left:5%;\n                bottom:2%;\n                font-size:1.5rem;  \n                }\n            }\n            .image-container{\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                .image{\n                    width: 40%;\n                }\n            }\n            .answer-wrapper{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                margin-top: 1rem;\n                .is-correct-answer{\n                    background: rgb(148, 255, 235);\n                }\n                .answer-loop{\n                    width: 95%;\n                    height: 3rem;\n                    border: solid black;\n                    border-radius: 0.5rem;\n                    background: white;\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 0.5rem;\n                    transition:0.3s;\n                    .answer-select-bases{\n                        flex-basis: 15%;\n                        .answer-select{\n                            border: solid black;\n                            border-radius: 50vh;\n                            width: 2.5rem;\n                            height: 2.5rem;\n                            margin-left: 0.5rem;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            transition:0.3s;\n                            .selecter{\n                                font-weight: bold;\n                                font-size: 1.5rem;\n                            }\n                        }\n                    }\n                    .answer-label-bases{\n                        flex-basis: 70%;\n                        .answer-label{\n\n                        }\n                    }\n                    .selected-answer-bases{\n                        flex-basis: 15%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        .selected-answer-order{\n                            font-size: 1.5rem;\n                            font-weight: bold;\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .result-answer-order{\n                            flex-basis: 50%;\n                            .order{\n                                font-size: 1.5rem;\n                                font-weight: bold;\n                                color: gray;\n                                margin-right: 0.5rem;\n                            }\n                        }\n                        .fa-check{\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .fa-circle{\n                            color: rgba(0, 84, 75, 0.839);\n                            font-size: 1.5rem;\n                            flex-basis: 50%;\n                            margin-right: 0.1rem;\n                        }\n                        .fa-times{\n                            color: rgba(244, 10, 10, 0.839);\n                            font-size: 1.5rem;\n                            margin-right: 0.1rem;\n                            flex-basis: 50%;\n                        }\n                    }\n                }\n                .is-correct-answer{\n                    background: rgb(177, 243, 231);\n                }\n                .isnot-correct-answer{\n                    background: rgb(255, 147, 147)\n                }\n                .selected-answer{\n                    background: $base-lite-3;\n                    .answer-select{\n                        background: $base-color;\n                        color: white;\n                    }\n                }\n            }\n            // .button-container{\n            //     display: flex;\n            //     margin-top: 1rem;\n            //     div{\n            //         padding-right: 0.3rem;\n            //         padding-left: 0.3rem;\n            //     }\n            // }\n            .buttun-in-result{\n                display: flex;\n                margin-top: 1rem;\n                .btn-base-black-db-ov{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                    margin-right: 0.5rem;\n                    margin-left: 0.5rem;\n                    font-weight: bold;                    \n                }\n                .btn-tr-white-base-sq{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                }\n            }\n        }\n    }\n}\n</style>"],"sourceRoot":""}]}