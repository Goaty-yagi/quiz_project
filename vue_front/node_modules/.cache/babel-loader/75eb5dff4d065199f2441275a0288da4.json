{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/quiz_components/Result.vue?vue&type=template&id=b720dc08","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/quiz_components/Result.vue","mtime":1649743380856},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInJlc3VsdC1jb21wbyIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogImJveCBpcy1wYWRkaW5nbGVzcyBwYi00Igp9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogImJ1dHRvbiBteS01IGhhcy1iYWNrZ3JvdW5kLWluZm8tbGlnaHQgaXMtY2VudGVyZWQgaXMtc3RhdGljIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgY2xhc3M6ICJ0aXRsZSBpcyAzIGhhcy10ZXh0LWRhbmdlciIKfSwgIue1kOaenOeZuuihqCIpXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVDb21tZW50Vk5vZGUoIiA8cCBjbGFzcz1cIm14LTUgaXMtaW5saW5lLWJsb2NrIHN1YnRpdGxlIGlzIDRcIj57eyBxdWVzdGlvbl9sZW5ndGggfX3llY/kuK08L3A+XG4gICAgICAgICAgICA8cCBjbGFzcz1cImlzLWlubGluZS1ibG9jayBoYXMtdGV4dC1kYW5nZXItZGFyayB0aXRsZSBpcyA0XCI+e3sgbnVtT2ZUcnVlKHJlcnVsdEFuc3dlcikgfX0g5ZWP5q2j6KejPC9wPiAiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxwIGNsYXNzPVwic3VidGl0bGUgaXMgNSBidXR0b24gaXMtcm91bmRlZCBpcy1zdGF0aWNcIj4g5q2j6Kej546HIHt7IGdldFBlcmNlbnRhZ2UobnVtT2ZUcnVlKHJlcnVsdEFuc3dlcikscXVlc3Rpb25fbGVuZ3RoKSB9fSU8L3A+ICIpXSldKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8c2VjdGlvbiBjbGFzcz1cInNlY3Rpb25cIj5cbiAgICAgICAgPGRpdiBjbGFzcz0ncmVzdWx0IHB0LTYnPiAiKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxkaXYgY2xhc3M9XCJjb2x1bW5zIGlzLW11bHRpbGluZSBpcy12Y2VudGVyZWQgaXMtbW9iaWxlIGlzLWNlbnRlcmVkXCJcbiAgICAgICAgICAgICAgICB2LWZvcj1cIihyZXN1bHQscmVzdWx0aW5kZXgpIGluIHJlcnVsdEFuc3dlci5zbGljZSgwLHJlc3VsdERldGFpbHNsaWNlKVwiXG4gICAgICAgICAgICAgICAgdi1iaW5kOmtleT1cInJlc3VsdGluZGV4XCJcbiAgICAgICAgICAgICAgICBzdHlsZT0nbWFyZ2luLXRvcDogLTJyZW0nXG4gICAgICAgICAgICAgICAgaWQ9J3Jlc3VsdC1jb2x1bW4nPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5cIj5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9J3N1YnRpdGxlJz57eyByZXN1bHRpbmRleCsgMSB9fSDllY/nm648L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiByZXN1bHQtYWxsXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3Jlc3VsdC1mb250JyA6Y2xhc3M9J2dldFJlc3VsdEZvbnQocmVzdWx0KSc+XG4gICAgICAgICAgICAgICAgICAgIDxpIGlkPSdyZXN1bHQtZm9udCcgOmNsYXNzPSdyZXR1cm5Gb250KHJlc3VsdCknPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbHVtblwiIGlkPSdyZXN1bHRTdHJpbmcnPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0nc3VidGl0bGUgaXMgNCc+e3sgZ2V0SlBSZXN1bHQocmVzdWx0KSB9fTwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBzdHlsZT0nbWFyZ2luLXRvcDogLTJyZW0nPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J210LTYnIHYtaWY9JyFyZXN1bHREZXRhaWwnIEBjbGljaz0ncmVzdWx0RGV0YWlsSGFuZGxlcihyZXN1bHREZXRhaWxzbGljZSknPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLWNpcmNsZS1kb3duIGZhLTJ4XCIgc3R5bGU9J2NvbG9yOiBsaWdodGdyYXknPjwvaT4gIFxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiB2LWlmPSdyZXN1bHREZXRhaWwnIEBjbGljaz0ncmVzdWx0RGV0YWlsSGFuZGxlcihyZXN1bHREZXRhaWxzbGljZSknPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLWNpcmNsZS11cCBmYS0yeFwiIHN0eWxlPSdjb2xvcjogbGlnaHRncmF5Jz48L2k+IFxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGJ1dHRvbiBAY2xpY2s9J3Nob3dEZXRhaWwnIGNsYXNzPVwiYnV0dG9uIG10LTIgaXMtaW5mbyBpcy1yb3VuZGVkXCI+6Kmz57Sw44KS6KaL44KLPC9idXR0b24+XG4gICAgICAgIDwvZGl2PiAgICBcbiAgICA8L3NlY3Rpb24+XG4gICAgXG4gICAgICAgIDxyb3V0ZXItbGluayB0bz1cIi9cIiBAY2xpY2s9J3N0b3JlUmVzZXQnIGNsYXNzPVwibXgtMiBidXR0b24gaXMtcHJpbWFyeSBpcy1vdXRsaW5lZFwiPuaIu+OCizwvcm91dGVyLWxpbms+XG4gICAgICAgIDxkaXYgQGNsaWNrPSdyZXNldCcgY2xhc3M9XCJteC0yIGJ1dHRvbiBpcy13YXJuaW5nIGlzLWxpZ2h0XCI+44KC44GG5LiA5bqmPC9kaXY+ICIpXSk7Cn0="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/quiz_components/Result.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;8BACP,mBAAA,CAWI,KAXJ,EAWI;AAXC,EAAA,KAAK,EAAC;AAWP,CAXJ,EAAoC,C,aAClC,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAAwE,C,aACpE,mBAAA,CAA8C,GAA9C,EAA8C;AAA3C,EAAA,KAAK,EAAC;AAAqC,CAA9C,EAAsC,MAAtC,CADoE,CAAxE,CADkC,E,aAIlC,mBAAA,CAMM,KANN,EAMM,IANN,EAMM,C,aALF,mBAAA,CAAA,+LAAA,CAKE,E,aAHF,mBAAA,CAEM,KAFN,EAEM,IAFN,EAEM,C,aADF,mBAAA,CAAA,iIAAA,CACE,CAFN,CAGE,CANN,CAJkC,CAApC,E;;AAAA,C;;;uBADJ,mBAAA,CAiDM,KAjDN,EAAA,UAAA,EAiDM,CAhDF,UAgDE,EApCJ,mBAAA,CAAA,kEAAA,CAoCI,EAlCI,mBAAA,CAAA,8rDAAA,CAkCJ,CAjDN,C","sourcesContent":["<template>\n  <div class='result-compo'>\n      <div class='box is-paddingless pb-4'> \n        <div class='button my-5 has-background-info-light is-centered is-static'>\n            <p class=\"title is 3 has-text-danger\">結果発表</p>          \n        </div>\n        <div>\n            <!-- <p class=\"mx-5 is-inline-block subtitle is 4\">{{ question_length }}問中</p>\n            <p class=\"is-inline-block has-text-danger-dark title is 4\">{{ numOfTrue(rerultAnswer) }} 問正解</p> -->\n            <div>\n                <!-- <p class=\"subtitle is 5 button is-rounded is-static\"> 正解率 {{ getPercentage(numOfTrue(rerultAnswer),question_length) }}%</p> -->\n            </div>\n        </div>\n    </div>\n    <!-- <section class=\"section\">\n        <div class='result pt-6'> -->\n            <!-- <div class=\"columns is-multiline is-vcentered is-mobile is-centered\"\n                v-for=\"(result,resultindex) in rerultAnswer.slice(0,resultDetailslice)\"\n                v-bind:key=\"resultindex\"\n                style='margin-top: -2rem'\n                id='result-column'>\n                <div class=\"column\">\n                    <p class='subtitle'>{{ resultindex+ 1 }} 問目</p>\n                </div>\n                <div class=\"column result-all\">\n                    <div class='result-font' :class='getResultFont(result)'>\n                    <i id='result-font' :class='returnFont(result)'></i>\n                    </div>\n                </div>\n                <div class=\"column\" id='resultString'>\n                    <p class='subtitle is 4'>{{ getJPResult(result) }}</p>\n                </div>\n            </div>\n            <div style='margin-top: -2rem'>\n                <div class='mt-6' v-if='!resultDetail' @click='resultDetailHandler(resultDetailslice)'>\n                    <i class=\"fas fa-chevron-circle-down fa-2x\" style='color: lightgray'></i>  \n                </div>\n\n                <div v-if='resultDetail' @click='resultDetailHandler(resultDetailslice)'>\n                    <i class=\"fas fa-chevron-circle-up fa-2x\" style='color: lightgray'></i> \n                </div>\n            </div>\n        </div>\n        <div>\n            <button @click='showDetail' class=\"button mt-2 is-info is-rounded\">詳細を見る</button>\n        </div>    \n    </section>\n    \n        <router-link to=\"/\" @click='storeReset' class=\"mx-2 button is-primary is-outlined\">戻る</router-link>\n        <div @click='reset' class=\"mx-2 button is-warning is-light\">もう一度</div> -->\n  </div>\n</template>\n\n<script>\nexport default {\n    name:\"Result\",\n    props:[\n        'question_length',\n        'rerultAnswer'\n    ],\n    data(){\n        return{\n            resultDetailslice:3,\n            resultDetail: false,\n        }\n    },\n    methods:{\n        numOfTrue(answered_array){\n            let counter = 0\n            for (let t of answered_array){\n                if(t == true){\n                counter += 1\n                }\n            }return counter\n        },\n        getPercentage(answer,question_length){\n            return Math.round(answer/question_length * 100)\n        },\n        getResultFont(result){\n            if(result == true){\n                return \"result-font-green\"\n            }\n            else if(result == false){\n                return \"result-font-red\"\n            }\n        },\n        returnFont(boolean){\n            if(boolean == true){\n                return \"far fa-circle\"\n            }\n            else if(boolean == false){\n                return \"fas fa-times\"\n            }\n        },\n        getJPResult(result){\n            if (result == true){\n                return '正解'\n            }else{\n                return'不正解'\n            }\n        },\n        resultDetailHandler(slice){\n            if(slice <= 5){\n                console.log(this.resultDetailslice)\n                this.resultDetailslice = 100\n                this.resultDetail = true\n            }\n            else{\n                this.resultDetailslice = 3\n                this.resultDetail = false\n            }\n        },\n        storeReset(){\n            this.$store.commit('reset')\n        },\n        reset: function () {\n            location.reload()\n        },\n        showDetail(){\n            this.$emit('show')\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":""}]}