{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue","mtime":1645151889388},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC1zZWFyY2gtcGFyYW1zLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IENyb3BwZXIgZnJvbSAnY3JvcHBlcmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlOiAnJywKICAgICAgaW1hZ2U6ICcnLAogICAgICBzZWxlY3RlZEZpbGU6IG51bGwsCiAgICAgIGNyb3BwZXI6IHt9LAogICAgICBkZXN0aW5hdGlvbjoge30KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gdGhpcy5jcm9wcGVyKCkKICAgIGNvbnNvbGUubG9nKHRoaXMuaW1hZ2UpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0SW1hZ2U6IGZ1bmN0aW9uIGdldEltYWdlKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdldmVudCcsIGV2ZW50KTsKICAgICAgICAgICAgICAgIF90aGlzLnNlbGVjdGVkRmlsZSA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZXZlbnQudGFyZ2V0LmZpbGVzWzBdKTsKICAgICAgICAgICAgICAgIF90aGlzLmltYWdlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coX3RoaXMuaW1hZ2UpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfdGhpcy5pbWFnZUNyb3BwZXIoKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGltYWdlQ3JvcHBlcjogZnVuY3Rpb24gaW1hZ2VDcm9wcGVyKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhDcm9wcGVyLmdldENhbnZhc0RhdGEoKSkKICAgICAgICAgICAgICAgIF90aGlzMi5jcm9wcGVyID0gbmV3IENyb3BwZXIoX3RoaXMyLiRyZWZzLmltYWdlLCB7CiAgICAgICAgICAgICAgICAgIHpvb21hYmxlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgc2NhbGFibGU6IGZhbHNlLAogICAgICAgICAgICAgICAgICB6b29tT25Ub3VjaDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgYXNwZWN0UmF0aW86IDEsCiAgICAgICAgICAgICAgICAgIGNyb3A6IGZ1bmN0aW9uIGNyb3AoZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwueCk7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLnkpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC53aWR0aCk7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLmhlaWdodCk7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLnJvdGF0ZSk7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLnNjYWxlWCk7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLnNjYWxlWSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjaGFuY2VsOiBmdW5jdGlvbiBjaGFuY2VsKCkgewogICAgICB0aGlzLnNlbGVjdGVkRmlsZSA9IG51bGw7CiAgICB9LAogICAgdXNlclVwZGF0ZTogZnVuY3Rpb24gdXNlclVwZGF0ZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgY2FudmFzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjYW52YXMgPSBfdGhpczMuY3JvcHBlci5nZXRDcm9wcGVkQ2FudmFzKHsKICAgICAgICAgICAgICAgICAgd2lkdGg6IDE2MCwKICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA5MCwKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDI1NiwKICAgICAgICAgICAgICAgICAgbWluSGVpZ2h0OiAyNTYsCiAgICAgICAgICAgICAgICAgIG1heFdpZHRoOiA0MDk2LAogICAgICAgICAgICAgICAgICBtYXhIZWlnaHQ6IDQwOTYsCiAgICAgICAgICAgICAgICAgIGZpbGxDb2xvcjogJyNmZmYnLAogICAgICAgICAgICAgICAgICBpbWFnZVNtb290aGluZ0VuYWJsZWQ6IGZhbHNlLAogICAgICAgICAgICAgICAgICBpbWFnZVNtb290aGluZ1F1YWxpdHk6ICdoaWdoJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjYW52YXMudG9CbG9iKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoYmxvYikgewogICAgICAgICAgICAgICAgICAgIHZhciBmb3JtRGF0YTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgndGh1bWJuYWlsJywgYmxvYiwgIiIuY29uY2F0KF90aGlzMy5pbWFnZSwgIi5wbmciKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZ2V0dGh1bWInLCBmb3JtRGF0YS5nZXQoJ3RodW1ibmFpbCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wYXRjaCgiL2FwaS91c2VyLyIuY29uY2F0KF90aGlzMy4kcm91dGUucGFyYW1zLnVpZCksIGZvcm1EYXRhKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KCksICdpbWFnZS9wbmcnKTsgLy8gdGhpcy4kcm91dGVyLmdvKHtwYXRoOiB0aGlzLiRyb3V0ZXIuY3VycmVudFJvdXRlLnBhdGgsIGZvcmNlOiB0cnVlfSkKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class='thumbnail-wrapper'>\n        <p>thumbnail</p>\n        <form @submit.prevent='userUpdate'>\n            <input type=\"file\" @change='getImage' enctype=\"multipart/form-data\">\n            <div v-if=\"selectedFile\">\n                <img ref='image' :src=\"selectedFile\">\n            </div>\n             <button>save</button>\n        </form>\n         <button v-if='selectedFile' @click='chancel'>chancel</button>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Cropper from 'cropperjs';\nexport default {\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            cropper:{},\n            destination:{}\n        }\n    },\n    mounted(){\n        // this.cropper()\n        console.log(this.image)\n    },\n    methods:{\n        async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files[0]\n            await console.log(this.image)\n            this.imageCropper()\n        },\n        async imageCropper(){\n            // console.log(Cropper.getCanvasData())\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: false,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n        },\n        async userUpdate(){\n            const canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minWidth: 256,\n                minHeight: 256,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n                });\n            canvas.toBlob(async (blob) => {\n            const formData = new FormData();\n            formData.append('thumbnail',blob, `${this.image}.png`),\n            console.log('getthumb',formData.get('thumbnail')),\n            await axios.patch(`/api/user/${this.$route.params.uid}`,\n                formData\n            )\n            }, 'image/png')\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        }\n    }\n}\n</script>\n\n<style>\n.thumbnail-wrapper{\n    width: 100%;\n    height: 100%;\n    overflow:scroll;  \n}\n.cropper-area img {\n  display: block;\n  max-width: 100%;\n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n\n</style>"],"sourceRoot":""}]}