{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/thread-loader/dist/cjs.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","mtime":1653028361312},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"names":["createPersistedState","Cookies","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","store","namespace","state","username","email","email2","country","password","user","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","tempUser","test","statusList","grade","level","favoriteQuestion","logger","actualError","message","name","userInfo","exceptUserInfo","beingException","reloadForException","apiError","django","firebase","ipinfo","any","onSigningup","myQuestion","myQuizInfo","id","max","getters","getUID","getUser","getDjangouser","getEmailVerified","getTempUser","getMyQuestion","getMyQuizInfo","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","setDjangoUser","emailVerifiedHandler","checkEmailHandler","setTempUser","status","setTempUserReset","remove","tempUserTestTrue","resetQuizKeyStorage","setLogger","setUserInfo","checkBeingException","reloadForExceptionTrue","reloadForExceptionFalse","handleapiError","checkDjangoError","push","resetDjangoError","handleOnSigningup","deleteMyQuestion","filter","question","addMyQuestion","actions","signupDjangoUser","commit","method","data","then","response","window","location","pathname","signupDjangoUserForException","get","IP","ip_data","city","ip","loc","org","postal","region","timezone","getDjangoUser","dispatch","my_quiz","my_question","max_num","getFavoriteQuestion","questionId","favorite_question","i","catch","error","signup","context","ref","currentUser","sendEmailVerify","sentValidation","Error","login","checkEmail","passwordReset","logout","unsub"],"mappings":"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","sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport Cookies from 'js-cookie'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n        },\n        tempUser: {\n            test: false,\n            statusList:'',\n            grade:'',\n            level:''\n        },\n        favoriteQuestion:'',\n        logger:{\n            actualError:'',\n            message:'',\n            name:''\n        },\n        userInfo:'',\n        exceptUserInfo:'',\n        beingException:false,\n        reloadForException: false,\n        apiError:{\n            // this is for connection Error\n            django: false,\n            firebase: false,\n            ipinfo: false,\n            any: false\n        },\n        onSigningup:false,\n        myQuestion:'',\n        myQuizInfo:{\n            id:'',\n            max:'',\n        },\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getUser(state){\n            return state.user\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        },\n        getEmailVerified(state){\n            return state.emailVerified\n        },\n        getTempUser(state){\n            return state.tempUser\n        },\n        logger(state){\n            return state.logger\n        },\n        onSigningup(state){\n            return state.onSigningup\n        },\n        getMyQuestion(state){\n            return state.myQuestion\n        },\n        getMyQuizInfo(state){\n            return state.myQuizInfo\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            if(state.user){\n                state.UID = state.user.uid\n            }\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        setDjangoUser(state,payload){\n            state.djangoUser = payload\n            console.log('set Django user',state.djangoUser)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        },\n        setTempUser(state,payload){\n            state.tempUser.test = true\n            state.tempUser.statusList = payload.status\n            state.tempUser.grade = payload.grade\n            state.tempUser.level = payload.level\n            console.log('set-temp-user', state.tempUser)\n        },\n        setTempUserReset(state){\n            state.tempUser.test = false\n            state.tempUser.statusList = '',\n            state.tempUser.grade = '',\n            state.tempUser.level = ''\n            Cookies.remove('tempKey')\n            console.log('set',state.tempUser)\n        },\n        tempUserTestTrue(state){\n            state.tempUser.test = true\n        },\n        resetQuizKeyStorage(state){\n            state.UID = null\n            state.djangoUser = null\n            state.emailVerified = null\n            state.beingException = false,\n            state.reloadForException = false\n            state.apiError.django = false\n            state.apiError.firebase = false\n            state.apiError.ipinfo = false\n            state.apiError.any = false\n            state.myQuizInfo.id = ''\n            state.myQuizInfo.max = ''\n            state.myQuestion = ''\n            console.log('all-Reset')\n        },\n        setLogger(state,payload){\n            state.logger.actualError = payload.actualError\n            state.logger.name = payload.name\n            state.logger.message = payload.message\n        },\n        setUserInfo(state,payload){\n            state.userInfo = payload\n        },\n        checkBeingException(state,payload){\n            if(state.user&&!state.djangoUser){\n                state.beingException = true\n                console.log('set-being-exception',state.beingException)\n            }\n        },\n        reloadForExceptionTrue(state){\n            if(state.user&&!state.djangoUser){\n                state.reloadForException = true\n                console.log('setRUFEtrue')\n            }\n        },\n        reloadForExceptionFalse(state){\n            state.reloadForException = false\n            console.log('setRUFEfalse')\n        },\n        handleapiError(state,payload){\n            if(payload=='django'){\n                state.apiError.django = true\n            }\n            else if(payload=='firebase'){\n                state.apiError.firebase = true\n            }\n            else if(payload=='ipinfo'){\n                state.apiError.ipinfo = true\n            }\n        },\n        checkDjangoError(state,payload){\n            console.log('checkDE',payload)\n            if(state.apiError.django){\n                router.push({ name: 'ConnectionError' })\n            }\n            else if(payload==\"Network Error\"){\n                state.apiError.django = true\n                state.apiError.any = true\n            }else{\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        resetDjangoError(state){\n            state.apiError.django = false\n            state.apiError.any = false\n        },\n        handleOnSigningup(state){\n            state.onSigningup = !state.onSigningup\n        },\n        deleteMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion = state.myQuestion.filter(item =>{\n                console.log('item',item)\n                return (item.question.id !=payload)\n            })\n            console.log(\"after\",state.myQuestion)\n        },\n        addMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion.push(payload)\n            console.log(\"after\",state.myQuestion)\n        }\n    },\n    actions:{\n        async signupDjangoUser( {state, commit},payload ){\n            console.log(\"INSDU\",payload)\n            try{\n                // throw new Error('could not sent validation')\n                await axios({\n                    method: 'post',\n                    url: '/api/user/',\n                    data: payload\n                })\n                .then(response => {\n                    commit('setDjangoUser',response.data)\n                })\n                state.beingException = false\n                commit(\"resetDjangoErro\")\n                commit(\"setTempUserReset\")\n                state.userInfo = ''\n            }\n            catch(e){\n                state.userInfo = payload\n                let logger = {\n                    message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                commit('setLogger',logger)\n                commit(\"checkDjangoError\", e.message)\n            }\n        },\n        async signupDjangoUserForException( {state, commit},payload ){\n            // this is only for unsub below. dont use other part\n            console.log(\"INSDUFX\")\n            if(!state.djangoUser&&state.beingException){\n                if(state.userInfo){\n                    try{\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.userInfo\n                        })\n                        .then(response => {\n                            commit('setDjangoUser',response.data)\n                        })\n                        state.beingException = false\n                        commit('resetDjangoError')\n                        commit(\"setTempUserReset\")\n                        state.userInfo = ''\n                    }\n                    catch(e){\n                        console.log('catchdayo',e.message)\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        commit(\"checkDjangoError\", e.message)\n                    }\n                }\n                else{\n                    try{\n                        console.log('NO TEMP')\n                        await axios\n                        .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n                        .then(response => {\n                            let IP = response.data\n                            state.exceptUserInfo = {\n                                UID: state.user.uid,\n                                name: '名前を変更しよう',\n                                email: state.user.email,\n                                ip_data: [{\n                                    city: IP.city,\n                                    ip: IP.ip,\n                                    loc: IP.loc,\n                                    org: IP.org,\n                                    postal: IP.postal,\n                                    region: IP.region,\n                                    timezone: IP.timezone,\n                                    country: IP.country\n                                }]\n                            } \n                        })\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.signup.DjangoUserForException. ipinfo error\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                     \n                    try{\n                        console.log('try non_userINFO',state.exceptUserInfo)\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.exceptUserInfo\n                        })\n                        state.beingException = false\n                        commit(\"resetDjangoError\")\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                }   \n            }\n        },\n        async getDjangoUser({ state, commit,dispatch }){\n            if(state.user&&!state.beingException){\n                console.log('GDU_pass',state.beingException)\n                try{\n                    await axios\n                    .get(`/api/user/${state.user.uid}`)\n                    .then(response => {\n                        commit('setDjangoUser',response.data)\n                        state.myQuestion = response.data.my_quiz[0].my_question\n                        state.myQuizInfo.id = response.data.my_quiz[0].id\n                        state.myQuizInfo.max = response.data.my_quiz[0].max_num\n                        console.log(\"MQ\",state.myQuestion)\n                    })\n                    commit(\"resetDjangoError\")\n                }\n                catch(e){\n                    console.log('catch')\n                    let logger = {\n                        message: \"in store/signup.getDjangoUser. couldn't get django user\",\n                        name: window.location.pathname,\n                        actualError: e\n                    }\n                    commit('setLogger',logger)\n                    commit(\"checkDjangoError\", e.message)\n                }\n            }\n        },\n        async getFavoriteQuestion({ state, commit }){\n            state.favoriteQuestion = null\n            if(state.djangoUser){\n                try{\n                    const questionId = []\n                    for(let i of state.djangoUser.favorite_question[0].question){\n                        questionId.push(i)\n                    }\n                    if(questionId[0]){\n                        await axios\n                        .get(`/api/board/question-favorite?question_id=${questionId}`)\n                        .then(response => {\n                            state.favoriteQuestion = response.data\n                            })\n                        .catch(error => {\n                            console.log(error)\n                        })\n                    }\n                }catch{\n                    \n                }\n            }\n        },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch(e){\n                let logger = {\n                    message: \"in store/signup.signup. couldn't signup firebase user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                context.commit('setLogger',logger)\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            // context.commit('setIsLoading', true, {root:true})\n            console.log('in_login')\n            try{\n                var ref = await signInWithEmailAndPassword(auth, email, password)\n            }catch{\n                console.log('error')\n                throw new Error('could not complite signin')\n            }\n            if(ref){\n                console.log(\"IF YES\")\n                context.commit('setUser',ref.user)\n                context.dispatch('getDjangoUser')\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log(context.state.user,context.state.emailVerified)\n            }else{\n                console.log('error in sign in')\n                throw new Error('could not complite signin')\n            }\n            // context.commit('setIsLoading', false, {root:true})                \n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            context.commit('resetQuizKeyStorage')\n            router.push({ name: 'Home' })\n        }\n    }\n\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    console.log('unsub')\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n        store.dispatch('signupDjangoUserForException')\n    }else{\n        store.commit('resetQuizKeyStorage')\n    }\n    unsub()\n})"]}]}