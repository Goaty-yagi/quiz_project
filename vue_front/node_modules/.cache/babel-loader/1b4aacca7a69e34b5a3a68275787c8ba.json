{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","mtime":1650340765337},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js"],"names":["store","router","axios","getDefaultState","isLoading","quizID","numOfQuiz","questionField","level","questions","quiz","quizNameId","fieldNameId","randomURL","test","notice","step","namespace","state","getters","mutations","getRandomQuestion","array","console","log","k","length","i","answer","r","Math","floor","random","tmp","setQuestions","setTestQuestions","getQuiz","payload","getQuizInfo","quizInfo","quizId","fieldId","quizNum","getTestQuizInfo","setQuizNameId","setFieldNameId","actions","getquestions","commit","num","root","get","response","data","shift","getQuizNameId","getFieldNameId","getTestQuestions"],"mappings":"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","sourcesContent":["import store from '..'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\n\n\nlet getDefaultState = () => {\n    return {\n        isLoading: false,\n        quizID: 1,\n        numOfQuiz: 3,\n        questionField: [1,2],\n        level: 1,\n        questions:[],\n        quiz:[],\n        quizNameId:'',\n        fieldNameId:'',\n        randomURL:'',\n        test:null,\n        notice:false,\n        step:1,\n    }\n}\n\nexport default {\n    namespace: true,\n    state: getDefaultState(),\n    getters:{\n        questions:(state) => state.questions,\n        quiz:(state) => state.quiz,\n        quizNameId:(state) => state.quizNameId,\n        fieldNameId:(state) => state.fieldNameId\n    },\n    mutations:{\n        getRandomQuestion(state,array){\n            console.log('in randomQ', array)\n            // for (let i = array.length - 1; i >= 0; i--) {\n            //     let r = Math.floor(Math.random() * (i + 1))\n            //     let tmp = array[i]\n            //     array[i] = array[r]\n            //     array[r] = tmp\n            // }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                    let r = Math.floor(Math.random() * (i + 1))\n                    let tmp = array[k].answer[i]\n                    array[k].answer[i] = array[k].answer[r]\n                    array[k].answer[r] = tmp\n                }\n            }\n            return array\n        },\n        setQuestions:(state,questions) => (state.questions = questions),\n        setTestQuestions:(state,questions) => (state.questions = questions),\n        getQuiz(state, payload){\n            state.quiz = payload\n            console.log(state.quiz)\n        },\n        getQuizInfo(state, quizInfo){\n            console.log('GQIStore',quizInfo)\n            state.questionField = []\n            state.quizID = ''\n            state.numOfQuiz = ''\n            state.quizID = quizInfo.quizId\n            if(quizInfo.fieldId){\n                state.questionField = quizInfo.fieldId\n            }\n            state.numOfQuiz = quizInfo.quizNum\n            console.log('GQINFOStore',state.quizID,state.questionField)\n        },\n        getTestQuizInfo(state, quizInfo){\n            state.quizID = quizInfo.quizId\n            state.level = quizInfo.level\n        },\n        setQuizNameId(state, payload){\n            state.quizNameId = payload\n        },\n        setFieldNameId(state, payload){\n            state.fieldNameId = payload\n        },\n        // clearQuiz(state, payload){\n        //     console.log('in_cleared')\n        //     state.questions = []\n        //     state.quiz = []\n        //     console.log('cleared')\n        // }\n    },\n    actions:{\n        async getquestions({ state, commit }){\n            console.log('action2',state.num)\n            state.questions = []\n            state.quiz = []\n            commit('setIsLoading', true, {root:true})\n            if(state.questionField[0]){\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}&field=${state.questionField}`)\n            }else{\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}`)\n            }\n            commit('getQuiz',response.data[0])\n            response.data.shift()\n            commit('getRandomQuestion',response.data)\n            commit('setQuestions',response.data);\n            commit('setIsLoading', false,{root:true})\n        },\n        async getQuizNameId({ state, commit }){\n            if(state.quizNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/quizzes-name-id/\")\n                commit('setQuizNameId',response.data)\n                console.log(state.quizNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getFieldNameId({ state, commit }){\n            if(state.fieldNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/field-list/\")\n                commit('setFieldNameId',response.data)\n                console.log(state.fieldNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getTestQuestions({ state, commit }){\n            commit('setIsLoading', true, {root:true})\n            let response = await axios.get(`/api/quizzes-tests/?quiz=${state.quizID}&level=${state.level}`)\n            commit('getQuiz',response.data[0])\n            response.data.shift()\n            commit('getRandomQuestion',response.data)\n            commit('setTestQuestions',response.data);\n            commit('setIsLoading', false,{root:true})\n        },\n    }\n}"]}]}