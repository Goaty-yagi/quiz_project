{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue?vue&type=template&id=86beb2ec","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue","mtime":1649296116893},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHdpdGhNb2RpZmllcnMgYXMgX3dpdGhNb2RpZmllcnMgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogInRodW1ibmFpbC13cmFwcGVyIgp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICJ0aHVtYm5haWwiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJjcm9wcGVyLW91dGVyLXdyYXBwZXIiCn07CnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAiY3JvcHBlcmlubmVyLXdyYXBwZXIiCn07CnZhciBfaG9pc3RlZF81ID0gWyJzcmMiXTsKCnZhciBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICBjbGFzczogInNhdmUtYnV0dG9uIgp9LCAic2F2ZSIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF83ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxkaXY+XG4gICAgICAgICAgICAgICAgPGltZyBpZD1cImltYWdlXCIgc3JjPVwiQC9hc3NldHMvbG9nby5wbmdcIj5cbiAgICAgICAgICAgIDwvZGl2PiAiKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImZvcm0iLCB7CiAgICBvblN1Ym1pdDogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBfd2l0aE1vZGlmaWVycyhmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy51c2VyVXBkYXRlICYmICRvcHRpb25zLnVzZXJVcGRhdGUuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9LCBbInByZXZlbnQiXSkpCiAgfSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImZpbGUiLAogICAgb25DaGFuZ2U6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZ2V0SW1hZ2UgJiYgJG9wdGlvbnMuZ2V0SW1hZ2UuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIGVuY3R5cGU6ICJtdWx0aXBhcnQvZm9ybS1kYXRhIgogIH0sIG51bGwsIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApLCAkZGF0YS5zZWxlY3RlZEZpbGUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHJlZjogImltYWdlIiwKICAgIHNyYzogJGRhdGEuc2VsZWN0ZWRGaWxlLAogICAgc3R5bGU6IHsKICAgICAgIndpZHRoIjogIjMwMHB4IiwKICAgICAgImhlaWdodCI6ICIzMDBweCIKICAgIH0KICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIF9ob2lzdGVkXzUpXSksIF9ob2lzdGVkXzYsICRkYXRhLnNlbGVjdGVkRmlsZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImJ1dHRvbiIsIHsKICAgIGtleTogMCwKICAgIGNsYXNzOiAic2F2ZS1idXR0b24iLAogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5jaGFuY2VsICYmICRvcHRpb25zLmNoYW5jZWwuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sICJjaGFuY2VsIikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIg44CA44CA44CA44CAICIpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSwgMzIKICAvKiBIWURSQVRFX0VWRU5UUyAqLwogICksIF9ob2lzdGVkXzddKTsKfQ=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;8BACP,mBAAA,CAAgB,GAAhB,EAAgB,IAAhB,EAAG,WAAH,EAAY,CAAA;AAAA;AAAZ,C;;;;AAGS,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;;8BAGX,mBAAA,CAAyC,QAAzC,EAAyC;AAAjC,EAAA,KAAK,EAAC;AAA2B,CAAzC,EAA4B,MAA5B,EAAgC,CAAA;AAAA;AAAhC,C;;8BAKR,mBAAA,CAIM,KAJN,EAIM,IAJN,EAIM,C,aAHF,mBAAA,CAAA,2FAAA,CAGE,CAJN,E;;AAAA,C;;;uBAbJ,mBAAA,CAkBM,KAlBN,EAAA,UAAA,EAkBM,CAjBF,UAiBE,EAhBF,mBAAA,CAUO,MAVP,EAUO;AAVA,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA;AAAA,aAAU,QAAA,CAAA,UAAA,IAAA,QAAA,CAAA,UAAA,OAAA,QAAA,YAAV;AAAA,KAAA,EAAoB,CAAA,SAAA,CAApB,CAAA;AAUN,GAVP,E,CACI,mBAAA,CAAoE,OAApE,EAAoE;AAA7D,IAAA,IAAI,EAAC,MAAwD;AAAhD,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,QAAA,IAAA,QAAA,CAAA,QAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAA0C;AAA9B,IAAA,OAAO,EAAC;AAAsB,GAApE,E,IAAA,E;;AAAA,G,EACyC,KAAA,CAAA,Y,kBAAzC,mBAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANF,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,mBAAA,CAA0E,KAA1E,EAA0E;AAArE,IAAA,GAAG,EAAC,OAAiE;AAAxD,IAAA,GAAG,EAAE,KAAA,CAAA,YAAmD;AAArC,IAAA,KAAoC,EAApC;AAAA,eAAA,OAAA;AAAA,gBAAA;AAAA;AAAqC,GAA1E,E,IAAA,E;;AAAA,I,UAAA,CACE,CAFN,CAME,EAHF,UAGE,EAFgC,KAAA,CAAA,Y,kBAAlC,mBAAA,CAAiF,QAAjF,EAAiF;UAAA;AAAzE,IAAA,KAAK,EAAC,aAAmE;AAAhC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,IAAA,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAA2B,GAAjF,EAAiE,SAAjE,C,qCAEE,EADF,mBAAA,CAAA,QAAA,CACE,CAPN,C,sCAFJ,E;;AAAA,GAgBE,EALF,UAKE,CAlBN,C","sourcesContent":["<template>\n    <div class='thumbnail-wrapper'>\n        <p>thumbnail</p>\n        <form @submit.prevent='userUpdate'>\n            <input type=\"file\" @change='getImage' enctype=\"multipart/form-data\">\n            <div class=\"cropper-outer-wrapper\" v-if=\"selectedFile\">\n                <div class='cropperinner-wrapper'>\n                    <img ref='image' :src=\"selectedFile\" style=\"width: 300px; height: 300px;\">\n                </div>\n                <button class='save-button'>save</button>\n                <button class='save-button' v-if='selectedFile' @click='chancel'>chancel</button>\n                <!-- 　　　　 -->\n            </div>\n        </form>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Cropper from 'cropperjs';\nexport default {\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            cropper:{},\n            destination:{}\n        }\n    },\n    mounted(){\n        // this.cropper()\n        console.log(this.image)\n    },\n    methods:{\n        async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files[0]\n            await console.log(this.image)\n            this.imageCropper()\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: false,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n        },\n        // getCroppedURL(){\n        //     console.log('croppedURL')\n        //     document.getElementById('crop-btn').addEventListener('click', function () {\n        //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n        //     var result = document.getElementById('result-img');\n        //     result.src = resultImgUrl;\n        //      });\n        // },\n        async userUpdate(){\n            const canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minCropBoxHeight: 300,\n                minCropBoxWidth: 300,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n                });\n            canvas.toBlob(async (blob) => {\n            const formData = new FormData();\n            formData.append('thumbnail',blob, `${this.image}.png`),\n            console.log('getthumb',formData.get('thumbnail')),\n            await axios.patch(`/api/user/${this.$route.params.uid}`,\n                formData\n            )\n            }, 'image/png')\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        }\n    }\n}\n</script>\n\n<style>\n.thumbnail-wrapper{\n    width: 100%;\n    height: 100%;\n    overflow:scroll;  \n}\n.save-button{\n    z-index: 10;\n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n</style>"],"sourceRoot":""}]}