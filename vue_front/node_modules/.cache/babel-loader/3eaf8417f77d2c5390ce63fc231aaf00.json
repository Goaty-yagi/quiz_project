{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport createPersistedState from 'vuex-persistedstate';\nimport Cookies from 'js-cookie';\nimport { auth } from '@/firebase/config';\nimport { router } from \"@/main.js\";\nimport axios from 'axios';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, sendEmailVerification, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail, GoogleAuthProvider, signInWithPopup, getAuth } from 'firebase/auth';\nimport store from '..';\nexport default {\n  namespace: true,\n  // plugins: [\n  //     createPersistedState({\n  //       key: 'signupKey',  // 設定しなければ'vuex'\n  //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n  //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n  //     })],\n  state: {\n    username: '',\n    email: '',\n    email2: '',\n    country: '',\n    password: '',\n    user: null,\n    registeredUser: false,\n    djangoUser: null,\n    UID: '',\n    fasvoriteQuestion: '',\n    emailVerified: null,\n    authIsReady: false,\n    checkedEmail: null,\n    accountURL: 'http://localhost:8080/',\n    actionCodeSettings: {\n      url: null,\n      handleCodeInApp: true\n    },\n    tempUser: {\n      test: false,\n      statusList: '',\n      grade: '',\n      level: ''\n    },\n    favoriteQuestion: '',\n    logger: {\n      actualError: '',\n      message: '',\n      name: ''\n    },\n    userInfo: '',\n    exceptUserInfo: '',\n    beingException: false,\n    reloadForException: false,\n    apiError: {\n      // this is for connection Error\n      django: false,\n      firebase: false,\n      ipinfo: false,\n      any: false\n    },\n    onSigningup: false,\n    myQuestion: '',\n    myQuizInfo: {\n      id: '',\n      max: ''\n    },\n    gradeDict: {\n      '超初級': 0,\n      '初級': 10,\n      '中級': 20,\n      '上級': 30\n    },\n    thirdPartyLogindata: '',\n    thirdPartyError: ''\n  },\n  getters: {\n    getUID: function getUID(state) {\n      return state.UID;\n    },\n    getUser: function getUser(state) {\n      return state.user;\n    },\n    getDjangouser: function getDjangouser(state) {\n      return state.djangoUser;\n    },\n    getEmailVerified: function getEmailVerified(state) {\n      return state.emailVerified;\n    },\n    getTempUser: function getTempUser(state) {\n      return state.tempUser;\n    },\n    logger: function logger(state) {\n      return state.logger;\n    },\n    onSigningup: function onSigningup(state) {\n      return state.onSigningup;\n    },\n    getMyQuestion: function getMyQuestion(state) {\n      return state.myQuestion;\n    },\n    getMyQuizInfo: function getMyQuizInfo(state) {\n      return state.myQuizInfo;\n    },\n    quizNameIdInSignup: function quizNameIdInSignup(state, getters, rootState) {\n      return rootState.quiz.quizNameId;\n    },\n    getUserInfo: function getUserInfo(state) {\n      return state.userInfo;\n    },\n    getThirdPartyError: function getThirdPartyError(state) {\n      return state.thirdPartyError;\n    }\n  },\n  mutations: {\n    getUsername: function getUsername(state, item) {\n      state.username = item;\n    },\n    getEmail: function getEmail(state, item) {\n      state.email = item;\n    },\n    getEmail2: function getEmail2(state, item) {\n      state.email2 = item;\n    },\n    getCountry: function getCountry(state, item) {\n      state.country = item;\n    },\n    getPassword: function getPassword(state, item) {\n      state.password = item;\n    },\n    setUser: function setUser(state, payload) {\n      state.user = payload;\n\n      if (state.user) {\n        state.registeredUser = true;\n        state.UID = state.user.uid;\n      }\n\n      console.log('user state changed:', state.user);\n    },\n    setAuthIsReady: function setAuthIsReady(state, payload) {\n      state.authIsReady = payload;\n      console.log('setauth is changed:', state.user);\n    },\n    setDjangoUser: function setDjangoUser(state, payload) {\n      state.djangoUser = payload;\n      console.log('set Django user', state.djangoUser);\n    },\n    emailVerifiedHandler: function emailVerifiedHandler(state, payload) {\n      state.emailVerified = payload;\n      console.log('emailV chainged', state.emailVerified);\n    },\n    checkEmailHandler: function checkEmailHandler(state, payload) {\n      state.checkedEmail = payload;\n    },\n    setTempUser: function setTempUser(state, payload) {\n      state.tempUser.test = true;\n      state.tempUser.statusList = payload.status;\n      state.tempUser.grade = payload.grade;\n      state.tempUser.level = payload.level;\n      console.log('set-temp-user', state.tempUser);\n    },\n    setTempUserReset: function setTempUserReset(state) {\n      state.tempUser.test = false;\n      state.tempUser.statusList = '', state.tempUser.grade = '', state.tempUser.level = '';\n      Cookies.remove('tempKey');\n      console.log('reset-TempUser', state.tempUser);\n    },\n    tempUserTestTrue: function tempUserTestTrue(state) {\n      state.tempUser.test = true;\n    },\n    resetQuizKeyStorage: function resetQuizKeyStorage(state) {\n      // this is for log out\n      state.UID = null;\n      state.djangoUser = null;\n      state.emailVerified = null;\n      state.beingException = false, state.reloadForException = false;\n      state.apiError.django = false;\n      state.apiError.firebase = false;\n      state.apiError.ipinfo = false;\n      state.apiError.any = false;\n      state.myQuizInfo.id = '';\n      state.myQuizInfo.max = '';\n      state.myQuestion = '';\n      state.registeredUser = false;\n      console.log('all-Reset');\n    },\n    setLogger: function setLogger(state, payload) {\n      state.logger.actualError = payload.actualError;\n      state.logger.name = payload.name;\n      state.logger.message = payload.message;\n    },\n    setUserInfo: function setUserInfo(state, payload) {\n      state.userInfo = payload;\n    },\n    checkBeingException: function checkBeingException(state, payload) {\n      if (state.user && !state.djangoUser) {\n        state.beingException = true;\n        console.log('set-being-exception', state.beingException);\n      }\n    },\n    reloadForExceptionTrue: function reloadForExceptionTrue(state) {\n      if (state.user && !state.djangoUser) {\n        state.reloadForException = true;\n        console.log('setRUFEtrue');\n      }\n    },\n    reloadForExceptionFalse: function reloadForExceptionFalse(state) {\n      state.reloadForException = false;\n      console.log('setRUFEfalse');\n    },\n    handleapiError: function handleapiError(state, payload) {\n      if (payload == 'django') {\n        state.apiError.django = true;\n      } else if (payload == 'firebase') {\n        state.apiError.firebase = true;\n      } else if (payload == 'ipinfo') {\n        state.apiError.ipinfo = true;\n      }\n    },\n    checkDjangoError: function checkDjangoError(state, payload) {\n      console.log('checkDE', payload);\n\n      if (state.apiError.django) {\n        router.push({\n          name: 'ConnectionError'\n        });\n      } else if (payload == \"Network Error\") {\n        state.apiError.django = true;\n        state.apiError.any = true;\n      } else {\n        router.push({\n          name: 'NotFound404'\n        });\n      }\n    },\n    resetDjangoError: function resetDjangoError(state) {\n      state.apiError.django = false;\n      state.apiError.any = false;\n    },\n    handleOnSigningup: function handleOnSigningup(state) {\n      state.onSigningup = !state.onSigningup;\n    },\n    deleteMyQuestion: function deleteMyQuestion(state, payload) {\n      console.log(\"before\", state.myQuestion, payload);\n      state.myQuestion = state.myQuestion.filter(function (item) {\n        console.log('item', item);\n        return item.question.id != payload;\n      });\n      console.log(\"after\", state.myQuestion);\n    },\n    addMyQuestion: function addMyQuestion(state, payload) {\n      console.log(\"before\", state.myQuestion, payload);\n      state.myQuestion.push(payload);\n      console.log(\"after\", state.myQuestion);\n    },\n    updateQuizTaker: function updateQuizTaker(state, payload) {\n      state.djangoUser.quiz_taker[0].grade = payload.grade;\n      state.djangoUser.quiz_taker[0].level = payload.level;\n      console.log('set', state.djangoUser);\n    },\n    updateQuizTakerMax: function updateQuizTakerMax(state, payload) {\n      // this is for session storage only to reduce API hit\n      state.djangoUser.quiz_taker[0].max_level = state.djangoUser.quiz_taker[0].level;\n      state.djangoUser.quiz_taker[0].max_grade = payload;\n      console.log('set_max', state.djangoUser);\n    },\n    setTirdPartyLoginData: function setTirdPartyLoginData(state, payload) {\n      if (state.tempUser.test) {\n        console.log('YES TEMP');\n        state.userInfo = {\n          UID: payload.uid,\n          name: payload.displayName,\n          email: payload.email,\n          quiz_taker: [{\n            grade: state.tempUser.grade\n          }, {\n            level: state.tempUser.level\n          }]\n        };\n      } else {\n        console.log('NO TEMP');\n        state.userInfo = {\n          UID: payload.uid,\n          name: payload.displayName,\n          email: payload.email\n        };\n      } // try{\n      //     console.log(\"try\",this.userInfo)\n      //     this.$store.dispatch('signupDjangoUser',this.userInfo)\n      // }\n      // catch(error){\n      //     console.log('error',error.message)\n      // }\n\n    },\n    setIpData: function setIpData(state, payload) {\n      state.userInfo['ip_data'] = [{\n        city: payload.city,\n        ip: payload.ip,\n        loc: payload.loc,\n        org: payload.org,\n        postal: payload.postal,\n        region: payload.region,\n        timezone: payload.timezone,\n        country: payload.country\n      }];\n      console.log('setIpdata', state.userInfo);\n    }\n  },\n  actions: {\n    signupDjangoUser: function signupDjangoUser(_ref, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var state, commit, logger;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _ref.state, commit = _ref.commit;\n                console.log(\"INSDU\", payload);\n                _context.prev = 2;\n                _context.next = 5;\n                return axios({\n                  method: 'post',\n                  url: '/api/user/',\n                  data: payload\n                }).then(function (response) {\n                  commit('setDjangoUser', response.data);\n                });\n\n              case 5:\n                state.beingException = false;\n                commit(\"resetDjangoError\");\n                commit(\"setTempUserReset\");\n                state.userInfo = '';\n                _context.next = 19;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                state.thirdPartyError = _context.t0;\n                state.userInfo = payload;\n                logger = {\n                  message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n                  name: window.location.pathname,\n                  actualError: _context.t0\n                };\n                console.log('error', _context.t0);\n                commit('setLogger', logger);\n                commit(\"checkDjangoError\", _context.t0.message);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }))();\n    },\n    signupDjangoUserForException: function signupDjangoUserForException(_ref2, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var state, commit, logger, _logger, _logger2;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref2.state, commit = _ref2.commit;\n                // this is only for unsub below. dont use other part\n                console.log(\"INSDUFX\");\n\n                if (!(!state.djangoUser && state.beingException)) {\n                  _context2.next = 48;\n                  break;\n                }\n\n                if (!state.userInfo) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _context2.prev = 4;\n                _context2.next = 7;\n                return axios({\n                  method: 'post',\n                  url: '/api/user/',\n                  data: state.userInfo\n                }).then(function (response) {\n                  commit('setDjangoUser', response.data);\n                });\n\n              case 7:\n                state.beingException = false;\n                commit('resetDjangoError');\n                commit(\"setTempUserReset\");\n                state.userInfo = '';\n                _context2.next = 20;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.log('catchdayo', _context2.t0.message);\n                commit(\"checkDjangoError\", _context2.t0.message);\n                logger = {\n                  message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                  name: window.location.pathname,\n                  actualError: _context2.t0\n                };\n                commit('setLogger', logger);\n                commit(\"checkDjangoError\", _context2.t0.message);\n\n              case 20:\n                _context2.next = 48;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                console.log('NO TEMP');\n                _context2.next = 26;\n                return axios.get(\"https://ipinfo.io/json?token=32e16159d962c5\").then(function (response) {\n                  var IP = response.data;\n                  state.exceptUserInfo = {\n                    UID: state.user.uid,\n                    name: '名前を変更しよう',\n                    email: state.user.email,\n                    ip_data: [{\n                      city: IP.city,\n                      ip: IP.ip,\n                      loc: IP.loc,\n                      org: IP.org,\n                      postal: IP.postal,\n                      region: IP.region,\n                      timezone: IP.timezone,\n                      country: IP.country\n                    }]\n                  };\n                });\n\n              case 26:\n                _context2.next = 34;\n                break;\n\n              case 28:\n                _context2.prev = 28;\n                _context2.t1 = _context2[\"catch\"](22);\n                commit(\"checkDjangoError\", _context2.t1.message);\n                _logger = {\n                  message: \"in store/signup.signup.DjangoUserForException. ipinfo error\",\n                  name: window.location.pathname,\n                  actualError: _context2.t1\n                };\n                commit('setLogger', _logger);\n                router.push({\n                  name: 'NotFound404'\n                });\n\n              case 34:\n                _context2.prev = 34;\n                console.log('try non_userINFO', state.exceptUserInfo); // throw new Error('could not sent validation')\n\n                _context2.next = 38;\n                return axios({\n                  method: 'post',\n                  url: '/api/user/',\n                  data: state.exceptUserInfo\n                });\n\n              case 38:\n                state.beingException = false;\n                commit(\"resetDjangoError\");\n                _context2.next = 48;\n                break;\n\n              case 42:\n                _context2.prev = 42;\n                _context2.t2 = _context2[\"catch\"](34);\n                commit(\"checkDjangoError\", _context2.t2.message);\n                _logger2 = {\n                  message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                  name: window.location.pathname,\n                  actualError: _context2.t2\n                };\n                commit('setLogger', _logger2);\n                router.push({\n                  name: 'NotFound404'\n                });\n\n              case 48:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 13], [22, 28], [34, 42]]);\n      }))();\n    },\n    getDjangoUser: function getDjangoUser(_ref3) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var state, commit, dispatch, logger;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = _ref3.state, commit = _ref3.commit, dispatch = _ref3.dispatch;\n\n                if (!(state.user && !state.beingException)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                console.log('GDU_pass', state.beingException);\n                _context3.prev = 3;\n                _context3.next = 6;\n                return axios.get(\"/api/user/\".concat(state.user.uid)).then(function (response) {\n                  commit('setDjangoUser', response.data);\n                  state.myQuestion = response.data.my_quiz[0].my_question;\n                  state.myQuizInfo.id = response.data.my_quiz[0].id;\n                  state.myQuizInfo.max = response.data.my_quiz[0].max_num;\n                  console.log(\"MQ\", state.myQuestion);\n                });\n\n              case 6:\n                commit(\"resetDjangoError\");\n                _context3.next = 15;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log('catch');\n                logger = {\n                  message: \"in store/signup.getDjangoUser. couldn't get django user\",\n                  name: window.location.pathname,\n                  actualError: _context3.t0\n                };\n                commit('setLogger', logger);\n                commit(\"checkDjangoError\", _context3.t0.message);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 9]]);\n      }))();\n    },\n    getFavoriteQuestion: function getFavoriteQuestion(_ref4) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var state, commit, questionId, _iterator, _step, i;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = _ref4.state, commit = _ref4.commit;\n                state.favoriteQuestion = null;\n\n                if (!state.djangoUser) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                _context4.prev = 3;\n                questionId = [];\n                _iterator = _createForOfIteratorHelper(state.djangoUser.favorite_question[0].question);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    i = _step.value;\n                    questionId.push(i);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                if (!questionId[0]) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.next = 10;\n                return axios.get(\"/api/board/question-favorite?question_id=\".concat(questionId)).then(function (response) {\n                  state.favoriteQuestion = response.data;\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 10:\n                _context4.next = 14;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](3);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[3, 12]]);\n      }))();\n    },\n    signup: function signup(context, _ref5) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var email, password, ref, logger;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                email = _ref5.email, password = _ref5.password;\n                console.log('signup in');\n                _context5.prev = 2;\n                _context5.next = 5;\n                return createUserWithEmailAndPassword(auth, email, password);\n\n              case 5:\n                ref = _context5.sent;\n                context.state.actionCodeSettings['url'] = context.state.accountURL;\n                sendEmailVerification(ref.user, context.state.actionCodeSettings);\n                context.commit('setUser', ref.user);\n                context.commit('emailVerifiedHandler', ref.user.emailVerified);\n                console.log('signup is done', auth.currentUser);\n                _context5.next = 18;\n                break;\n\n              case 13:\n                _context5.prev = 13;\n                _context5.t0 = _context5[\"catch\"](2);\n                logger = {\n                  message: \"in store/signup.signup. couldn't signup firebase user\",\n                  name: window.location.pathname,\n                  actualError: _context5.t0\n                };\n                context.commit('setLogger', logger);\n                router.push({\n                  name: 'NotFound404'\n                });\n\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 13]]);\n      }))();\n    },\n    googleLogin: function googleLogin(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var provider, auth;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                provider = new GoogleAuthProvider();\n                auth = getAuth();\n                signInWithPopup(auth, provider).then(function (result) {\n                  // This gives you a Google Access Token. You can use it to access the Google API.\n                  var credential = GoogleAuthProvider.credentialFromResult(result);\n                  var token = credential.accessToken; // The signed-in user info.\n\n                  context.commit('setUser', result.user);\n                  context.commit('emailVerifiedHandler', result.emailVerified);\n                  context.commit('setTirdPartyLoginData', result.user);\n                  context.dispatch('getIpData');\n                  console.log('googlrUser', user); // router.push({ name: 'Home' })\n                }).catch(function (error) {\n                  // Handle Errors here.\n                  var errorCode = error.code;\n                  var errorMessage = error.message; // The email of the user's account used.\n\n                  var email = error.email; // The AuthCredential type that was used.\n\n                  var credential = GoogleAuthProvider.credentialFromError(error); // ...\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    sendEmailVerify: function sendEmailVerify(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                context.state.actionCodeSettings['url'] = context.state.accountURL;\n                console.log('sendEmail', context.state.user, context.state.actionCodeSettings);\n                _context7.next = 4;\n                return sendEmailVerification(context.state.user, context.state.actionCodeSettings);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    sentValidation: function sentValidation(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                console.log('insentV');\n                _context8.prev = 1;\n                _context8.next = 4;\n                return context.state.user.sendEmailVerification();\n\n              case 4:\n                _context8.next = 10;\n                break;\n\n              case 6:\n                _context8.prev = 6;\n                _context8.t0 = _context8[\"catch\"](1);\n                console.log('error in sent');\n                throw new Error('could not sent validation');\n\n              case 10:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[1, 6]]);\n      }))();\n    },\n    login: function login(context, _ref6) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var email, password, ref;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                email = _ref6.email, password = _ref6.password;\n                // context.commit('setIsLoading', true, {root:true})\n                console.log('in_login');\n                _context9.prev = 2;\n                _context9.next = 5;\n                return signInWithEmailAndPassword(auth, email, password);\n\n              case 5:\n                ref = _context9.sent;\n                _context9.next = 12;\n                break;\n\n              case 8:\n                _context9.prev = 8;\n                _context9.t0 = _context9[\"catch\"](2);\n                console.log('error');\n                throw new Error('could not complite signin');\n\n              case 12:\n                if (!ref) {\n                  _context9.next = 21;\n                  break;\n                }\n\n                console.log(\"IF YES\");\n                context.commit('setUser', ref.user);\n                context.dispatch('getDjangoUser');\n                context.commit(\"setTempUserReset\");\n                context.commit('emailVerifiedHandler', ref.user.emailVerified);\n                console.log(context.state.user, context.state.emailVerified);\n                _context9.next = 23;\n                break;\n\n              case 21:\n                console.log('error in sign in');\n                throw new Error('could not complite signin');\n\n              case 23:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[2, 8]]);\n      }))();\n    },\n    checkEmail: function checkEmail(context, email) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var ref;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return fetchSignInMethodsForEmail(auth, email);\n\n              case 3:\n                ref = _context10.sent;\n\n                if (ref == 'password') {\n                  context.commit('checkEmailHandler', false);\n                  console.log('already in use');\n                } else {\n                  context.commit('checkEmailHandler', true);\n                  console.log('you can use it');\n                }\n\n                _context10.next = 11;\n                break;\n\n              case 7:\n                _context10.prev = 7;\n                _context10.t0 = _context10[\"catch\"](0);\n                console.log('error in sign up');\n                throw new Error('could not check email');\n\n              case 11:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 7]]);\n      }))();\n    },\n    passwordReset: function passwordReset(context, email) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                console.log('passreset action', email);\n                _context11.prev = 1;\n                context.state.actionCodeSettings['url'] = context.state.accountURL;\n                _context11.next = 5;\n                return sendPasswordResetEmail(auth, email, context.state.actionCodeSettings);\n\n              case 5:\n                console.log('password reset sent');\n                _context11.next = 12;\n                break;\n\n              case 8:\n                _context11.prev = 8;\n                _context11.t0 = _context11[\"catch\"](1);\n                console.log('error in pass reset');\n                throw new Error('could not sent pass reset');\n\n              case 12:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[1, 8]]);\n      }))();\n    },\n    logout: function logout(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return signOut(auth);\n\n              case 2:\n                context.commit('setUser', null);\n                context.commit('resetQuizKeyStorage');\n                router.push({\n                  name: 'Home'\n                });\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12);\n      }))();\n    },\n    updateQuizTakerAction: function updateQuizTakerAction(_ref7, payload) {\n      var state = _ref7.state,\n          commit = _ref7.commit,\n          getters = _ref7.getters;\n      console.log('inUQTA', getters);\n      commit('updateQuizTaker', payload);\n      console.log('UPaction', getters.quizNameIdInSignup);\n\n      var _iterator2 = _createForOfIteratorHelper(getters.quizNameIdInSignup),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var i = _step2.value;\n\n          if (i.id == payload.grade) {\n            if (state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] < state.gradeDict[i.name]) {\n              commit('updateQuizTakerMax', i.name);\n              break;\n            } else if (state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] == state.gradeDict[i.name]) {\n              if (state.djangoUser.quiz_taker[0].max_level < payload.level) {\n                commit('updateQuizTakerMax', i.name);\n                break;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    getOrSignupDjangoUserForThirdParty: function getOrSignupDjangoUserForThirdParty(context) {\n      console.log('gonna signup', context.getters.getUserInfo);\n      context.dispatch('signupDjangoUser', context.getters.getUserInfo);\n      console.log('GG', context.getters.getThirdPartyError);\n\n      if (context.getters.getThirdPartyError == 'user_exist') {\n        context.dispatch('getDjangoUser', context.state.userInfo);\n      }\n    },\n    getIpData: function getIpData(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return axios.get(\"https://ipinfo.io/json?token=32e16159d962c5\").then(function (response) {\n                  context.commit('setIpData', response.data);\n                  context.dispatch('getOrSignupDjangoUserForThirdParty');\n                });\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }))();\n    }\n  }\n};\nvar unsub = onAuthStateChanged(auth, function (user) {\n  store.commit('setAuthIsReady', true);\n  store.commit('setUser', user);\n  console.log('unsub', user);\n\n  if (user) {\n    store.dispatch('getDjangoUser');\n    store.commit('emailVerifiedHandler', user.emailVerified);\n    store.dispatch('signupDjangoUserForException');\n  } else {\n    store.commit('resetQuizKeyStorage');\n  }\n\n  unsub();\n});","map":{"version":3,"names":["createPersistedState","Cookies","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","GoogleAuthProvider","signInWithPopup","getAuth","store","namespace","state","username","email","email2","country","password","user","registeredUser","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","tempUser","test","statusList","grade","level","favoriteQuestion","logger","actualError","message","name","userInfo","exceptUserInfo","beingException","reloadForException","apiError","django","firebase","ipinfo","any","onSigningup","myQuestion","myQuizInfo","id","max","gradeDict","thirdPartyLogindata","thirdPartyError","getters","getUID","getUser","getDjangouser","getEmailVerified","getTempUser","getMyQuestion","getMyQuizInfo","quizNameIdInSignup","rootState","quiz","quizNameId","getUserInfo","getThirdPartyError","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","setDjangoUser","emailVerifiedHandler","checkEmailHandler","setTempUser","status","setTempUserReset","remove","tempUserTestTrue","resetQuizKeyStorage","setLogger","setUserInfo","checkBeingException","reloadForExceptionTrue","reloadForExceptionFalse","handleapiError","checkDjangoError","push","resetDjangoError","handleOnSigningup","deleteMyQuestion","filter","question","addMyQuestion","updateQuizTaker","quiz_taker","updateQuizTakerMax","max_level","max_grade","setTirdPartyLoginData","displayName","setIpData","city","ip","loc","org","postal","region","timezone","actions","signupDjangoUser","commit","method","data","then","response","window","location","pathname","signupDjangoUserForException","get","IP","ip_data","getDjangoUser","dispatch","my_quiz","my_question","max_num","getFavoriteQuestion","questionId","favorite_question","i","catch","error","signup","context","ref","currentUser","googleLogin","provider","result","credential","credentialFromResult","token","accessToken","errorCode","code","errorMessage","credentialFromError","sendEmailVerify","sentValidation","Error","login","checkEmail","passwordReset","logout","updateQuizTakerAction","getOrSignupDjangoUserForThirdParty","getIpData","unsub"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport Cookies from 'js-cookie'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  GoogleAuthProvider,\n  signInWithPopup,\n  getAuth,\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        registeredUser: false,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n        },\n        tempUser: {\n            test: false,\n            statusList:'',\n            grade:'',\n            level:''\n        },\n        favoriteQuestion:'',\n        logger:{\n            actualError:'',\n            message:'',\n            name:''\n        },\n        userInfo:'',\n        exceptUserInfo:'',\n        beingException:false,\n        reloadForException: false,\n        apiError:{\n            // this is for connection Error\n            django: false,\n            firebase: false,\n            ipinfo: false,\n            any: false\n        },\n        onSigningup:false,\n        myQuestion:'',\n        myQuizInfo:{\n            id:'',\n            max:'',\n        },\n        gradeDict:{\n            '超初級':0,\n            '初級':10,\n            '中級':20,\n            '上級':30\n        },\n        thirdPartyLogindata:'',\n        thirdPartyError:'',\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getUser(state){\n            return state.user\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        },\n        getEmailVerified(state){\n            return state.emailVerified\n        },\n        getTempUser(state){\n            return state.tempUser\n        },\n        logger(state){\n            return state.logger\n        },\n        onSigningup(state){\n            return state.onSigningup\n        },\n        getMyQuestion(state){\n            return state.myQuestion\n        },\n        getMyQuizInfo(state){\n            return state.myQuizInfo\n        },\n        quizNameIdInSignup(state, getters, rootState){\n            return rootState.quiz.quizNameId\n        },\n        getUserInfo(state){\n            return state.userInfo\n        },\n        getThirdPartyError(state){\n            return state.thirdPartyError\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            if(state.user){\n                state.registeredUser = true\n                state.UID = state.user.uid\n            }\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        setDjangoUser(state,payload){\n            state.djangoUser = payload\n            console.log('set Django user',state.djangoUser)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        },\n        setTempUser(state,payload){\n            state.tempUser.test = true\n            state.tempUser.statusList = payload.status\n            state.tempUser.grade = payload.grade\n            state.tempUser.level = payload.level\n            console.log('set-temp-user', state.tempUser)\n        },\n        setTempUserReset(state){\n            state.tempUser.test = false\n            state.tempUser.statusList = '',\n            state.tempUser.grade = '',\n            state.tempUser.level = ''\n            Cookies.remove('tempKey')\n            console.log('reset-TempUser',state.tempUser)\n        },\n        tempUserTestTrue(state){\n            state.tempUser.test = true\n        },\n        resetQuizKeyStorage(state){\n            // this is for log out\n            state.UID = null\n            state.djangoUser = null\n            state.emailVerified = null\n            state.beingException = false,\n            state.reloadForException = false\n            state.apiError.django = false\n            state.apiError.firebase = false\n            state.apiError.ipinfo = false\n            state.apiError.any = false\n            state.myQuizInfo.id = ''\n            state.myQuizInfo.max = ''\n            state.myQuestion = ''\n            state.registeredUser = false\n            console.log('all-Reset')\n        },\n        setLogger(state,payload){\n            state.logger.actualError = payload.actualError\n            state.logger.name = payload.name\n            state.logger.message = payload.message\n        },\n        setUserInfo(state,payload){\n            state.userInfo = payload\n        },\n        checkBeingException(state,payload){\n            if(state.user&&!state.djangoUser){\n                state.beingException = true\n                console.log('set-being-exception',state.beingException)\n            }\n        },\n        reloadForExceptionTrue(state){\n            if(state.user&&!state.djangoUser){\n                state.reloadForException = true\n                console.log('setRUFEtrue')\n            }\n        },\n        reloadForExceptionFalse(state){\n            state.reloadForException = false\n            console.log('setRUFEfalse')\n        },\n        handleapiError(state,payload){\n            if(payload=='django'){\n                state.apiError.django = true\n            }\n            else if(payload=='firebase'){\n                state.apiError.firebase = true\n            }\n            else if(payload=='ipinfo'){\n                state.apiError.ipinfo = true\n            }\n        },\n        checkDjangoError(state,payload){\n            console.log('checkDE',payload)\n            if(state.apiError.django){\n                router.push({ name: 'ConnectionError' })\n            }\n            else if(payload==\"Network Error\"){\n                state.apiError.django = true\n                state.apiError.any = true\n            }else{\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        resetDjangoError(state){\n            state.apiError.django = false\n            state.apiError.any = false\n        },\n        handleOnSigningup(state){\n            state.onSigningup = !state.onSigningup\n        },\n        deleteMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion = state.myQuestion.filter(item =>{\n                console.log('item',item)\n                return (item.question.id !=payload)\n            })\n            console.log(\"after\",state.myQuestion)\n        },\n        addMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion.push(payload)\n            console.log(\"after\",state.myQuestion)\n        },\n        updateQuizTaker(state,payload) {\n            state.djangoUser.quiz_taker[0].grade = payload.grade\n            state.djangoUser.quiz_taker[0].level = payload.level\n            console.log('set', state.djangoUser)\n        },\n        updateQuizTakerMax(state, payload) {\n            // this is for session storage only to reduce API hit\n            state.djangoUser.quiz_taker[0].max_level = state.djangoUser.quiz_taker[0].level\n            state.djangoUser.quiz_taker[0].max_grade = payload\n                    \n            console.log('set_max', state.djangoUser)\n        },\n        setTirdPartyLoginData(state, payload){\n            if(state.tempUser.test){\n                console.log('YES TEMP')\n                state.userInfo={\n                    UID: payload.uid,\n                    name: payload.displayName,\n                    email: payload.email,\n                    quiz_taker: [\n                        {grade: state.tempUser.grade},\n                        {level: state.tempUser.level},\n                    ],\n                }\n            }else{\n                console.log('NO TEMP')\n                state.userInfo={\n                    UID: payload.uid,\n                    name: payload.displayName,\n                    email: payload.email,\n                }\n            }\n            // try{\n            //     console.log(\"try\",this.userInfo)\n            //     this.$store.dispatch('signupDjangoUser',this.userInfo)\n            // }\n            // catch(error){\n            //     console.log('error',error.message)\n            // }\n        },\n        setIpData(state, payload){\n            state.userInfo['ip_data'] = [{\n                city: payload.city,\n                ip: payload.ip,\n                loc: payload.loc,\n                org: payload.org,\n                postal: payload.postal,\n                region: payload.region,\n                timezone: payload.timezone,\n                country: payload.country\n            }]\n            console.log('setIpdata',state.userInfo)\n        }\n    },\n    actions:{\n        async signupDjangoUser( {state, commit},payload ){\n            console.log(\"INSDU\",payload)\n            try{\n                // throw new Error('could not sent validation')\n                await axios({\n                    method: 'post',\n                    url: '/api/user/',\n                    data: payload\n                })\n                .then(response => {\n                    commit('setDjangoUser',response.data)\n                })\n                state.beingException = false\n                commit(\"resetDjangoError\")\n                commit(\"setTempUserReset\")\n                state.userInfo = ''\n            }\n            catch(e){\n                state.thirdPartyError = e;\n                state.userInfo = payload\n                let logger = {\n                    message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                console.log('error',e)\n                commit('setLogger',logger)\n                commit(\"checkDjangoError\", e.message)\n            }\n        },\n        async signupDjangoUserForException( {state, commit},payload ){\n            // this is only for unsub below. dont use other part\n            console.log(\"INSDUFX\")\n            if(!state.djangoUser&&state.beingException){\n                if(state.userInfo){\n                    try{\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.userInfo\n                        })\n                        .then(response => {\n                            commit('setDjangoUser',response.data)\n                        })\n                        state.beingException = false\n                        commit('resetDjangoError')\n                        commit(\"setTempUserReset\")\n                        state.userInfo = ''\n                    }\n                    catch(e){\n                        console.log('catchdayo',e.message)\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        commit(\"checkDjangoError\", e.message)\n                    }\n                }\n                else{\n                    try{\n                        console.log('NO TEMP')\n                        await axios\n                        .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n                        .then(response => {\n                            let IP = response.data\n                            state.exceptUserInfo = {\n                                UID: state.user.uid,\n                                name: '名前を変更しよう',\n                                email: state.user.email,\n                                ip_data: [{\n                                    city: IP.city,\n                                    ip: IP.ip,\n                                    loc: IP.loc,\n                                    org: IP.org,\n                                    postal: IP.postal,\n                                    region: IP.region,\n                                    timezone: IP.timezone,\n                                    country: IP.country\n                                }]\n                            } \n                        })\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.signup.DjangoUserForException. ipinfo error\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                     \n                    try{\n                        console.log('try non_userINFO',state.exceptUserInfo)\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.exceptUserInfo\n                        })\n                        state.beingException = false\n                        commit(\"resetDjangoError\")\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                }   \n            }\n        },\n        async getDjangoUser({ state, commit,dispatch }){\n            if(state.user&&!state.beingException){\n                console.log('GDU_pass',state.beingException)\n                try{\n                    await axios\n                    .get(`/api/user/${state.user.uid}`)\n                    .then(response => {\n                        commit('setDjangoUser',response.data)\n                        state.myQuestion = response.data.my_quiz[0].my_question\n                        state.myQuizInfo.id = response.data.my_quiz[0].id\n                        state.myQuizInfo.max = response.data.my_quiz[0].max_num\n                        console.log(\"MQ\",state.myQuestion)\n                    })\n                    commit(\"resetDjangoError\")\n                }\n                catch(e){\n                    console.log('catch')\n                    let logger = {\n                        message: \"in store/signup.getDjangoUser. couldn't get django user\",\n                        name: window.location.pathname,\n                        actualError: e\n                    }\n                    commit('setLogger',logger)\n                    commit(\"checkDjangoError\", e.message)\n                }\n            }\n        },\n        async getFavoriteQuestion({ state, commit }){\n            state.favoriteQuestion = null\n            if(state.djangoUser){\n                try{\n                    const questionId = []\n                    for(let i of state.djangoUser.favorite_question[0].question){\n                        questionId.push(i)\n                    }\n                    if(questionId[0]){\n                        await axios\n                        .get(`/api/board/question-favorite?question_id=${questionId}`)\n                        .then(response => {\n                            state.favoriteQuestion = response.data\n                            })\n                        .catch(error => {\n                            console.log(error)\n                        })\n                    }\n                }catch{\n                    \n                }\n            }\n        },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch(e){\n                let logger = {\n                    message: \"in store/signup.signup. couldn't signup firebase user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                context.commit('setLogger',logger)\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        async googleLogin(context){\n            const provider = new GoogleAuthProvider();\n            const auth = getAuth();\n            signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                context.commit('setUser',result.user)\n                context.commit('emailVerifiedHandler',result.emailVerified)\n                context.commit('setTirdPartyLoginData',result.user)\n                context.dispatch('getIpData')\n                console.log('googlrUser',user)\n                // router.push({ name: 'Home' })\n            }).catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(error);\n                // ...\n            });\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            // context.commit('setIsLoading', true, {root:true})\n            console.log('in_login')\n            try{\n                var ref = await signInWithEmailAndPassword(auth, email, password)\n            }catch{\n                console.log('error')\n                throw new Error('could not complite signin')\n            }\n            if(ref){\n                console.log(\"IF YES\")\n                context.commit('setUser',ref.user)\n                context.dispatch('getDjangoUser')\n                context.commit(\"setTempUserReset\")\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log(context.state.user,context.state.emailVerified)\n            }else{\n                console.log('error in sign in')\n                throw new Error('could not complite signin')\n            }\n            // context.commit('setIsLoading', false, {root:true})                \n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            context.commit('resetQuizKeyStorage')\n            router.push({ name: 'Home' })\n        },\n        updateQuizTakerAction({state, commit, getters},payload){\n            console.log('inUQTA',getters)\n            commit('updateQuizTaker',payload);\n            console.log('UPaction',getters.quizNameIdInSignup)\n            for(let i of getters.quizNameIdInSignup){\n                if(i.id == payload.grade){\n                    if(state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] < state.gradeDict[i.name]){\n                        commit('updateQuizTakerMax',i.name);\n                        break\n                    }\n                    else if(state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] == state.gradeDict[i.name]){\n                        if(state.djangoUser.quiz_taker[0].max_level < payload.level){\n                            commit('updateQuizTakerMax',i.name);\n                            break\n                        }\n                    }\n                }\n            }\n        },\n        getOrSignupDjangoUserForThirdParty(context){\n            console.log('gonna signup',context.getters.getUserInfo)\n            context.dispatch('signupDjangoUser',context.getters.getUserInfo)\n            console.log('GG',context.getters.getThirdPartyError)\n            if(context.getters.getThirdPartyError=='user_exist'){\n                context.dispatch('getDjangoUser',context.state.userInfo)\n            }\n        },\n        async getIpData(context){\n            await axios\n            .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n            .then(response => {\n                context.commit('setIpData',response.data)\n                context.dispatch('getOrSignupDjangoUserForThirdParty')\n                \n            }) \n        },\n    }\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    console.log('unsub',user)\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n        store.dispatch('signupDjangoUserForException')\n    }else{\n        store.commit('resetQuizKeyStorage')\n    }\n    unsub()\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}