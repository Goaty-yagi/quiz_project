{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-d9fcf9e6\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"main-wrapper\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"lds-dual-ring\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_3 = {\n  key: 0,\n  class: \"question-wrapper\"\n};\n\nvar _hoisted_4 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", {\n    class: \"title-white\"\n  }, \"質問板\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_5 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"notification-text\"\n  }, \" 返信しました。 \", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_6 = [_hoisted_5];\n\nvar _hoisted_7 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"notification-text\"\n  }, \" 回答しました。 \", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_8 = [_hoisted_7];\n\nvar _hoisted_9 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"notification-text\"\n  }, \" 投稿しました。 \", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_10 = [_hoisted_9];\nvar _hoisted_11 = {\n  class: \"question-box\"\n};\nvar _hoisted_12 = {\n  class: \"question-box-header\"\n};\nvar _hoisted_13 = {\n  class: \"image\"\n};\nvar _hoisted_14 = [\"src\"];\nvar _hoisted_15 = {\n  class: \"username-date\"\n};\nvar _hoisted_16 = {\n  class: \"question-status-container\"\n};\nvar _hoisted_17 = {\n  class: \"question-status\"\n};\nvar _hoisted_18 = {\n  class: \"tag-container\"\n};\nvar _hoisted_19 = {\n  class: \"title-question\"\n};\nvar _hoisted_20 = {\n  class: \"question-title\"\n};\nvar _hoisted_21 = {\n  class: \"question-description\"\n};\nvar _hoisted_22 = {\n  class: \"question-box-footer\"\n};\nvar _hoisted_23 = {\n  class: \"like-wrapper\"\n};\nvar _hoisted_24 = {\n  key: 1,\n  class: \"fas fa-heart\"\n};\nvar _hoisted_25 = {\n  key: 2,\n  class: \"good\"\n};\nvar _hoisted_26 = {\n  class: \"viewed-wrapper\"\n};\nvar _hoisted_27 = {\n  class: \"viewed\"\n};\nvar _hoisted_28 = {\n  key: 0,\n  class: \"far fa-star\"\n};\nvar _hoisted_29 = {\n  key: 1,\n  class: \"added-favorite\"\n};\n\nvar _hoisted_30 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"far fa-star\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_31 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"fas fa-star\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_32 = [_hoisted_30, _hoisted_31];\nvar _hoisted_33 = {\n  class: \"relative-box\"\n};\n\nvar _hoisted_34 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"関連した質問\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_35 = [\"onClick\"];\nvar _hoisted_36 = {\n  class: \"tag-wrapper\"\n};\nvar _hoisted_37 = {\n  class: \"question-description\"\n};\nvar _hoisted_38 = {\n  class: \"good-like-wrapper\"\n};\n\nvar _hoisted_39 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"far fa-heart\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_40 = {\n  key: 0,\n  class: \"good\"\n};\nvar _hoisted_41 = {\n  class: \"date\"\n};\nvar _hoisted_42 = {\n  class: \"see-more\"\n};\n\nvar _hoisted_43 = /*#__PURE__*/_createTextVNode(\"もっと見る>\");\n\nvar _hoisted_44 = {\n  key: 3,\n  class: \"answer-box\"\n};\nvar _hoisted_45 = {\n  class: \"answer-box-title\"\n};\nvar _hoisted_46 = {\n  key: 0\n};\nvar _hoisted_47 = {\n  class: \"answer-box-header\"\n};\nvar _hoisted_48 = [\"src\"];\nvar _hoisted_49 = {\n  class: \"username-date\"\n};\nvar _hoisted_50 = {\n  class: \"answer-description-container\"\n};\nvar _hoisted_51 = {\n  class: \"answer-box-footer\"\n};\nvar _hoisted_52 = [\"onClick\"];\nvar _hoisted_53 = {\n  key: 1,\n  class: \"fas fa-heart\"\n};\nvar _hoisted_54 = {\n  class: \"good\"\n};\nvar _hoisted_55 = [\"onClick\"];\nvar _hoisted_56 = {\n  key: 1,\n  class: \"reply-wrapper\"\n};\n\nvar _hoisted_57 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", null, \"コメント\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_58 = {\n  class: \"reply-wrapper-header\"\n};\nvar _hoisted_59 = [\"src\"];\nvar _hoisted_60 = {\n  class: \"username-date\"\n};\nvar _hoisted_61 = {\n  class: \"replay-description\"\n};\nvar _hoisted_62 = [\"onClick\"];\n\nvar _hoisted_63 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"line-flex\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"line\"\n  })], -1\n  /* HOISTED */\n  );\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n\n  var _component_Answer = _resolveComponent(\"Answer\");\n\n  var _component_Reply = _resolveComponent(\"Reply\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" this scroll fixed should be change \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"board-detail-wrapper\", {\n      'scrll-fixed': $data.showAnswerPage || $data.showReplyPage,\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading\n    }])\n  }, [_createCommentVNode(\" <i class=\\\"fas fa-cog\\\"></i> \"), _hoisted_2], 2\n  /* CLASS */\n  ), $data.question && $data.relatedQuestion.results && _ctx.$store.state.isLoading == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _ctx.$store.state.board.notifications.reply ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass({\n      'notification-blue': _ctx.$store.state.board.notifications.reply\n    })\n  }, _hoisted_6, 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.$store.state.board.notifications.answer ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass({\n      'notification-blue': _ctx.$store.state.board.notifications.answer\n    })\n  }, _hoisted_8, 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true), _ctx.$store.state.board.notifications.post ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: _normalizeClass({\n      'notification-blue': _ctx.$store.state.board.notifications.post\n    })\n  }, _hoisted_10, 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"img\", {\n    class: \"img\",\n    src: $data.question.user.thumbnail\n  }, null, 8\n  /* PROPS */\n  , _hoisted_14)]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"p\", null, _toDisplayString($data.question.user.name) + \"さん \", 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($data.question.created_on), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", _hoisted_17, _toDisplayString($options.handleQuestionStatus($data.question.solved)), 1\n  /* TEXT */\n  )])]), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.question.tag, function (tag, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"tag\",\n      key: questionindex\n    }, _toDisplayString(tag.tag), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"p\", _hoisted_20, _toDisplayString($data.question.title), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", _hoisted_21, _toDisplayString($data.question.description), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [$data.addedLiked == false ? (_openBlock(), _createElementBlock(\"i\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = function () {\n      return $options.addLikedNum && $options.addLikedNum.apply($options, arguments);\n    }),\n    class: \"far fa-heart\"\n  })) : _createCommentVNode(\"v-if\", true), $data.addedLiked ? (_openBlock(), _createElementBlock(\"i\", _hoisted_24)) : _createCommentVNode(\"v-if\", true), $data.question.liked_num[0] ? (_openBlock(), _createElementBlock(\"p\", _hoisted_25, _toDisplayString($data.liked_num), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"p\", _hoisted_27, \" viewed \" + _toDisplayString($data.question.viewed), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", {\n    class: \"favorite\",\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.handleAddedFavorite();\n    })\n  }, [$data.addedFavorite == false ? (_openBlock(), _createElementBlock(\"i\", _hoisted_28)) : _createCommentVNode(\"v-if\", true), $data.addedFavorite ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, _hoisted_32)) : _createCommentVNode(\"v-if\", true)])]), $data.question.user.UID != _ctx.$store.state.signup.user.uid ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"btn-base-white-db-sq\",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.handleShowAnswerPage && $options.handleShowAnswerPage.apply($options, arguments);\n    })\n  }, \"回答する\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <button @click=\\\"handleNotifications('reply')\\\" >unko</button> \")]), _createElementVNode(\"div\", _hoisted_33, [_hoisted_34, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.slicedRelatedQuestion, function (question, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"question-wrapper\",\n      key: questionindex\n    }, [_createElementVNode(\"div\", {\n      class: \"question-list\",\n      onClick: function onClick($event) {\n        return $options.getRelatedSlug(question.slug);\n      }\n    }, [_createElementVNode(\"div\", _hoisted_36, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.tag, function (tag, tagindex) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"tag\",\n        key: tagindex\n      }, _toDisplayString(tag.tag), 1\n      /* TEXT */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]), _createCommentVNode(\" <div class=\\\"question-title\\\">{{ question.title }}</div> \"), _createElementVNode(\"div\", _hoisted_37, _toDisplayString(question.description.substr(0, 10) + '...'), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_38, [_hoisted_39, question.liked_num[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, _toDisplayString(question.liked_num[0].liked_num), 1\n    /* TEXT */\n    )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_41, \"投稿日：\" + _toDisplayString(question.created_on), 1\n    /* TEXT */\n    )])], 8\n    /* PROPS */\n    , _hoisted_35)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"div\", _hoisted_42, [_createVNode(_component_router_link, {\n    to: {\n      name: 'RelatedQuestion'\n    }\n  }, {\n    default: _withCtx(function () {\n      return [_hoisted_43];\n    }),\n    _: 1\n    /* STABLE */\n\n  })])]), $data.question.answer[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, [_createElementVNode(\"div\", _hoisted_45, [$data.question.answer[0] ? (_openBlock(), _createElementBlock(\"p\", _hoisted_46, \" 回答\")) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" (\" + _toDisplayString($data.question.answer.length) + \"件) \", 1\n  /* TEXT */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.question.answer, function (answer, answerindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"under-line\",\n      key: answerindex\n    }, [_createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"img\", {\n      class: \"img\",\n      src: answer.user.thumbnail\n    }, null, 8\n    /* PROPS */\n    , _hoisted_48), _createElementVNode(\"div\", _hoisted_49, [_createElementVNode(\"p\", null, _toDisplayString(answer.user.name) + \"さん \", 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, _toDisplayString(answer.created_on), 1\n    /* TEXT */\n    )])]), _createElementVNode(\"p\", _hoisted_50, _toDisplayString(answer.description), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_51, [$data.answerDict[answer.id].addedAnswerLiked == false ? (_openBlock(), _createElementBlock(\"i\", {\n      key: 0,\n      onClick: function onClick($event) {\n        return $options.addAnsweerLikedNum(answer.id);\n      },\n      class: \"far fa-heart\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_52)) : _createCommentVNode(\"v-if\", true), $data.answerDict[answer.id].addedAnswerLiked ? (_openBlock(), _createElementBlock(\"i\", _hoisted_53)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", _hoisted_54, _toDisplayString($data.answerDict[answer.id].liked_num), 1\n    /* TEXT */\n    )]), $data.question.user.UID == _ctx.$store.state.signup.user.uid && answer.reply.length == 0 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"btn-base-white-db-sq\",\n      onClick: function onClick($event) {\n        return $options.handleReplyPage(answer.id, answer.description);\n      }\n    }, \" 返信する \", 8\n    /* PROPS */\n    , _hoisted_55)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" reply should be appir if post user or replyer \"), answer.reply[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_56, [_hoisted_57, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(answer.reply, function (reply, replyindex) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"reply-flex\",\n        key: replyindex\n      }, [_createElementVNode(\"div\", _hoisted_58, [_createElementVNode(\"img\", {\n        class: \"img\",\n        src: reply.user.thumbnail\n      }, null, 8\n      /* PROPS */\n      , _hoisted_59), _createElementVNode(\"div\", _hoisted_60, [_createElementVNode(\"p\", null, _toDisplayString(reply.user.name) + \"さん \", 1\n      /* TEXT */\n      ), _createElementVNode(\"p\", null, _toDisplayString(reply.created_on), 1\n      /* TEXT */\n      )])]), _createElementVNode(\"p\", _hoisted_61, _toDisplayString(reply.description), 1\n      /* TEXT */\n      ), _ctx.$store.state.signup.user.uid == $data.question.user.UID && answer.reply.slice(-1)[0].id == reply.id && answer.reply.slice(-1)[0].user.UID != $data.question.user.UID || _ctx.$store.state.signup.user.uid == answer.user.UID && answer.reply.slice(-1)[0].id == reply.id && answer.reply.slice(-1)[0].user.UID == $data.question.user.UID ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"btn-base-white-db-sq\",\n        onClick: function onClick($event) {\n          return $options.handleReplyPage(answer.id, reply.description);\n        }\n      }, \" 返信する \", 8\n      /* PROPS */\n      , _hoisted_62)) : _createCommentVNode(\"v-if\", true)]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])) : _createCommentVNode(\"v-if\", true), _hoisted_63]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $data.showAnswerPage ? (_openBlock(), _createBlock(_component_Answer, {\n    key: 1,\n    onHandleShowAnswerPage: $options.handleShowAnswerPage,\n    onGetDetail: $options.getDetail,\n    questionTitle: $data.questionTitle,\n    questionDescription: $data.questionDescription,\n    questionId: $data.questionId\n  }, null, 8\n  /* PROPS */\n  , [\"onHandleShowAnswerPage\", \"onGetDetail\", \"questionTitle\", \"questionDescription\", \"questionId\"])) : _createCommentVNode(\"v-if\", true), $data.showReplyPage ? (_openBlock(), _createBlock(_component_Reply, {\n    key: 2,\n    onHandleShowReplyPage: $options.handleShowReplyPage,\n    onGetDetail: $options.getDetail,\n    answerId: $data.answerId,\n    reply: $data.reply\n  }, null, 8\n  /* PROPS */\n  , [\"onHandleShowReplyPage\", \"onGetDetail\", \"answerId\", \"reply\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" {{ questions }} \"), _createCommentVNode(\" <div class=question \\n         v-for=\\\"(question,questionindex) in questions\\\"\\n         v-bind:key=\\\"questionindex\\\">\\n            <div class=\\\"tag\\\">tag:{{ question.tag }}</div>\\n            <div class=\\\"title\\\">title:{{ question.title }}</div>\\n            <div class=\\\"good\\\">good:{{ question.good }}</div>\\n            <div class=\\\"date\\\">data:{{ remove_T_Z(question.timestamp) }}</div>\\n        </div>\\n        <CreateQuestion v-if='showCreateQuestion'\\n        @handleShowConfirm='handleShowConfirm'/>\\n        <Confirm v-if='showConfirm'/> \")])], 2\n  /* CLASS */\n  )], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_5","_hoisted_7","_hoisted_9","_hoisted_30","_hoisted_31","_createCommentVNode","$data","_ctx","state","isLoading","_hoisted_2","results","_createElementBlock","_hoisted_4","board","notifications","reply","answer","post","src","user","thumbnail","_toDisplayString","name","created_on","$options","solved","_Fragment","_renderList","tag","questionindex","key","title","description","onClick","liked_num","viewed","_hoisted_32","UID","signup","uid","_hoisted_34","question","slug","tagindex","substr","_hoisted_39","_createVNode","_component_router_link","to","_hoisted_46","length","answerindex","id","addedAnswerLiked","_hoisted_55","_hoisted_57","replyindex","slice","_hoisted_62","_hoisted_63","_createBlock","_component_Answer","onHandleShowAnswerPage","onGetDetail","questionTitle","questionDescription","questionId","_component_Reply","onHandleShowReplyPage","answerId"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue"],"sourcesContent":["<template>\n<!-- this scroll fixed should be change -->\n    <div  class=\"board-detail-wrapper\" :class=\"{'scrll-fixed':showAnswerPage||showReplyPage,'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div class=\"question-wrapper\" v-if=\"question&&relatedQuestion.results&&$store.state.isLoading==false\">\n                <p class='title-white'>質問板</p>\n                <div v-if=\"$store.state.board.notifications.reply\" :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n                    <div class=\"notification-text\">\n                        返信しました。\n                    </div>\n                </div>\n                <div v-if=\"$store.state.board.notifications.answer\" :class=\"{'notification-blue':$store.state.board.notifications.answer}\">\n                    <div class=\"notification-text\">\n                        回答しました。\n                    </div>\n                </div>\n                <div v-if=\"$store.state.board.notifications.post\" :class=\"{'notification-blue':$store.state.board.notifications.post}\">\n                    <div class=\"notification-text\">\n                        投稿しました。\n                    </div>\n                </div>\n                <div class='question-box'> \n                    <div class=\"question-box-header\">\n                        <div class=\"image\">\n                            <img class='img' v-bind:src=\"question.user.thumbnail\"/>\n                        </div>\n                        <div class=\"username-date\">\n                            <p> {{ question.user.name}}さん </p>\n                            <p> {{ question.created_on }} </p>\n                        </div>\n                        <div class=\"question-status-container\">\n                            <p class=\"question-status\"> {{ handleQuestionStatus(question.solved) }} </p>\n                        </div>\n                    </div>\n                    <div\n                     class=\"tag-container\">\n                        <div\n                         class=\"tag\"\n                         v-for=\"(tag,questionindex) in question.tag\"\n                         v-bind:key=\"questionindex\">\n                            {{ tag.tag }}\n                        </div>\n                    </div>\n                    <div class=\"title-question\">\n                        <p class=\"question-title\">  {{ question.title }} </p>        \n                        <p class='question-description'> {{ question.description}} </p>\n                    </div>\n                    <div class=\"question-box-footer\">\n                        <div class=\"like-wrapper\">\n                            <i v-if=\"addedLiked==false\" @click=\"addLikedNum\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"addedLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\" v-if=\"question.liked_num[0]\">{{ liked_num }} </p>\n                        </div>\n                        <div class=\"viewed-wrapper\">\n                            <p class=\"viewed\"> viewed {{ question.viewed}} </p>\n                        </div>\n                        <div class=\"favorite\" @click=\"handleAddedFavorite()\">\n                            <i v-if=\"addedFavorite==false\" class=\"far fa-star\"></i>\n                            <div  v-if=\"addedFavorite\" class=\"added-favorite\">\n                                <i class=\"far fa-star\"></i>\n                                <i class=\"fas fa-star\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <button v-if=\"question.user.UID != $store.state.signup.user.uid\" class=\"btn-base-white-db-sq\" @click='handleShowAnswerPage'>回答する</button>\n                    <!-- <button @click=\"handleNotifications('reply')\" >unko</button> -->\n                </div>\n                <div class=\"relative-box\">\n                    <p>関連した質問</p>\n                    <div\n                        class=\"question-wrapper\"\n                        v-for=\"(question,questionindex) in slicedRelatedQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class='question-list' @click=\"getRelatedSlug(question.slug)\">\n                            <div class=\"tag-wrapper\">\n                                <div \n                                class=\"tag\"\n                                v-for=\"(tag,tagindex) in question.tag\" \n                                v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                            </div>\n                            <!-- <div class=\"question-title\">{{ question.title }}</div> -->\n                            <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                            <div class='good-like-wrapper'>\n                                <i class=\"far fa-heart\"></i>\n                                <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                                <div class=\"date\">投稿日：{{ question.created_on }}</div>\n                            </div>\n                        </div>        \n                    </div>\n                    <div class=\"see-more\">\n                        <router-link :to=\"{name:'RelatedQuestion'}\">もっと見る></router-link>\n                    </div>\n                </div>\n                <div class=\"answer-box\" v-if='question.answer[0]'>\n                    <div class=\"answer-box-title\">\n                        <p v-if='question.answer[0]'> 回答</p>\n                        ({{ question.answer.length }}件)\n                    </div>\n                    <div\n                     class=\"under-line\"\n                     v-for=\"(answer,answerindex) in question.answer\"\n                     v-bind:key=\"answerindex\">\n                        <div class=\"answer-box-header\">\n                            <img class='img' v-bind:src=\"answer.user.thumbnail\"/>\n                            <div class=\"username-date\">\n                                <p> {{ answer.user.name}}さん </p>\n                                <p> {{ answer.created_on }} </p>\n                            </div>\n                        </div>\n                        <p class=\"answer-description-container\">{{ answer.description }} </p>\n                        <div class=\"answer-box-footer\">\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked==false\" @click=\"addAnsweerLikedNum(answer.id)\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\"> {{ answerDict[answer.id].liked_num }} </p>\n                        </div>\n                        <button v-if=\"question.user.UID == $store.state.signup.user.uid && answer.reply.length == 0\"\n                         class='btn-base-white-db-sq' \n                         @click='handleReplyPage(answer.id, answer.description)'>\n                         返信する\n                         </button>\n                        <!-- reply should be appir if post user or replyer -->\n                        <div class='reply-wrapper' v-if='answer.reply[0]'>\n                            <div>コメント</div>\n                            <div class='reply-flex' \n                            v-for=\"(reply,replyindex) in answer.reply\"\n                            v-bind:key=\"replyindex\">\n                                <div class=\"reply-wrapper-header\">\n                                    <img class='img' v-bind:src=\"reply.user.thumbnail\"/>\n                                    <div class=\"username-date\">\n                                        <p> {{ reply.user.name}}さん </p>\n                                        <p> {{ reply.created_on }} </p>\n                                    </div>\n                                </div>\n                                <p class=\"replay-description\">{{ reply.description }}</p>\n                                <button v-if='$store.state.signup.user.uid==question.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID!=question.user.UID || $store.state.signup.user.uid==answer.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID==question.user.UID'\n                                 class='btn-base-white-db-sq' \n                                 @click='handleReplyPage(answer.id, reply.description)'>\n                                 返信する\n                                 </button>\n                            </div>\n                        </div>\n                        <div class='line-flex'>\n                            <div class=\"line\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        <Answer v-if='showAnswerPage'\n         @handleShowAnswerPage='handleShowAnswerPage'\n         @getDetail=\"getDetail\"\n         :questionTitle='questionTitle'\n         :questionDescription='questionDescription'\n         :questionId='questionId'\n         />\n        <Reply v-if='showReplyPage'\n         @handleShowReplyPage='handleShowReplyPage'\n         @getDetail=\"getDetail\"\n         :answerId='answerId'\n         :reply=\"reply\"\n         />\n        <!-- {{ questions }} -->\n        <!-- <div class=question \n         v-for=\"(question,questionindex) in questions\"\n         v-bind:key=\"questionindex\">\n            <div class=\"tag\">tag:{{ question.tag }}</div>\n            <div class=\"title\">title:{{ question.title }}</div>\n            <div class=\"good\">good:{{ question.good }}</div>\n            <div class=\"date\">data:{{ remove_T_Z(question.timestamp) }}</div>\n        </div>\n        <CreateQuestion v-if='showCreateQuestion'\n        @handleShowConfirm='handleShowConfirm'/>\n        <Confirm v-if='showConfirm'/> -->\n         </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport  Answer from '@/components/board/Answer.vue'\nimport  Reply from '@/components/board/Reply.vue'\nexport default {\n    components: {\n        Answer,\n        Reply\n  },\n    data(){\n        return{\n            currentUserId:'',\n            question:'',\n            showAnswerPage: false,\n            showReplyPage: false,\n            questionTitle:'',\n            questionDescription:'',\n            questionSlug:'',\n            questionId:'',\n            answerId:'',\n            allAnswer:'',\n            answerDict:{},\n            addedAnswerLiked:{},\n            viewed:0,\n            questionStatus:['回答受付中','解決済み'],\n            reply:'',\n            questionUser: '',\n            questionUserBoolean: false,\n            liked_num: '',\n            addedLiked: false,\n            addedFavorite: false,\n            likedUserIdList:'',\n            checkedLikedUserList:[],\n            relatedQuestion:'',\n            slicedRelatedQuestion:'',\n            questionTags:[]\n        }\n    },\n    mounted() {\n        this.getDetail()\n        console.log(\"mounted_detail\",this.$route.params.slug)\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        }\n    },\n    methods: {\n        async getDetail(slug=\"\") {\n            this.$store.commit('setIsLoading', true)\n            this.scrollTop()\n            console.log('inthegetdetail')\n            if(slug==\"\"){\n                var url = `/api/board/question/${this.$route.params.slug}`\n            }else{\n                var url = `/api/board/question/${slug}`\n            }\n            await axios\n                .get(url)\n                .then(response => {\n                    this.question = response.data\n                    this.questionTitle = this.question.title\n                    this.questionDescription = this.question.description\n                    this.questionSlug = this.question.slug\n                    this.questionId = this.question.id\n                    this.liked_num = this.question.liked_num[0].liked_num\n                    this.likedUserIdList = this.question.liked_num[0].user\n                    this.questionUser = this.question.user.UID\n                    this.allAnswer = this.question.answer\n                    this.viewed = this.question.viewed\n                    this.patchOnReply()\n                    // this.patchOnAnswer()\n                    this.questionPatch()\n                    this.makeAnswerDict()\n                    this.getQuestionTagList(this.question.tag)\n                    this.getRelatedQuestion()\n                    this.countViewedNumUp()\n                    this.favoriteCheck()\n                    })\n                .catch(error => {\n                    console.log(error)\n            })\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async patchOnAnswer(slug=\"\"){\n        //     if(slug==\"\"){\n        //         var url = `/api/board/question/${this.$route.params.slug}`\n        //     }else{\n        //         var url = `/api/board/question/${slug}`\n        //     }\n        //     console.log(\"gonna if patch answer\",this.question.on_answer==true&&this.question.user.UID==this.user.UID)\n        //     if(this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n        //         console.log('PatchAnswer url',url)\n        //         axios.patch(\n        //             url,\n        //             { on_answer: false }) \n        //         console.log(\"go store AQ and DU\")\n        //         await this.$store.dispatch('getDjangoUser')\n        //         await this.$store.dispatch('getAnsweredQuestion')\n        //     }\n        // },\n        async patchOnReply(){\n            console.log(\"patchOnReply\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(\"answer\",answer)\n                if(answer.on_reply==true&&answer.user.UID==this.$store.getters.user.UID){\n                    var url = `/api/board/answer-detail/${answer.id}`\n                    await axios({\n                        method: 'patch',\n                        url: url,\n                        data: {\n                            on_reply: false,\n                        },\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                }\n            }\n        },\n        async getRelatedQuestion() {\n            // relatedQuestion.results Start from here.\n            // => deleteSameQuestion to delete the same question in RQ as detail Q.\n            // => makeRandomSlicedArray to make random sliced RQ array\n            this.$store.commit('setIsLoading', true)\n            if(this.questionTags.length == 1){\n                var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&uid=${this.user.UID}`\n            }\n            if(this.questionTags.length == 2){\n                var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&uid=${this.user.UID}`\n            }\n            if(this.questionTags.length == 3){\n                var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}&uid=${this.user.UID}`\n            }\n            console.log(\"url:\",url)\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    this.relatedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            this.$store.commit('getRelatedQuestion', this.relatedQuestion.results)\n            this.deleteSameQuestion()\n            this.makeRandomSlicedArray()\n            this.$store.commit('setIsLoading', false)\n        },\n        async createFavorite(){\n            await axios({\n                method: 'post',\n                url: '/api/board/favorite-question-create/',\n                data: {\n                    user: this.$store.state.signup.user.uid,\n                    question: [this.question.id]\n                },\n            })\n        },\n        handleAddedFavorite(){\n            this.addedFavorite=!this.addedFavorite\n            this.createFavorite()\n        },\n        async countViewedNumUp(){\n            for (let i =0; i < this.question.tag.length; i++){\n                await axios({\n                method: 'post',\n                url: '/api/board/user-tag/create/',\n                data: {\n                    user: this.$store.state.signup.user.uid,\n                    tag: this.question.tag[i].id\n                },\n                \n            })\n\n            }\n        },\n        handleShowAnswerPage(){\n            this.showAnswerPage = !this.showAnswerPage\n            // this.handleScrollFixed()\n        },\n        getReply(reply){\n            this.reply = reply\n        },\n        handleShowReplyPage(){\n            this.showReplyPage = !this.showReplyPage\n        },\n        handleReplyPage(id, reply=''){\n            this.getAnswerId(id)\n            this.showReplyPage = !this.showReplyPage\n            this.getReply(reply)\n        },\n        getAnswerId(id){\n            this.answerId = id\n        },\n        getReplyUserAndQuestionUser(reply, question){\n            this.questionAnswerUser.push(reply)\n            this.questionAnswerUser.push(question)\n        },\n        handleQuestionStatus(status){\n            if(status==true){\n                return this.questionStatus[1]\n            }\n            else{\n                return this.questionStatus[0]\n            }\n        },\n        getQuestionTagList(questionTags){\n            this.questionTags = []\n            for(let tag of questionTags){\n                this.questionTags.push(tag.id)\n            }\n        },\n        // G-method return a value from array invoked\n        // RandArray(array){\n        //     var rand = Math.random()*array.length | 0;\n        //     var rValue = array[rand];\n        //     console.log(\"RAndA\", rValue)\n        //     return rValue;\n        // },\n        makeRandomSlicedArray(){\n            let num = 3\n            console.log(\"MRSA\")\n            if (this.relatedQuestion.results.lendth < 3){\n                num = this.relatedQuestion.results.lendth\n            }\n            console.log(\"MRSA2\")\n            this.getRandomQuestion(this.relatedQuestion.results)\n            this.slicedRelatedQuestion = this.relatedQuestion.results.slice(0,num)\n            console.log(this.slicedRelatedQuestion)\n        },\n        deleteSameQuestion(){\n            for(let q of this.relatedQuestion.results){\n                if (q.id == this.question.id){\n                    this.relatedQuestion.results.splice(this.relatedQuestion.results.indexOf(q),1)\n                    break\n                }\n                \n            }\n        },\n        getRandomQuestion(array){\n            for (let i = array.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[i]\n                array[i] = array[r]\n                array[r] = tmp\n                }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[k].answer[i]\n                array[k].answer[i] = array[k].answer[r]\n                array[k].answer[r] = tmp\n                }}\n                return array\n            },\n        // resetNotifications(){\n        //     this.notifications.answer = false\n        //     this.notifications.reply = false\n        // },\n        // handleNotifications(elem){\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = true\n        //         setTimeout(this.resetNotifications, 3000)\n                \n        //     }\n        //     if(elem == \"answer\"){\n        //         console.log(\"in answer\")\n        //         this.notifications.answer = true\n        //         setTimeout(this.resetNotifications, 3000)\n        //     }            \n        // },\n        // getLikedNum(liked_num){\n        //     this.liked_num = liked_num\n        //     return this.liked_num\n        // },\n        getRelatedSlug(slug){\n            this.getDetail(slug)\n            this.$forceUpdate();\n        },\n        addLikedNum(){\n            this.liked_num += 1\n            this.addedLiked = true\n            for(let i=0; i<this.likedUserIdList.length; i++){\n                this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n            }\n            this.checkedLikedUserList.push(this.$store.state.signup.user.uid)\n            this.countUpLiked()\n        },\n        clearAllLiked(){\n            this.addedLiked = false\n            for(let i in this.answerDict){\n                this.answerDict[i].addedAnswerLiked = false\n            }\n        },\n        checkUserLiked(){\n            // this is for question like\n            this.clearAllLiked()\n            for(let i of this.likedUserIdList){\n                if(i.UID == this.$store.state.signup.user.uid){\n                this.addedLiked = true\n                }\n            }\n            console.log(\"likedhere\",this.addedLiked)\n            // this is for answer like\n            for(let answerId in this.answerDict){\n                // console.log(Array.isArray(this.answerDict[answerId].likedUsers))\n                for( let user of this.answerDict[answerId].likedUsers[0]){\n                    if(user == this.$store.state.signup.user.uid){\n                        this.answerDict[answerId].addedAnswerLiked = true\n                    }\n                }\n            }\n        },\n        favoriteCheck(){\n            this.addedFavorite = false\n            for(let i of this.$store.state.signup.djangoUser.favorite_question[0].question){\n                if(this.question.id==i.id){\n                    this.addedFavorite = true\n                    break\n                }\n            }\n        },\n        countUpLiked(){\n            // console.log('in countUPLiked',this.question.liked_num[0].id ,this.addedLiked)\n            if(this.addedLiked){\n                axios.patch(`/api/board/question-liked/${this.question.liked_num[0].id}/`,\n                {\n                    user: this.checkedLikedUserList,\n                    liked_num: this.liked_num\n                })\n                console.log('done')\n            }\n        },\n        async questionPatch(){\n            // patch view count_up and on_answer\n            if(this.questionUserBoolean == false&&this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n                console.log('count', this.questionSlug)\n                await axios.patch(`/api/board/question/${this.questionSlug}`,{\n                    viewed: this.viewed + 1,\n                    on_answer: false\n                })\n                this.$store.dispatch('getDjangoUser')\n                this.$store.dispatch('getAnsweredQuestion')\n            }else if(this.questionUserBoolean == false){\n                axios.patch(`/api/board/question/${this.questionSlug}`,{\n                    viewed: this.viewed + 1\n                })\n            }\n        },\n        // setAnswerBoolean(){\n        //     for(let answer of this.allAnswer){\n        //         this.addedAnswerLiked[answer.id] = false\n        //     }\n        //     console.log('boo',this.addedAnswerLiked)\n        // },\n        makeAnswerDict(){\n            // liked_answer start from here to make each answer dict\n            // to hold information\n            console.log(\"in make dict\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(answer)\n                this.answerDict[answer.id] = {\n                    \"liked_id\":answer.liked_answer[0].id,\n                    \"liked_num\":answer.liked_answer[0].liked_num,\n                    \"addedAnswerLiked\":false,\n                    \"likedUsers\":[answer.liked_answer[0].user]\n                }\n            }\n            console.log('answer-dict',this.answerDict)\n            this.checkUserLiked()\n        },\n        addAnsweerLikedNum(answerId){\n            // add answer id start from here. answerDict has each answers liked num.\n            // invoke answerId to att liked num, then addedAnswerLiked = true  \n            this.answerDict[answerId].liked_num += 1\n            this.answerDict[answerId].addedAnswerLiked = true\n            // for(let i=0; i<this.likedUserIdList.length; i++){\n            //     this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n            // }\n            this.answerDict[answerId].likedUsers[0].push(this.$store.state.signup.user.uid)\n            console.log(\"is addliked\",this.answerDict)\n            this.countUpLikedAnswer(answerId)\n        },\n        countUpLikedAnswer(answerId){\n            console.log(\"countUpLikedAnswer\")\n                axios.patch(`/api/board/answer-liked/${this.answerDict[answerId].liked_id}/`,\n                {\n                    user: this.answerDict[answerId].likedUsers[0],\n                    liked_num: this.answerDict[answerId].liked_num\n                })\n                console.log('done')\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n                // behavior: \"smooth\"\n            });\n        },\n        // falseNotifications(elem){\n        //     if(elem == \"answer\"){\n        //         this.notifications.answer = false\n        //     }\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = false\n        //     }\n        // },\n        // handleScrollFixed(){\n        //     this.scrollFixed = !this.scrollFixed\n        // },\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n@import \"style/_board.scss\";\n.scroll{\n    position:fixed;\n}\n\n.board-detail-wrapper{\n    display: flex;\n    justify-content: center;\n    width: 100vw;\n    min-height: 80vh;\n    align-items: center;\n}\n.question-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    .question-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        .question-box-header{\n            display: flex;\n            .image{\n                .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n                width:40%;\n            }\n            .question-status-container{\n                display: flex;\n                justify-content: flex-end;\n                width: 50%;\n                position: relative;\n                .question-status{\n                    position: absolute;\n                    right:0;\n                    top: 0.5rem;\n                    color: rgb(255, 43, 209);\n                    margin-right: 1rem;\n                }\n            }\n        }\n        .tag-container{\n            display: flex;\n            width: 100%;\n            padding-left: 1rem;\n            .tag{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 1rem;\n                padding:0.5rem; \n            }\n        }\n        .title-question{\n            padding:1rem;\n            .question-title{\n                text-align: center;\n                margin-bottom: 1rem;\n                border-bottom: solid $dark-blue;\n                display: inline-block;\n                padding-bottom: 1rem;\n            }\n            .question-description{\n                text-align: left;\n                padding: 1rem; \n                background: rgb(236, 236, 236);\n                white-space: pre-wrap;\n            }\n        }\n        .question-box-footer{\n            display: flex;\n            margin-bottom: 0.5rem;\n            width:100%;\n            .like-wrapper{\n                flex-basis: 10%;\n                display: flex;\n                .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 0.5rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n                // flex-basis: 10%;\n                }\n            }\n            .viewed-wrapper{\n                flex-basis: 40%;\n                .viewed{\n                margin-left: 1rem;\n                margin-right: 0.5rem;\n                }\n            }\n            .favorite{\n                display: flex;\n                position:relative;\n                justify-content:flex-end;\n                flex-basis: 50%;\n                margin-top: 0.1rem;\n                margin-right: 1rem;\n                box-sizing: border-box;\n                position:relative;\n                .far{\n                    position: absolute;\n                    right: 0.1rem;\n                }\n                .added-favorite{\n                    position: relative;\n                    .far{\n                        position: absolute;\n                        z-index:2;\n                        right: 0.1rem;\n                    }\n                    .fas{\n                        position: absolute;\n                        color: yellow;\n                        right: 0.1rem;\n                        z-index:1;\n                    }\n                }\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n    }\n    .relative-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n        padding: 0.5rem;\n        display: flex;\n        flex-direction: column;\n        P{\n            margin-bottom: 0.5rem;\n        }\n        .question-wrapper{\n            width: 100%;\n            display: flex;\n            .question-list{\n                border-bottom: solid rgb(236, 234, 234);\n                margin-bottom: 0.5rem;\n                width:100%;\n                padding: 0.2rem;\n                // background: rgb(236, 234, 234);\n                display: flex;\n                flex-direction: column;\n                .tag-wrapper{\n                    display: flex;\n                    width: 100%;\n                    .tag{\n                        border: solid rgb(230, 230, 230);\n                        margin-left: 0.3rem;\n                        min-width: 2rem;\n                    }\n                }\n                .good-like-wrapper{\n                    display: flex;\n                    font-size: 0.7rem;\n                    .fa-heart{\n                        // color: rgb(221, 36, 221);\n                        margin-left: 0.5rem;\n                        margin-right: 0.3rem;\n                        margin-top: 0.2rem;\n                    }\n                    .date{\n                        margin-left: 0.5rem;\n                    }\n                }\n            }\n            .question-list:hover{\n                background: rgb(230, 230, 230);\n            }\n        }\n        .see-more{\n            display: flex;\n            justify-content: flex-end;\n            margin-right: 0.5rem;\n            margin-top: 0.5rem;\n\n        }\n    }\n    .answer-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .answer-box-title{\n            display: flex;\n            justify-content: center;\n            margin-top: 1rem;\n        }\n        .under-line{\n            width: 90%;\n            border-bottom: 0.2rem solid rgb(236, 236, 236);\n            margin-top: 2rem;\n            margin-bottom: 1rem;\n            &:last-child{\n                border-bottom: none;\n            }\n        }\n        .answer-box-header{\n            display: flex;\n            .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n            }\n        }\n        .answer-description-container{\n            margin: 1rem;\n            background: rgb(236, 236, 236);\n            padding: 1rem;\n            text-align: left;\n        }\n        .answer-box-footer{\n            display: flex;\n            .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 1rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n        .reply-wrapper{\n            // display: flex;\n            // flex-direction: column;\n            // justify-content: center;\n            // align-items: center;\n            .reply-flex{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                margin-bottom: 1rem;\n                .reply-wrapper-header{\n                    width: 80%;\n                    height: 100%;\n                    display: flex;              \n                    .img{\n                        border-radius: 50%; \n                        width:  3rem;   \n                        height: 3rem;\n                        margin: 0.5rem; \n                    }\n                    .username-date{\n                        display: flex;\n                        flex-direction: column;\n                        align-items: flex-start;\n                        margin-top: 0.5rem;\n                    }\n                \n                }\n                .replay-description{\n                    width: 63%;\n                    // border-left: solid $dark-blue;\n                    background: rgb(236, 236, 236);\n                    text-align: left;\n                    padding: 0.5rem;\n                }\n            }\n        }\n        .line-flex{\n            display: flex;\n            width: 100%;\n            justify-content: center;\n            align-items: center;\n            margin-top: 0.5rem;\n            // .line-flex:last-of-type{\n            //     border-bottom: none;\n            // }\n            &.line{\n                width: 90%;\n                border-bottom: 0.2rem solid rgb(236, 236, 236);\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n                &:last-child{\n                    border-bottom: none;\n                }\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}