{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js","mtime":1651932035116},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js"],"names":["store","axios","extractIdentifiers","namespace","state","title","description","selectedTagList","relatedQuestion","searchedQuestions","reccomendedQuestion","answeredQuestion","showNoticeOnAcount","answer","reply","notifications","post","getters","user","rootState","signup","djangoUser","gettersAnsweredQuestions","gettersReccomendedQuestion","gettersAnswer","gettersReply","getUserTags","checkDict","checkedList","checkedlist2","user_tag","i","tag","id","total_num","push","Object","keys","length","m","aryMax","a","b","Math","max","values","reduce","result","r","key","mutations","resetNotifications","console","log","getTitle","payload","getDescription","setReccomendedQuestion","setRelatedQuestion","getTagList","handleOnReplyAndOnAnswer","question","question2","on_answer","UID","on_reply","actions","commitHandleOnReplyAndOnAnswer","commit","handleNotifications","context","setTimeout","getSearchQuestion","get","then","response","data","catch","error","getRelatedQuestion","url","getAnsweredQuestion","rootGetters","getUID"],"mappings":"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","sourcesContent":["import store from '..'\nimport axios from 'axios'\nimport { extractIdentifiers } from '@vue/compiler-core'\n\nexport default {\n    namespace: true,\n    state: {\n        title:'',\n        description:'',\n        selectedTagList:'',\n        relatedQuestion:'',\n        searchedQuestions:'',\n        reccomendedQuestion:'',\n        answeredQuestion:'',\n        // favoriteQuestion:'',\n        showNoticeOnAcount:{\n            answer:false,\n            reply:false,\n        },\n        notifications:{\n            reply: false,\n            answer: false,\n            post: false,\n        },\n    },\n    getters:{\n        user(state, getters, rootState){\n            return rootState.signup.djangoUser\n        },\n        gettersAnsweredQuestions(state){\n            return state.answeredQuestion\n        },\n        gettersReccomendedQuestion(state){\n            return state.reccomendedQuestion\n        },\n        gettersAnswer(state){\n            return state.showNoticeOnAcount.answer\n        },\n        gettersReply(state){\n            return state.showNoticeOnAcount.reply\n        },\n        getUserTags(state, getters){\n            if(getters.user){\n                let checkDict = {}  \n                // let checkedDict = {}\n                let checkedList = []\n                let checkedlist2 = []\n                for(let i of getters.user.user_tag){\n                    checkDict[i.tag.id] = i.total_num\n                    checkedList.push(i.tag)\n                    // console.log('loop',Object.keys(checkDict).length,checkDict)\n                }\n                if(Object.keys(checkDict).length <= 3){\n                    return checkedList\n                }\n                if(Object.keys(checkDict).length > 3){\n                    for(let m=0; m < 3; m++){\n                        const aryMax = function (a, b) {return Math.max(a, b);}\n                        let max = Object.values(checkDict).reduce(aryMax);\n                        const result = Object.keys(checkDict).reduce( (r, key) => {\n                            return checkDict[key] === max ? key : r \n                            }, null);\n                        // checkedDict[result] = max\n                        delete checkDict[result]\n                        checkedlist2.push(result)\n                    }\n                    return checkedlist2\n                }\n            }\n        },\n        \n        // handleOnReplyAndOnAnswer(state, getters, rootState){\n        //     console.log(\"handleOnREPLY\")\n        //     for(let question of getters.gettersAnsweredQuestions){\n        //         for(let answer of question.answer){\n        //             if(answer.on_reply==true&&answer.user.UID==getters.user.UID){\n        //                 return  true\n        //             }else{\n        //                 return false\n        //             }\n        //         }\n        //     }\n        //     console.log(\"end\")\n        // },\n    },\n    mutations:{\n        resetNotifications(state){\n            console.log(\"in_reset\")\n            state.notifications.answer = false\n            state.notifications.reply = false\n            state.notifications.post = false\n        },\n        getTitle(state,payload){\n            state.title = payload\n            console.log('Got title',state.title)\n        },\n        getDescription(state, payload){\n            state.description = payload\n            console.log('Got description',state.description)\n        },\n        // getSelectedTagList(state, payload){\n        //     state.selectedTagList = payload\n        // },\n        setReccomendedQuestion(state, payload){\n            state.reccomendedQuestion = payload\n            console.log('set-reccomendedQuestion')\n        },\n        setRelatedQuestion(state, payload){\n            state.relatedQuestion = payload\n            console.log(\"commited relatedQ\",state.relatedQuestion )\n        },\n        getTagList(state, payload){\n                state.selectedTagList = payload\n                console.log('Got tagID',state.selectedTagList)\n        },\n        handleOnReplyAndOnAnswer(state, getters){\n            // this is for community_page to display if user have notifications\n            console.log('inHandleAR in store')\n            for(let question2 of getters.question){\n                if(question2.on_answer==true&&question2.user.UID==getters.UID){\n                    console.log(\"onAnswer_dayo\")\n                    state.showNoticeOnAcount.answer = true\n                }else{\n                    state.showNoticeOnAcount.answer = false\n                }\n            }\n            console.log(\"answercheck start\")\n            let answeredQuestion = getters.question\n            for(let question of answeredQuestion){\n                console.log(question)\n                for(let answer of question.answer){\n                    console.log(answer.id)\n                    if(answer.on_reply==true&&answer.user.UID==getters.UID){\n                        console.log(\"onreply_dayo\")\n                        state.showNoticeOnAcount.reply = true\n                    }\n                }\n            }\n        }\n        // getWordList(state, payload){\n        //     state.wordList = payload\n        // }\n    },\n    \n    actions:{\n        commitHandleOnReplyAndOnAnswer({commit,getters}){\n            commit('handleOnReplyAndOnAnswer', getters.user)\n        },\n        handleNotifications(context, payload){\n            if(payload == \"reply\"){\n                context.state.notifications.reply = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")      \n            }\n            if(payload == \"answer\"){\n                context.state.notifications.answer = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")\n            }\n            if(payload == \"post\"){\n                context.state.notifications.post = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")\n            }\n        },\n        async getSearchQuestion(state,payload){            \n            await axios\n                .get(`/api/board/question/search/?keyword=${payload}`)\n                .then(response => {\n                    state.searchedQuestions = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async getRelatedQuestion({ state , getters, commit }, payload) {\n            // for reccomended-question, if user and user.user_tag exist, get reccomended-question.\n            // else, get question-viewed-order.\n            \n            if(getters.user){\n                try{\n                    if(getters.getUserTags.length == 1){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 2){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 3){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&tag=${getters.getUserTags[2]}&uid=${getters.user.UID}`\n                    }\n                    else{\n                        var url = '/api/board/question-viewed-order'\n                    }\n                }\n                catch{\n                    var url = '/api/board/question-viewed-order'  \n                }\n            }else{\n                var url = '/api/board/question-viewed-order'\n            }\n            try{\n                console.log(\"try2\",url)\n                await axios.get(url)\n                    .then(response => {\n                        commit('setReccomendedQuestion', response.data)\n                    // state.reccomendedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getAnsweredQuestion({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            var url = `/api/board/question-answered?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.answeredQuestion = response.data\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async getFavoriteQuestion({ state , getters }, payload){\n        //     const questionId = []\n        //     for(let i of getters.user.question){\n        //         questionId.push(i.id)\n        //     }\n        //     await axios\n        //     .get(`/api/board/question-favorite?question_id=${questionId}`)\n        //     .then(response => {\n        //         state.favoriteQuestion = response.data\n        //         console.log('GetFQ', state.favoriteQuestion)\n        //         })\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },\n        // async getSearchQuestion({ state, commit }){\n        //     await axios({\n        //         method: 'get',\n        //         url: `/api/board/question/search/`,\n        //         data: {\n        //             keyword: state.searchKeywords\n        //         },\n        //     })\n        //     .then()\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },          \n    }\n\n\n}"]}]}