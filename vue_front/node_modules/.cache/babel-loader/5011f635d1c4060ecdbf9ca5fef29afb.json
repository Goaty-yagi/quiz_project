{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js","mtime":1651327409413},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudGVzdC5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAndnVleCc7CmltcG9ydCBjcmVhdGVQZXJzaXN0ZWRTdGF0ZSBmcm9tICd2dWV4LXBlcnNpc3RlZHN0YXRlJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgcm91dGVyIH0gZnJvbSAiLi4vbWFpbi5qcyI7CmltcG9ydCBzaWdudXAgZnJvbSAnLi9tb2R1bGVzL3NpZ251cCc7CmltcG9ydCBib2FyZCBmcm9tICcuL21vZHVsZXMvYm9hcmQnOwppbXBvcnQgcXVpeiBmcm9tICcuL21vZHVsZXMvcXVpeic7Cgp2YXIgZ2V0RGVmYXVsdFN0YXRlID0gZnVuY3Rpb24gZ2V0RGVmYXVsdFN0YXRlKCkgewogIHJldHVybiB7CiAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgaWQ6IDEsCiAgICBmaWVsZDogJycsCiAgICBudW06IDMsCiAgICBxdWVzdGlvbnM6IFtdLAogICAgcXVpenplczogW10sCiAgICByYW5kb21VUkw6ICcnLAogICAgdGVzdDogbnVsbCwKICAgIG5vdGljZTogZmFsc2UsCiAgICBzdGVwOiAxCiAgfTsKfTsKCmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0b3JlKHsKICBtb2R1bGVzOiB7CiAgICBzaWdudXA6IHNpZ251cCwKICAgIGJvYXJkOiBib2FyZCwKICAgIHF1aXo6IHF1aXoKICB9LAogIHN0YXRlOiBnZXREZWZhdWx0U3RhdGUoKSwKICBwbHVnaW5zOiBbY3JlYXRlUGVyc2lzdGVkU3RhdGUoewogICAga2V5OiAncXVpemtleScsCiAgICAvLyDoqK3lrprjgZfjgarjgZHjgozjgbAndnVleCcKICAgIHBhdGhzOiBbJ2lkJywgJ251bScsICd0ZXN0JywgInNpZ251cC5kamFuZ29Vc2VyIiwgInNpZ251cC5lbWFpbFZlcmlmaWVkIiwgInNpZ251cC51c2VyIiwgInNpZ251cC50ZW1wVXNlciIsICJzaWdudXAuVUlEIiwgImJvYXJkLmFuc3dlcmVkUXVlc3Rpb24iLCAiYm9hcmQucmVjY29tZW5kZWRRdWVzdGlvbiIsICJib2FyZC5jZW50ZXJUYWciLCAicXVpei5xdWl6TmFtZUlkIiwgInF1aXouZmllbGROYW1lSWQiXSwKICAgIC8vIOS/neWtmOOBmeOCi+ODouOCuOODpeODvOODq++8muioreWumuOBl+OBquOBkeOCjOOBsOWFqOmDqOOAggogICAgc3RvcmFnZTogd2luZG93LnNlc3Npb25TdG9yYWdlIC8vIOioreWumuOBl+OBquOBkeOCjOOBsGxvY2FsU3RvcmFnZQoKICB9KV0sCiAgZ2V0dGVyczogewogICAgcXVlc3Rpb25zMjogZnVuY3Rpb24gcXVlc3Rpb25zMihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucXVlc3Rpb25zOwogICAgfSwKICAgIHF1aXp6ZXMyOiBmdW5jdGlvbiBxdWl6emVzMihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucXVpenplczsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgc2V0SXNMb2FkaW5nOiBmdW5jdGlvbiBzZXRJc0xvYWRpbmcoc3RhdGUsIHN0YXR1cykgewogICAgICBzdGF0ZS5pc0xvYWRpbmcgPSBzdGF0dXM7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KHN0YXRlKSB7CiAgICAgIGNvbnNvbGUubG9nKCdyZXNldCcpOwogICAgICBPYmplY3QuYXNzaWduKHN0YXRlLCBnZXREZWZhdWx0U3RhdGUoKSk7CiAgICAgIHJvdXRlci5wdXNoKCcvJyk7CiAgICB9LAogICAgZ2V0VVJMczogZnVuY3Rpb24gZ2V0VVJMcyhzdGF0ZSwgaXRlbSkgewogICAgICBzdGF0ZS5udW0gPSBpdGVtLm51bTsgLy8gc3RhdGUuZmllbGQ9IGZpZWxkCgogICAgICBzdGF0ZS5pZCA9IGl0ZW0uc3RhdHVzOwogICAgICBzdGF0ZS50ZXN0ID0gaXRlbS50ZXN0OwogICAgICBzdGF0ZS5yYW5kb21VUkwgPSAiL3F1aXovIi5jb25jYXQoc3RhdGUuaWQpOwogICAgfSwKICAgIC8vIGdldFJhbmRvbVF1ZXN0aW9uKHN0YXRlLGFycmF5KXsKICAgIC8vICAgZm9yIChsZXQgaSA9IGFycmF5Lmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICAvLyAgICAgbGV0IHIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKQogICAgLy8gICAgIGxldCB0bXAgPSBhcnJheVtpXQogICAgLy8gICAgIGFycmF5W2ldID0gYXJyYXlbcl0KICAgIC8vICAgICBhcnJheVtyXSA9IHRtcAogICAgLy8gICAgIH0KICAgIC8vICAgZm9yICggbGV0IGsgPTA7IGsgPCBhcnJheS5sZW5ndGg7IGsrKyl7CiAgICAvLyAgICAgZm9yIChsZXQgaSA9IGFycmF5W2tdLmFuc3dlci5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgewogICAgLy8gICAgICAgbGV0IHIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKQogICAgLy8gICAgICAgbGV0IHRtcCA9IGFycmF5W2tdLmFuc3dlcltpXQogICAgLy8gICAgICAgYXJyYXlba10uYW5zd2VyW2ldID0gYXJyYXlba10uYW5zd2VyW3JdCiAgICAvLyAgICAgICBhcnJheVtrXS5hbnN3ZXJbcl0gPSB0bXAKICAgIC8vICAgICAgIH19CiAgICAvLyAgICAgcmV0dXJuIGFycmF5CiAgICAvLyB9LAogICAgLy8gc2V0UXVlc3Rpb25zOihzdGF0ZSxxdWVzdGlvbnMpID0+IChzdGF0ZS5xdWVzdGlvbnMgPSBxdWVzdGlvbnMpLAogICAgLy8gc2V0UXVpejooc3RhdGUscXVpenplcykgPT4gKHN0YXRlLnF1aXp6ZXMgPSBxdWl6emVzKSwKICAgIC8vIGluaXRpYWwKICAgIHRlc3RIYW5kbGVyOiBmdW5jdGlvbiB0ZXN0SGFuZGxlcihzdGF0ZSkgewogICAgICBzdGF0ZS50ZXN0ID0gZmFsc2U7CiAgICB9LAogICAgbm90aWNlSGFuZGxlcjogZnVuY3Rpb24gbm90aWNlSGFuZGxlcihzdGF0ZSkgewogICAgICBzdGF0ZS5ub3RpY2UgPSB0cnVlOwogICAgfSwKICAgIG5vdGljZU9mZjogZnVuY3Rpb24gbm90aWNlT2ZmKHN0YXRlKSB7CiAgICAgIHN0YXRlLm5vdGljZSA9IGZhbHNlOwogICAgfSwKICAgIGFkZFN0ZXA6IGZ1bmN0aW9uIGFkZFN0ZXAoc3RhdGUpIHsKICAgICAgc3RhdGUuc3RlcCArPSAxOwogICAgfSwKICAgIHN0ZXBDbGVhcjogZnVuY3Rpb24gc3RlcENsZWFyKHN0YXRlKSB7CiAgICAgIHN0YXRlLnN0ZXAgPSAxOwogICAgfSAvLyBxdWl6Um91dGVyKGksZixuKXsKICAgIC8vICAgc3RhdGUuaWQgPSBpCiAgICAvLyAgIHN0YXRlLmZpZWxkID0gZgogICAgLy8gICBzdGF0ZS5udW0gPSBuCiAgICAvLyAgIHJldHVybiB7IG5hbWU6ICdRdWl6JywgcGFyYW1zOnsgaWQ6c3RhdGUuaWQsIGZpZWxkOnN0YXRlLmZpZWxkLCBudW06c3RhdGUubnVtfX0KICAgIC8vIH0KCiAgfSAvLyBhY3Rpb25zOiB7CiAgLy8gICBhc3luYyBnZXRxdWl6Mih7IHN0YXRlLCBjb21taXQgfSl7CiAgLy8gICAgIGxldCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS9xdWl6emVzLz9pZD0ke3N0YXRlLmlkfWApCiAgLy8gICAgIC5jYXRjaChlcnJvciA9PiB7CiAgLy8gICAgICAgY29uc29sZS5sb2coJ2Vycm9yJyxlcnJvci5tZXNzYWdlKQogIC8vICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAvLyAgICAgY29tbWl0KCdzZXRRdWl6JyxyZXNwb25zZS5kYXRhKTsKICAvLyAgICAgY29uc29sZS5sb2coJ2FjdGlvbicscmVzcG9uc2UuZGF0YSkKICAvLyAgICAgY29uc29sZS5sb2coc3RhdGUuaXNMb2FkaW5nKQogIC8vICAgICB9LAogIC8vICAgYXN5bmMgZ2V0cXVlc3Rpb25zMih7IHN0YXRlLCBjb21taXQgfSl7CiAgLy8gICAgIGNvbnNvbGUubG9nKCdhY3Rpb24yJyxzdGF0ZS5udW0pCiAgLy8gICAgIHRyeXsKICAvLyAgICAgICBsZXQgcmVzcG9uc2UyID0gYXdhaXQgYXhpb3MuZ2V0KGAvYXBpL3F1ZXN0aW9ucy9xdWl6emVzLz9xdWl6PSR7c3RhdGUuaWR9Jm51bT0ke3N0YXRlLm51bX1gKQogIC8vICAgICAgIGNvbW1pdCgnZ2V0UmFuZG9tUXVlc3Rpb24nLHJlc3BvbnNlMi5kYXRhKQogIC8vICAgICAgIGNvbW1pdCgnc2V0UXVlc3Rpb25zJyxyZXNwb25zZTIuZGF0YSk7CiAgLy8gICAgICAgLy8gY29tbWl0KCdzZXRJc0xvYWRpbmcnLCBmYWxzZSkKICAvLyAgICAgfQogIC8vICAgICBjYXRjaHsKICAvLyAgICAgICBjb21taXQoJ3NldElzTG9hZGluZycsIGZhbHNlKQogIC8vICAgICAgIHJvdXRlci5wdXNoKHsgbmFtZTogJ05vdGZvdW5kJyB9KQogIC8vICAgICAgICAgICAgICAgICAgICAgICAgfQogIC8vICAgfSwKICAvLyB9LAoKfSk7"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js"],"names":["createStore","createPersistedState","axios","router","signup","board","quiz","getDefaultState","isLoading","id","field","num","questions","quizzes","randomURL","test","notice","step","modules","state","plugins","key","paths","storage","window","sessionStorage","getters","questions2","quizzes2","mutations","setIsLoading","status","reset","console","log","Object","assign","push","getURLs","item","testHandler","noticeHandler","noticeOff","addStep","stepClear"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,MAA5B;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAQC,MAAR,MAAqB,kBAArB;AACA,OAAQC,KAAR,MAAoB,iBAApB;AACA,OAAQC,IAAR,MAAmB,gBAAnB;;AAEA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,SAAO;AACLC,IAAAA,SAAS,EAAE,KADN;AAELC,IAAAA,EAAE,EAAE,CAFC;AAGLC,IAAAA,KAAK,EAAC,EAHD;AAILC,IAAAA,GAAG,EAAC,CAJC;AAKLC,IAAAA,SAAS,EAAC,EALL;AAMLC,IAAAA,OAAO,EAAC,EANH;AAOLC,IAAAA,SAAS,EAAC,EAPL;AAQLC,IAAAA,IAAI,EAAC,IARA;AASLC,IAAAA,MAAM,EAAC,KATF;AAULC,IAAAA,IAAI,EAAC;AAVA,GAAP;AAWE,CAZJ;;AAeA,eAAejB,WAAW,CAAC;AACzBkB,EAAAA,OAAO,EAAE;AACPd,IAAAA,MAAM,EAANA,MADO;AAEPC,IAAAA,KAAK,EAALA,KAFO;AAGPC,IAAAA,IAAI,EAAJA;AAHO,GADgB;AAMzBa,EAAAA,KAAK,EAAEZ,eAAe,EANG;AAOzBa,EAAAA,OAAO,EAAE,CACPnB,oBAAoB,CAAC;AACnBoB,IAAAA,GAAG,EAAE,SADc;AACF;AACjBC,IAAAA,KAAK,EAAE,CACL,IADK,EAEL,KAFK,EAGL,MAHK,EAIL,mBAJK,EAKL,sBALK,EAML,aANK,EAOL,iBAPK,EAQL,YARK,EASL,wBATK,EAUL,2BAVK,EAWL,iBAXK,EAYL,iBAZK,EAaL,kBAbK,CAFY;AAgBf;AACJC,IAAAA,OAAO,EAAEC,MAAM,CAACC,cAjBG,CAiBc;;AAjBd,GAAD,CADb,CAPgB;AA2BzBC,EAAAA,OAAO,EAAC;AACNC,IAAAA,UAAU,EAAC,oBAACR,KAAD;AAAA,aAAWA,KAAK,CAACP,SAAjB;AAAA,KADL;AAENgB,IAAAA,QAAQ,EAAC,kBAACT,KAAD;AAAA,aAAWA,KAAK,CAACN,OAAjB;AAAA;AAFH,GA3BiB;AA+BzBgB,EAAAA,SAAS,EAAE;AACTC,IAAAA,YADS,wBACIX,KADJ,EACWY,MADX,EACmB;AAC1BZ,MAAAA,KAAK,CAACX,SAAN,GAAkBuB,MAAlB;AACD,KAHQ;AAITC,IAAAA,KAJS,iBAIHb,KAJG,EAII;AACXc,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,MAAM,CAACC,MAAP,CAAcjB,KAAd,EAAqBZ,eAAe,EAApC;AACAJ,MAAAA,MAAM,CAACkC,IAAP,CAAY,GAAZ;AACD,KARQ;AASTC,IAAAA,OATS,mBASDnB,KATC,EASKoB,IATL,EASU;AACjBpB,MAAAA,KAAK,CAACR,GAAN,GAAY4B,IAAI,CAAC5B,GAAjB,CADiB,CAEjB;;AACAQ,MAAAA,KAAK,CAACV,EAAN,GAAW8B,IAAI,CAACR,MAAhB;AACAZ,MAAAA,KAAK,CAACJ,IAAN,GAAawB,IAAI,CAACxB,IAAlB;AACAI,MAAAA,KAAK,CAACL,SAAN,mBAA2BK,KAAK,CAACV,EAAjC;AACD,KAfQ;AAgBT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA+B,IAAAA,WAnCS,uBAmCGrB,KAnCH,EAmCS;AAChBA,MAAAA,KAAK,CAACJ,IAAN,GAAa,KAAb;AACD,KArCQ;AAsCT0B,IAAAA,aAtCS,yBAsCKtB,KAtCL,EAsCW;AAClBA,MAAAA,KAAK,CAACH,MAAN,GAAe,IAAf;AAED,KAzCQ;AA0CT0B,IAAAA,SA1CS,qBA0CCvB,KA1CD,EA0CO;AACdA,MAAAA,KAAK,CAACH,MAAN,GAAe,KAAf;AACD,KA5CQ;AA6CT2B,IAAAA,OA7CS,mBA6CDxB,KA7CC,EA6CK;AACZA,MAAAA,KAAK,CAACF,IAAN,IAAc,CAAd;AACD,KA/CQ;AAgDT2B,IAAAA,SAhDS,qBAgDCzB,KAhDD,EAgDO;AACdA,MAAAA,KAAK,CAACF,IAAN,GAAa,CAAb;AACD,KAlDQ,CAmDT;AACA;AACA;AACA;AACA;AACA;;AAxDS,GA/Bc,CAyFzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAlHyB,CAAD,CAA1B","sourcesContent":["import { createStore } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport  signup  from './modules/signup'\nimport  board  from './modules/board'\nimport  quiz  from './modules/quiz'\n\nlet getDefaultState = () => {\n  return {\n    isLoading: false,\n    id: 1,\n    field:'',\n    num:3,\n    questions:[],\n    quizzes:[],\n    randomURL:'',\n    test:null,\n    notice:false,\n    step:1,\n  }}\n\n\nexport default createStore({\n  modules: {\n    signup,\n    board,\n    quiz\n  },\n  state: getDefaultState(),\n  plugins: [\n    createPersistedState({\n      key: 'quizkey',  // 設定しなければ'vuex'\n      paths: [\n        'id',\n        'num',\n        'test',\n        \"signup.djangoUser\",\n        \"signup.emailVerified\",\n        \"signup.user\",\n        \"signup.tempUser\",\n        \"signup.UID\",\n        \"board.answeredQuestion\",\n        \"board.reccomendedQuestion\",\n        \"board.centerTag\",\n        \"quiz.quizNameId\",\n        \"quiz.fieldNameId\"\n      ],  // 保存するモジュール：設定しなければ全部。\n      storage: window.sessionStorage,  // 設定しなければlocalStorage\n    })],\n  getters:{\n    questions2:(state) => state.questions,\n    quizzes2:(state) => state.quizzes\n  },\n  mutations: {\n    setIsLoading(state, status) {\n      state.isLoading = status\n    },\n    reset(state) {\n      console.log('reset')\n      Object.assign(state, getDefaultState())\n      router.push('/')\n    },\n    getURLs(state,item){\n      state.num = item.num\n      // state.field= field\n      state.id = item.status\n      state.test = item.test\n      state.randomURL = `/quiz/${state.id}`\n    },\n    // getRandomQuestion(state,array){\n    //   for (let i = array.length - 1; i >= 0; i--) {\n    //     let r = Math.floor(Math.random() * (i + 1))\n    //     let tmp = array[i]\n    //     array[i] = array[r]\n    //     array[r] = tmp\n    //     }\n    //   for ( let k =0; k < array.length; k++){\n    //     for (let i = array[k].answer.length - 1; i >= 0; i--) {\n    //       let r = Math.floor(Math.random() * (i + 1))\n    //       let tmp = array[k].answer[i]\n    //       array[k].answer[i] = array[k].answer[r]\n    //       array[k].answer[r] = tmp\n    //       }}\n    //     return array\n    // },\n    // setQuestions:(state,questions) => (state.questions = questions),\n    // setQuiz:(state,quizzes) => (state.quizzes = quizzes),\n    // initial\n    testHandler(state){\n      state.test = false\n    },\n    noticeHandler(state){\n      state.notice = true\n      \n    },\n    noticeOff(state){\n      state.notice = false  \n    },\n    addStep(state){\n      state.step += 1\n    },\n    stepClear(state){\n      state.step = 1\n    },\n    // quizRouter(i,f,n){\n    //   state.id = i\n    //   state.field = f\n    //   state.num = n\n    //   return { name: 'Quiz', params:{ id:state.id, field:state.field, num:state.num}}\n    // }\n  },\n  // actions: {\n  //   async getquiz2({ state, commit }){\n  //     let response = await axios.get(`/api/quizzes/?id=${state.id}`)\n  //     .catch(error => {\n  //       console.log('error',error.message)\n  //                        })\n  //     commit('setQuiz',response.data);\n  //     console.log('action',response.data)\n  //     console.log(state.isLoading)\n  //     },\n  //   async getquestions2({ state, commit }){\n  //     console.log('action2',state.num)\n  //     try{\n  //       let response2 = await axios.get(`/api/questions/quizzes/?quiz=${state.id}&num=${state.num}`)\n  //       commit('getRandomQuestion',response2.data)\n  //       commit('setQuestions',response2.data);\n  //       // commit('setIsLoading', false)\n  //     }\n  //     catch{\n  //       commit('setIsLoading', false)\n  //       router.push({ name: 'Notfound' })\n        \n  //                        }\n      \n  //   },\n  // },\n})\n"]}]}