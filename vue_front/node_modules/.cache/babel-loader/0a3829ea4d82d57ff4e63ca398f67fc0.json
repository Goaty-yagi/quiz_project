{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-1ed2ebe6\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"main-wrapper\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"lds-dual-ring\"\n  }, null, -1);\n});\n\nvar _hoisted_3 = [_hoisted_2];\nvar _hoisted_4 = {\n  key: 1\n};\nvar _hoisted_5 = {\n  class: \"quiz-description title-white\"\n};\nvar _hoisted_6 = {\n  class: \"progress-wrapper\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  class: \"progress-bar-outer\"\n};\n\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"progress\",\n    style: {\n      \"width\": \"0%\"\n    },\n    class: \"progress-bar-inner\"\n  }, null, -1);\n});\n\nvar _hoisted_9 = [_hoisted_8];\nvar _hoisted_10 = {\n  key: 0,\n  class: \"quiz-countainer\"\n};\nvar _hoisted_11 = {\n  class: \"question-wrapper\"\n};\nvar _hoisted_12 = {\n  class: \"question-header\"\n};\n\nvar _hoisted_13 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"q\"\n  }, \"Q\", -1);\n});\n\nvar _hoisted_14 = {\n  class: \"question-body\"\n};\nvar _hoisted_15 = {\n  key: 0,\n  class: \"image-container\"\n};\nvar _hoisted_16 = [\"src\"];\nvar _hoisted_17 = {\n  class: \"answer-wrapper\"\n};\nvar _hoisted_18 = [\"onClick\", \"disabled\"];\nvar _hoisted_19 = {\n  class: \"answer-select-bases\"\n};\nvar _hoisted_20 = {\n  class: \"answer-select\"\n};\nvar _hoisted_21 = {\n  class: \"selecter\"\n};\nvar _hoisted_22 = {\n  class: \"answer-label-bases\"\n};\nvar _hoisted_23 = {\n  class: \"answer-label\"\n};\nvar _hoisted_24 = {\n  class: \"selected-answer-bases\"\n};\nvar _hoisted_25 = {\n  key: 0,\n  class: \"selected-answer-order\"\n};\nvar _hoisted_26 = {\n  class: \"result-answer-order\"\n};\nvar _hoisted_27 = {\n  key: 0,\n  class: \"order\"\n};\nvar _hoisted_28 = {\n  key: 1\n};\n\nvar _hoisted_29 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"fas fa-check\"\n  }, null, -1);\n});\n\nvar _hoisted_30 = [_hoisted_29];\nvar _hoisted_31 = {\n  key: 1,\n  class: \"fas fa-check\"\n};\nvar _hoisted_32 = {\n  key: 2,\n  class: \"far fa-circle\"\n};\nvar _hoisted_33 = {\n  key: 3,\n  class: \"fas fa-times\"\n};\nvar _hoisted_34 = {\n  key: 0,\n  class: \"error-form\"\n};\n\nvar _hoisted_35 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"fas fa-exclamation-triangle\"\n  }, null, -1);\n});\n\nvar _hoisted_36 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", null, \"これ以上登録できません\", -1);\n});\n\nvar _hoisted_37 = [\"onClick\", \"disabled\"];\n\nvar _hoisted_38 = /*#__PURE__*/_createTextVNode(\"この問題を\");\n\nvar _hoisted_39 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n});\n\nvar _hoisted_40 = /*#__PURE__*/_createTextVNode(\"登録する\");\n\nvar _hoisted_41 = [_hoisted_38, _hoisted_39, _hoisted_40];\nvar _hoisted_42 = [\"onClick\"];\n\nvar _hoisted_43 = /*#__PURE__*/_createTextVNode(\"この問題を\");\n\nvar _hoisted_44 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n});\n\nvar _hoisted_45 = /*#__PURE__*/_createTextVNode(\"登録解除する\");\n\nvar _hoisted_46 = [_hoisted_43, _hoisted_44, _hoisted_45];\nvar _hoisted_47 = {\n  key: 0,\n  class: \"button-quiz-container\"\n};\nvar _hoisted_48 = [\"onClick\"];\nvar _hoisted_49 = [\"onClick\"];\nvar _hoisted_50 = {\n  key: 1,\n  class: \"buttun-in-result\"\n};\nvar _hoisted_51 = {\n  class: \"back-container\"\n};\nvar _hoisted_52 = {\n  class: \"next-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Start = _resolveComponent(\"Start\");\n\n  var _component_Result = _resolveComponent(\"Result\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"quiz-wrapper\", {\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading\n    }])\n  }, _hoisted_3, 2), $data.startQuiz && $data.questionLength && _ctx.$store.state.isLoading == false ? (_openBlock(), _createBlock(_component_Start, {\n    key: 0,\n    questionLength: $data.questionLength,\n    forQuizPageInfo: $props.forQuizPageInfo,\n    onCloseStart: $options.closeStart\n  }, null, 8, [\"questionLength\", \"forQuizPageInfo\", \"onCloseStart\"])) : _createCommentVNode(\"\", true), $data.startQuiz == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString(_ctx.quiz.description), 1), _createElementVNode(\"div\", _hoisted_6, [$data.result == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _hoisted_9)) : _createCommentVNode(\"\", true)]), $data.showResult == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.questions.slice($data.pagination.a, $data.pagination.b), function (question, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"question-loop\",\n      key: questionindex\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createTextVNode(\"第\" + _toDisplayString($data.questionLengthCounter) + \"問\", 1)]), _createElementVNode(\"div\", _hoisted_14, _toDisplayString($options.getQuestionStatus(question.label, question.status[0])), 1)]), question.image ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"img\", {\n      class: \"image\",\n      src: question.get_image\n    }, null, 8, _hoisted_16)])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.answer, function (answer, answerindex) {\n      return _openBlock(), _createElementBlock(\"button\", {\n        class: _normalizeClass([\"answer-loop\", {\n          'selected-answer': $data.selectedIndexNum == answerindex || answerindex + 1 in $data.selectedOrderAnswer,\n          'is-correct-answer': $data.resultHandleDict.isCorrect && answer.is_correct || $data.resultHandleDict.answerAllTrueType4 || $data.resultHandleDict.answerIDType4[answer.answer_id],\n          'isnot-correct-answer': $data.resultHandleDict.isNotCorrect && $data.resultHandleDict.answerIDType3 == answer.id || $data.resultHandleDict.answerIDType5[answer.id] == false || $data.resultHandleDict.answerIDType4[answer.answer_id] == false,\n          'answer-hover': !$data.result && !$data.maxSelectReach\n        }]),\n        onClick: function onClick(e) {\n          return $data.result == false && $options.onClick(answerindex, answer, question);\n        },\n        disabled: $data.maxSelectReach && answer.id in $data.selectedAnswer == false,\n        key: answerindex\n      }, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, _toDisplayString(String.fromCharCode(answerindex + 65)), 1)])]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, _toDisplayString(answer.label), 1)]), _createElementVNode(\"div\", _hoisted_24, [$data.selectedOrderAnswer[answerindex + 1] && question.question_type == 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, _toDisplayString($data.selectedOrderAnswer[answerindex + 1]), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_26, [$data.resultHandleDict.questionType4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, _toDisplayString(answer.answer_id), 1)) : _createCommentVNode(\"\", true), $options.type3And5CheckResult($data.resultHandleDict.answerIDType5, $data.resultHandleDict.answerIDType3, answer.id) && question.question_type != 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, _hoisted_30)) : _createCommentVNode(\"\", true)]), $data.selectedOrderAnswer[answerindex + 1] && question.question_type == 5 ? (_openBlock(), _createElementBlock(\"i\", _hoisted_31)) : _createCommentVNode(\"\", true), $data.resultHandleDict.isCorrect && answer.is_correct || $data.resultHandleDict.answerAllTrueType4 || $data.resultHandleDict.answerIDType4[answer.answer_id] ? (_openBlock(), _createElementBlock(\"i\", _hoisted_32)) : _createCommentVNode(\"\", true), $data.resultHandleDict.isNotCorrect && $data.resultHandleDict.answerIDType3 == answer.id || $data.resultHandleDict.answerIDType5[answer.id] == false || $data.resultHandleDict.answerIDType4[answer.answer_id] == false ? (_openBlock(), _createElementBlock(\"i\", _hoisted_33)) : _createCommentVNode(\"\", true)])], 10, _hoisted_18);\n    }), 128))]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"quiz-footer\", {\n        'quiz-footer-result': $data.result\n      }])\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"register-container\", {\n        'register-container-result': $data.result\n      }])\n    }, [$data.showError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [_hoisted_35, _hoisted_36, _createElementVNode(\"div\", null, \"現在、最大で\" + _toDisplayString(_ctx.getMyQuizInfo.max) + \"まで登録できます\", 1)])) : _createCommentVNode(\"\", true), $data.myQuestionIdList.includes(question.id) == false ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: function onClick($event) {\n        return $options.deleteMyQuestion(question);\n      },\n      disabled: $data.showError,\n      class: \"register-border-red\"\n    }, _hoisted_41, 8, _hoisted_37)) : _createCommentVNode(\"\", true), $data.myQuestionIdList.includes(question.id) ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: function onClick($event) {\n        return $options.deleteMyQuestion(question);\n      },\n      class: \"register-border-blue\"\n    }, _hoisted_46, 8, _hoisted_42)) : _createCommentVNode(\"\", true)], 2), $data.showNextOrFinishButton && $data.result == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, [_ctx.questions.length == $data.questionLengthCounter ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      onClick: function onClick($event) {\n        return $options.Finish(question.question_type, question.id);\n      },\n      class: \"btn-tr-white-base-sq\"\n    }, \"FINSH\", 8, _hoisted_48)) : _createCommentVNode(\"\", true), _ctx.questions.length != $data.questionLengthCounter ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      onClick: function onClick($event) {\n        return $options.nextQuestion(question.question_type, question.id);\n      },\n      class: \"btn-tr-white-base-sq\"\n    }, \"NEXT ＞\", 8, _hoisted_49)) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true), $data.result ? (_openBlock(), _createElementBlock(\"div\", _hoisted_50, [_createElementVNode(\"div\", _hoisted_51, [$data.questionLengthCounter != 1 ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      onClick: _cache[0] || (_cache[0] = function ($event) {\n        return $options.resultBack();\n      }),\n      class: \"btn-tr-white-base-sq back\"\n    }, \" ＜BACK \")) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", {\n      onClick: _cache[1] || (_cache[1] = function ($event) {\n        return $options.HandleShowResult();\n      }),\n      class: \"btn-base-black-db-ov result\"\n    }, \"結果画面\"), _createElementVNode(\"div\", _hoisted_52, [_ctx.questions.length != $data.questionLengthCounter ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      onClick: _cache[2] || (_cache[2] = function ($event) {\n        return $options.resultNext();\n      }),\n      class: \"btn-tr-white-base-sq next\"\n    }, \" NEXT＞ \")) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true)], 2)]);\n  }), 128))])) : _createCommentVNode(\"\", true), $data.showResult ? (_openBlock(), _createBlock(_component_Result, {\n    key: 1,\n    SelectedAnswerInfo: $data.SelectedAnswerInfo,\n    question_length: _ctx.questions.length,\n    onHandlePagination: $options.handlePagination,\n    onHandleShowResult: $options.HandleShowResult,\n    onResultAnswerHandler: $options.resultAnswerHandler,\n    onHandleResult: $options.handleResult,\n    onPlayAgain: $options.playAgain,\n    onBackQuizHome: $options.backQuizHome\n  }, null, 8, [\"SelectedAnswerInfo\", \"question_length\", \"onHandlePagination\", \"onHandleShowResult\", \"onResultAnswerHandler\", \"onHandleResult\", \"onPlayAgain\", \"onBackQuizHome\"])) : _createCommentVNode(\"\", true)])) : _createCommentVNode(\"\", true)])], 2);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_2","id","style","_hoisted_8","_hoisted_29","_hoisted_39","_hoisted_44","_createElementBlock","_ctx","state","isLoading","$data","_createBlock","_component_Start","questionLength","forQuizPageInfo","$props","onCloseStart","$options","_hoisted_4","_toDisplayString","description","_hoisted_9","_Fragment","_renderList","slice","a","b","question","questionindex","key","_hoisted_13","label","status","image","src","get_image","answer","answerindex","isCorrect","is_correct","answerAllTrueType4","answerIDType4","answer_id","isNotCorrect","answerIDType3","answerIDType5","onClick","disabled","String","fromCharCode","question_type","questionType4","_hoisted_28","_hoisted_30","_hoisted_35","_hoisted_36","max","includes","length","_hoisted_48","_hoisted_49","_component_Result","SelectedAnswerInfo","question_length","onHandlePagination","onHandleShowResult","onResultAnswerHandler","onHandleResult","onPlayAgain","onBackQuizHome"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/quiz_components/QuizP.vue"],"sourcesContent":["<template>\n    <div class=\"quiz-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <Start v-if=\"startQuiz&&questionLength&&$store.state.isLoading==false\"\n            :questionLength=\"questionLength\"\n            :forQuizPageInfo=\"forQuizPageInfo\"\n            @closeStart=\"closeStart\"/>\n            <div v-if=\"startQuiz==false\">\n                <!-- {{userStatusDict.status.status[0]}} -->\n                <p class=\"quiz-description title-white\">{{ quiz.description }}</p>\n                <div class=\"progress-wrapper\">\n                    <div v-if=\"result==false\" class=\"progress-bar-outer\">\n                        <div id=\"progress\" style=\"width:0%\" class=\"progress-bar-inner\"></div>\n                    </div>\n                </div>\n\n                <div v-if=\"showResult==false\" class='quiz-countainer'>\n                    <div\n                    class=\"question-loop\"\n                    v-for=\"(question,questionindex) in questions.slice(pagination.a,pagination.b)\"\n                    v-bind:key=\"questionindex\">\n                        <div class='question-wrapper'>\n                            <div class=\"question-header\"><i class='q'>Q</i>第{{ questionLengthCounter }}問</div>\n                            <div class='question-body'>{{ getQuestionStatus(question.label,question.status[0]) }}</div>\n                        </div>\n                        \n                        <!-- <div :class='showPic(question.image)'> -->\n                        <div class=\"image-container\" v-if=\"question.image\">\n                            <img class=\"image\" v-bind:src=\"question.get_image\"/>\n                        </div>\n\n                        <!-- answer part -->\n                        <!-- questiontype 3 is '選択'\n                        ４ is '並び替え'\n                        5 is '多答' -->\n                        <div class='answer-wrapper'>\n                            <button \n                            class=\"answer-loop\"\n                            :class=\"{\n                            'selected-answer':selectedIndexNum==answerindex||\n                            answerindex+1 in selectedOrderAnswer,\n                            'is-correct-answer':resultHandleDict.isCorrect&&answer.is_correct||\n                            resultHandleDict.answerAllTrueType4||\n                            resultHandleDict.answerIDType4[answer.answer_id],\n                            'isnot-correct-answer':resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                            resultHandleDict.answerIDType5[answer.id]==false||\n                            resultHandleDict.answerIDType4[answer.answer_id]==false,\n                            'answer-hover':!result&&!maxSelectReach}\"\n                            @click=\"e => result==false && onClick(answerindex,answer,question)\"\n                            :disabled=\"maxSelectReach&&answer.id in selectedAnswer==false\"\n                            v-for=\"(answer,answerindex) in question.answer\"\n                            v-bind:key=\"answerindex\">\n                                <div class='answer-select-bases'>\n                                    <div class=\"answer-select\">\n                                        <div class=\"selecter\">{{ String.fromCharCode(answerindex+65) }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"answer-label-bases\">\n                                    <div class=\"answer-label\">\n                                        {{ answer.label }}\n                                    </div>\n                                </div>\n                                <div class=\"selected-answer-bases\">\n                                    <div v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==4\" class=\"selected-answer-order\">\n                                        {{ selectedOrderAnswer[answerindex+1] }}\n                                    </div>\n                                    <div class=\"result-answer-order\">\n                                        <div class=\"order\" v-if=\"resultHandleDict.questionType4\">\n                                            {{ answer.answer_id}}\n                                        </div>\n                                        <div v-if=\"type3And5CheckResult(resultHandleDict.answerIDType5,resultHandleDict.answerIDType3,answer.id)&&question.question_type!=4\">\n                                            <i class=\"fas fa-check\"></i>\n                                        </div>\n                                    </div>\n                                    <i v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==5\" class=\"fas fa-check\"></i>\n                                    <!-- for result -->\n                                    <!-- <i v-if=\"answer.id in resultHandleDict.answerIDType5&&question.question_type==5\" class=\"fas fa-check\"></i> -->\n                                    <i v-if=\"resultHandleDict.isCorrect&&answer.is_correct||\n                                    resultHandleDict.answerAllTrueType4||\n                                    resultHandleDict.answerIDType4[answer.answer_id]\" class=\"far fa-circle\"></i>\n                                    <i v-if=\"resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                                    resultHandleDict.answerIDType5[answer.id]==false||\n                                    resultHandleDict.answerIDType4[answer.answer_id]==false\" class=\"fas fa-times\"></i>\n                                </div>\n                            </button>\n                        </div>\n                        <!-- <div  @click=\"deleteMyQuestion(question.id)\" class=\"register-container\"> -->\n                        <div class=\"quiz-footer\" :class=\"{'quiz-footer-result':result}\">\n                            <div class=\"register-container\" :class=\"{'register-container-result':result}\">\n                                <div v-if=\"showError\" class='error-form'>\n                                    <i class=\"fas fa-exclamation-triangle\"></i>\n                                    <div>これ以上登録できません</div>\n                                    <div>現在、最大で{{ getMyQuizInfo.max }}まで登録できます</div>\n                                </div>\n                                <button @click=\"deleteMyQuestion(question)\" :disabled=\"showError\" class=\"register-border-red\" v-if=\"myQuestionIdList.includes(question.id)==false\">この問題を<br>登録する</button>\n                                <button @click=\"deleteMyQuestion(question)\" class=\"register-border-blue\" v-if=\"myQuestionIdList.includes(question.id)\">この問題を<br>登録解除する</button>\n                            </div>\n                            <div v-if=\"showNextOrFinishButton&&\n                            result==false\" class=\"button-quiz-container\">\n                                <div v-if=\"questions.length==questionLengthCounter\"\n                                @click=\"Finish(question.question_type,question.id)\" class=\"btn-tr-white-base-sq\">FINSH</div>\n                                <div v-if=\"questions.length!=questionLengthCounter\"\n                                @click=\"nextQuestion(question.question_type,question.id)\" class=\"btn-tr-white-base-sq\">NEXT ＞</div>\n                            </div>\n\n                            <!-- here for buttun in result -->\n                            <div v-if=\"result\" class=\"buttun-in-result\">\n                                <div class=\"back-container\">\n                                    <div v-if=\"questionLengthCounter!=1\" \n                                    @click=\"resultBack()\" class=\"btn-tr-white-base-sq back\">\n                                        ＜BACK\n                                    </div>\n                                </div>\n                                <div \n                                @click=\"HandleShowResult()\"\n                                class=\"btn-base-black-db-ov result\">結果画面</div>\n                                <div class=\"next-container\">\n                                    <div v-if=\"questions.length!=questionLengthCounter\"\n                                    @click=\"resultNext()\" class=\"btn-tr-white-base-sq next\">\n                                        NEXT＞\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Result\n                v-if=\"showResult\"\n                :SelectedAnswerInfo='SelectedAnswerInfo'\n                :question_length='questions.length'\n                @handlePagination='handlePagination'\n                @HandleShowResult='HandleShowResult'\n                @resultAnswerHandler='resultAnswerHandler'\n                @handleResult='handleResult'\n                @playAgain=\"playAgain\"\n                @backQuizHome=\"backQuizHome\"\n                />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {mapGetters,mapActions} from 'vuex'\nimport Result from '@/components/quiz_components/Result.vue'\nimport Start from '@/components/quiz_components/Start.vue'\n\nexport default {\n    components: {\n    Result,\n    Start\n    },\n    props:[\n        \"forQuizPageInfo\"\n    ],\n    data(){\n        return{\n            questionLengthCounter:1,\n            questionLength:'',\n            SelectedAnswerInfo:{},\n            selectedAnswer: {},\n            answerIDAndOrder:{},\n            showResult: false,\n            showNextOrFinishButton:false,\n            result: false,\n            startQuiz: false,\n            progressBarSwitch: false,\n            pagination:{\n                a: 0,\n                b: 1,\n            },\n            resultHandleDict:{\n                isCorrect: false,\n                IsNotCorrect: false,\n                answerIDType3: '',\n                questionType4: false,\n                answerAllTrueType4: false,\n                answerIDType4: '',\n                answerIDType5: '',\n            },\n            countupDict:{\n                answerID:'',\n                questionID:'',\n                questionType:''\n            },\n            userStatusDict:{\n                status:'',\n                isCorrect:0,\n                isFalse:0\n            },\n            maxSelectReach: false,\n            selectedIndexNum: null,\n            showSelectNum: true,\n            selectedOrderAnswer:{},\n            selectAnswerCounter:0,\n            NumOfIscorrect:0,\n            showError: false,\n            myQuestionIdList:[]\n        }\n    },\n    created(){\n        // this.getquiz()\n        this.getquestions()\n    },\n    mounted(){\n        console.log(\"mounted QuizP\",this.getMyQuestion)\n        this.getMyQuestionIds(this.getMyQuestion)\n        this.questionLength = this.questions.length\n        this.startQuiz = true\n        this.SelectedAnswerInfo = {}\n        \n    },\n    watch:{\n        questions:function(v) {\n            if(this.questions){\n                this.questionLength = this.questions.length\n                // this.userStatusDict.status = this.questions[0]\n            }\n        },\n        // startQuiz:function(v) {\n        //     if(v == false){\n        //         let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n        //         let a = document.getElementById('progress')\n        //         a.setAttribute('style',`width:${percentage}%`)}\n        // }\n    },\n    computed: mapGetters(['questions','quiz','getMyQuestion','getMyQuizInfo']),\n        // myQuestion(){\n        //     return this.$store.state.signup.myQuestion\n        // },\n    methods:{\n        ...mapActions(['getquestions']),\n        nextQuestion(questionType,questionID){\n            this.handleCounyUpDict(this.selectedAnswer,questionType,questionID)\n            this.pagination.a += 1\n            this.pagination.b += 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.questionLengthCounter += 1\n            this.answerIDAndOrder = {}\n            // this. progressBar()\n            this.scrollTop()\n        },\n        Finish(questionType,questionID){\n            this.handleCounyUpDict(this.selectedAnswer,questionType,questionID)\n            this.updateQuizTaker()\n            this.showResult = true\n            this.result = true\n            this.selectedIndexNum= null\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.answerIDAndOrder = {}\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        onClick(answerindex, answer, question){\n            // this is for 2 things,\n            // first is for controling CSS return selectedIndexNum\n            // which used for questionType 3, and selectedOrderAnswer\n            // which used for questionType 4 and 5.\n            // second is for selected-answer and is_correct.\n            // return selectedAnswer for questionType 3.\n            // for questionType 4, use getAnswerIDAndOrder function.\n            // for questionType 5, use getIDAndIsCorrect function.\n            this.progressBar()\n            if(question.question_type == 3){\n                if(this.selectedIndexNum==answerindex){\n                    this.selectedIndexNum = null\n                    this.selectedAnswer = {}\n                    this.showNextOrFinishButton = false\n                }else{\n                    this.selectedIndexNum = answerindex\n                    this.selectedAnswer['answerID'] = answer.id\n                    this.selectedAnswer['isCorrect'] = answer.is_correct\n                    this.handleShowNextOrFinishButton()\n                }\n            }else if(question.question_type == 4){\n                if(this.selectedOrderAnswer[answerindex+1]&&\n                this.questions.length>=this.selectAnswerCounter){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    this.selectAnswerCounter -= 1\n                    this.showNextOrFinishButton = false\n                    \n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    if(Object.keys(this.selectedOrderAnswer).length == question.answer.length){\n                    this.handleShowNextOrFinishButton()\n                    }\n                }\n            }else if(question.question_type == 5){\n                this.getNumOfIscorrect(question.answer)\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    this.selectAnswerCounter -= 1\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length < question.max_select){\n                            this.showNextOrFinishButton = false\n                            this.maxSelectReach = false\n                        }\n                    }else if(Object.keys(this.selectedOrderAnswer).length == 0){\n                        this.showNextOrFinishButton = false\n                    }\n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length == question.max_select){\n                            this.handleShowNextOrFinishButton()\n                            this.maxSelectReach = true\n                        }\n                    }else{\n                        this.handleShowNextOrFinishButton()\n                    }\n                }\n            }\n        },\n        changeOrder(dict, index){\n            // if deleted, the num or nums before the deleted items order num\n            // change\n            let orderNum = dict[index]\n            delete dict[index]\n            if(dict){\n                let changeDict = {}\n                Object.keys(dict).forEach(key =>{\n                    if(dict[key] > orderNum){\n                        dict[key] -= 1\n                    }\n                })\n            }\n        return dict\n        },\n        selectAnswerHandler(questionType){\n            // this is get informations about selected-answer for result component\n            // return SelectedAnswerInfo\n            if(questionType == 3){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect\n                this.handleUserStatus(this.selectedAnswer.isCorrect)\n                this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID\n            }\n            else if(questionType == 4){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n                if(JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else{\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                    this.handleUserStatus(false)\n                }\n                this.makeOrderBoolean()\n                this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder\n            }else if(questionType == 5){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let isCorrectCounter = 0\n                var type5IsCorrect = true\n                Object.values(this.selectedAnswer).forEach(value =>{\n                    if(value == false){\n                        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                        this.handleUserStatus(false)\n                        type5IsCorrect = false\n                    }else{\n                        isCorrectCounter += 1\n                    }\n                })\n                if(this.NumOfIscorrect == isCorrectCounter&&\n                type5IsCorrect){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else if(type5IsCorrect==false&&\n                isCorrectCounter > 0){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                    this.handleUserStatus(false)\n                }\n                this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer\n            }\n        },\n        getAnswerIDAndOrder(answerID,orderNum){\n            // this is for collecting answer from questionType 4\n            if(this.questionLengthCounter in this.answerIDAndOrder){\n                if(orderNum in this.answerIDAndOrder[this.questionLengthCounter]){\n                    this.answerIDAndOrder[this.questionLengthCounter] =\n                    this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter],orderNum)\n                }else{\n                    this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID   \n                }\n            }else{\n                this.answerIDAndOrder[this.questionLengthCounter] = {}\n                this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID\n            }   \n        },\n        makeOrderBoolean(){\n            // this is for AnswerIDAndOrder{1:1} to be {1:true}\n            let newDict = {}\n            let IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n            for(let i = 0; i < IntegerKeys.length; i++){\n                if(IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]){\n                    newDict[i+1] = true\n                }else{\n                    newDict[i+1] = false\n                }\n            }\n            this.answerIDAndOrder = newDict\n        },\n        getIDAndIsCorrect(id, isCorrect){\n            // this is for questionType 5 \n            if(id in this.selectedAnswer){\n                delete this.selectedAnswer[id]\n            }else{\n                this.selectedAnswer[id] = isCorrect\n            }\n        },\n        getNumOfIscorrect(answers){\n            // this is for questionType 5\n            if(this.NumOfIscorrect==false){\n                 Object.values(answers).forEach(value =>{\n                    if(value.is_correct){\n                        this.NumOfIscorrect += 1\n                    }\n                })\n            }\n        },\n        handleShowNextOrFinishButton(){\n            this.showNextOrFinishButton = true\n        },\n        resultAnswerHandler(){\n            if(this.result){\n                this.resultHandleDict.isCorrect = false\n                this.resultHandleDict.isNotCorrect = false\n                this.resultHandleDict.answerAllTrueType4 = false\n                this.resultHandleDict.questionType4 = false\n                this.resultHandleDict.answerIDType3 = ''\n                this.resultHandleDict.answerIDType4 = ''\n                this.resultHandleDict.answerIDType5 = ''\n                Object.keys(this.SelectedAnswerInfo).forEach(key =>{\n                    if(key==this.questionLengthCounter){\n                        if(this.SelectedAnswerInfo[key].isCorrect){\n                            if(this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.answerAllTrueType4 = true\n                            }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                            }\n                            this.resultHandleDict.isCorrect = true\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==3){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType3 = this.SelectedAnswerInfo[key].answerID\n                        }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.questionType4 = true\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType4 = this.SelectedAnswerInfo[key].orderAnswer\n                        }\n                    }\n                })      \n            }\n        },\n        type3And5CheckResult(selectedAnswer5,selectedAnswer3, answerID){\n            if(this.result){\n                if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==5){\n                    if(answerID in selectedAnswer5){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n                else if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==3){\n                    if(answerID == selectedAnswer3){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n        },\n        handleCounyUpDict(selectedAnswer,questionType,questionID){\n            this.countupDict.questionType = questionType\n            this.countupDict.questionID = questionID\n            if(questionType == 5){\n                this.countupDict.answerID = Object.keys(selectedAnswer)\n            }else if(questionType == 3){\n                Object.keys(selectedAnswer).forEach(key => {\n                    if(key = \"answerID\"){\n                        this.countupDict.answerID = selectedAnswer[key]\n                    }\n                })\n            }\n            console.log(\"HCUD\",this.countupDict)\n            this.$store.dispatch('countUpAnswerAndQuestion',this.countupDict)\n        },\n        handlePagination(a,b){\n            // this is for result component\n            this.pagination.a = a\n            this.pagination.b = b\n            this.questionLengthCounter = b\n        },\n        HandleShowResult(){\n            this.showResult = !this.showResult          \n        },\n        handleResult(){\n            this.result = ! this.result\n        },\n        handleUserStatus(selectedAnswer){\n            // this is for only is_true and is_false\n            console.log(selectedAnswer)\n            this.userStatusDict.isCorrect = 0\n            this.userStatusDict.isFalse = 0\n            if(selectedAnswer){\n                this.userStatusDict.isCorrect = 1\n            }else{\n                this.userStatusDict.isFalse = 1\n            }\n            this.$store.dispatch('userStatusPost',this.userStatusDict)\n            console.log('HUS',this.userStatusDict)\n            \n        },\n        getQuestionStatus(lavel,status){\n            this.userStatusDict.status = status\n            return lavel\n        },\n        async updateQuizTaker(){\n            await axios.patch(`api/quiz-taker-practice/?quiz_taker=${this.$store.state.signup.djangoUser.quiz_taker[0].id}`)\n        },\n        resultNext(){\n            this.pagination.a += 1 \n            this.pagination.b += 1\n            this.questionLengthCounter += 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        resultBack(){\n            this.pagination.a -= 1 \n            this.pagination.b -= 1\n            this.questionLengthCounter -= 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        scrollTop(){\n            window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n            });\n        },\n        closeStart(){\n            console.log(\"clicked\")\n            this.startQuiz = false\n        },\n        playAgain(){\n            console.log('clicked play again')\n            this.startQuiz = true\n            this.attributeReset()\n        },\n        attributeReset(){\n            this.result = false\n            this.showResult = false\n            this.pagination.a = 0\n            this.pagination.b = 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.SelectedAnswerInfo = {}\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.questionLengthCounter = 1\n            this.resultHandleDict.isCorrect = false,\n            this.resultHandleDict.IsNotCorrect =false,\n            this.resultHandleDict.answerIDType3 = '',\n            this.resultHandleDict.questionType4 = false,\n            this.resultHandleDict.answerAllTrueType4 =false,\n            this.resultHandleDict.answerIDType4 ='',\n            this.resultHandleDict.answerIDType5 = ''\n            this.answerIDAndOrder = {}\n            this.getquestions()\n        },\n        backQuizHome(){\n            this.$emit('backQuizHome')\n            this.attributeReset()\n        },\n        progressBar(){\n            if(this.startQuiz == false){\n                this.progressBarSwitch = true\n                console.log(this.questionLengthCounter,(this.questions.length))\n                let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n                let a = document.getElementById('progress')\n                a.setAttribute('style',`width:${percentage}%`)\n            }\n        },\n        deleteMyQuestion(question){\n            console.log(\"INDELETE\",question,this.myQuestionIdList)\n            let payload = {\n                \"question\":question.id,\n                \"myQuiz\":this.getMyQuizInfo.id\n            }\n            if(!this.myQuestionIdList.includes(question.id)){\n                if(this.myQuestionIdList.length >=this.getMyQuizInfo.max){\n                    this.showError = true\n                    setTimeout(this.showErrorFalse, 3000)  \n                }\n                else{\n                    this.myQuestionIdList.push(question.id)\n                    console.log(\"added\",this.myQuestionIdList)\n                    this.$store.commit(\"addMyQuestion\",{'question':question})\n                    this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n                }\n            }\n            else{\n                this.myQuestionIdList = this.myQuestionIdList.filter(item =>item != question.id )\n                console.log(\"deleted\",this.myQuestionIdList)\n                this.$store.commit(\"deleteMyQuestion\",question.id)\n                this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n            }\n        },\n        getMyQuestionIds(myQuestion){\n            for(let i of myQuestion){\n                this.myQuestionIdList.push(i.question.id)\n            }\n            console.log('GMQI',this.myQuestionIdList)\n        },\n        showErrorFalse(){\n            this.showError = false\n        }\n        // setTimeout(context.commit, 3000,\"resetNotifications\")     \n        // handleShowRegister(questionId){\n        //     console.log(this.getMyQuestion)\n        //     try{\n        //         for(let i of this.getMyQuestion){\n        //             console.log(\"HSR\",i.question.id,questionId)\n\n        //             if(i.question.id==questionId){\n        //                 this.showRegister= false\n        //                 return false\n        //             }\n        //         }\n        //         this.showRegister= true\n        //         return true\n        //     }\n        //     catch{\n        //         // this.showRegister= true\n        //         // return true\n        //     }\n        // }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.progress-wrapper{\n    display: flex;\n    justify-content: center;\n    min-height: 80%;\n    .progress-bar-outer{\n        position: relative;\n        border: solid black;\n        border-radius: 50vh;\n        width:80%;\n        height: 2rem;\n        background: rgb(238, 238, 238);\n        margin-bottom: 1.5rem;\n        margin-top: 0.5rem;\n        overflow: hidden;\n        .progress-bar-inner{\n            position:absolute;\n            top:0;\n            left:0;\n            box-sizing: inherit;\n            height: 1.8rem;\n            transform:skewX(-10deg);\n            transition: 1s;\n            background: linear-gradient(to bottom right,#F6F3E4 1%,#ffc890);       \n        }\n    }\n}\n.quiz-wrapper{\n    width: 100%;\n    min-height: 80vh;\n    padding-bottom: 1rem;\n    display: flex;\n    justify-content: center;\n    .quiz-countainer{\n        width: 100%;\n        display: flex;\n        // align-items: center;\n        justify-content: center;\n        .question-loop{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .question-wrapper{\n            width: 95%;\n            border: solid  rgba(243, 91, 36, 0.808);\n            border-radius: 1rem;\n            overflow:hidden;\n                .question-header{\n                background: linear-gradient($base-lite,$base-color);\n                color:white;\n                padding:0.5rem;\n                font-weight:bold;\n                position:relative;\n                }\n                .question-body{\n                    background-color: rgb(253, 245, 239);\n                    padding:1rem;\n                    font-weight:bold;\n                }\n                .q{\n                position:absolute;\n                left:5%;\n                bottom:2%;\n                font-size:1.5rem;  \n                }\n            }\n            .image-container{\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                .image{\n                    width: 40%;\n                }\n            }\n            .answer-wrapper{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                margin-top: 1rem;\n                .is-correct-answer{\n                    background: rgb(148, 255, 235);\n                }\n                .answer-hover:hover{\n                    border: solid $base-color;\n                    // background: $base-lite-3;\n                    .answer-select{\n                        background: $base-lite-2;\n                    }\n                }\n                .answer-loop{\n                    width: 95%;\n                    height: 3rem;\n                    border: solid black;\n                    border-radius: 0.5rem;\n                    background: white;\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 0.5rem;\n                    transition:0.3s;\n                    .answer-select-bases{\n                        flex-basis: 15%;\n                        .answer-select{\n                            border: solid black;\n                            border-radius: 50vh;\n                            width: 2.5rem;\n                            height: 2.5rem;\n                            margin-left: 0.5rem;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            transition:0.3s;\n                            .selecter{\n                                font-weight: bold;\n                                font-size: 1.5rem;\n                            }\n                        }\n                    }\n                    .answer-label-bases{\n                        flex-basis: 70%;\n                        .answer-label{\n\n                        }\n                    }\n                    .selected-answer-bases{\n                        flex-basis: 15%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        .selected-answer-order{\n                            font-size: 1.5rem;\n                            font-weight: bold;\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .result-answer-order{\n                            flex-basis: 50%;\n                            .order{\n                                font-size: 1.5rem;\n                                font-weight: bold;\n                                color: gray;\n                                margin-right: 0.5rem;\n                            }\n                        }\n                        .fa-check{\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .fa-circle{\n                            color: rgba(0, 84, 75, 0.839);\n                            font-size: 1.5rem;\n                            flex-basis: 50%;\n                            margin-right: 0.1rem;\n                        }\n                        .fa-times{\n                            color: rgba(244, 10, 10, 0.839);\n                            font-size: 1.5rem;\n                            margin-right: 0.1rem;\n                            flex-basis: 50%;\n                        }\n                    }\n                }\n                .is-correct-answer{\n                    background: rgb(177, 243, 231);\n                }\n                .isnot-correct-answer{\n                    background: rgb(255, 147, 147)\n                }\n                .selected-answer{\n                    background: $base-lite-3;\n                    .answer-select{\n                        background: $base-color;\n                        color: white;\n                    }\n                }\n            }\n            .quiz-footer{\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                position: relative;\n                margin-bottom: 1rem;\n                height: 3rem;\n                .register-container{\n                    position: absolute;\n                    display: flex;\n                    width: 100%;\n                    justify-content: flex-end;\n                    margin-top: 0.5rem;\n                    margin-right: 1rem;\n                    .error-form{\n                        animation: notification 3s;\n                        animation-fill-mode: forwards;\n                        position: absolute;\n                        left: 0;\n                        right: 0;\n                        top: 0;\n                        padding-bottom: 0.7rem;\n                        margin: auto;\n                        width: 80%;\n                        background: rgba(252, 252, 252, 0.85);\n                        z-index: 2;\n\n                    }\n                    .register-border-red{\n                        border:0.3rem solid $dull-red;\n                        border-radius: 5px;\n                        padding: 0.2rem;\n                        font-size: 0.8rem;\n                        background: $back-white;\n                        color: $dark-blue;\n                        font-weight: bold;\n                        transition: .5s;\n                    }\n                    .register-border-red:hover{\n                        background: white;\n                        border:0.3rem solid $lite-dull-red;\n                    }\n                    .register-border-blue{\n                        border:0.3rem solid $dull-blue;\n                        border-radius: 5px;\n                        padding: 0.2rem;\n                        font-size: 0.8rem;\n                        background: $back-white;\n                        color: $dark-blue;\n                        font-weight: bold;\n                        transition: .5s;\n                    }\n                    .register-border-blue:hover{\n                        background: white;\n                        border:0.3rem solid $lite-dull-blue;\n                    }\n                    \n                }\n                .button-quiz-container{\n                    display: flex;\n                    margin-top: 1rem;\n                    z-index: 1;\n                    div{\n                        padding-right: 0.3rem;\n                        padding-left: 0.3rem;\n                    }\n                }\n                .buttun-in-result{\n                    display: flex;\n                    margin-top: 1rem;\n                    width: 100%;\n                    z-index: 1;\n                    .back-container{\n                        flex-basis: 45%;\n                        display: flex;\n                        justify-content: flex-end;\n                        .back{\n                            display: inline-block;\n                            padding-left: 0.5rem;\n                            padding-right: 0.5rem;\n                            padding-top: 0.2rem;\n                            padding-bottom: 0.2rem;\n                        }\n                    }\n                    .result{\n                        flex-basis: 20%;\n                        width: auto;\n                        padding-left: 0.5rem;\n                        padding-right: 0.5rem;\n                        padding-top: 0.2rem;\n                        padding-bottom: 0.2rem;\n                        margin-right: 0.5rem;\n                        margin-left: 0.5rem;\n                        font-weight: bold;                    \n                    }\n                    .next-container{\n                         flex-basis: 45%;\n                         display: flex;\n                        .next{\n                            display: inline-block;\n                            padding-left: 0.5rem;\n                            padding-right: 0.5rem;\n                            padding-top: 0.2rem;\n                            padding-bottom: 0.2rem;\n                            // margin-bottom: 0.5rem;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n@media(max-width: 480px){\n    .progress-bar-outer{\n        margin-bottom: 0.5rem!important;\n        margin-top: 0!important;\n    }\n    .result{\n        flex-basis: 33%!important;\n    }\n    .register-container-result{\n    margin-top: 4rem!important;\n    }\n}\n@media(max-height: 960px){\n    .quiz-footer-result{\n        margin-bottom: 5rem!important;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}