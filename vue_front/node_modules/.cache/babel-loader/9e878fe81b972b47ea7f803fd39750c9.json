{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js","mtime":1649294761940},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js"],"names":["store","axios","namespace","state","title","description","selectedTagList","relatedQuestion","searchedQuestions","reccomendedQuestion","answeredQuestion","showNoticeOnAcount","answer","reply","notifications","post","getters","user","rootState","signup","djangoUser","gettersAnsweredQuestions","gettersReccomendedQuestion","gettersAnswer","gettersReply","getUserTags","checkDict","checkedList","checkedlist2","user_tag","i","tag","total_num","push","Object","keys","length","m","aryMax","a","b","Math","max","values","reduce","result","r","key","mutations","resetNotifications","console","log","getTitle","payload","getDescription","getRelatedQuestion","getTagList","handleOnReplyAndOnAnswer","question","question2","on_answer","UID","id","on_reply","actions","commitHandleOnReplyAndOnAnswer","commit","handleNotifications","context","setTimeout","getSearchQuestion","get","then","response","data","catch","error","url","getAnsweredQuestion","rootGetters","getUID"],"mappings":"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","sourcesContent":["import store from '..'\nimport axios from 'axios'\n\nexport default {\n    namespace: true,\n    state: {\n        title:'',\n        description:'',\n        selectedTagList:'',\n        relatedQuestion:'',\n        searchedQuestions:'',\n        reccomendedQuestion:'',\n        answeredQuestion:'',\n        // favoriteQuestion:'',\n        showNoticeOnAcount:{\n            answer:false,\n            reply:false,\n        },\n        notifications:{\n            reply: false,\n            answer: false,\n            post: false,\n        },\n    },\n    getters:{\n        user(state, getters, rootState){\n            return rootState.signup.djangoUser\n        },\n        gettersAnsweredQuestions(state){\n            return state.answeredQuestion\n        },\n        gettersReccomendedQuestion(state){\n            return state.reccomendedQuestion\n        },\n        gettersAnswer(state){\n            return state.showNoticeOnAcount.answer\n        },\n        gettersReply(state){\n            return state.showNoticeOnAcount.reply\n        },\n        getUserTags(state, getters){\n            let checkDict = {}  \n            // let checkedDict = {}\n            let checkedList = []\n            let checkedlist2 = []\n            for(let i of getters.user.user_tag){\n                checkDict[i.tag] = i.total_num\n                checkedList.push(i.tag)\n            }\n            if(Object.keys(checkDict).length <= 3){\n                return checkedList\n            }\n            if(Object.keys(checkDict).length > 3){\n                for(let m=0; m < 3; m++){\n                    const aryMax = function (a, b) {return Math.max(a, b);}\n                    let max = Object.values(checkDict).reduce(aryMax);\n                    const result = Object.keys(checkDict).reduce( (r, key) => { \n                        return checkDict[key] === max ? key : r \n                        }, null);\n                    // checkedDict[result] = max\n                    delete checkDict[result]\n                    checkedlist2.push(result)\n                }\n                return checkedlist2\n            }\n        },\n        \n        // handleOnReplyAndOnAnswer(state, getters, rootState){\n        //     console.log(\"handleOnREPLY\")\n        //     for(let question of getters.gettersAnsweredQuestions){\n        //         for(let answer of question.answer){\n        //             if(answer.on_reply==true&&answer.user.UID==getters.user.UID){\n        //                 return  true\n        //             }else{\n        //                 return false\n        //             }\n        //         }\n        //     }\n        //     console.log(\"end\")\n        // },\n    },\n    mutations:{\n        resetNotifications(state){\n            console.log(\"in_reset\")\n            state.notifications.answer = false\n            state.notifications.reply = false\n            state.notifications.post = false\n        },\n        getTitle(state,payload){\n            state.title = payload\n            console.log('Got title',state.title)\n        },\n        getDescription(state, payload){\n            state.description = payload\n            console.log('Got description',state.description)\n        },\n        // getSelectedTagList(state, payload){\n        //     state.selectedTagList = payload\n        // },\n        getRelatedQuestion(state, payload){\n            state.relatedQuestion = payload\n            console.log(\"commited relatedQ\",state.relatedQuestion )\n        },\n        getTagList(state, payload){\n                state.selectedTagList = payload\n                console.log('Got tagID',state.selectedTagList)\n        },\n        handleOnReplyAndOnAnswer(state, getters){\n            // this is for community_page to display if user have notifications\n            console.log('inHandleAR in store')\n            for(let question2 of getters.question){\n                if(question2.on_answer==true&&question2.user.UID==getters.UID){\n                    console.log(\"onAnswer_dayo\")\n                    state.showNoticeOnAcount.answer = true\n                }else{\n                    state.showNoticeOnAcount.answer = false\n                }\n            }\n            console.log(\"answercheck start\")\n            let answeredQuestion = getters.question\n            for(let question of answeredQuestion){\n                console.log(question)\n                for(let answer of question.answer){\n                    console.log(answer.id)\n                    if(answer.on_reply==true&&answer.user.UID==getters.UID){\n                        console.log(\"onreply_dayo\")\n                        state.showNoticeOnAcount.reply = true\n                    }\n                }\n            }\n        }\n        // getWordList(state, payload){\n        //     state.wordList = payload\n        // }\n    },\n    \n    actions:{\n        commitHandleOnReplyAndOnAnswer({commit,getters}){\n            commit('handleOnReplyAndOnAnswer', getters.user)\n        },\n        handleNotifications(context, payload){\n            if(payload == \"reply\"){\n                context.state.notifications.reply = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")      \n            }\n            if(payload == \"answer\"){\n                context.state.notifications.answer = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")\n            }\n            if(payload == \"post\"){\n                context.state.notifications.post = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")\n            }\n        },\n        async getSearchQuestion(state,payload){            \n            await axios\n                .get(`/api/board/question/search/?keyword=${payload}`)\n                .then(response => {\n                    state.searchedQuestions = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async getRelatedQuestion({ state , getters }, payload) {\n            // this.$store.commit('setIsLoading', true)\n            if(getters.getUserTags.length == 1){\n                var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&uid=${getters.user.UID}`\n            }\n            if(getters.getUserTags.length == 2){\n                var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&uid=${getters.user.UID}`\n            }\n            if(getters.getUserTags.length == 3){\n                var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&tag=${getters.getUserTags[2]}&uid=${getters.user.UID}`\n            }\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.reccomendedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getAnsweredQuestion({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            var url = `/api/board/question-answered?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.answeredQuestion = response.data\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async getFavoriteQuestion({ state , getters }, payload){\n        //     const questionId = []\n        //     for(let i of getters.user.question){\n        //         questionId.push(i.id)\n        //     }\n        //     await axios\n        //     .get(`/api/board/question-favorite?question_id=${questionId}`)\n        //     .then(response => {\n        //         state.favoriteQuestion = response.data\n        //         console.log('GetFQ', state.favoriteQuestion)\n        //         })\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },\n        // async getSearchQuestion({ state, commit }){\n        //     await axios({\n        //         method: 'get',\n        //         url: `/api/board/question/search/`,\n        //         data: {\n        //             keyword: state.searchKeywords\n        //         },\n        //     })\n        //     .then()\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },          \n    }\n\n\n}"]}]}