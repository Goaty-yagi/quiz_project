{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport NotVerified from '@/components/login/NotVerified.vue';\nimport QuizP from '@/components/quiz_components/QuizP.vue';\nexport default {\n  components: {\n    QuizP,\n    NotVerified\n  },\n\n  data() {\n    return {\n      quizSelectDict: {\n        beginner: {\n          grade: \"超初級\",\n          description: \"ひらがなやカタカナなど簡単なボキャブラリー\"\n        },\n        basic: {\n          grade: \"初級\",\n          description: \"簡単な文法や一般的な語彙などN５相当\"\n        },\n        intermediate: {\n          grade: \"中級\",\n          description: \"少し難しい文法や表現などN４相当\"\n        },\n        Advanced: {\n          grade: \"上級\",\n          description: \"難しいです\"\n        }\n      },\n      quizCategories: {\n        beginner: {\n          title: {\n            ひらがな: [\"50音\"],\n            カタカナ: \"\",\n            ボキャブラリー: [\"くだもの\", \"やさい\", \"どうぶつ\", \"のりもの\", \"たべもの\", \"のみもの\"],\n            すうじ: \"\",\n            超初級道場: \"all\"\n          }\n        },\n        basic: {\n          title: {\n            初級道場: \"all\"\n          }\n        }\n      },\n      optionDict: {\n        currentCategory: '',\n        showOption: false\n      },\n      forQuizPageInfo: {\n        grade: '',\n        field: '',\n        option: '',\n        all: false\n      },\n      // quizStart manage after start\n      componentHandleDict: {\n        quiz: false,\n        quizStart: false\n      },\n      configQuizIdAndFieldId: {\n        quizId: '',\n        fieldId: [],\n        quizNum: ''\n      },\n      quizNum: {\n        general: 3,\n        all: 20\n      },\n      showEachGrade: false,\n      // showEachOptions: false,\n      receivedKey: '',\n      gradeTitle: '',\n      currentPageName: '',\n      lockedOptions: {\n        unlock: true,\n        future_content: false\n      }\n    };\n  },\n\n  computed: mapGetters(['quizNameId', 'fieldNameId', 'getEmailVerified', 'fixedScroll']),\n\n  created() {\n    this.getQuizNameId();\n    this.getFieldNameId(); // this.$store.dispatch(\"getFieldNameId\")\n    // this.$store.dispatch(\"getQuizNameId\")\n  },\n\n  mounted() {\n    this.scrollFixedForUnmailverified();\n    this.scrollTop();\n    this.getCurrentPageName();\n    this.optionDict.currentCategory = '';\n  },\n\n  beforeUnmount() {\n    this.$store.commit('fixedScrollFalse');\n    this.$store.commit('showModalFalse');\n  },\n\n  methods: { ...mapActions(['getQuizNameId', 'getFieldNameId']),\n\n    showGrade(grade, key) {\n      this.$store.commit('fixedScrollTrue');\n      this.$store.commit('showModalTrue');\n      this.showEachGrade = true;\n      this.gradeTitle = grade;\n      this.receivedKey = key;\n      this.getQuizPageInfo(grade = grade);\n    },\n\n    closeGrade() {\n      this.$store.commit('fixedScrollFalse');\n      this.$store.commit('showModalFalse');\n      this.showEachGrade = false;\n      this.optionDict.currentCategory = '';\n      this.optionDict.showOption = false;\n    },\n\n    closeoption() {\n      this.optionDict.showOption = false;\n      this.optionDict.currentCategory = '';\n    },\n\n    showOptions(index, field) {\n      if (this.optionDict.currentCategory == index) {\n        this.optionDict.showOption = !this.optionDict.showOption;\n        this.optionDict.currentCategory = '';\n      } else {\n        this.optionDict.currentCategory = index;\n        this.optionDict.showOption = true;\n        this.forQuizPageInfo.field = field;\n        console.log('field', this.forQuizPageInfo.field);\n      }\n    },\n\n    // getQuizInfo(quizid,quizfield){\n    //     this.$store.commit('getQuizInfo',{})\n    // },\n    allReset() {\n      this.optionDict.showOption = false;\n      this.showEachGrade = false;\n      this.optionDict.currentCategory = '';\n      this.configQuizIdAndFieldId.quizid = '';\n      this.configQuizIdAndFieldId.fieldId = [];\n    },\n\n    goStart(option) {\n      // this.getQuizInfo()\n      this.$store.commit('fixedScrollFalse');\n      this.$store.commit('showModalFalse');\n      this.getQuizPageInfo(0, option);\n      this.forQuizPageInfo.all = false;\n      this.getQuizId();\n      this.getFieldIds();\n      this.getQuizInfo();\n      this.componentHandleDict.quiz = true;\n      this.componentHandleDict.quizStart = true;\n      this.allReset();\n    },\n\n    backQuizHome() {\n      // this is to pass to quiz => result\n      this.componentHandleDict.quizStart = false;\n      this.componentHandleDict.quiz = false;\n      this.scrollTop();\n      this.allReset();\n    },\n\n    getQuizPageInfo(grade = '', option = '') {\n      if (grade) {\n        this.forQuizPageInfo.grade = grade;\n      } else if (option) {\n        this.forQuizPageInfo.option = option;\n      }\n    },\n\n    getQuizId() {\n      // this is for matching quiz name to quiz id.\n      // quiz name set in front must be the same as a quiz name in DB\n      for (let i of this.quizNameId) {\n        if (i.name == this.forQuizPageInfo.grade) {\n          this.configQuizIdAndFieldId.quizId = i.id;\n          break;\n        }\n      }\n    },\n\n    getFieldIds() {\n      // this is for matching field name to field id.\n      // field name set in front must be the same as a field name in DB\n      for (let i of this.fieldNameId) {\n        if (i.name == this.forQuizPageInfo.option) {\n          this.configQuizIdAndFieldId.fieldId.push(i.id);\n          console.log(this.configQuizIdAndFieldId.fieldId);\n          break;\n        }\n      }\n    },\n\n    getQuizInfo() {\n      console.log('GQI', this.configQuizIdAndFieldId);\n      this.configQuizIdAndFieldId.quizNum = this.quizNum.general;\n      this.$store.commit(\"getQuizInfo\", this.configQuizIdAndFieldId);\n    },\n\n    getAllCategoryQuiz(title) {\n      for (let i of this.quizNameId) {\n        if (i.name == this.forQuizPageInfo.grade) {\n          this.configQuizIdAndFieldId.quizId = i.id;\n          break;\n        }\n      }\n\n      this.configQuizIdAndFieldId.quizNum = this.quizNum.all;\n      this.$store.commit(\"getQuizInfo\", this.configQuizIdAndFieldId);\n      this.forQuizPageInfo.all = true;\n      this.componentHandleDict.quiz = true;\n      this.componentHandleDict.quizStart = true;\n      this.allReset();\n    },\n\n    getCurrentPageName() {\n      let i = this.$route.path;\n      i = i.split(\"/\");\n      this.currentPageName = i[1];\n    },\n\n    scrollTop() {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n\n    lockHandler(val) {\n      if (val == \"超初級\") {\n        return false;\n      } else {\n        return true;\n      }\n    },\n\n    scrollFixedForUnmailverified() {\n      if (!this.getEmailVerified && this.$store.state.isLoading == false) {\n        this.$store.commit('fixedScrollTrue');\n        this.$store.commit('showModalTrue');\n      }\n    } // goQuiz(){\n    //     this.componentHandleDict.start = false\n    //     this.componentHandleDict.quiz = true            \n    // }\n\n\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","NotVerified","QuizP","components","data","quizSelectDict","beginner","grade","description","basic","intermediate","Advanced","quizCategories","title","ひらがな","カタカナ","ボキャブラリー","すうじ","超初級道場","初級道場","optionDict","currentCategory","showOption","forQuizPageInfo","field","option","all","componentHandleDict","quiz","quizStart","configQuizIdAndFieldId","quizId","fieldId","quizNum","general","showEachGrade","receivedKey","gradeTitle","currentPageName","lockedOptions","unlock","future_content","computed","created","getQuizNameId","getFieldNameId","mounted","scrollFixedForUnmailverified","scrollTop","getCurrentPageName","beforeUnmount","$store","commit","methods","showGrade","key","getQuizPageInfo","closeGrade","closeoption","showOptions","index","console","log","allReset","quizid","goStart","getQuizId","getFieldIds","getQuizInfo","backQuizHome","i","quizNameId","name","id","fieldNameId","push","getAllCategoryQuiz","$route","path","split","window","scrollTo","top","behavior","lockHandler","val","getEmailVerified","state","isLoading"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/QuizHome.vue"],"sourcesContent":["<template>\n    <div class=\"quiz-home-wrapper\" :class=\"{'scroll-fixed':fixedScroll, 'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <QuizP\n            v-if=\"componentHandleDict.quiz\"\n            :forQuizPageInfo=\"forQuizPageInfo\"\n            @backQuizHome=\"backQuizHome\"/>\n            <div v-if=\"componentHandleDict.quiz==false\" class=\"title-white\">クイズ</div>\n            <!-- <Start\n            v-if=\"componentHandleDict.start\"\n            @goQuiz=\"goQuiz\"/> -->\n            <div v-if=\"this.componentHandleDict.quizStart==false\" class=\"quiz-home-container\">\n                <div class=\"select-container\">\n                    <div \n                    class=\"select-loop\"\n                    v-for=\"(select,key,selectindex) in quizSelectDict\"\n                    v-bind:key=\"selectindex\">\n                        <div class=\"unlock-false\" :class=\"{'unlock':lockHandler(select.grade)}\">\n                            <div v-if=\"lockHandler(select.grade)\" :class=\"{'lock-container':lockHandler(select.grade)}\">\n                                <i class=\"fas fa-lock\"></i>\n                                <div>LOCKED</div>\n                            </div>\n                        </div>\n                        <div @click=\"e => lockHandler(select.grade)==false && showGrade(select.grade,key)\" class=\"loop-wrapper\">\n                            <div class=\"english-title\" :class=\"{'lock-english-title':lockHandler(select.grade)}\">{{key}}</div>\n                            <div v-if=\"selectindex==0\" class=\"font\"><i class=\"fas fa-dice-one\"></i></div>\n                            <div v-if=\"selectindex==1\" class=\"font\"><i class=\"fas fa-dice-two\"></i></div>\n                            <div v-if=\"selectindex==2\" class=\"font\"><i class=\"fas fa-dice-three\"></i></div>\n                            <div v-if=\"selectindex==3\" class=\"font\"><i class=\"fas fa-dice-four\"></i></div>\n                            <div class=\"grade\">{{ select.grade }}</div>\n                            <div class=\"description\">{{ select.description }}</div>\n                        </div>\n                    </div>\n                </div>\n                <div v-if=\"showEachGrade\" class=\"l-wrapper\">\n                    <div class=\"l-container\">\n                        <div class=\"close-container\">\n                            <div @click=\"closeGrade()\" class=\"close\">\n                                <i class=\"fas fa-times\"></i>\n                            </div>\n                        </div>\n                        <div>\n                            <img class='is-image' src=\"@/assets/logo.png\">\n                        </div>\n                        <div class=\"animation-in-quiz-home\">\n                            <div class=\"title-blue\">{{ gradeTitle }}</div>\n                            <!-- <div class:=\"space-off\" :class=\"{'animations-apace':this.optionDict.showOption}\"></div> -->\n                            <div \n                            class=\"category-outer-loop\"\n                            v-for=\"(selects,key,selectsindex) in quizCategories\"\n                            v-bind:key=\"selectsindex\">\n                                <div v-if=\"key==receivedKey\">\n                                    <div class=\"category-inner-loop\" v-for=\"(titles,titlesindex) in selects\"\n                                    v-bind:key=\"titlesindex\"\n                                    >\n                                    <!-- @click=\"e => result==false && onClick(answerindex,answer,question)\" -->\n                                        <div \n                                        class=\"category-container\"\n                                        v-for=\"(options,title,titleindex) in titles\"\n                                        v-bind:key=\"titleindex\">\n                                            <div @click=\"e => options &&options != 'all' && showOptions(titleindex,title)\" class=\"category-title-container\" :class=\"{'animation-move':this.optionDict.showOption}\">\n                                                <div class=\"for-all\" @click=\"e => options=='all' && getAllCategoryQuiz()\">\n                                                    <div class=\"category-title\">\n                                                        {{ title }}\n                                                        <i v-if=\"options&&options!='all'\" :class=\"{\n                                                            'lotate':optionDict.showOption&&\n                                                            optionDict.currentCategory==titleindex}\" \n                                                            class=\"fas fa-caret-down\">\n                                                        </i>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"option-container\" v-if=\"optionDict.showOption&&\n                                            optionDict.currentCategory==titleindex\">\n                                                <div class=\"close-container\">\n                                                    <div @click=\"closeoption()\" class=\"close\">\n                                                        <i class=\"fas fa-times\"></i>\n                                                    </div>\n                                                </div>\n                                                <div class=\"under-header\">\n                                                    <div \n                                                    class=\"option-loop\"\n                                                    v-for=\"(option, optionindex) in options\"\n                                                    v-bind:key=\"optionindex\">\n                                                        <div @click=\"goStart(option=option)\" class=\"each-option\">\n                                                            <div class=\"option-font\">\n                                                                \n                                                                <i v-if=\"option=='くだもの'\" class=\"fas fa-apple-alt\"></i>\n                                                                <i v-if=\"option=='やさい'\" class=\"fas fa-carrot\"></i>\n                                                                <i v-if=\"option=='どうぶつ'\" class=\"fas fa-cat\"></i>\n                                                                <i v-if=\"option=='のりもの'\" class=\"fas fa-car-side\"></i>\n                                                                <i v-if=\"option=='たべもの'\" class=\"fas fa-utensils\"></i>\n                                                                <i v-if=\"option=='のみもの'\" class=\"fas fa-mug-hot\"></i>\n                                                            </div>\n                                                            <div class=\"option-title\">\n                                                                <p>{{ option }}</p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <NotVerified\n            v-if=\"!getEmailVerified&&$store.state.isLoading==false\"\n            :currentPageName=\"currentPageName\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport QuizP from '@/components/quiz_components/QuizP.vue'\n\nexport default {\n    components: {\n        QuizP,\n        NotVerified,\n    },  \n    data(){\n        return{\n            quizSelectDict:{\n                beginner:{\n                    grade:\"超初級\",\n                    description:\"ひらがなやカタカナなど簡単なボキャブラリー\"\n                },\n                basic:{\n                    grade:\"初級\",\n                    description:\"簡単な文法や一般的な語彙などN５相当\"\n                },\n                intermediate:{\n                    grade:\"中級\",\n                    description:\"少し難しい文法や表現などN４相当\"\n                },\n                Advanced:{\n                    grade:\"上級\",\n                    description:\"難しいです\"\n                }\n            },\n            quizCategories:{\n                beginner:{\n                    title:{\n                        ひらがな:[\"50音\"], \n                        カタカナ:\"\", \n                        ボキャブラリー:[\n                            \"くだもの\",\n                            \"やさい\",\n                            \"どうぶつ\",\n                            \"のりもの\",\n                            \"たべもの\",\n                            \"のみもの\"\n                        ], \n                        すうじ:\"\",\n                        超初級道場:\"all\"\n                    },\n                },\n                basic:{\n                    title:{\n                        初級道場:\"all\"\n                    }\n                }\n            },\n            optionDict:{\n                currentCategory:'',\n                showOption: false,                \n            },\n            forQuizPageInfo:{\n                grade:'',\n                field:'',\n                option:'',\n                all: false,\n            },\n            // quizStart manage after start\n            componentHandleDict:{\n                quiz: false,\n                quizStart: false,\n            },\n            configQuizIdAndFieldId:{\n                quizId:'',\n                fieldId:[],\n                quizNum:''\n            },\n            quizNum:{\n                general: 3,\n                all: 20,\n            },\n            showEachGrade: false,\n            // showEachOptions: false,\n            receivedKey: '',\n            gradeTitle: '',\n            currentPageName:'',\n            lockedOptions:{\n                unlock: true,\n                future_content: false\n            },\n        }\n    },\n    computed: mapGetters(['quizNameId','fieldNameId','getEmailVerified', 'fixedScroll']),\n\n    created(){\n        this.getQuizNameId()\n        this.getFieldNameId()\n        // this.$store.dispatch(\"getFieldNameId\")\n        // this.$store.dispatch(\"getQuizNameId\")\n        \n    },\n    mounted(){\n        this.scrollFixedForUnmailverified()\n        this.scrollTop()\n        this.getCurrentPageName()\n        this.optionDict.currentCategory = ''\n        \n    },\n    beforeUnmount(){\n        this.$store.commit('fixedScrollFalse')\n        this.$store.commit('showModalFalse')\n    },\n    methods:{\n        ...mapActions(['getQuizNameId','getFieldNameId']),\n        showGrade(grade, key){\n            this.$store.commit('fixedScrollTrue')\n            this.$store.commit('showModalTrue')\n            this.showEachGrade = true\n            this.gradeTitle = grade\n            this.receivedKey = key\n            this.getQuizPageInfo(grade=grade)\n        },\n        closeGrade(){\n            this.$store.commit('fixedScrollFalse')\n            this.$store.commit('showModalFalse')\n            this.showEachGrade = false\n            this.optionDict.currentCategory = ''\n            this.optionDict.showOption = false\n        },\n        closeoption(){\n            this.optionDict.showOption = false\n            this.optionDict.currentCategory = ''\n        },\n        showOptions(index,field){\n            if(this.optionDict.currentCategory==index){\n                this.optionDict.showOption = !this.optionDict.showOption\n                this.optionDict.currentCategory = ''\n            }else{\n                this.optionDict.currentCategory = index\n                this.optionDict.showOption = true\n                this.forQuizPageInfo.field = field\n                console.log('field',this.forQuizPageInfo.field)\n            }\n        },\n        // getQuizInfo(quizid,quizfield){\n        //     this.$store.commit('getQuizInfo',{})\n        // },\n        allReset(){\n            this.optionDict.showOption = false\n            this.showEachGrade = false\n            this.optionDict.currentCategory = ''\n            this.configQuizIdAndFieldId.quizid = ''\n            this.configQuizIdAndFieldId.fieldId = []\n        },\n        goStart(option){\n            // this.getQuizInfo()\n            this.$store.commit('fixedScrollFalse')\n            this.$store.commit('showModalFalse')\n            this.getQuizPageInfo(0,option)\n            this.forQuizPageInfo.all = false\n            this.getQuizId()\n            this.getFieldIds()\n            this.getQuizInfo()\n            this.componentHandleDict.quiz = true\n            this.componentHandleDict.quizStart = true\n            this.allReset()\n        },\n        backQuizHome(){\n            // this is to pass to quiz => result\n            this.componentHandleDict.quizStart = false\n            this.componentHandleDict.quiz = false\n            this.scrollTop()\n            this.allReset()\n        },\n        getQuizPageInfo(grade='',option=''){\n            if(grade){\n                this.forQuizPageInfo.grade = grade\n            }else if(option){\n                this.forQuizPageInfo.option = option\n            }\n        },\n        getQuizId(){\n            // this is for matching quiz name to quiz id.\n            // quiz name set in front must be the same as a quiz name in DB\n            for(let i of this.quizNameId){\n                if(i.name == this.forQuizPageInfo.grade){\n                    this.configQuizIdAndFieldId.quizId = i.id\n                    break\n                }\n            }\n        },\n        getFieldIds(){\n            // this is for matching field name to field id.\n            // field name set in front must be the same as a field name in DB\n            for(let i of this.fieldNameId){\n                if(i.name == this.forQuizPageInfo.option){\n                    this.configQuizIdAndFieldId.fieldId.push(i.id)\n                    console.log(this.configQuizIdAndFieldId.fieldId)\n                    break\n                }\n            }\n        },\n        getQuizInfo(){\n            console.log('GQI',this.configQuizIdAndFieldId)\n            this.configQuizIdAndFieldId.quizNum = this.quizNum.general\n            this.$store.commit(\"getQuizInfo\",this.configQuizIdAndFieldId)\n        },\n        getAllCategoryQuiz(title){\n            for(let i of this.quizNameId){\n                if(i.name == this.forQuizPageInfo.grade){\n                    this.configQuizIdAndFieldId.quizId = i.id\n                    break\n                }\n            }\n            this.configQuizIdAndFieldId.quizNum = this.quizNum.all\n            this.$store.commit(\"getQuizInfo\",this.configQuizIdAndFieldId)\n            this.forQuizPageInfo.all = true\n            this.componentHandleDict.quiz = true\n            this.componentHandleDict.quizStart = true\n            this.allReset()\n        },\n        getCurrentPageName(){\n            let i = this.$route.path\n            i = i.split(\"/\")\n            this.currentPageName = i[1]\n        },\n        scrollTop(){\n            window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n            });\n        },\n        lockHandler(val){\n            if(val==\"超初級\"){\n                return false\n            }\n            else{\n                return true\n            }\n        },\n        scrollFixedForUnmailverified(){\n            if(!this.getEmailVerified&&this.$store.state.isLoading==false){\n                this.$store.commit('fixedScrollTrue')\n                this.$store.commit('showModalTrue')\n            }\n        }\n        // goQuiz(){\n        //     this.componentHandleDict.start = false\n        //     this.componentHandleDict.quiz = true            \n        // }\n    }\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.quiz-home-wrapper{\n    display: flex;\n    justify-content: center;\n    min-height: 80vh;\n    width: 100vw;\n    .quiz-home-container{\n        display: flex;\n        flex-direction: column;\n        .select-container{\n            width:100%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .select-loop{\n                width: 90%;\n                display: flex;\n                justify-content: center;\n                position: relative;\n                padding: 0.7rem;\n                max-height: 110px;\n                .unlock{\n                    position: absolute;\n                    background:rgba(0,0,0,0.7);\n                    width: 97%;\n                    height: 80px;\n                    display: flex;\n                    align-items: center;\n                    .lock-container{\n                        position: absolute;\n                        display: flex;\n                        flex-direction: column;\n                        justify-content: center;\n                        align-items: center;\n                        width: 100%;\n                        opacity: 0.8;\n                        color: rgb(182, 76, 196);\n                        i{\n                            font-size: 2.5rem;\n                        }\n                        div{\n                            font-size: 0.7rem;\n                        }\n                    }\n                }\n                .loop-wrapper:hover{\n                    background: $back-lite-white;\n                }\n                .loop-wrapper{\n                    display: flex;\n                    align-items: center;\n                    width: 100%;\n                    border: solid $base-color;\n                    border-radius: 0.5rem;\n                    margin-top:0.5rem;\n                    margin-bottom:0.5rem;\n                    background: $back-white;\n                    padding: 1rem;\n                    transition: .5s;\n                    .english-title{\n                        position: absolute;\n                        right: 0;\n                        top: 0;\n                        margin-right: 0.9rem;\n                        padding-right: 0.5rem;\n                        padding-left: 0.5rem;\n                        color: $back-white;\n                        font-weight: bold;\n                        border: solid $dark-blue;\n                        border-radius: 50vh;\n                        background:rgba(252, 75, 175, 0.961);               \n                    }\n                    .lock-english-title{\n                        background: $dark-blue;\n                        color: $lite-blue;\n                    }\n                    .font{\n                        font-size: 1.5rem;\n                        flex-basis: 10%;\n                    }\n                    .grade{\n                        flex-basis: 30%;\n                        font-size: 1.5rem;\n                        font-weight: bold;\n                    }\n                    .description{\n                        flex-basis: 60%;\n                        font-size: 0.9rem;\n                    }\n                }\n\n            }\n        }\n        .l-wrapper{\n            .l-container{\n                display: flex;\n                flex-direction: column;\n                // justify-content: center;\n                // nim-height: 75%;\n                min-height: 60%;\n                padding-bottom: 2rem;\n                .close-grade{\n                    // width: inherit;\n                    // left:auto;\n                    display: flex;\n                    justify-content: flex-end;\n                    .close{\n                        position: fixed;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        border: 0.2rem solid rgb(180, 179, 179);\n                        border-radius: 50vh;\n                        width: 1.5rem;\n                        height: 1.5rem;\n                        margin-top: 0.2rem;\n                        margin-right: 0.2rem;\n                        color: rgb(172, 172, 172);\n                    }\n                }\n                .is-image{\n                    width: 8rem;\n                    height: auto;\n                }\n                .animation-in-quiz-home{\n                    position: relative;\n                    .space-off{\n                        height: 0px;\n                    }\n                    // .animations-apace{\n                    //     height: 30px;\n                    // }\n                    \n                    .category-outer-loop{\n                        width: 100%;\n                        .category-inner-loop{\n                            // position: relative;\n                            width: 100%;\n                            display: flex;\n                            align-items: center;\n                            flex-direction: column;\n                            .category-container{\n                                // position: relative;\n                                display: flex;\n                                justify-content: center;\n                                width: 100%;\n                                // transition: 1s;\n                                .animation-move{\n                                    position: absolute;\n                                }\n                                .category-title-container{\n                                    height: 100%;\n                                    width: 100%;\n                                    display: flex;\n                                    position: relative;\n                                    flex-direction: column;\n                                    justify-content: center;\n                                    align-items: center;\n                                    width: 80%;\n                                    border: solid $base-color;\n                                    border-radius: 0.5rem;\n                                    margin-top: 0.5rem;\n                                    margin-bottom: 0.5rem;\n                                    min-height: 3rem;\n                                    background: $background-bottom-right;\n                                    .category-title{\n                                        color: white;\n                                        font-weight: bold;\n                                        transition: 0.5s;\n                                        .fa-caret-down{\n                                            position: absolute;\n                                            right:0;\n                                            margin-top: 0.3rem;\n                                            margin-right: 1rem;\n                                            transition: 0.5s;\n                                        }\n                                        .lotate{\n                                            transform:rotate(180deg);\n                                        }\n                                    }\n                                }\n                                .option-container{\n                                    position: absolute;\n                                    width: 80%;\n                                    border: solid grey;\n                                    border-top: 0.3rem solid grey;\n                                    border-bottom: 0.3rem solid grey;\n                                    top: 2rem;\n                                    margin-top: 0.1rem;\n                                    margin-bottom: 0.5rem;\n                                    // padding-top: 1rem;\n                                    min-height: 5rem;\n                                    background: $back-tr-white;\n                                    transition: .5s;\n                                    z-index: 1;\n                                    .close-container{\n                                        height: 1.7rem;\n                                        .close{\n                                            font-size: 0.8rem;\n                                            width: 1rem;\n                                            height: 1rem;\n                                            margin-top: 0.3rem;\n                                            margin-right: 0.3rem;\n                                            border: solid;\n                                        }\n                                    }\n                                    .option-loop{\n                                        width: 100%;\n                                        .each-option:hover{\n                                            background: $lite-gray;\n                                        }\n                                        .each-option{\n                                            display: flex;\n                                            position: relative;\n                                            justify-content: center;\n                                            margin-bottom: 0.5rem;\n                                            transition: .5s;\n                                            .option-font{\n                                                position: absolute;\n                                                // flex-basis: 35%;\n                                                display: flex;\n                                                margin-right: 6rem;\n                                                justify-content: flex-end;\n                                                .fa-apple-alt{\n                                                    color: $dull-red\n                                                }\n                                                .fa-carrot{\n                                                    color: rgb(255, 188, 63)\n                                                }\n                                                .fa-cat{\n                                                    color: brown;\n                                                }\n                                                .fa-car-side{\n                                                    color: rgb(68, 70, 220);\n                                                }\n                                                .fa-utensils{\n                                                    color: gray;\n                                                }\n                                                .fa-mug-hot{\n                                                    color: rgb(223, 221, 221);\n                                                }\n                                            }\n                                            .option-title{\n                                                // flex-basis: 65%;\n                                                display: flex;\n                                                // margin-left: 1rem;\n                                                p{\n                                                    color: $dark-blue;\n                                                    font-weight: bold;\n                                                    width: 100%;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n.for-all{\n    width: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module"}