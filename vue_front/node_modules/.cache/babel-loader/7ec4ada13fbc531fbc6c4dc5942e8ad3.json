{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode, vModelCheckbox as _vModelCheckbox, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-98f2f9fc\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  key: 0,\n  class: \"create-question-wrapper\"\n};\nvar _hoisted_2 = {\n  class: \"main-wrapper\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  class: \"create-question-container\"\n};\nvar _hoisted_4 = {\n  class: \"field\"\n};\nvar _hoisted_5 = {\n  class: \"input-box\",\n  ref: \"formName\"\n};\n\nvar _hoisted_6 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title-container\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title\"\n  }, \" quiz_grade \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_7 = {\n  class: \"option\"\n};\nvar _hoisted_8 = {\n  class: \"field\"\n};\nvar _hoisted_9 = {\n  class: \"input-box\",\n  ref: \"formMail\"\n};\n\nvar _hoisted_10 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title-container\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title\"\n  }, \" quiz_level \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_11 = {\n  class: \"text-box level\"\n};\nvar _hoisted_12 = {\n  class: \"field\"\n};\nvar _hoisted_13 = {\n  class: \"input-box\",\n  ref: \"formName\"\n};\n\nvar _hoisted_14 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title-container\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title\"\n  }, \" quiz_type \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_15 = {\n  class: \"option\"\n};\nvar _hoisted_16 = {\n  class: \"field\"\n};\nvar _hoisted_17 = {\n  class: \"input-box\",\n  ref: \"formName\"\n};\n\nvar _hoisted_18 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title-container\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title\"\n  }, \" quiz_field \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_19 = {\n  disabled: \"\"\n};\nvar _hoisted_20 = {\n  class: \"option\"\n};\nvar _hoisted_21 = {\n  class: \"texarea-field\"\n};\nvar _hoisted_22 = {\n  class: \"texarea-box\"\n};\n\nvar _hoisted_23 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title-container\"\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"each-title\"\n  }, \" quiz_label \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_24 = {\n  class: \"answer-wrapper\"\n};\nvar _hoisted_25 = {\n  class: \"answer-title-container\"\n};\n\nvar _hoisted_26 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"answer-title\"\n  }, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Answer\")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_27 = {\n  class: \"num\"\n};\nvar _hoisted_28 = [\"onUpdate:modelValue\"];\nvar _hoisted_29 = {\n  key: 0,\n  class: \"checkbox-container\"\n};\n\nvar _hoisted_30 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"true?\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_31 = [\"onUpdate:modelValue\"];\nvar _hoisted_32 = {\n  key: 1,\n  class: \"correct-order-container\"\n};\nvar _hoisted_33 = {\n  class: \"correct-order\"\n};\n\nvar _hoisted_34 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"order?\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_35 = [\"max\", \"onUpdate:modelValue\"];\nvar _hoisted_36 = {\n  class: \"po\"\n};\nvar _hoisted_37 = {\n  class: \"notification-text\"\n};\nvar _hoisted_38 = {\n  class: \"fbottun\",\n  ref: \"bform\",\n  id: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $options.questionTypeId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_ctx.$store.state.isLoading == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers(function () {\n      return $options.submitForm && $options.submitForm.apply($options, arguments);\n    }, [\"prevent\"])),\n    class: \"field-wrapper\"\n  }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"select\", {\n    required: \"\",\n    class: \"text-box\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.tempQuiz = $event;\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.quizNameId, function (id, idindex) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: idindex\n    }, [_createElementVNode(\"p\", _hoisted_7, _toDisplayString(id.name), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.tempQuiz]])], 512\n  /* NEED_PATCH */\n  )]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    required: \"\",\n    type: \"number\",\n    min: \"1\",\n    max: \"10\",\n    step: \"1\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.formQuestionData.level = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.formQuestionData.level]])])], 512\n  /* NEED_PATCH */\n  )]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _withDirectives(_createElementVNode(\"select\", {\n    required: \"\",\n    class: \"text-box\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.formQuestionData.question_type = $event;\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.questionTypeId, function (id, idindex) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: idindex\n    }, [_createElementVNode(\"p\", _hoisted_15, _toDisplayString(id.name), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.formQuestionData.question_type]])], 512\n  /* NEED_PATCH */\n  )]), _createCommentVNode(\" <div class=\\\"additional-field-wrapper\\\">\\n                        <div class=\\\"additional-field\\\">\\n                            <div class=\\\"input-box\\\">\\n                                <div class='each-title-container'>\\n                                    <div class=\\\"each-title\\\">\\n                                        quiz_field\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"text-box\\\">\\n                                    <input required input type=\\\"number\\\" value=\\\"1\\\" min=\\\"1\\\" max=\\\"10\\\" step=\\\"1\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-box\\\" ref='formName'>\\n                                <div class='each-title-container'>\\n                                    <div class=\\\"each-title\\\">\\n                                        quiz_field\\n                                    </div>\\n                                </div>\\n                                <select required class=\\\"text-box\\\" >\\n                                    <option\\n                                        v-for=\\\"(id,idindex) in quizNameId\\\" \\n                                        v-bind:key=\\\"idindex\\\">\\n                                        <p class=\\\"option\\\">{{ id.name }}</p>\\n                                    </option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div> \"), _createTextVNode(_toDisplayString($data.formQuestionData) + \" \", 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _withDirectives(_createElementVNode(\"select\", {\n    required: \"\",\n    class: \"text-box\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.formQuestionData.field = $event;\n    })\n  }, [_createElementVNode(\"option\", _hoisted_19, _toDisplayString($data.tempField), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.quizFieldList, function (id, idindex) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: idindex\n    }, [_createElementVNode(\"p\", _hoisted_20, _toDisplayString(id), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.formQuestionData.field]])], 512\n  /* NEED_PATCH */\n  )]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_hoisted_23, _withDirectives(_createElementVNode(\"textarea\", {\n    required: \"\",\n    class: \"text-box\",\n    onFocus: _cache[4] || (_cache[4] = function () {\n      return _ctx.onFocus && _ctx.onFocus.apply(_ctx, arguments);\n    }),\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n      return $data.formQuestionData.label = $event;\n    })\n  }, \"\\n                            \", 544\n  /* HYDRATE_EVENTS, NEED_PATCH */\n  ), [[_vModelText, $data.formQuestionData.label]])])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"i\", {\n    onClick: _cache[6] || (_cache[6] = function ($event) {\n      return $options.subtractAnswer();\n    }),\n    class: \"fas fa-minus\"\n  }), _hoisted_26, _createElementVNode(\"i\", {\n    onClick: _cache[7] || (_cache[7] = function ($event) {\n      return $options.addAnswer();\n    }),\n    class: \"fas fa-plus\"\n  })]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.handleAnswerLength, function (num) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"answer-container\",\n      key: num\n    }, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"p\", null, _toDisplayString(num), 1\n    /* TEXT */\n    )]), _withDirectives(_createElementVNode(\"input\", {\n      required: \"\",\n      class: \"answer-label\",\n      type: \"text\",\n      placeholder: \"答え\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return $data.formAnswerDataList[num - 1].label = $event;\n      }\n    }, null, 8\n    /* PROPS */\n    , _hoisted_28), [[_vModelText, $data.formAnswerDataList[num - 1].label]]), $data.formQuestionData.question_type != '並び替え' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_hoisted_30, _withDirectives(_createElementVNode(\"input\", {\n      class: \"checkbox\",\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return $data.formAnswerDataList[num - 1].is_correct = $event;\n      }\n    }, null, 8\n    /* PROPS */\n    , _hoisted_31), [[_vModelCheckbox, $data.formAnswerDataList[num - 1].is_correct]])])) : _createCommentVNode(\"v-if\", true), $data.formQuestionData.question_type == '並び替え' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_hoisted_34, _withDirectives(_createElementVNode(\"input\", {\n      required: \"\",\n      input: \"\",\n      type: \"number\",\n      min: \"1\",\n      max: $data.handleAnswerLength,\n      step: \"1\",\n      \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n        return $data.formAnswerDataList[num - 1].answer_id = $event;\n      }\n    }, null, 8\n    /* PROPS */\n    , _hoisted_35), [[_vModelText, $data.formAnswerDataList[num - 1].answer_id]])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" unko{{ formAnswerDataList[num-1] }} \")]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createCommentVNode(\" <div v-if='mailError||nameError||mailInUseError' class='error-form'>\\n                        <i class=\\\"fas fa-exclamation-triangle\\\"></i>\\n                        <div v-if='mailError'>{{ mailError}}</div>\\n                        <div v-if='nameError'>{{ nameError }}</div>\\n                        <div v-if='mailInUseError'>{{ mailInUseError }}</div>\\n                    </div> \"), _createElementVNode(\"p\", _hoisted_36, _toDisplayString($data.formAnswerDataList), 1\n  /* TEXT */\n  ), $data.errorOccurred ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass({\n      'notification-fixed-red': $data.errorOccurred\n    })\n  }, [_createElementVNode(\"div\", _hoisted_37, _toDisplayString($data.errorMessage), 1\n  /* TEXT */\n  )], 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", _hoisted_38, \"作成する\", 512\n  /* NEED_PATCH */\n  )])], 32\n  /* HYDRATE_EVENTS */\n  )])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":"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","names":["class","ref","_createElementVNode","disabled","id","$options","_createElementBlock","_ctx","state","isLoading","onSubmit","_hoisted_6","required","$data","$event","_Fragment","_renderList","idindex","key","_toDisplayString","name","_hoisted_10","type","min","max","step","level","_hoisted_14","question_type","_createCommentVNode","_hoisted_18","field","_hoisted_23","onFocus","label","onClick","_hoisted_26","num","placeholder","_hoisted_30","is_correct","_hoisted_34","input","answer_id"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/CreateQuizQuestion.vue"],"sourcesContent":["<template>\n    <div v-if=\"questionTypeId\" class=\"create-question-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-container\" v-if=\"$store.state.isLoading==false\">\n                <form @submit.prevent='submitForm' class=\"field-wrapper\">\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_grade\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model='tempQuiz'>\n                                <option\n                                    v-for=\"(id,idindex) in quizNameId\" \n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formMail'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_level\n                                </div>\n                            </div>\n                            <div class=\"text-box level\">\n                                <input required type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model=\"formQuestionData.level\">\n                            </div>\n                        </div>         \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_type\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.question_type\">\n                                <option\n                                    v-for=\"(id,idindex) in questionTypeId\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <!-- <div class=\"additional-field-wrapper\">\n                        <div class=\"additional-field\">\n                            <div class=\"input-box\">\n                                <div class='each-title-container'>\n                                    <div class=\"each-title\">\n                                        quiz_field\n                                    </div>\n                                </div>\n                                <div class=\"text-box\">\n                                    <input required input type=\"number\" value=\"1\" min=\"1\" max=\"10\" step=\"1\">\n                                </div>\n                            </div>\n                            <div class=\"input-box\" ref='formName'>\n                                <div class='each-title-container'>\n                                    <div class=\"each-title\">\n                                        quiz_field\n                                    </div>\n                                </div>\n                                <select required class=\"text-box\" >\n                                    <option\n                                        v-for=\"(id,idindex) in quizNameId\" \n                                        v-bind:key=\"idindex\">\n                                        <p class=\"option\">{{ id.name }}</p>\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div> -->\n                    {{ formQuestionData}}\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_field\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.field\">\n                                <option disabled>{{ tempField }}</option>\n                                <option\n                                    v-for=\"(id,idindex) in quizFieldList\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"texarea-field\">\n                        <div class=\"texarea-box\">\n                            <div class=\"each-title-container\">\n                                <div class=\"each-title\">\n                                    quiz_label\n                                </div>\n                            </div>\n                            <textarea required class=\"text-box\" v-on:focus=\"onFocus\" v-model='formQuestionData.label'>\n                            </textarea>\n                        </div>       \n                    </div>\n                    <div class=\"answer-wrapper\" >\n                        <div class=\"answer-title-container\">\n                            <i @click=\"subtractAnswer()\" class=\"fas fa-minus\"></i>\n                            <div class=\"answer-title\">\n                                <p>Answer</p>\n                            </div>\n                            <i @click=\"addAnswer()\" class=\"fas fa-plus\"></i>\n                        </div>\n                        <div class=\"answer-container\"\n                            v-for=\"(num) of handleAnswerLength\" \n                                v-bind:key=\"num\">\n                            <div class=\"num\">\n                                <p>{{ num }}</p>\n                            </div>\n                            <input required class=\"answer-label\" type=\"text\" placeholder=\"答え\" v-model='formAnswerDataList[num-1].label'>\n                            <div v-if=\"formQuestionData.question_type!='並び替え'\" class=\"checkbox-container\">\n                                <p>true?</p>\n                                <input class=\"checkbox\" type=\"checkbox\" v-model='formAnswerDataList[num-1].is_correct'>\n                            </div>\n                            <div v-if=\"formQuestionData.question_type=='並び替え'\" class=\"correct-order-container\">\n                                <div class=\"correct-order\">\n                                    <p>order?</p>\n                                    <input required input type=\"number\" min=\"1\" :max=\"handleAnswerLength\" step=\"1\" v-model='formAnswerDataList[num-1].answer_id'>\n                                </div>\n                            </div>\n                            <!-- unko{{ formAnswerDataList[num-1] }} -->\n                        </div>\n                    </div>\n                    <!-- <div v-if='mailError||nameError||mailInUseError' class='error-form'>\n                        <i class=\"fas fa-exclamation-triangle\"></i>\n                        <div v-if='mailError'>{{ mailError}}</div>\n                        <div v-if='nameError'>{{ nameError }}</div>\n                        <div v-if='mailInUseError'>{{ mailInUseError }}</div>\n                    </div> -->\n                     <p class=\"po\">{{formAnswerDataList }}</p>\n                     <div v-if=\"errorOccurred\" :class=\"{'notification-fixed-red':errorOccurred}\">\n                        <div class=\"notification-text\">\n                           {{ errorMessage }}\n                        </div>\n                    </div>\n                    <div>\n                        <button class='fbottun' ref='bform' id=''>作成する</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nexport default {\n    components: {\n        \n    },\n    data(){\n        return{\n            showSideBar: true,\n            tempQuiz:'初級',\n            tempField:'フィールドを選択してください。',\n            // tempQuizType: '選択',\n            formQuestionData:{\n                quiz:'初級',\n                quiz_level:1,\n                question_type:'選択',\n                field:'フィールドを選択してください。',\n                label:'',\n                status:'',\n                max_select:'',\n                image:''\n            },\n            formAnswerDataList:[{\n                label:'',\n                is_correct:'',\n                answer_id:'',\n            },\n            {\n                label:'',\n                is_correct:'',\n                answer_id:'',\n            },\n            {\n                label:'',\n                is_correct:'',\n                answer_id:'',\n            },\n            {\n                label:'',\n                is_correct:'',\n                answer_id:'',\n            },\n            ],\n            formAnswerData:{\n                label:'',\n                is_correct:'',\n                answer_id:'',\n            },\n            // formDataError:{\n            //     noFieldError:{\n            //         error: false,\n            //         message: \"クイズフィールドを選んでください。\"\n            //     },\n            //     noSetAnswerIdError:{\n            //         error: false,\n            //         message: \"答えの順番を指定してください。\"\n            //     },\n            //     wrongNumOrderError:{\n            //         error: false,\n            //         message: \"答えの順番に間違いがあります。\"\n            //     },\n            //     notSelectOneError:{\n            //         error: false,\n            //         message: \"正解を一つ選んでください。\"\n            //     },\n            //     noMoreThanThreeError:{\n            //         error: false,\n            //         message: \"多答問題は答えを３つ以上指定してください。\"\n            //     },\n            //     moreThanTwoError:{\n            //         error: false,\n            //         message: \"多答問題は正解を２つ以上指定してください。\"\n            //     },\n            //     AllTrueError:{\n            //         error: false,\n            //         message: \"全ての答えが正解になっています。\"\n            //     },\n            formDataError:{\n                noFieldError: \"クイズフィールドを選んでください。\",\n                noSetAnswerIdError: \"答えの順番を指定してください。\",\n                wrongNumOrderError:\"答えの順番に間違いがあります。\",\n                notSelectOneError: \"正解を一つ選んでください。\",\n                noMoreThanThreeError: \"多答問題は答えを３つ以上指定してください。\",\n                moreThanTwoError:\"多答問題は正解を２つ以上指定してください。\",\n                AllTrueError:\"全ての答えが正解になっています。\"\n                },\n            errorOccurred: false,\n            errorMessage:'',\n            answerNum: 4,\n            handleAnswerLength: 4,\n        }\n    },\n    created(){\n        this.$store.dispatch('getQuestionTypeId')\n    },\n    beforeMount(){\n        // this.$store.dispatch('getQuestionTypeId')\n    },\n    mounted(){\n        console.log('mounted at create-question',this.quizNameId,this.fieldNameId)\n    },\n    watch:{\n        answerNum:function(v) {\n            console.log('v',v)\n            if (this.handleAnswerLength > v){\n                this.handleAnswerLength = v\n                this.formAnswerDataList.pop()   \n            } else {\n                const _ = require('lodash');\n                let copyObject = _.cloneDeep(this.formAnswerData)\n                this.formAnswerDataList.push(copyObject)\n                this.handleAnswerLength = v\n            }\n        },\n        tempQuiz:function(v) {\n            console.log('T',v)\n            this.formQuestionData.quiz = v\n            this.formQuestionData.field = this.tempField\n        },\n        // tempQuizType:function(v) {\n        //     this.formQuestionData.question_type = v\n        //     for(let i of this.formAnswerDataList) {\n        //         i.is_correct = ''\n        //     }\n        // }\n    },\n    computed:{\n        quizNameId() {\n            return this.$store.getters.quizNameId\n        },\n        fieldNameId() {\n            return this.$store.getters.fieldNameId\n        },\n        questionTypeId() {\n            return this.$store.getters.questionTypeId\n        },\n        quizFieldList() {\n            let list = [];\n            for (let i of this.fieldNameId) {\n                if (this.convertQuizGradeToId(this.tempQuiz) == i.grade) {\n                    list.push(i.name)\n                }\n            }\n            return list\n        },\n    },\n    // mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n    methods:{\n        // ...mapActions(['getQuestionTypeId']),\n        handleShowSideBar(){\n            console.log(this.showSideBar)\n            this.showSideBar = !this.showSideBar \n            console.log(this.showSideBar)\n        },\n        addAnswer(){\n            this.answerNum += 1\n        },\n        subtractAnswer(){\n            if(this.answerNum > 1){\n                this.answerNum -= 1\n            }\n        },\n        async submitForm(){\n            console.log('start add')\n            this.setAllFormData()\n            // await axios({\n            //     method: 'post',\n            //     url: '/api/questions-create/',\n            //     data: {\n            //         title: this.$store.state.board.title,\n            //         description: this.$store.state.board.description,\n            //         user: this.$store.state.signup.user.uid,\n            //         slug: this.uuid,\n            //         liked_num:{},\n            //         tag: this.getTagId()\n            //     },\n                \n            // })\n        },\n        setAllFormData(){\n            // need to think about status part regarding of field\n            if (this.formQuestionData.field == this.tempField) {\n                this.errorMessage = this.formDataError.noFieldError\n                this.setTimeForNotification()\n                return \n            }\n            if(this.formQuestionData.question_type == \"並び替え\") {\n                this.formAnswerDataList.forEach((elem, index) => {\n                    this.formAnswerDataList[index].is_correct = ''\n                })\n                let answerIdList = []\n                this.formAnswerDataList.forEach((elem, index) => {\n                    answerIdList.push(elem.answer_id)\n                    if(!this.formAnswerDataList[index].answer_id) {\n                        this.errorMessage = this.formDataError.noSetAnswerIdError\n                        this.setTimeForNotification()\n                        return \n                    } \n                })\n                console.log('alist',answerIdList)\n                const answerIdListSet = [... new Set(answerIdList)];\n                console.log('slist',answerIdListSet )\n                if(answerIdListSet.length == answerIdList.length){\n                    console.log('GOT')\n                } else {\n                    this.errorMessage = this.formDataError.wrongNumOrderError\n                    this.setTimeForNotification()\n                    return \n                }\n            } else {\n                let counter = 0\n                for(let i of this.formAnswerDataList){\n                    if(i.is_correct) {\n                        counter += 1\n                    }\n                }\n                if(this.formQuestionData.question_type == \"選択\") {\n                    if(counter !=1) {\n                        this.errorMessage = this.formDataError.notSelectOneError\n                        this.setTimeForNotification()\n                        return \n                    } else {\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = ''\n                            }\n                        })\n                            \n                        console.log('GOs')\n                    }\n                }\n                else if(this.formQuestionData.question_type == \"多答\") {\n                    if(this.formAnswerDataList.length < 3) {\n                        this.errorMessage = this.formDataError.noMoreThanThreeError\n                        this.setTimeForNotification()\n                        return\n                    } else if(counter == 1) {\n                        this.errorMessage = this.formDataError.moreThanTwoError\n                        this.setTimeForNotification()\n                        return\n                    } else if(this.formAnswerDataList.length == counter) {\n                        this.errorMessage = this.formDataError.AllTrueError\n                        this.setTimeForNotification()\n                        return\n                    } else {\n                        this.formQuestionData.max_select = counter\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = ''\n                            }\n                        })\n                        console.log('GOt')\n                    }\n                }\n            }\n            this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type)\n            this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz)\n            this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field)\n            console.log(\"set\", this.formQuestionData)\n        },\n        setTimeForNotification(){\n            this.errorOccurred = true\n            setTimeout(this.errorOccurredFalse, 3000);\n        },\n        errorOccurredFalse(){\n            this.errorOccurred = false\n        },\n        convertQuizGradeToId(grade) {\n            for (let i of this.quizNameId){\n                if (i.name == grade){\n                    return i.id\n                }\n            }\n        },\n        convertQuizTypeToId(type) {\n            for (let i of this.questionTypeId){\n                if (i.name == type){\n                    return i.id\n                }\n            }\n        },\n        convertQuizFieldToId(field) {\n            for (let i of this.fieldNameId){\n                if (i.name == field){\n                    return i.id\n                }\n            }\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n\n.po{\n    color: white;\n}\n.create-question-wrapper{\n    width: 100%;\n    margin: 0;margin-top: 2rem;\n    display: flex;\n    justify-content: center;\n}\n.field-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    .field{\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        // border: solid red;\n        .input-box{\n            display: flex;\n            font-size: 1.2rem;\n            width: 80%;\n            justify-content: center;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            min-height: 40px;\n            background: $back-white;\n            // padding: 0.2rem 0.5rem;\n            overflow:hidden;\n            .each-title-container{\n                flex-basis: 30%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-right: solid $base-color;\n                background: $dark-blue;                \n                .each-title{\n                    color: $base-white;\n                    width: 100px;\n                    font-weight: bold;\n                    // font-size: 1rem;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .text-box{\n                flex-basis: 70%;\n                background: transparent;\n                border: none;\n                margin-right: 1rem;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: $back-white;\n                .option{\n                    font-weight: bold;\n                }\n            }\n            .text-box:focus{\n                outline: none;\n            }\n            .level{\n                display: flex;\n            }\n        }\n    }\n    .texarea-field{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        .texarea-box{\n            width: 80%;\n            .each-title-container{\n                display: flex;\n                justify-content: center;\n                .each-title{\n                    width: 40%;\n                    border-top: solid $base-color;\n                    border-right: solid $base-color;\n                    border-left: solid $base-color;\n                    background: $dark-blue;\n                    color: $base-white;\n                    font-weight: bold;\n                    border-radius: 0.5rem 0.5rem 0 0;\n                }\n            }\n             .text-box{\n                width: 100%;\n                background: $back-white;\n                height: auto;\n                min-height: 100px;\n                border: 0.1rem solid $base-color;\n                border-radius: 1vh;\n                padding: 1rem;\n                resize: none;\n                transition: 0.5s;\n            }\n            .text-box:focus{\n                outline: none;\n                border: solid $middle-blue;\n            }\n        }\n    }\n    .answer-wrapper{\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        width: 100%;\n        .answer-title-container{\n            display: flex;\n            align-items: center;\n            .fa-minus{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-minus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n            .answer-title{\n                border: solid $base-color;\n                border-radius: 0.5rem;\n                padding-right: 0.5rem;\n                padding-left: 0.5rem;\n                background: $dark-blue;\n                margin-bottom: 0.2rem;\n                color: $base-white;\n                font-weight: bold;\n            }\n            .fa-plus{\n                margin-left: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-plus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n        }\n        .answer-container{\n            display: flex;\n            align-items: center;\n            // justify-content: center;\n            width: 80%;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            background: $back-white;\n            margin-bottom: 0.4rem;\n            .num{\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                width: 2rem;\n                height: 2rem;\n                background: $dark-blue;\n                border-radius: 50vh;\n                border: solid $base-color;\n                color: $base-white;\n                font-weight: bold;\n                margin: 0.2rem 0.5rem;\n            }\n            .answer-label{\n                width: 50%;\n                height: 2rem;\n                padding: 0 0.5rem;\n            }\n            .checkbox-container{\n                margin-left: 1rem;\n                .checkbox{\n                }\n            }\n            .correct-order-container{\n                margin-left: 0.5rem;\n            }\n        }\n    }\n    // .additional-field-wrapper{\n    //     width: 100%;\n    //     display: flex;\n    //     justify-content: center;\n    //     flex-direction: column;\n    //     align-items: center;\n    //     .additional-field{\n    //         display: flex;\n    //         flex-direction: column;\n    //         align-items: flex-end;\n    //         width: 80%;\n    //         .input-box{\n    //             display: flex;\n    //             font-size: 1.2rem;\n    //             width: 80%;\n    //             justify-content: center;\n    //             border: solid $base-color;\n    //             border-radius: 0.5rem;\n    //             min-height: 20px;\n    //             background: $back-white;\n    //             // padding: 0.2rem 0.5rem;\n    //             overflow:hidden;\n    //             .each-title-container{\n    //                 flex-basis: 30%;\n    //                 display: flex;\n    //                 align-items: center;\n    //                 justify-content: center;\n    //                 border-right: solid $base-color;\n    //                 background: $dark-blue;                \n    //                 .each-title{\n    //                     color: $base-white;\n    //                     width: 100px;\n    //                     font-weight: bold;\n    //                     margin: 0.2rem 0.5rem;\n    //                 }\n    //             }\n    //             .text-box{\n    //                 flex-basis: 70%;\n    //                 background: transparent;\n    //                 border: none;\n    //                 margin-right: 1rem;\n    //                 margin-left: 1rem;\n    //                 font-size: 1rem;\n    //                 background: $back-white;\n    //                 .option{\n    //                     font-weight: bold;\n    //                 }\n    //             }\n    //             .text-box:focus{\n    //                 outline: none;\n    //             }\n    //             .level{\n    //                 display: flex;\n    //             }\n    //         }\n    //     }\n    // }\n}\n</style>"]},"metadata":{},"sourceType":"module"}