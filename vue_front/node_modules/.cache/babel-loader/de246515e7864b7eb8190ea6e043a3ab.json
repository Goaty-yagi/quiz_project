{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue?vue&type=template&id=86beb2ec&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue","mtime":1644066999845},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtODZiZWIyZWMiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAidGh1bWJuYWlsLXdyYXBwZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICJ0aHVtYm5haWwiLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8zID0gewogIGtleTogMAp9Owp2YXIgX2hvaXN0ZWRfNCA9IFsic3JjIl07Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlQ29tbWVudFZOb2RlKCIgPGRpdj5cbiAgICAgICAgICAgICAgICA8aW1nIGlkPVwiaW1hZ2VcIiBzcmM9XCJAL2Fzc2V0cy9sb2dvLnBuZ1wiPlxuICAgICAgICAgICAgPC9kaXY+ICIpXSwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJmb3JtIiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImZpbGUiLAogICAgb25DaGFuZ2U6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZ2V0SW1hZ2UgJiYgJG9wdGlvbnMuZ2V0SW1hZ2UuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sIG51bGwsIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApLCAkZGF0YS5zZWxlY3RlZEZpbGUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8zLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgcmVmOiAiaW1hZ2UiLAogICAgc3JjOiAkZGF0YS5zZWxlY3RlZEZpbGUKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIF9ob2lzdGVkXzQpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmNoYW5jZWwgJiYgJG9wdGlvbnMuY2hhbmNlbC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSldKSwgX2hvaXN0ZWRfNV0pOwp9"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"names":[],"mappings":";;;;;;;AACS,EAAA,KAAK,EAAC;;;;sBACP,mBAAA,CAAgB,GAAhB,EAAgB,IAAhB,EAAG,WAAH,EAAY,CAAA;AAAA;AAAZ,G;;;;;;;;;sBAQA,mBAAA,CAIM,KAJN,EAIM,IAJN,EAIM,C,aAHF,mBAAA,CAAA,2FAAA,CAGE,CAJN,E;;AAAA,G;;;;uBATJ,mBAAA,CAcM,KAdN,EAAA,UAAA,EAcM,CAbF,UAaE,EAZF,mBAAA,CAMO,MANP,EAMO,IANP,EAMO,CALH,mBAAA,CAAsC,OAAtC,EAAsC;AAA/B,IAAA,IAAI,EAAC,MAA0B;AAAlB,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,QAAA,IAAA,QAAA,CAAA,QAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAY,GAAtC,E,IAAA,E;;AAAA,GAKG,EAJQ,KAAA,CAAA,Y,kBAAX,mBAAA,CAEM,KAFN,EAEM,UAFN,EAEM,CADF,mBAAA,CAAqC,KAArC,EAAqC;AAAhC,IAAA,GAAG,EAAC,OAA4B;AAAnB,IAAA,GAAG,EAAE,KAAA,CAAA;AAAc,GAArC,E,IAAA,E;;AAAA,I,UAAA,CACE,CAFN,C,qCAIG,EADF,mBAAA,CAAkC,QAAlC,EAAkC;AAAzB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,OAAA,IAAA,QAAA,CAAA,OAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAoB,GAAlC,CACE,CANP,CAYE,EALF,UAKE,CAdN,C","sourcesContent":["<template>\n    <div class='thumbnail-wrapper'>\n        <p>thumbnail</p>\n        <form>\n            <input type=\"file\" @change='getImage'>\n            <div v-if=\"selectedFile\">\n                <img ref='image' :src=\"selectedFile\">\n            </div>\n             <button @click='chancel'></button>\n        </form>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport Cropper from 'cropperjs';\nexport default {\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            cropper:{},\n            destination:{}\n        }\n    },\n    mounted(){\n        // this.cropper()\n        console.log(this.image)\n    },\n    methods:{\n        async getImage(event){\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            await console.log()\n            this.imageCropper()\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: false,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n        }\n\n        // cropper(){\n        //     this.image = this.getImage\n        //     new Cropper(this.image, {\n        //         aspectRatio: 16 / 9,\n        //         crop(event) {\n        //             console.log(event.detail.x);\n        //             console.log(event.detail.y);\n        //             console.log(event.detail.width);\n        //             console.log(event.detail.height);\n        //             console.log(event.detail.rotate);\n        //             console.log(event.detail.scaleX);\n        //             console.log(event.detail.scaleY);\n        //         },\n        //         });\n        // }\n    }\n}\n</script>\n\n<style scoped lang='scss'>\n// .thumbnail-wrapper{\n//     width: 100%;\n//     height: 100%;\n//     overflow:scroll;  \n// }\n/* Ensure the size of the image fit the container perfectly */\nimg {\n  display: block;\n\n  /* This rule is very important, please don't ignore this */\n  max-width: 100%;\n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n\n</style>"],"sourceRoot":""}]}