{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  components: {},\n  data: function data() {\n    return {\n      showSideBar: true,\n      formQuestionData: {\n        quiz: '初級',\n        quiz_level: 1,\n        question_type: '選択',\n        field: 'ひらがな',\n        label: '',\n        status: '',\n        max_select: '',\n        image: ''\n      },\n      formAnswerDataList: [{\n        label: '',\n        is_correct: '',\n        order: ''\n      }],\n      formAnswerData: {\n        label: '',\n        isCorrect: '',\n        answer_id: ''\n      },\n      answerNum: 1,\n      handleAnswerLength: 1\n    };\n  },\n  created: function created() {\n    this.$store.dispatch('getQuestionTypeId');\n  },\n  beforeMount: function beforeMount() {// this.$store.dispatch('getQuestionTypeId')\n  },\n  mounted: function mounted() {\n    console.log('mounted at create-question', this.formAnswerDataList);\n  },\n  watch: {\n    answerNum: function answerNum(v) {\n      console.log('v', v);\n\n      if (this.handleAnswerLength > v) {\n        this.handleAnswerLength = v;\n        this.formAnswerDataList.pop();\n      } else {\n        var _ = require('lodash');\n\n        var copyObject = _.cloneDeep(this.formAnswerData);\n\n        this.formAnswerDataList.push(copyObject);\n        this.handleAnswerLength = v;\n      }\n    }\n  },\n  computed: mapGetters(['quizNameId', 'fieldNameId', 'questionTypeId']),\n  methods: {\n    // ...mapActions(['getQuestionTypeId']),\n    handleShowSideBar: function handleShowSideBar() {\n      console.log(this.showSideBar);\n      this.showSideBar = !this.showSideBar;\n      console.log(this.showSideBar);\n    },\n    addAnswer: function addAnswer() {\n      this.answerNum += 1;\n    },\n    subtractAnswer: function subtractAnswer() {\n      if (this.answerNum > 1) {\n        this.answerNum -= 1;\n      }\n    },\n    submitForm: function submitForm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('start add');\n                _context.next = 3;\n                return axios({\n                  method: 'post',\n                  url: '/api/questions-create/',\n                  data: {\n                    title: _this.$store.state.board.title,\n                    description: _this.$store.state.board.description,\n                    user: _this.$store.state.signup.user.uid,\n                    slug: _this.uuid,\n                    liked_num: {},\n                    tag: _this.getTagId()\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    setAllFormData: function setAllFormData() {},\n    convertQuizGradeToId: function convertQuizGradeToId(grade) {\n      var _iterator = _createForOfIteratorHelper(this.quizNameId),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n\n          if (i.name == grade) {\n            return i.id;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    convertQuizTypeToId: function convertQuizTypeToId(type) {\n      var _iterator2 = _createForOfIteratorHelper(this.questionTypeId),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var i = _step2.value;\n\n          if (i.name == type) {\n            return i.id;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    convertQuizFieldToId: function convertQuizFieldToId(field) {\n      var _iterator3 = _createForOfIteratorHelper(this.fieldNameId),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var i = _step3.value;\n\n          if (i.name == field) {\n            return i.id;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","components","data","showSideBar","formQuestionData","quiz","quiz_level","question_type","field","label","status","max_select","image","formAnswerDataList","is_correct","order","formAnswerData","isCorrect","answer_id","answerNum","handleAnswerLength","created","$store","dispatch","beforeMount","mounted","console","log","watch","v","pop","_","require","copyObject","cloneDeep","push","computed","methods","handleShowSideBar","addAnswer","subtractAnswer","submitForm","axios","method","url","title","state","board","description","user","signup","uid","slug","uuid","liked_num","tag","getTagId","setAllFormData","convertQuizGradeToId","grade","quizNameId","i","name","id","convertQuizTypeToId","type","questionTypeId","convertQuizFieldToId","fieldNameId"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/CreateQuizQuestion.vue"],"sourcesContent":["<template>\n    <div v-if=\"questionTypeId\" class=\"create-question-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-container\" v-if=\"$store.state.isLoading==false\">\n                <form @submit.prevent='submitForm' class=\"field-wrapper\">\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_grade\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model='formQuestionData.quiz'>\n                                <option\n                                    v-for=\"(id,idindex) in quizNameId\" \n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formMail'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_level\n                                </div>\n                            </div>\n                            <div class=\"text-box level\">\n                                <input required type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model=\"formQuestionData.level\">\n                            </div>\n                        </div>         \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_type\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.question_type\">\n                                <option\n                                    v-for=\"(id,idindex) in questionTypeId\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <!-- <div class=\"additional-field-wrapper\">\n                        <div class=\"additional-field\">\n                            <div class=\"input-box\">\n                                <div class='each-title-container'>\n                                    <div class=\"each-title\">\n                                        quiz_field\n                                    </div>\n                                </div>\n                                <div class=\"text-box\">\n                                    <input required input type=\"number\" value=\"1\" min=\"1\" max=\"10\" step=\"1\">\n                                </div>\n                            </div>\n                            <div class=\"input-box\" ref='formName'>\n                                <div class='each-title-container'>\n                                    <div class=\"each-title\">\n                                        quiz_field\n                                    </div>\n                                </div>\n                                <select required class=\"text-box\" >\n                                    <option\n                                        v-for=\"(id,idindex) in quizNameId\" \n                                        v-bind:key=\"idindex\">\n                                        <p class=\"option\">{{ id.name }}</p>\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div> -->\n                    {{ formQuestionData}}\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_field\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.field\">\n                                <option\n                                    v-for=\"(id,idindex) in fieldNameId\" \n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"texarea-field\">\n                        <div class=\"texarea-box\">\n                            <div class=\"each-title-container\">\n                                <div class=\"each-title\">\n                                    quiz_label\n                                </div>\n                            </div>\n                            <textarea required class=\"text-box\" v-on:focus=\"onFocus\" v-model='formQuestionData.label'>\n                            </textarea>\n                        </div>       \n                    </div>\n                    <div class=\"answer-wrapper\" >\n                        <div class=\"answer-title-container\">\n                            <i @click=\"subtractAnswer()\" class=\"fas fa-minus\"></i>\n                            <div class=\"answer-title\">\n                                <p>Answer</p>\n                            </div>\n                            <i @click=\"addAnswer()\" class=\"fas fa-plus\"></i>\n                        </div>\n                        <div class=\"answer-container\"\n                            v-for=\"(num) of handleAnswerLength\" \n                                v-bind:key=\"num\">\n                            <div class=\"num\">\n                                <p>{{ num }}</p>\n                            </div>\n                            <input class=\"answer-label\" type=\"text\" placeholder=\"答え\" v-model='formAnswerDataList[num-1].label'>\n                            <div class=\"checkbox-container\">\n                                <p>true?</p>\n                                <input class=\"checkbox\" type=\"checkbox\" v-model='formAnswerDataList[num-1].is_correct'>\n                            </div>\n                            <div v-if=\"formQuestionData.questionType=='並び替え'\" class=\"correct-order-container\">\n                                <div class=\"correct-order\">\n                                    <p>order?</p>\n                                    <input required input type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model='formAnswerDataList[num-1].answer_id'>\n                                </div>\n                            </div>\n                            <!-- unko{{ formAnswerDataList[num-1] }} -->\n                        </div>\n                    </div>\n                    <!-- <div v-if='mailError||nameError||mailInUseError' class='error-form'>\n                        <i class=\"fas fa-exclamation-triangle\"></i>\n                        <div v-if='mailError'>{{ mailError}}</div>\n                        <div v-if='nameError'>{{ nameError }}</div>\n                        <div v-if='mailInUseError'>{{ mailInUseError }}</div>\n                    </div> -->\n                    <div>\n                        <button class='fbottun' ref='bform' id=''>作成する</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nexport default {\n    components: {\n        \n    },\n    data(){\n        return{\n            showSideBar: true,\n            formQuestionData:{\n                quiz:'初級',\n                quiz_level:1,\n                question_type:'選択',\n                field:'ひらがな',\n                label:'',\n                status:'',\n                max_select:'',\n                image:''\n            },\n            formAnswerDataList:[{\n                label:'',\n                is_correct:'',\n                order:'',\n            },],\n            formAnswerData:{\n                label:'',\n                isCorrect:'',\n                answer_id:'',\n            },\n            answerNum: 1,\n            handleAnswerLength: 1,\n        }\n    },\n    created(){\n        this.$store.dispatch('getQuestionTypeId')\n    },\n    beforeMount(){\n        // this.$store.dispatch('getQuestionTypeId')\n    },\n    mounted(){\n        console.log('mounted at create-question',this.formAnswerDataList)\n    },\n    watch:{\n        answerNum:function(v) {\n            console.log('v',v)\n            if (this.handleAnswerLength > v){\n                this.handleAnswerLength = v\n                this.formAnswerDataList.pop()   \n            } else {\n                const _ = require('lodash');\n                let copyObject = _.cloneDeep(this.formAnswerData)\n                this.formAnswerDataList.push(copyObject)\n                this.handleAnswerLength = v\n            }\n        }\n    },\n    computed: mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n    methods:{\n        // ...mapActions(['getQuestionTypeId']),\n        handleShowSideBar(){\n            console.log(this.showSideBar)\n            this.showSideBar = !this.showSideBar \n            console.log(this.showSideBar)\n        },\n        addAnswer(){\n            this.answerNum += 1\n        },\n        subtractAnswer(){\n            if(this.answerNum > 1){\n                this.answerNum -= 1\n            }\n        },\n        async submitForm(){\n            console.log('start add')\n            await axios({\n                method: 'post',\n                url: '/api/questions-create/',\n                data: {\n                    title: this.$store.state.board.title,\n                    description: this.$store.state.board.description,\n                    user: this.$store.state.signup.user.uid,\n                    slug: this.uuid,\n                    liked_num:{},\n                    tag: this.getTagId()\n                },\n                \n            })\n        },\n        setAllFormData(){\n\n        },\n        convertQuizGradeToId(grade) {\n            for (let i of this.quizNameId){\n                if (i.name == grade){\n                    return i.id\n                }\n            }\n        },\n        convertQuizTypeToId(type) {\n            for (let i of this.questionTypeId){\n                if (i.name == type){\n                    return i.id\n                }\n            }\n        },\n        convertQuizFieldToId(field) {\n            for (let i of this.fieldNameId){\n                if (i.name == field){\n                    return i.id\n                }\n            }\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n\n\n.create-question-wrapper{\n    width: 100%;\n    margin: 0;margin-top: 2rem;\n    display: flex;\n    justify-content: center;\n}\n.field-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    .field{\n        display: flex;\n        justify-content: center;\n        // border: solid red;\n        .input-box{\n            display: flex;\n            font-size: 1.2rem;\n            width: 80%;\n            justify-content: center;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            min-height: 40px;\n            background: $back-white;\n            // padding: 0.2rem 0.5rem;\n            overflow:hidden;\n            .each-title-container{\n                flex-basis: 30%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-right: solid $base-color;\n                background: $dark-blue;                \n                .each-title{\n                    color: $base-white;\n                    width: 100px;\n                    font-weight: bold;\n                    // font-size: 1rem;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .text-box{\n                flex-basis: 70%;\n                background: transparent;\n                border: none;\n                margin-right: 1rem;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: $back-white;\n                .option{\n                    font-weight: bold;\n                }\n            }\n            .text-box:focus{\n                outline: none;\n            }\n            .level{\n                display: flex;\n            }\n        }\n    }\n    .texarea-field{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        .texarea-box{\n            width: 80%;\n            .each-title-container{\n                display: flex;\n                justify-content: center;\n                .each-title{\n                    width: 40%;\n                    border-top: solid $base-color;\n                    border-right: solid $base-color;\n                    border-left: solid $base-color;\n                    background: $dark-blue;\n                    color: $base-white;\n                    font-weight: bold;\n                    border-radius: 0.5rem 0.5rem 0 0;\n                }\n            }\n             .text-box{\n                width: 100%;\n                background: $back-white;\n                height: auto;\n                min-height: 100px;\n                border: 0.1rem solid $base-color;\n                border-radius: 1vh;\n                padding: 1rem;\n                resize: none;\n                transition: 0.5s;\n            }\n            .text-box:focus{\n                outline: none;\n                border: solid $middle-blue;\n            }\n        }\n    }\n    .answer-wrapper{\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        .answer-title-container{\n            display: flex;\n            align-items: center;\n            .fa-minus{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-minus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n            .answer-title{\n                border: solid $base-color;\n                border-radius: 0.5rem;\n                padding-right: 0.5rem;\n                padding-left: 0.5rem;\n                background: $dark-blue;\n                margin-bottom: 0.2rem;\n                color: $base-white;\n                font-weight: bold;\n            }\n            .fa-plus{\n                margin-left: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-plus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n        }\n        .answer-container{\n            display: flex;\n            align-items: center;\n            // justify-content: center;\n            width: 80%;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            background: $back-white;\n            margin-bottom: 0.4rem;\n            .num{\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                width: 2rem;\n                height: 2rem;\n                background: $dark-blue;\n                border-radius: 50vh;\n                border: solid $base-color;\n                color: $base-white;\n                font-weight: bold;\n                margin: 0.2rem 0.5rem;\n            }\n            .answer-label{\n                width: 50%;\n                height: 2rem;\n                padding: 0 0.5rem;\n            }\n            .checkbox-container{\n                margin-left: 1rem;\n                .checkbox{\n                }\n            }\n            .correct-order-container{\n                margin-left: 0.5rem;\n            }\n        }\n    }\n    // .additional-field-wrapper{\n    //     width: 100%;\n    //     display: flex;\n    //     justify-content: center;\n    //     flex-direction: column;\n    //     align-items: center;\n    //     .additional-field{\n    //         display: flex;\n    //         flex-direction: column;\n    //         align-items: flex-end;\n    //         width: 80%;\n    //         .input-box{\n    //             display: flex;\n    //             font-size: 1.2rem;\n    //             width: 80%;\n    //             justify-content: center;\n    //             border: solid $base-color;\n    //             border-radius: 0.5rem;\n    //             min-height: 20px;\n    //             background: $back-white;\n    //             // padding: 0.2rem 0.5rem;\n    //             overflow:hidden;\n    //             .each-title-container{\n    //                 flex-basis: 30%;\n    //                 display: flex;\n    //                 align-items: center;\n    //                 justify-content: center;\n    //                 border-right: solid $base-color;\n    //                 background: $dark-blue;                \n    //                 .each-title{\n    //                     color: $base-white;\n    //                     width: 100px;\n    //                     font-weight: bold;\n    //                     margin: 0.2rem 0.5rem;\n    //                 }\n    //             }\n    //             .text-box{\n    //                 flex-basis: 70%;\n    //                 background: transparent;\n    //                 border: none;\n    //                 margin-right: 1rem;\n    //                 margin-left: 1rem;\n    //                 font-size: 1rem;\n    //                 background: $back-white;\n    //                 .option{\n    //                     font-weight: bold;\n    //                 }\n    //             }\n    //             .text-box:focus{\n    //                 outline: none;\n    //             }\n    //             .level{\n    //                 display: flex;\n    //             }\n    //         }\n    //     }\n    // }\n}\n</style>"]},"metadata":{},"sourceType":"module"}