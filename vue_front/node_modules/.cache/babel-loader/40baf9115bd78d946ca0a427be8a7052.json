{"ast":null,"code":"import _toConsumableArray from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  components: {},\n  data: function data() {\n    return {\n      showSideBar: true,\n      tempQuiz: '初級',\n      tempField: 'フィールドを選択してください。',\n      // tempQuizType: '選択',\n      formQuestionData: {\n        quiz: '初級',\n        quiz_level: 1,\n        question_type: '選択',\n        field: 'フィールドを選択してください。',\n        label: '',\n        status: '',\n        max_select: '',\n        image: ''\n      },\n      formAnswerDataList: [{\n        label: '',\n        is_correct: false,\n        answer_id: 0\n      }, {\n        label: '',\n        is_correct: false,\n        answer_id: 0\n      }, {\n        label: '',\n        is_correct: false,\n        answer_id: 0\n      }, {\n        label: '',\n        is_correct: false,\n        answer_id: 0\n      }],\n      formAnswerData: {\n        label: '',\n        is_correct: false,\n        answer_id: 0\n      },\n      formDataError: {\n        noFieldError: \"クイズフィールドを選んでください。\",\n        noSetAnswerIdError: \"答えの順番を指定してください。\",\n        wrongNumOrderError: \"答えの順番に間違いがあります。\",\n        notSelectOneError: \"正解を一つ選んでください。\",\n        noMoreThanThreeError: \"多答問題は答えを３つ以上指定してください。\",\n        moreThanTwoError: \"多答問題は正解を２つ以上指定してください。\",\n        AllTrueError: \"全ての答えが正解になっています。\"\n      },\n      errorOccurred: false,\n      errorMessage: '',\n      answerNum: 4,\n      handleAnswerLength: 4,\n      formDataReady: false\n    };\n  },\n  created: function created() {\n    this.$store.dispatch('getQuestionTypeId');\n  },\n  beforeMount: function beforeMount() {// this.$store.dispatch('getQuestionTypeId')\n  },\n  mounted: function mounted() {\n    console.log('mounted at create-question', this.quizNameId, this.fieldNameId);\n  },\n  watch: {\n    answerNum: function answerNum(v) {\n      console.log('v', v);\n\n      if (this.handleAnswerLength > v) {\n        this.handleAnswerLength = v;\n        this.formAnswerDataList.pop();\n      } else {\n        var _ = require('lodash');\n\n        var copyObject = _.cloneDeep(this.formAnswerData);\n\n        this.formAnswerDataList.push(copyObject);\n        this.handleAnswerLength = v;\n      }\n    },\n    tempQuiz: function tempQuiz(v) {\n      console.log('T', v);\n      this.formQuestionData.quiz = v;\n      this.formQuestionData.field = this.tempField;\n    } // tempQuizType:function(v) {\n    //     this.formQuestionData.question_type = v\n    //     for(let i of this.formAnswerDataList) {\n    //         i.is_correct = ''\n    //     }\n    // }\n\n  },\n  computed: {\n    quizNameId: function quizNameId() {\n      return this.$store.getters.quizNameId;\n    },\n    fieldNameId: function fieldNameId() {\n      return this.$store.getters.fieldNameId;\n    },\n    questionTypeId: function questionTypeId() {\n      return this.$store.getters.questionTypeId;\n    },\n    quizFieldList: function quizFieldList() {\n      var list = [];\n\n      var _iterator = _createForOfIteratorHelper(this.fieldNameId),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n\n          if (this.convertQuizGradeToId(this.tempQuiz) == i.grade) {\n            list.push(i.name);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return list;\n    }\n  },\n  // mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n  methods: {\n    // ...mapActions(['getQuestionTypeId']),\n    handleShowSideBar: function handleShowSideBar() {\n      console.log(this.showSideBar);\n      this.showSideBar = !this.showSideBar;\n      console.log(this.showSideBar);\n    },\n    addAnswer: function addAnswer() {\n      this.answerNum += 1;\n    },\n    subtractAnswer: function subtractAnswer() {\n      if (this.answerNum > 1) {\n        this.answerNum -= 1;\n      }\n    },\n    submitForm: function submitForm() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setAllFormData();\n\n                _context.prev = 1;\n\n                if (!_this.formDataReady) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return axios({\n                  method: 'post',\n                  url: '/api/questions-create/',\n                  data: {\n                    'quiz': _this.formQuestionData.quiz,\n                    'label': _this.formQuestionData.label,\n                    'field': [_this.formQuestionData.field],\n                    'question_type': _this.formQuestionData.question_type,\n                    'quiz_level': _this.formQuestionData.level,\n                    'answer': _this.formAnswerDataList\n                  }\n                });\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('error', _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }))();\n    },\n    setAllFormData: function setAllFormData() {\n      var _this2 = this;\n\n      // need to think about status part regarding of field\n      if (this.formQuestionData.field == this.tempField) {\n        this.errorMessage = this.formDataError.noFieldError;\n        this.setTimeForNotification();\n        return;\n      }\n\n      if (this.formQuestionData.question_type == \"並び替え\") {\n        this.formAnswerDataList.forEach(function (elem, index) {\n          _this2.formAnswerDataList[index].is_correct = false;\n        });\n        var answerIdList = [];\n        this.formAnswerDataList.forEach(function (elem, index) {\n          answerIdList.push(elem.answer_id);\n\n          if (!_this2.formAnswerDataList[index].answer_id) {\n            _this2.errorMessage = _this2.formDataError.noSetAnswerIdError;\n\n            _this2.setTimeForNotification();\n\n            return;\n          }\n        });\n\n        var answerIdListSet = _toConsumableArray(new Set(answerIdList));\n\n        if (answerIdListSet.length == answerIdList.length) {\n          this.formDataReady = true;\n        } else {\n          this.errorMessage = this.formDataError.wrongNumOrderError;\n          this.setTimeForNotification();\n          return;\n        }\n      } else {\n        var counter = 0;\n\n        var _iterator2 = _createForOfIteratorHelper(this.formAnswerDataList),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var i = _step2.value;\n\n            if (i.is_correct) {\n              counter += 1;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        if (this.formQuestionData.question_type == \"選択\") {\n          if (counter != 1) {\n            this.errorMessage = this.formDataError.notSelectOneError;\n            this.setTimeForNotification();\n            return;\n          } else {\n            this.formAnswerDataList.forEach(function (elem, index) {\n              if (elem.answer_id) {\n                _this2.formAnswerDataList[index].answer_id = 0;\n              }\n            });\n            this.formDataReady = true;\n          }\n        } else if (this.formQuestionData.question_type == \"多答\") {\n          if (this.formAnswerDataList.length < 3) {\n            this.errorMessage = this.formDataError.noMoreThanThreeError;\n            this.setTimeForNotification();\n            return;\n          } else if (counter == 1) {\n            this.errorMessage = this.formDataError.moreThanTwoError;\n            this.setTimeForNotification();\n            return;\n          } else if (this.formAnswerDataList.length == counter) {\n            this.errorMessage = this.formDataError.AllTrueError;\n            this.setTimeForNotification();\n            return;\n          } else {\n            this.formQuestionData.max_select = counter;\n            this.formAnswerDataList.forEach(function (elem, index) {\n              if (elem.answer_id) {\n                _this2.formAnswerDataList[index].answer_id = 0;\n              }\n            });\n            this.formDataReady = true;\n          }\n        }\n      }\n\n      this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type);\n      this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz);\n      this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field);\n      console.log(\"set\", this.formQuestionData);\n    },\n    setTimeForNotification: function setTimeForNotification() {\n      this.errorOccurred = true;\n      setTimeout(this.errorOccurredFalse, 3000);\n    },\n    errorOccurredFalse: function errorOccurredFalse() {\n      this.errorOccurred = false;\n    },\n    convertQuizGradeToId: function convertQuizGradeToId(grade) {\n      var _iterator3 = _createForOfIteratorHelper(this.quizNameId),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var i = _step3.value;\n\n          if (i.name == grade) {\n            return i.id;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    },\n    convertQuizTypeToId: function convertQuizTypeToId(type) {\n      var _iterator4 = _createForOfIteratorHelper(this.questionTypeId),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var i = _step4.value;\n\n          if (i.name == type) {\n            return i.id;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    },\n    convertQuizFieldToId: function convertQuizFieldToId(field) {\n      var _iterator5 = _createForOfIteratorHelper(this.fieldNameId),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var i = _step5.value;\n\n          if (i.name == field) {\n            return i.id;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","axios","components","data","showSideBar","tempQuiz","tempField","formQuestionData","quiz","quiz_level","question_type","field","label","status","max_select","image","formAnswerDataList","is_correct","answer_id","formAnswerData","formDataError","noFieldError","noSetAnswerIdError","wrongNumOrderError","notSelectOneError","noMoreThanThreeError","moreThanTwoError","AllTrueError","errorOccurred","errorMessage","answerNum","handleAnswerLength","formDataReady","created","$store","dispatch","beforeMount","mounted","console","log","quizNameId","fieldNameId","watch","v","pop","_","require","copyObject","cloneDeep","push","computed","getters","questionTypeId","quizFieldList","list","i","convertQuizGradeToId","grade","name","methods","handleShowSideBar","addAnswer","subtractAnswer","submitForm","setAllFormData","method","url","level","setTimeForNotification","forEach","elem","index","answerIdList","answerIdListSet","Set","length","counter","convertQuizTypeToId","convertQuizFieldToId","setTimeout","errorOccurredFalse","id","type"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/CreateQuizQuestion.vue"],"sourcesContent":["<template>\n    <div v-if=\"questionTypeId\" class=\"create-question-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-container\" v-if=\"$store.state.isLoading==false\">\n                <form @submit.prevent='submitForm' class=\"field-wrapper\">\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_grade\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model='tempQuiz'>\n                                <option\n                                    v-for=\"(id,idindex) in quizNameId\" \n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formMail'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_level\n                                </div>\n                            </div>\n                            <div class=\"text-box level\">\n                                <input required type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model=\"formQuestionData.level\">\n                            </div>\n                        </div>         \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_type\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.question_type\">\n                                <option\n                                    v-for=\"(id,idindex) in questionTypeId\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <!-- {{ formQuestionData}} -->\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_field\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.field\">\n                                <option disabled>{{ tempField }}</option>\n                                <option\n                                    v-for=\"(id,idindex) in quizFieldList\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"texarea-field\">\n                        <div class=\"texarea-box\">\n                            <div class=\"each-title-container\">\n                                <div class=\"each-title\">\n                                    quiz_label\n                                </div>\n                            </div>\n                            <textarea required class=\"text-box\" v-on:focus=\"onFocus\" v-model='formQuestionData.label'>\n                            </textarea>\n                        </div>       \n                    </div>\n                    <div class=\"answer-wrapper\" >\n                        <div class=\"answer-title-container\">\n                            <i @click=\"subtractAnswer()\" class=\"fas fa-minus\"></i>\n                            <div class=\"answer-title\">\n                                <p>Answer</p>\n                            </div>\n                            <i @click=\"addAnswer()\" class=\"fas fa-plus\"></i>\n                        </div>\n                        <div class=\"answer-container\"\n                            v-for=\"(num) of handleAnswerLength\" \n                                v-bind:key=\"num\">\n                            <div class=\"num\">\n                                <p>{{ num }}</p>\n                            </div>\n                            <input required class=\"answer-label\" type=\"text\" placeholder=\"答え\" v-model='formAnswerDataList[num-1].label'>\n                            <div class=\"right-side-answer-container\">\n                                <div v-if=\"formQuestionData.question_type!='並び替え'\" class=\"checkbox-container\">\n                                    <p>true?</p>\n                                    <input class=\"checkbox\" type=\"checkbox\" v-model='formAnswerDataList[num-1].is_correct'>\n                                </div>\n                                <div v-if=\"formQuestionData.question_type=='並び替え'\" class=\"correct-order-container\">\n                                    <div class=\"correct-order\">\n                                        <p>order?</p>\n                                        <input required input type=\"number\" min=\"1\" :max=\"handleAnswerLength\" step=\"1\" v-model='formAnswerDataList[num-1].answer_id'>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <p class=\"po\">{{formAnswerDataList }}</p> -->\n                    <div v-if=\"!errorOccurred\" class=\"space-height\"></div>\n                    <div v-if=\"errorOccurred\" :class=\"{'notification-fixed-red':errorOccurred}\">\n                        <div class=\"notification-text\">\n                           {{ errorMessage }}\n                        </div>\n                    </div>\n                    <div>\n                        <button class='fbottun' ref='bform' id=''>作成する</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex';\nimport axios from 'axios'\n\nexport default {\n    components: {\n        \n    },\n    data(){\n        return{\n            showSideBar: true,\n            tempQuiz:'初級',\n            tempField:'フィールドを選択してください。',\n            // tempQuizType: '選択',\n            formQuestionData:{\n                quiz:'初級',\n                quiz_level:1,\n                question_type:'選択',\n                field:'フィールドを選択してください。',\n                label:'',\n                status:'',\n                max_select:'',\n                image:''\n            },\n            formAnswerDataList:[{\n                label:'',\n                is_correct:false,\n                answer_id:0,\n            },\n            {\n                label:'',\n                is_correct:false,\n                answer_id:0,\n            },\n            {\n                label:'',\n                is_correct:false,\n                answer_id:0,\n            },\n            {\n                label:'',\n                is_correct:false,\n                answer_id:0,\n            },\n            ],\n            formAnswerData:{\n                label:'',\n                is_correct:false,\n                answer_id:0,\n            },\n            formDataError:{\n                noFieldError: \"クイズフィールドを選んでください。\",\n                noSetAnswerIdError: \"答えの順番を指定してください。\",\n                wrongNumOrderError:\"答えの順番に間違いがあります。\",\n                notSelectOneError: \"正解を一つ選んでください。\",\n                noMoreThanThreeError: \"多答問題は答えを３つ以上指定してください。\",\n                moreThanTwoError:\"多答問題は正解を２つ以上指定してください。\",\n                AllTrueError:\"全ての答えが正解になっています。\"\n                },\n            errorOccurred: false,\n            errorMessage:'',\n            answerNum: 4,\n            handleAnswerLength: 4,\n            formDataReady: false,\n        }\n    },\n    created(){\n        this.$store.dispatch('getQuestionTypeId')\n    },\n    beforeMount(){\n        // this.$store.dispatch('getQuestionTypeId')\n    },\n    mounted(){\n        console.log('mounted at create-question',this.quizNameId,this.fieldNameId)\n    },\n    watch:{\n        answerNum:function(v) {\n            console.log('v',v)\n            if (this.handleAnswerLength > v){\n                this.handleAnswerLength = v\n                this.formAnswerDataList.pop()   \n            } else {\n                const _ = require('lodash');\n                let copyObject = _.cloneDeep(this.formAnswerData)\n                this.formAnswerDataList.push(copyObject)\n                this.handleAnswerLength = v\n            }\n        },\n        tempQuiz:function(v) {\n            console.log('T',v)\n            this.formQuestionData.quiz = v\n            this.formQuestionData.field = this.tempField\n        },\n        // tempQuizType:function(v) {\n        //     this.formQuestionData.question_type = v\n        //     for(let i of this.formAnswerDataList) {\n        //         i.is_correct = ''\n        //     }\n        // }\n    },\n    computed:{\n        quizNameId() {\n            return this.$store.getters.quizNameId\n        },\n        fieldNameId() {\n            return this.$store.getters.fieldNameId\n        },\n        questionTypeId() {\n            return this.$store.getters.questionTypeId\n        },\n        quizFieldList() {\n            let list = [];\n            for (let i of this.fieldNameId) {\n                if (this.convertQuizGradeToId(this.tempQuiz) == i.grade) {\n                    list.push(i.name)\n                }\n            }\n            return list\n        },\n    },\n    // mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n    methods:{\n        // ...mapActions(['getQuestionTypeId']),\n        handleShowSideBar(){\n            console.log(this.showSideBar)\n            this.showSideBar = !this.showSideBar \n            console.log(this.showSideBar)\n        },\n        addAnswer(){\n            this.answerNum += 1\n        },\n        subtractAnswer(){\n            if(this.answerNum > 1){\n                this.answerNum -= 1\n            }\n        },\n        async submitForm(){\n            this.setAllFormData()\n            try{\n                if(this.formDataReady){\n                    await axios({\n                        method: 'post',\n                        url: '/api/questions-create/',\n                        data: {\n                            'quiz': this.formQuestionData.quiz,\n                            'label': this.formQuestionData.label,\n                            'field': [this.formQuestionData.field],\n                            'question_type':this.formQuestionData.question_type,\n                            'quiz_level': this.formQuestionData.level,\n                            'answer': this.formAnswerDataList}\n                    })\n                }\n            } catch(e) {\n                console.log('error',e)\n            }\n        },\n        setAllFormData(){\n            // need to think about status part regarding of field\n            if (this.formQuestionData.field == this.tempField) {\n                this.errorMessage = this.formDataError.noFieldError\n                this.setTimeForNotification()\n                return \n            }\n            if(this.formQuestionData.question_type == \"並び替え\") {\n                this.formAnswerDataList.forEach((elem, index) => {\n                    this.formAnswerDataList[index].is_correct = false\n                })\n                let answerIdList = []\n                this.formAnswerDataList.forEach((elem, index) => {\n                    answerIdList.push(elem.answer_id)\n                    if(!this.formAnswerDataList[index].answer_id) {\n                        this.errorMessage = this.formDataError.noSetAnswerIdError\n                        this.setTimeForNotification()\n                        return \n                    } \n                })\n                const answerIdListSet = [... new Set(answerIdList)];\n                if(answerIdListSet.length == answerIdList.length){\n                    this.formDataReady = true\n                } else {\n                    this.errorMessage = this.formDataError.wrongNumOrderError\n                    this.setTimeForNotification()\n                    return \n                }\n            } else {\n                let counter = 0\n                for(let i of this.formAnswerDataList){\n                    if(i.is_correct) {\n                        counter += 1\n                    }\n                }\n                if(this.formQuestionData.question_type == \"選択\") {\n                    if(counter !=1) {\n                        this.errorMessage = this.formDataError.notSelectOneError\n                        this.setTimeForNotification()\n                        return \n                    } else {\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = 0\n                            }\n                        })\n                        this.formDataReady = true\n                    }\n                }\n                else if(this.formQuestionData.question_type == \"多答\") {\n                    if(this.formAnswerDataList.length < 3) {\n                        this.errorMessage = this.formDataError.noMoreThanThreeError\n                        this.setTimeForNotification()\n                        return\n                    } else if(counter == 1) {\n                        this.errorMessage = this.formDataError.moreThanTwoError\n                        this.setTimeForNotification()\n                        return\n                    } else if(this.formAnswerDataList.length == counter) {\n                        this.errorMessage = this.formDataError.AllTrueError\n                        this.setTimeForNotification()\n                        return\n                    } else {\n                        this.formQuestionData.max_select = counter\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = 0\n                            }\n                        })\n                        this.formDataReady = true\n                    }\n                }\n            }\n            this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type)\n            this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz)\n            this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field)\n            console.log(\"set\", this.formQuestionData)\n        },\n        setTimeForNotification(){\n            this.errorOccurred = true\n            setTimeout(this.errorOccurredFalse, 3000);\n        },\n        errorOccurredFalse(){\n            this.errorOccurred = false\n        },\n        convertQuizGradeToId(grade) {\n            for (let i of this.quizNameId){\n                if (i.name == grade){\n                    return i.id\n                }\n            }\n        },\n        convertQuizTypeToId(type) {\n            for (let i of this.questionTypeId){\n                if (i.name == type){\n                    return i.id\n                }\n            }\n        },\n        convertQuizFieldToId(field) {\n            for (let i of this.fieldNameId){\n                if (i.name == field){\n                    return i.id\n                }\n            }\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n\n.po{\n    color: white;\n}\n.create-question-wrapper{\n    width: 100%;\n    margin: 0;margin-top: 2rem;\n    display: flex;\n    justify-content: center;\n}\n.field-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    .field{\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        // border: solid red;\n        .input-box{\n            display: flex;\n            font-size: 1.2rem;\n            width: 80%;\n            justify-content: center;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            min-height: 40px;\n            background: $back-white;\n            // padding: 0.2rem 0.5rem;\n            overflow:hidden;\n            .each-title-container{\n                flex-basis: 30%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-right: solid $base-color;\n                background: $dark-blue;                \n                .each-title{\n                    color: $base-white;\n                    width: 100px;\n                    font-weight: bold;\n                    // font-size: 1rem;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .text-box{\n                flex-basis: 70%;\n                background: transparent;\n                border: none;\n                margin-right: 1rem;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: $back-white;\n                .option{\n                    font-weight: bold;\n                }\n            }\n            .text-box:focus{\n                outline: none;\n            }\n            .level{\n                display: flex;\n            }\n        }\n    }\n    .texarea-field{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        .texarea-box{\n            width: 80%;\n            .each-title-container{\n                display: flex;\n                justify-content: center;\n                .each-title{\n                    width: 40%;\n                    border-top: solid $base-color;\n                    border-right: solid $base-color;\n                    border-left: solid $base-color;\n                    background: $dark-blue;\n                    color: $base-white;\n                    font-weight: bold;\n                    border-radius: 0.5rem 0.5rem 0 0;\n                }\n            }\n             .text-box{\n                width: 100%;\n                background: $back-white;\n                height: auto;\n                min-height: 100px;\n                border: 0.1rem solid $base-color;\n                border-radius: 1vh;\n                padding: 1rem;\n                resize: none;\n                transition: 0.5s;\n            }\n            .text-box:focus{\n                outline: none;\n                border: solid $middle-blue;\n            }\n        }\n    }\n    .answer-wrapper{\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        width: 100%;\n        .answer-title-container{\n            display: flex;\n            align-items: center;\n            .fa-minus{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-minus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n            .answer-title{\n                border: solid $base-color;\n                border-radius: 0.5rem;\n                padding-right: 0.5rem;\n                padding-left: 0.5rem;\n                background: $dark-blue;\n                margin-bottom: 0.2rem;\n                color: $base-white;\n                font-weight: bold;\n            }\n            .fa-plus{\n                margin-left: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-plus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n        }\n        .answer-container{\n            display: flex;\n            align-items: center;\n            // justify-content: center;\n            width: 80%;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            background: $back-white;\n            margin-bottom: 0.4rem;\n            .num{\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                width: 2rem;\n                height: 2rem;\n                background: $dark-blue;\n                border-radius: 50vh;\n                border: solid $base-color;\n                color: $base-white;\n                font-weight: bold;\n                margin: 0.2rem 0.5rem;\n            }\n            .answer-label{\n                width: 50%;\n                height: 2rem;\n                padding: 0 0.5rem;\n            }\n            .right-side-answer-container{\n                display: flex;\n                justify-content: flex-end;\n                width: 20%;\n                .checkbox-container{\n                    margin-left: 1rem;\n                    .checkbox{\n                    }\n                }\n                .correct-order-container{\n                    margin-left: 0.5rem;\n                }\n            }\n        }\n    }\n    .space-height{\n        min-height: 3rem;\n    }\n    // .additional-field-wrapper{\n    //     width: 100%;\n    //     display: flex;\n    //     justify-content: center;\n    //     flex-direction: column;\n    //     align-items: center;\n    //     .additional-field{\n    //         display: flex;\n    //         flex-direction: column;\n    //         align-items: flex-end;\n    //         width: 80%;\n    //         .input-box{\n    //             display: flex;\n    //             font-size: 1.2rem;\n    //             width: 80%;\n    //             justify-content: center;\n    //             border: solid $base-color;\n    //             border-radius: 0.5rem;\n    //             min-height: 20px;\n    //             background: $back-white;\n    //             // padding: 0.2rem 0.5rem;\n    //             overflow:hidden;\n    //             .each-title-container{\n    //                 flex-basis: 30%;\n    //                 display: flex;\n    //                 align-items: center;\n    //                 justify-content: center;\n    //                 border-right: solid $base-color;\n    //                 background: $dark-blue;                \n    //                 .each-title{\n    //                     color: $base-white;\n    //                     width: 100px;\n    //                     font-weight: bold;\n    //                     margin: 0.2rem 0.5rem;\n    //                 }\n    //             }\n    //             .text-box{\n    //                 flex-basis: 70%;\n    //                 background: transparent;\n    //                 border: none;\n    //                 margin-right: 1rem;\n    //                 margin-left: 1rem;\n    //                 font-size: 1rem;\n    //                 background: $back-white;\n    //                 .option{\n    //                     font-weight: bold;\n    //                 }\n    //             }\n    //             .text-box:focus{\n    //                 outline: none;\n    //             }\n    //             .level{\n    //                 display: flex;\n    //             }\n    //         }\n    //     }\n    // }\n}\n</style>"]},"metadata":{},"sourceType":"module"}