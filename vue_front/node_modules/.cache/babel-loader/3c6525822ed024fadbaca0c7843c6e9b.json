{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport axios from 'axios';\nimport Cropper from 'cropperjs';\nexport default {\n  // set imageType in parent components to check what to do here\n  // if imageTyoe == 'thumbnail' => axios\n  // els if imageType == 'quizQuestion' => return blob\n  props: [\"getDjangouser\", \"minContainerWidth\", \"minContainerHeight\", \"imageType\"],\n  data: function data() {\n    return {\n      file: '',\n      image: '',\n      selectedFile: null,\n      compoHandle: false,\n      cropper: {},\n      destination: {},\n      inputFile: '',\n      blob: '',\n      cropperBorder: ''\n    };\n  },\n  mounted: function mounted() {\n    // this.cropper()\n    console.log('thumb mounted');\n    this.autoClick(); // this.shapeChange()\n  },\n  watch: {\n    cropperBorder: function cropperBorder(v) {\n      console.log('changed', v, v.length);\n\n      if (v.length == 1) {\n        console.log('length = 1');\n        v.style.borderRadius = 0;\n      }\n    }\n  },\n  computed: {\n    user: function user() {\n      return this.$store.state.signup.djangoUser;\n    },\n    width: function width() {\n      if (this.minContainerWidth == 800) {\n        return 800;\n      } else {\n        return 400;\n      }\n    },\n    height: function height() {\n      if (this.minContainerHeight == 800) {\n        return 800;\n      } else {\n        return 400;\n      }\n    }\n  },\n  methods: {\n    getImage: function getImage(event) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('event', event);\n                _this.selectedFile = URL.createObjectURL(event.target.files[0]);\n                _this.image = event.target.files[0];\n                _context.next = 5;\n                return console.log(_this.image, 'img', _this.selectedFile);\n\n              case 5:\n                _this.imageCropper();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    imageCropper: function imageCropper() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.cropper = new Cropper(_this2.$refs.image, {\n                  zoomable: true,\n                  scalable: false,\n                  zoomOnTouch: true,\n                  aspectRatio: 1,\n                  dragMode: 'move',\n                  minContainerHeight: _this2.height,\n                  minContainerWidth: _this2.width,\n                  crop: function crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                    this.cropperBorder = document.getElementsByClassName(\"cropper-view-box\", \"cropper-face\");\n                    console.log(this.cropperBorder);\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    chancel: function chancel() {\n      this.selectedFile = null;\n      this.showThumbnailFalse();\n    },\n    autoClick: function autoClick() {\n      document.getElementById(\"fileUpload\").click();\n      this.inputFile = document.getElementById(\"fileUpload\");\n      document.body.onfocus = this.getEvent;\n    },\n    getEvent: function getEvent() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        if (_this3.inputFile.value.length) {} else {\n          _this3.showThumbnailFalse();\n        }\n\n        document.body.onfocus = null;\n      }, 500);\n    },\n    openFileOnClick: function openFileOnClick() {\n      document.getElementById(\"fileUpload\").value = \"\";\n      document.getElementById(\"fileUpload\").files.length = 0;\n      document.getElementById(\"fileUpload\").click();\n\n      if (document.getElementById(\"fileUpload\").files.length >= 1) {//Do something \n      } else {\n        this.showThumbnailFalse(); //Cancel button has been called.\n      }\n    },\n    // getCroppedURL(){\n    //     console.log('croppedURL')\n    //     document.getElementById('crop-btn').addEventListener('click', function () {\n    //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n    //     var result = document.getElementById('result-img');\n    //     result.src = resultImgUrl;\n    //      });\n    // },\n    userUpdate: function userUpdate() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var canvas, _canvas;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                console.log('clicked');\n\n                if (!(_this4.imageType == 'thumbnail')) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                _context5.prev = 2;\n                canvas = _this4.cropper.getCroppedCanvas({\n                  width: 500,\n                  height: 500,\n                  minCropBoxHeight: 300,\n                  minCropBoxWidth: 300,\n                  maxWidth: 4096,\n                  maxHeight: 4096,\n                  // fillColor: '#fff',\n                  imageSmoothingEnabled: false,\n                  imageSmoothingQuality: 'high'\n                });\n                _context5.next = 6;\n                return canvas.toBlob( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(blob) {\n                    var formData;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            formData = new FormData();\n                            formData.append('thumbnail', blob, \"\".concat(_this4.image, \".png\")), // console.log('getthumb',formData.get('thumbnail'),this.image,blob),\n                            axios.patch(\"/api/user/\".concat(_this4.getDjangouser.UID), formData);\n\n                          case 2:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }(), 'image/png');\n\n              case 6:\n                _this4.showThumbnailFalse();\n\n                _this4.$store.commit('setIsLoading', true);\n\n                setTimeout(_this4.reload, 1000);\n                _context5.next = 15;\n                break;\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                _this4.showThumbnailFalse();\n\n                console.log('fale', _context5.t0);\n\n              case 15:\n                _context5.next = 19;\n                break;\n\n              case 17:\n                console.log('else');\n\n                try {\n                  _canvas = _this4.cropper.getCroppedCanvas({\n                    width: 1000,\n                    height: 1000,\n                    minCropBoxHeight: 300,\n                    minCropBoxWidth: 300,\n                    maxWidth: 4096,\n                    maxHeight: 4096,\n                    // fillColor: '#fff',\n                    imageSmoothingEnabled: false,\n                    imageSmoothingQuality: 'high'\n                  });\n\n                  _canvas.toBlob( /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(blob) {\n                      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                        while (1) {\n                          switch (_context4.prev = _context4.next) {\n                            case 0:\n                              _this4.setImageBlob(blob);\n\n                            case 1:\n                            case \"end\":\n                              return _context4.stop();\n                          }\n                        }\n                      }, _callee4);\n                    }));\n\n                    return function (_x2) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }(), 'image/png');\n                } catch (e) {\n                  _this4.showThumbnailFalse();\n\n                  console.log('fale', e);\n                }\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 11]]);\n      }))();\n    },\n    setImageBlob: function setImageBlob(blob) {\n      this.blob = blob;\n      var url = URL.createObjectURL(blob);\n      this.$emit('setImageBlob', blob, url);\n      this.showThumbnailFalse();\n    },\n    showThumbnailFalse: function showThumbnailFalse() {\n      this.$emit('showThumbnailFalse');\n    },\n    shapeChange: function shapeChange() {\n      this.cropperBorder = document.getElementsByClassName(\"cropper-view-box\", \"cropper-face\"); // console.log('shape', cropperBorder.length,'0',cropperBorder[0])\n      // cropperBorder.item(0).style.borderRadius = 0\n\n      console.log('shape', this.cropperBorder, this.cropperBorder.length);\n    },\n    reload: function reload() {\n      // this.$store.commit('setIsLoading', false)\n      location.reload();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","Cropper","props","data","file","image","selectedFile","compoHandle","cropper","destination","inputFile","blob","cropperBorder","mounted","console","log","autoClick","watch","v","length","style","borderRadius","computed","user","$store","state","signup","djangoUser","width","minContainerWidth","height","minContainerHeight","methods","getImage","event","URL","createObjectURL","target","files","imageCropper","$refs","zoomable","scalable","zoomOnTouch","aspectRatio","dragMode","crop","detail","x","y","rotate","scaleX","scaleY","document","getElementsByClassName","chancel","showThumbnailFalse","getElementById","click","body","onfocus","getEvent","setTimeout","value","openFileOnClick","userUpdate","imageType","canvas","getCroppedCanvas","minCropBoxHeight","minCropBoxWidth","maxWidth","maxHeight","imageSmoothingEnabled","imageSmoothingQuality","toBlob","formData","FormData","append","patch","getDjangouser","UID","commit","reload","setImageBlob","e","url","$emit","shapeChange","location"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"sourcesContent":["<template>\n    <div class='thumbnail-wrapper l-wrapper'>\n        <form @submit.prevent='userUpdate'>\n            <input id=\"fileUpload\" type=\"file\" @change='getImage' hidden enctype=\"multipart/form-data\">\n            <div class=\"cropper-outer-wrapper\" v-if=\"selectedFile\">\n                <div class='cropperinner-wrapper'>\n                    <img ref='image' :src=\"selectedFile\" style=\"width: 300px; height: 300px;\">\n                </div>\n                <div class=\"thumbnail-button-container\">\n                    <button class='btn-base-white-db-sq thumbnail-save-button'>save</button>\n                    <button class='btn-tr-white-base-sq thumbnail-cancel-button' v-if='selectedFile' @click='chancel'>cancel</button>\n                </div>\n            </div>\n        </form>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Cropper from 'cropperjs';\nexport default {\n    // set imageType in parent components to check what to do here\n    // if imageTyoe == 'thumbnail' => axios\n    // els if imageType == 'quizQuestion' => return blob\n    props:[\n        \"getDjangouser\",\n        \"minContainerWidth\",\n        \"minContainerHeight\",\n        \"imageType\",\n    ],\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            compoHandle: false,\n            cropper:{},\n            destination:{},\n            inputFile:'',\n            blob:'',\n            cropperBorder:''\n        }\n    },\n    mounted(){\n        // this.cropper()\n        console.log('thumb mounted')\n        this.autoClick()\n        // this.shapeChange()\n    },\n    watch:{\n        cropperBorder:function(v) {\n            console.log('changed',v,v.length)\n            if(v.length==1){\n                console.log('length = 1')\n                v.style.borderRadius = 0\n            }\n        }\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        width(){\n            if(this.minContainerWidth == 800){\n                return 800\n            }else{\n                return 400\n            }\n        },\n        height(){\n            if(this.minContainerHeight == 800){\n                return 800\n            }else{\n                return 400\n            }\n        }\n    },\n    methods:{\n        async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files[0]\n            await console.log(this.image,'img',this.selectedFile)\n            this.imageCropper()\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: true,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            dragMode: 'move',\n            minContainerHeight:this.height,\n            minContainerWidth:this.width,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                    this.cropperBorder = document.getElementsByClassName(\"cropper-view-box\",\"cropper-face\")\n                    console.log(this.cropperBorder)\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n            this.showThumbnailFalse()\n        },\n        autoClick(){\n            document.getElementById(\"fileUpload\").click()\n            this.inputFile = document.getElementById(\"fileUpload\");\n            document.body.onfocus = this.getEvent\n        },\n        getEvent(){\n            setTimeout(() => {\n                if (this.inputFile.value.length) {\n                \n                } else {\n                this.showThumbnailFalse()\n                }\n                document.body.onfocus = null;\n            }, 500);\n        },\n        openFileOnClick(){\n            document.getElementById(\"fileUpload\").value = \"\";\n            document.getElementById(\"fileUpload\").files.length = 0;            \n            document.getElementById(\"fileUpload\").click();\n            if(document.getElementById(\"fileUpload\").files.length >= 1){\n                //Do something \n            }\n            else{\n                this.showThumbnailFalse()\n                //Cancel button has been called.\n            }\n        },\n        // getCroppedURL(){\n        //     console.log('croppedURL')\n        //     document.getElementById('crop-btn').addEventListener('click', function () {\n        //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n        //     var result = document.getElementById('result-img');\n        //     result.src = resultImgUrl;\n        //      });\n        // },\n        async userUpdate(){\n            console.log('clicked')\n            if(this.imageType == 'thumbnail') {\n                try{\n                    const canvas = this.cropper.getCroppedCanvas({\n                    width: 500,\n                    height: 500,\n                    minCropBoxHeight: 300,\n                    minCropBoxWidth: 300,\n                    maxWidth: 4096,\n                    maxHeight: 4096,\n                    // fillColor: '#fff',\n                    imageSmoothingEnabled: false,\n                    imageSmoothingQuality: 'high',\n                    });\n                await canvas.toBlob(async (blob) => {\n                    const formData = new FormData();\n                    formData.append('thumbnail',blob, `${this.image}.png`),\n                    // console.log('getthumb',formData.get('thumbnail'),this.image,blob),\n                    axios.patch(`/api/user/${this.getDjangouser.UID}`,\n                        formData\n                    )\n                }, 'image/png')\n                this.showThumbnailFalse()\n                this.$store.commit('setIsLoading', true)\n                setTimeout(this.reload,1000)\n                }\n                catch(e){\n                    this.showThumbnailFalse()\n                    console.log('fale',e)\n                }\n                // this.$router.go({path: this.$router.currentRoute.path, force: true})\n            } else {\n                console.log('else')\n                try{\n                    const canvas = this.cropper.getCroppedCanvas({\n                    width: 1000,\n                    height: 1000,\n                    minCropBoxHeight: 300,\n                    minCropBoxWidth: 300,\n                    maxWidth: 4096,\n                    maxHeight: 4096,\n                    // fillColor: '#fff',\n                    imageSmoothingEnabled: false,\n                    imageSmoothingQuality: 'high',\n                    });\n                canvas.toBlob(async (blob) => {\n                    this.setImageBlob(blob)\n                    },'image/png')\n                }\n                catch(e){\n                    this.showThumbnailFalse()\n                    console.log('fale',e)\n                }\n            }\n        },\n        setImageBlob(blob){\n            this.blob = blob\n            let url = URL.createObjectURL(blob)\n            this.$emit('setImageBlob',blob, url)\n            this.showThumbnailFalse()\n        },\n        showThumbnailFalse(){\n            this.$emit('showThumbnailFalse')\n        },\n        shapeChange() {\n            this.cropperBorder = document.getElementsByClassName(\"cropper-view-box\",\"cropper-face\")\n            // console.log('shape', cropperBorder.length,'0',cropperBorder[0])\n            // cropperBorder.item(0).style.borderRadius = 0\n            console.log('shape', this.cropperBorder,this.cropperBorder.length)\n        },\n        reload(){\n            // this.$store.commit('setIsLoading', false)\n            location.reload()\n        }\n    }\n}\n</script>\n\n<style  lang=\"scss\">\n// not scoped for cropper\n@import \"style/_variables.scss\";\n\n.thumbnail-wrapper{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    /* background: ; */\n    overflow:scroll;  \n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n.thumbnail-button-container{\n    display: flex;\n    justify-content: center;\n    margin-top: 1rem;\n    .thumbnail-save-button{\n        display: flex;\n        justify-content: center;\n        font-size: 1.2rem;\n        margin-right: 0.5rem;\n        min-width: 5rem;\n        min-height: 2rem;\n        font-weight: bold;\n    }\n    .thumbnail-cancel-button{\n        display: flex;\n        justify-content: center;\n        font-size: 1.2rem;\n        margin-left: 0.5rem;\n        min-width: 5rem;\n        min-height: 2rem;\n        font-weight: bold;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}