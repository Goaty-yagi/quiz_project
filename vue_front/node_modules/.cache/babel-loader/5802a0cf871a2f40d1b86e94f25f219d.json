{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","mtime":1653202006063},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"names":["createPersistedState","Cookies","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","store","namespace","state","username","email","email2","country","password","user","registeredUser","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","tempUser","test","statusList","grade","level","favoriteQuestion","logger","actualError","message","name","userInfo","exceptUserInfo","beingException","reloadForException","apiError","django","firebase","ipinfo","any","onSigningup","myQuestion","myQuizInfo","id","max","getters","getUID","getUser","getDjangouser","getEmailVerified","getTempUser","getMyQuestion","getMyQuizInfo","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","setDjangoUser","emailVerifiedHandler","checkEmailHandler","setTempUser","status","setTempUserReset","remove","tempUserTestTrue","resetQuizKeyStorage","setLogger","setUserInfo","checkBeingException","reloadForExceptionTrue","reloadForExceptionFalse","handleapiError","checkDjangoError","push","resetDjangoError","handleOnSigningup","deleteMyQuestion","filter","question","addMyQuestion","actions","signupDjangoUser","commit","method","data","then","response","window","location","pathname","signupDjangoUserForException","get","IP","ip_data","city","ip","loc","org","postal","region","timezone","getDjangoUser","dispatch","my_quiz","my_question","max_num","getFavoriteQuestion","questionId","favorite_question","i","catch","error","signup","context","ref","currentUser","sendEmailVerify","sentValidation","Error","login","checkEmail","passwordReset","logout","unsub"],"mappings":"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","sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport Cookies from 'js-cookie'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        registeredUser: false,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n        },\n        tempUser: {\n            test: false,\n            statusList:'',\n            grade:'',\n            level:''\n        },\n        favoriteQuestion:'',\n        logger:{\n            actualError:'',\n            message:'',\n            name:''\n        },\n        userInfo:'',\n        exceptUserInfo:'',\n        beingException:false,\n        reloadForException: false,\n        apiError:{\n            // this is for connection Error\n            django: false,\n            firebase: false,\n            ipinfo: false,\n            any: false\n        },\n        onSigningup:false,\n        myQuestion:'',\n        myQuizInfo:{\n            id:'',\n            max:'',\n        },\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getUser(state){\n            return state.user\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        },\n        getEmailVerified(state){\n            return state.emailVerified\n        },\n        getTempUser(state){\n            return state.tempUser\n        },\n        logger(state){\n            return state.logger\n        },\n        onSigningup(state){\n            return state.onSigningup\n        },\n        getMyQuestion(state){\n            return state.myQuestion\n        },\n        getMyQuizInfo(state){\n            return state.myQuizInfo\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            if(state.user){\n                state.registeredUser = true\n                state.UID = state.user.uid\n            }\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        setDjangoUser(state,payload){\n            state.djangoUser = payload\n            console.log('set Django user',state.djangoUser)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        },\n        setTempUser(state,payload){\n            state.tempUser.test = true\n            state.tempUser.statusList = payload.status\n            state.tempUser.grade = payload.grade\n            state.tempUser.level = payload.level\n            console.log('set-temp-user', state.tempUser)\n        },\n        setTempUserReset(state){\n            state.tempUser.test = false\n            state.tempUser.statusList = '',\n            state.tempUser.grade = '',\n            state.tempUser.level = ''\n            Cookies.remove('tempKey')\n            console.log('reset-TempUser',state.tempUser)\n        },\n        tempUserTestTrue(state){\n            state.tempUser.test = true\n        },\n        resetQuizKeyStorage(state){\n            // this is for log out\n            state.UID = null\n            state.djangoUser = null\n            state.emailVerified = null\n            state.beingException = false,\n            state.reloadForException = false\n            state.apiError.django = false\n            state.apiError.firebase = false\n            state.apiError.ipinfo = false\n            state.apiError.any = false\n            state.myQuizInfo.id = ''\n            state.myQuizInfo.max = ''\n            state.myQuestion = ''\n            state.registeredUser = false\n            console.log('all-Reset')\n        },\n        setLogger(state,payload){\n            state.logger.actualError = payload.actualError\n            state.logger.name = payload.name\n            state.logger.message = payload.message\n        },\n        setUserInfo(state,payload){\n            state.userInfo = payload\n        },\n        checkBeingException(state,payload){\n            if(state.user&&!state.djangoUser){\n                state.beingException = true\n                console.log('set-being-exception',state.beingException)\n            }\n        },\n        reloadForExceptionTrue(state){\n            if(state.user&&!state.djangoUser){\n                state.reloadForException = true\n                console.log('setRUFEtrue')\n            }\n        },\n        reloadForExceptionFalse(state){\n            state.reloadForException = false\n            console.log('setRUFEfalse')\n        },\n        handleapiError(state,payload){\n            if(payload=='django'){\n                state.apiError.django = true\n            }\n            else if(payload=='firebase'){\n                state.apiError.firebase = true\n            }\n            else if(payload=='ipinfo'){\n                state.apiError.ipinfo = true\n            }\n        },\n        checkDjangoError(state,payload){\n            console.log('checkDE',payload)\n            if(state.apiError.django){\n                router.push({ name: 'ConnectionError' })\n            }\n            else if(payload==\"Network Error\"){\n                state.apiError.django = true\n                state.apiError.any = true\n            }else{\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        resetDjangoError(state){\n            state.apiError.django = false\n            state.apiError.any = false\n        },\n        handleOnSigningup(state){\n            state.onSigningup = !state.onSigningup\n        },\n        deleteMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion = state.myQuestion.filter(item =>{\n                console.log('item',item)\n                return (item.question.id !=payload)\n            })\n            console.log(\"after\",state.myQuestion)\n        },\n        addMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion.push(payload)\n            console.log(\"after\",state.myQuestion)\n        }\n    },\n    actions:{\n        async signupDjangoUser( {state, commit},payload ){\n            console.log(\"INSDU\",payload)\n            try{\n                // throw new Error('could not sent validation')\n                await axios({\n                    method: 'post',\n                    url: '/api/user/',\n                    data: payload\n                })\n                .then(response => {\n                    commit('setDjangoUser',response.data)\n                })\n                state.beingException = false\n                commit(\"resetDjangoError\")\n                commit(\"setTempUserReset\")\n                state.userInfo = ''\n            }\n            catch(e){\n                state.userInfo = payload\n                let logger = {\n                    message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                commit('setLogger',logger)\n                commit(\"checkDjangoError\", e.message)\n            }\n        },\n        async signupDjangoUserForException( {state, commit},payload ){\n            // this is only for unsub below. dont use other part\n            console.log(\"INSDUFX\")\n            if(!state.djangoUser&&state.beingException){\n                if(state.userInfo){\n                    try{\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.userInfo\n                        })\n                        .then(response => {\n                            commit('setDjangoUser',response.data)\n                        })\n                        state.beingException = false\n                        commit('resetDjangoError')\n                        commit(\"setTempUserReset\")\n                        state.userInfo = ''\n                    }\n                    catch(e){\n                        console.log('catchdayo',e.message)\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        commit(\"checkDjangoError\", e.message)\n                    }\n                }\n                else{\n                    try{\n                        console.log('NO TEMP')\n                        await axios\n                        .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n                        .then(response => {\n                            let IP = response.data\n                            state.exceptUserInfo = {\n                                UID: state.user.uid,\n                                name: '名前を変更しよう',\n                                email: state.user.email,\n                                ip_data: [{\n                                    city: IP.city,\n                                    ip: IP.ip,\n                                    loc: IP.loc,\n                                    org: IP.org,\n                                    postal: IP.postal,\n                                    region: IP.region,\n                                    timezone: IP.timezone,\n                                    country: IP.country\n                                }]\n                            } \n                        })\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.signup.DjangoUserForException. ipinfo error\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                     \n                    try{\n                        console.log('try non_userINFO',state.exceptUserInfo)\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.exceptUserInfo\n                        })\n                        state.beingException = false\n                        commit(\"resetDjangoError\")\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                }   \n            }\n        },\n        async getDjangoUser({ state, commit,dispatch }){\n            if(state.user&&!state.beingException){\n                console.log('GDU_pass',state.beingException)\n                try{\n                    await axios\n                    .get(`/api/user/${state.user.uid}`)\n                    .then(response => {\n                        commit('setDjangoUser',response.data)\n                        state.myQuestion = response.data.my_quiz[0].my_question\n                        state.myQuizInfo.id = response.data.my_quiz[0].id\n                        state.myQuizInfo.max = response.data.my_quiz[0].max_num\n                        console.log(\"MQ\",state.myQuestion)\n                    })\n                    commit(\"resetDjangoError\")\n                }\n                catch(e){\n                    console.log('catch')\n                    let logger = {\n                        message: \"in store/signup.getDjangoUser. couldn't get django user\",\n                        name: window.location.pathname,\n                        actualError: e\n                    }\n                    commit('setLogger',logger)\n                    commit(\"checkDjangoError\", e.message)\n                }\n            }\n        },\n        async getFavoriteQuestion({ state, commit }){\n            state.favoriteQuestion = null\n            if(state.djangoUser){\n                try{\n                    const questionId = []\n                    for(let i of state.djangoUser.favorite_question[0].question){\n                        questionId.push(i)\n                    }\n                    if(questionId[0]){\n                        await axios\n                        .get(`/api/board/question-favorite?question_id=${questionId}`)\n                        .then(response => {\n                            state.favoriteQuestion = response.data\n                            })\n                        .catch(error => {\n                            console.log(error)\n                        })\n                    }\n                }catch{\n                    \n                }\n            }\n        },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch(e){\n                let logger = {\n                    message: \"in store/signup.signup. couldn't signup firebase user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                context.commit('setLogger',logger)\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            // context.commit('setIsLoading', true, {root:true})\n            console.log('in_login')\n            try{\n                var ref = await signInWithEmailAndPassword(auth, email, password)\n            }catch{\n                console.log('error')\n                throw new Error('could not complite signin')\n            }\n            if(ref){\n                console.log(\"IF YES\")\n                context.commit('setUser',ref.user)\n                context.dispatch('getDjangoUser')\n                context.commit(\"setTempUserReset\")\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log(context.state.user,context.state.emailVerified)\n            }else{\n                console.log('error in sign in')\n                throw new Error('could not complite signin')\n            }\n            // context.commit('setIsLoading', false, {root:true})                \n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            context.commit('resetQuizKeyStorage')\n            router.push({ name: 'Home' })\n        }\n    }\n\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    console.log('unsub')\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n        store.dispatch('signupDjangoUserForException')\n    }else{\n        store.commit('resetQuizKeyStorage')\n    }\n    unsub()\n})"]}]}