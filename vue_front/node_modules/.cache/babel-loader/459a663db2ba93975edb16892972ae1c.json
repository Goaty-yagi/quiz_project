{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","mtime":1651844310040},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js"],"names":["store","router","axios","getDefaultState","isLoading","quizID","countUpDict","questionID","answerID","questionType","userStatusDict","status","grade","quizTaker","isCorrect","isFalse","gradeForConvert","numOfQuiz","questionField","level","questions","quiz","quizNameId","fieldNameId","randomURL","test","notice","step","onQuiz","namespace","state","getters","rootState","signup","djangoUser","quiz_taker","id","mutations","getRandomQuestion","array","console","log","k","length","i","answer","r","Math","floor","random","tmp","setQuestions","setTestQuestions","getQuiz","payload","setAnswerAndQuestionID","IDs","getQuizInfo","quizInfo","quizId","fieldId","quizNum","getTestQuizInfo","setQuizNameId","setFieldNameId","getUserStatusInfo","setQuizID","setQuizTakerID","convertGradeFromIntToID","name","onQuizTrue","onQuizFalse","actions","getquestions","commit","num","root","get","response","data","shift","getQuizNameId","getFieldNameId","getTestQuestions","countUpAnswerAndQuestion","patch","userStatusPost","method","url","is_correct","is_false","convertGradeFromIntToIDForNewUser","dispatch"],"mappings":"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","sourcesContent":["import store from '..'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\n\n\nlet getDefaultState = () => {\n    return {\n        isLoading: false,\n        quizID: 1,\n        countUpDict:{\n            questionID: '',\n            answerID: '',\n            questionType:''\n        },\n        userStatusDict:{\n            status:'',\n            grade:'',\n            quizTaker:'',\n            isCorrect:0,\n            isFalse:0\n        },\n        gradeForConvert:'',\n        numOfQuiz: 3,\n        questionField: [1,2],\n        level: 1,\n        questions:[],\n        quiz:[],\n        quizNameId:'',\n        fieldNameId:'',\n        randomURL:'',\n        test:null,\n        notice:false,\n        step:1,\n        onQuiz: false,\n    }\n}\n\nexport default {\n    namespace: true,\n    state: getDefaultState(),\n    getters:{\n        questions:(state) => state.questions,\n        quiz:(state) => state.quiz,\n        quizNameId:(state) => state.quizNameId,\n        fieldNameId:(state) => state.fieldNameId,\n        gradeForConvert:(state) => state.gradeForConvert,\n        quizTaker(state, getters, rootState){\n            try{\n                return rootState.signup.djangoUser.quiz_taker[0].id\n            }catch{\n                return null\n            }\n        },\n        quizID(state, getters, rootState){\n            try{\n                return rootState.signup.djangoUser.quiz_taker[0].grade\n            }catch{\n                return null\n            }\n        }\n    },\n    mutations:{\n        getRandomQuestion(state,array){\n            console.log('in randomQ', array)\n            // for (let i = array.length - 1; i >= 0; i--) {\n            //     let r = Math.floor(Math.random() * (i + 1))\n            //     let tmp = array[i]\n            //     array[i] = array[r]\n            //     array[r] = tmp\n            // }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                    let r = Math.floor(Math.random() * (i + 1))\n                    let tmp = array[k].answer[i]\n                    array[k].answer[i] = array[k].answer[r]\n                    array[k].answer[r] = tmp\n                }\n            }\n            return array\n        },\n        setQuestions:(state,questions) => (state.questions = questions),\n        setTestQuestions:(state,questions) => (state.questions = questions),\n        getQuiz(state, payload){\n            state.quiz = payload\n            console.log(state.quiz)\n        },\n        setAnswerAndQuestionID(state,IDs){\n            state.countUpDict.questionID = IDs.questionID\n            state.countUpDict.answerID = IDs.answerID\n            state.countUpDict.questionType = IDs.questionType\n        },\n        getQuizInfo(state, quizInfo){\n            console.log('GQIStore',quizInfo)\n            state.questionField = []\n            state.quizID = ''\n            state.numOfQuiz = ''\n            state.quizID = quizInfo.quizId\n            if(quizInfo.fieldId){\n                state.questionField = quizInfo.fieldId\n            }\n            state.numOfQuiz = quizInfo.quizNum\n            console.log('GQINFOStore',state.quizID,state.questionField)\n        },\n        getTestQuizInfo(state, quizInfo){\n            state.quizID = quizInfo.quizId\n            state.level = quizInfo.level\n        },\n        setQuizNameId(state, payload){\n            state.quizNameId = payload\n        },\n        setFieldNameId(state, payload){\n            state.fieldNameId = payload\n        },\n        getUserStatusInfo(state, payload){\n            state.userStatusDict.status = payload.status\n            // state.userStatusDict.grade = payload.grade\n            // state.userStatusDict.quiz_taker = payload.quiz_taker\n            state.userStatusDict.isCorrect = payload.isCorrect\n            state.userStatusDict.isFalse = payload.isFalse\n            console.log(\"GUSI\",state.userStatusDict)\n        },\n        // getUserStatusInfoForInit(state, payload){\n        //     state.userStatusDict.status = payload.status\n        //     // state.userStatusDict.grade = payload.grade\n        //     // state.userStatusDict.quiz_taker = payload.quiz_taker\n        //     state.userStatusDict.isCorrect = payload.isCorrect\n        //     state.userStatusDict.isFalse = payload.isFalse\n        //     console.log(\"GUSI\",state.userStatusDict)\n        // },\n        setQuizID(state, payload){\n            state.userStatusDict.grade = payload\n        },\n        setQuizTakerID(state, payload){\n            state.userStatusDict.quizTaker = payload\n        },\n        convertGradeFromIntToID(state, payload){\n            console.log('CGFITI',state.quizNameId,payload)\n            for(let i of state.quizNameId){\n                console.log('loop',i.name,i.name==payload)\n                if(i.name == payload){\n                    state.gradeForConvert = i.id\n                }\n            }\n        },\n        onQuizTrue(state){\n            state.onQuiz = true\n        },\n        onQuizFalse(state){\n            state.onQuiz = false\n        }\n    },\n    actions:{\n        async getquestions({ state, commit,getters }){\n            console.log('action2',state.num)\n            state.questions = []\n            state.quiz = []\n            commit('setIsLoading', true, {root:true})\n            if(state.questionField[0]){\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}&field=${state.questionField}`)\n            }else{\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}`)\n            }\n            console.log(getters.quizTaker)\n            commit('setQuizTakerID',getters.quizTaker)\n            commit('getQuiz',response.data[0])\n            commit('setQuizID',response.data[0].name)\n            response.data.shift()\n            commit('getRandomQuestion',response.data)\n            commit('setQuestions',response.data);\n            commit('setIsLoading', false,{root:true})\n        },\n        async getQuizNameId({ state, commit }){\n            if(state.quizNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/quizzes-name-id/\")\n                commit('setQuizNameId',response.data)\n                console.log(state.quizNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getFieldNameId({ state, commit }){\n            if(state.fieldNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/field-list/\")\n                commit('setFieldNameId',response.data)\n                console.log(state.fieldNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getTestQuestions({ state, commit, getters }){\n            // need things for non login\n            if(getters.quizID!=null){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(`/api/quizzes-tests/?quiz=${getters.quizID}&level=${state.level}`)\n                commit('getQuiz',response.data[0])\n                commit('setQuizTakerID',getters.quizTaker)\n                commit('setQuizID',response.data[0])\n                response.data.shift()\n                commit('getRandomQuestion',response.data)\n                commit('setTestQuestions',response.data);\n                commit('setIsLoading', false,{root:true})\n            }else{\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(`/api/quizzes-tests/?quiz=4&level=${state.level}`)\n                commit('getQuiz',response.data[0])\n                response.data.shift()\n                commit('getRandomQuestion',response.data)\n                commit('setTestQuestions',response.data);\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async countUpAnswerAndQuestion({ state , commit }, payload){\n            // commit('setIsLoading', true, {root:true})\n            commit('setAnswerAndQuestionID',payload)\n            if(state.countUpDict.questionType!=4){\n                await axios.patch(`/api/answers-count/?answer=${state.countUpDict.answerID}&question=${state.countUpDict.questionID}`)\n            }\n            // commit('setIsLoading', false,{root:true})\n            \n        },\n        async userStatusPost({ state , commit }, payload){\n            console.log(\"userStatusPost\",state.userStatusDict)\n            commit('getUserStatusInfo',payload)\n            await axios({\n                method: 'post',\n                url: '/api/user-status/',\n                data: {\n                    status: state.userStatusDict.status,\n                    grade: state.userStatusDict.grade,\n                    quiz_taker: state.userStatusDict.quizTaker,\n                    is_correct: state.userStatusDict.isCorrect,\n                    is_false: state.userStatusDict.isFalse,\n                }\n            })\n        },\n        async convertGradeFromIntToIDForNewUser({ state , dispatch, commit }, payload){\n            if(!state.quizNameId){\n                await dispatch('getQuizNameId')\n            }\n            commit('convertGradeFromIntToID', payload)\n            console.log('done convert')\n        }\n    }\n}"]}]}