{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js","mtime":1650192688374},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudGVzdC5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAndnVleCc7CmltcG9ydCBjcmVhdGVQZXJzaXN0ZWRTdGF0ZSBmcm9tICd2dWV4LXBlcnNpc3RlZHN0YXRlJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgcm91dGVyIH0gZnJvbSAiLi4vbWFpbi5qcyI7CmltcG9ydCBzaWdudXAgZnJvbSAnLi9tb2R1bGVzL3NpZ251cCc7CmltcG9ydCBib2FyZCBmcm9tICcuL21vZHVsZXMvYm9hcmQnOwppbXBvcnQgcXVpeiBmcm9tICcuL21vZHVsZXMvcXVpeic7Cgp2YXIgZ2V0RGVmYXVsdFN0YXRlID0gZnVuY3Rpb24gZ2V0RGVmYXVsdFN0YXRlKCkgewogIHJldHVybiB7CiAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgaWQ6IDEsCiAgICBmaWVsZDogJycsCiAgICBudW06IDMsCiAgICBxdWVzdGlvbnM6IFtdLAogICAgcXVpenplczogW10sCiAgICByYW5kb21VUkw6ICcnLAogICAgdGVzdDogbnVsbCwKICAgIG5vdGljZTogZmFsc2UsCiAgICBzdGVwOiAxCiAgfTsKfTsKCmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVN0b3JlKHsKICBtb2R1bGVzOiB7CiAgICBzaWdudXA6IHNpZ251cCwKICAgIGJvYXJkOiBib2FyZCwKICAgIHF1aXo6IHF1aXoKICB9LAogIHN0YXRlOiBnZXREZWZhdWx0U3RhdGUoKSwKICBwbHVnaW5zOiBbY3JlYXRlUGVyc2lzdGVkU3RhdGUoewogICAga2V5OiAncXVpemtleScsCiAgICAvLyDoqK3lrprjgZfjgarjgZHjgozjgbAndnVleCcKICAgIHBhdGhzOiBbJ2lkJywgJ251bScsICd0ZXN0JywgInNpZ251cC5kamFuZ29Vc2VyIiwgInNpZ251cC5VSUQiLCAiYm9hcmQuYW5zd2VyZWRRdWVzdGlvbiIsICJib2FyZC5yZWNjb21lbmRlZFF1ZXN0aW9uIiwgImJvYXJkLmNlbnRlclRhZyIsICJxdWl6LnF1aXpOYW1lSWQiLCAicXVpei5maWVsZE5hbWVJZCJdLAogICAgLy8g5L+d5a2Y44GZ44KL44Oi44K444Ol44O844Or77ya6Kit5a6a44GX44Gq44GR44KM44Gw5YWo6YOo44CCCiAgICBzdG9yYWdlOiB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UgLy8g6Kit5a6a44GX44Gq44GR44KM44GwbG9jYWxTdG9yYWdlCgogIH0pXSwKICBnZXR0ZXJzOiB7CiAgICBxdWVzdGlvbnMyOiBmdW5jdGlvbiBxdWVzdGlvbnMyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5xdWVzdGlvbnM7CiAgICB9LAogICAgcXVpenplczI6IGZ1bmN0aW9uIHF1aXp6ZXMyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5xdWl6emVzOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRJc0xvYWRpbmc6IGZ1bmN0aW9uIHNldElzTG9hZGluZyhzdGF0ZSwgc3RhdHVzKSB7CiAgICAgIHN0YXRlLmlzTG9hZGluZyA9IHN0YXR1czsKICAgIH0sCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoc3RhdGUpIHsKICAgICAgT2JqZWN0LmFzc2lnbihzdGF0ZSwgZ2V0RGVmYXVsdFN0YXRlKCkpOwogICAgICByb3V0ZXIucHVzaCgnLycpOwogICAgfSwKICAgIGdldFVSTHM6IGZ1bmN0aW9uIGdldFVSTHMoc3RhdGUsIGl0ZW0pIHsKICAgICAgc3RhdGUubnVtID0gaXRlbS5udW07IC8vIHN0YXRlLmZpZWxkPSBmaWVsZAoKICAgICAgc3RhdGUuaWQgPSBpdGVtLnN0YXR1czsKICAgICAgc3RhdGUudGVzdCA9IGl0ZW0udGVzdDsKICAgICAgc3RhdGUucmFuZG9tVVJMID0gIi9xdWl6LyIuY29uY2F0KHN0YXRlLmlkKTsKICAgIH0sCiAgICAvLyBnZXRSYW5kb21RdWVzdGlvbihzdGF0ZSxhcnJheSl7CiAgICAvLyAgIGZvciAobGV0IGkgPSBhcnJheS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgewogICAgLy8gICAgIGxldCByID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSkKICAgIC8vICAgICBsZXQgdG1wID0gYXJyYXlbaV0KICAgIC8vICAgICBhcnJheVtpXSA9IGFycmF5W3JdCiAgICAvLyAgICAgYXJyYXlbcl0gPSB0bXAKICAgIC8vICAgICB9CiAgICAvLyAgIGZvciAoIGxldCBrID0wOyBrIDwgYXJyYXkubGVuZ3RoOyBrKyspewogICAgLy8gICAgIGZvciAobGV0IGkgPSBhcnJheVtrXS5hbnN3ZXIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsKICAgIC8vICAgICAgIGxldCByID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGkgKyAxKSkKICAgIC8vICAgICAgIGxldCB0bXAgPSBhcnJheVtrXS5hbnN3ZXJbaV0KICAgIC8vICAgICAgIGFycmF5W2tdLmFuc3dlcltpXSA9IGFycmF5W2tdLmFuc3dlcltyXQogICAgLy8gICAgICAgYXJyYXlba10uYW5zd2VyW3JdID0gdG1wCiAgICAvLyAgICAgICB9fQogICAgLy8gICAgIHJldHVybiBhcnJheQogICAgLy8gfSwKICAgIC8vIHNldFF1ZXN0aW9uczooc3RhdGUscXVlc3Rpb25zKSA9PiAoc3RhdGUucXVlc3Rpb25zID0gcXVlc3Rpb25zKSwKICAgIC8vIHNldFF1aXo6KHN0YXRlLHF1aXp6ZXMpID0+IChzdGF0ZS5xdWl6emVzID0gcXVpenplcyksCiAgICAvLyBpbml0aWFsCiAgICB0ZXN0SGFuZGxlcjogZnVuY3Rpb24gdGVzdEhhbmRsZXIoc3RhdGUpIHsKICAgICAgc3RhdGUudGVzdCA9IGZhbHNlOwogICAgfSwKICAgIG5vdGljZUhhbmRsZXI6IGZ1bmN0aW9uIG5vdGljZUhhbmRsZXIoc3RhdGUpIHsKICAgICAgc3RhdGUubm90aWNlID0gdHJ1ZTsKICAgIH0sCiAgICBub3RpY2VPZmY6IGZ1bmN0aW9uIG5vdGljZU9mZihzdGF0ZSkgewogICAgICBzdGF0ZS5ub3RpY2UgPSBmYWxzZTsKICAgIH0sCiAgICBhZGRTdGVwOiBmdW5jdGlvbiBhZGRTdGVwKHN0YXRlKSB7CiAgICAgIHN0YXRlLnN0ZXAgKz0gMTsKICAgIH0sCiAgICBzdGVwQ2xlYXI6IGZ1bmN0aW9uIHN0ZXBDbGVhcihzdGF0ZSkgewogICAgICBzdGF0ZS5zdGVwID0gMTsKICAgIH0gLy8gcXVpelJvdXRlcihpLGYsbil7CiAgICAvLyAgIHN0YXRlLmlkID0gaQogICAgLy8gICBzdGF0ZS5maWVsZCA9IGYKICAgIC8vICAgc3RhdGUubnVtID0gbgogICAgLy8gICByZXR1cm4geyBuYW1lOiAnUXVpeicsIHBhcmFtczp7IGlkOnN0YXRlLmlkLCBmaWVsZDpzdGF0ZS5maWVsZCwgbnVtOnN0YXRlLm51bX19CiAgICAvLyB9CgogIH0gLy8gYWN0aW9uczogewogIC8vICAgYXN5bmMgZ2V0cXVpejIoeyBzdGF0ZSwgY29tbWl0IH0pewogIC8vICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYC9hcGkvcXVpenplcy8/aWQ9JHtzdGF0ZS5pZH1gKQogIC8vICAgICAuY2F0Y2goZXJyb3IgPT4gewogIC8vICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicsZXJyb3IubWVzc2FnZSkKICAvLyAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgLy8gICAgIGNvbW1pdCgnc2V0UXVpeicscmVzcG9uc2UuZGF0YSk7CiAgLy8gICAgIGNvbnNvbGUubG9nKCdhY3Rpb24nLHJlc3BvbnNlLmRhdGEpCiAgLy8gICAgIGNvbnNvbGUubG9nKHN0YXRlLmlzTG9hZGluZykKICAvLyAgICAgfSwKICAvLyAgIGFzeW5jIGdldHF1ZXN0aW9uczIoeyBzdGF0ZSwgY29tbWl0IH0pewogIC8vICAgICBjb25zb2xlLmxvZygnYWN0aW9uMicsc3RhdGUubnVtKQogIC8vICAgICB0cnl7CiAgLy8gICAgICAgbGV0IHJlc3BvbnNlMiA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS9xdWVzdGlvbnMvcXVpenplcy8/cXVpej0ke3N0YXRlLmlkfSZudW09JHtzdGF0ZS5udW19YCkKICAvLyAgICAgICBjb21taXQoJ2dldFJhbmRvbVF1ZXN0aW9uJyxyZXNwb25zZTIuZGF0YSkKICAvLyAgICAgICBjb21taXQoJ3NldFF1ZXN0aW9ucycscmVzcG9uc2UyLmRhdGEpOwogIC8vICAgICAgIC8vIGNvbW1pdCgnc2V0SXNMb2FkaW5nJywgZmFsc2UpCiAgLy8gICAgIH0KICAvLyAgICAgY2F0Y2h7CiAgLy8gICAgICAgY29tbWl0KCdzZXRJc0xvYWRpbmcnLCBmYWxzZSkKICAvLyAgICAgICByb3V0ZXIucHVzaCh7IG5hbWU6ICdOb3Rmb3VuZCcgfSkKICAvLyAgICAgICAgICAgICAgICAgICAgICAgIH0KICAvLyAgIH0sCiAgLy8gfSwKCn0pOw=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js"],"names":["createStore","createPersistedState","axios","router","signup","board","quiz","getDefaultState","isLoading","id","field","num","questions","quizzes","randomURL","test","notice","step","modules","state","plugins","key","paths","storage","window","sessionStorage","getters","questions2","quizzes2","mutations","setIsLoading","status","reset","Object","assign","push","getURLs","item","testHandler","noticeHandler","noticeOff","addStep","stepClear"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport  signup  from './modules/signup'\nimport  board  from './modules/board'\nimport  quiz  from './modules/quiz'\n\nlet getDefaultState = () => {\n  return {\n    isLoading: false,\n    id: 1,\n    field:'',\n    num:3,\n    questions:[],\n    quizzes:[],\n    randomURL:'',\n    test:null,\n    notice:false,\n    step:1,\n  }}\n\n\nexport default createStore({\n  modules: {\n    signup,\n    board,\n    quiz\n  },\n  state: getDefaultState(),\n  plugins: [\n    createPersistedState({\n      key: 'quizkey',  // 設定しなければ'vuex'\n      paths: [\n        'id',\n        'num',\n        'test',\n        \"signup.djangoUser\",\n        \"signup.UID\",\n        \"board.answeredQuestion\",\n        \"board.reccomendedQuestion\",\n        \"board.centerTag\",\n        \"quiz.quizNameId\",\n        \"quiz.fieldNameId\"\n      ],  // 保存するモジュール：設定しなければ全部。\n      storage: window.sessionStorage,  // 設定しなければlocalStorage\n    })],\n  getters:{\n    questions2:(state) => state.questions,\n    quizzes2:(state) => state.quizzes\n  },\n  mutations: {\n    setIsLoading(state, status) {\n      state.isLoading = status\n    },\n    reset(state) {\n      Object.assign(state, getDefaultState())\n      router.push('/')\n    },\n    getURLs(state,item){\n      state.num = item.num\n      // state.field= field\n      state.id = item.status\n      state.test = item.test\n      state.randomURL = `/quiz/${state.id}`\n    },\n    // getRandomQuestion(state,array){\n    //   for (let i = array.length - 1; i >= 0; i--) {\n    //     let r = Math.floor(Math.random() * (i + 1))\n    //     let tmp = array[i]\n    //     array[i] = array[r]\n    //     array[r] = tmp\n    //     }\n    //   for ( let k =0; k < array.length; k++){\n    //     for (let i = array[k].answer.length - 1; i >= 0; i--) {\n    //       let r = Math.floor(Math.random() * (i + 1))\n    //       let tmp = array[k].answer[i]\n    //       array[k].answer[i] = array[k].answer[r]\n    //       array[k].answer[r] = tmp\n    //       }}\n    //     return array\n    // },\n    // setQuestions:(state,questions) => (state.questions = questions),\n    // setQuiz:(state,quizzes) => (state.quizzes = quizzes),\n    // initial\n    testHandler(state){\n      state.test = false\n    },\n    noticeHandler(state){\n      state.notice = true\n      \n    },\n    noticeOff(state){\n      state.notice = false  \n    },\n    addStep(state){\n      state.step += 1\n    },\n    stepClear(state){\n      state.step = 1\n    },\n    // quizRouter(i,f,n){\n    //   state.id = i\n    //   state.field = f\n    //   state.num = n\n    //   return { name: 'Quiz', params:{ id:state.id, field:state.field, num:state.num}}\n    // }\n  },\n  // actions: {\n  //   async getquiz2({ state, commit }){\n  //     let response = await axios.get(`/api/quizzes/?id=${state.id}`)\n  //     .catch(error => {\n  //       console.log('error',error.message)\n  //                        })\n  //     commit('setQuiz',response.data);\n  //     console.log('action',response.data)\n  //     console.log(state.isLoading)\n  //     },\n  //   async getquestions2({ state, commit }){\n  //     console.log('action2',state.num)\n  //     try{\n  //       let response2 = await axios.get(`/api/questions/quizzes/?quiz=${state.id}&num=${state.num}`)\n  //       commit('getRandomQuestion',response2.data)\n  //       commit('setQuestions',response2.data);\n  //       // commit('setIsLoading', false)\n  //     }\n  //     catch{\n  //       commit('setIsLoading', false)\n  //       router.push({ name: 'Notfound' })\n        \n  //                        }\n      \n  //   },\n  // },\n})\n"]}]}