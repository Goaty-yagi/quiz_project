{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport axios from 'axios';\nimport { mapGetters, mapActions } from 'vuex';\nimport Result from '@/components/quiz_components/Result.vue';\nimport Start from '@/components/quiz_components/Start.vue';\nexport default {\n  components: {\n    Result: Result,\n    Start: Start\n  },\n  props: [\"forQuizPageInfo\"],\n  data: function data() {\n    return {\n      questionLengthCounter: 1,\n      questionLength: '',\n      SelectedAnswerInfo: {},\n      selectedAnswer: {},\n      answerIDAndOrder: {},\n      showResult: false,\n      showNextOrFinishButton: false,\n      result: false,\n      startQuiz: false,\n      progressBarSwitch: false,\n      pagination: {\n        a: 0,\n        b: 1\n      },\n      resultHandleDict: {\n        isCorrect: false,\n        IsNotCorrect: false,\n        answerIDType3: '',\n        questionType4: false,\n        answerAllTrueType4: false,\n        answerIDType4: '',\n        answerIDType5: ''\n      },\n      countupDict: {\n        answerID: '',\n        questionID: '',\n        questionType: ''\n      },\n      userStatusDict: {\n        status: '',\n        isCorrect: 0,\n        isFalse: 0\n      },\n      maxSelectReach: false,\n      selectedIndexNum: null,\n      showSelectNum: true,\n      selectedOrderAnswer: {},\n      selectAnswerCounter: 0,\n      NumOfIscorrect: 0,\n      showError: false,\n      myQuestionIdList: [],\n      questions: ''\n    };\n  },\n  created: function created() {// this.getquiz()\n    // this.getquestions()\n  },\n  mounted: function mounted() {\n    console.log(\"mounted MYQuizP\", this.getMyQuestion);\n    this.getMyQuestionIds(this.getMyQuestion);\n    this.getQuestionFromMyQuestion();\n    this.$store.commit('setQuizTakerID', this.quizTaker);\n    this.questionLength = this.questions.length;\n    this.startQuiz = true;\n    this.SelectedAnswerInfo = {};\n  },\n  watch: {\n    questions: function questions(v) {\n      if (this.questions) {\n        this.questionLength = this.questions.length; // this.userStatusDict.status = this.questions[0]\n      }\n    } // startQuiz:function(v) {\n    //     if(v == false){\n    //         let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n    //         let a = document.getElementById('progress')\n    //         a.setAttribute('style',`width:${percentage}%`)}\n    // }\n\n  },\n  computed: mapGetters(['getMyQuestion', 'getMyQuizInfo', 'quizTaker']),\n  // myQuestion(){\n  //     return this.$store.state.signup.myQuestion\n  // },\n  methods: {\n    // ...mapActions(['getquestions']),\n    getQuestionFromMyQuestion: function getQuestionFromMyQuestion() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$store.commit('setIsLoading', true);\n\n                _context.next = 3;\n                return axios.get(\"/api/my-question-list?ids=\".concat(_this.myQuestionIdList)).catch(function (e) {\n                  var logger = {\n                    message: \"in components/quiz_components/MyQuiz/MyQuizPracticet/getQuestionFromMyQuestion. couldn't get QuestionFromMyQuestion\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this.$store.commit('setLogger', logger);\n\n                  _this.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 3:\n                response = _context.sent;\n                _this.questions = _this.getRandomQuestion(response.data);\n                console.log(\"GMQQQ\", _this.questions);\n\n                _this.$store.commit('setIsLoading', false);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getRandomQuestion: function getRandomQuestion(array) {\n      console.log('in randomQ', array); // for (let i = array.length - 1; i >= 0; i--) {\n      //     let r = Math.floor(Math.random() * (i + 1))\n      //     let tmp = array[i]\n      //     array[i] = array[r]\n      //     array[r] = tmp\n      // }\n\n      for (var k = 0; k < array.length; k++) {\n        for (var i = array[k].answer.length - 1; i >= 0; i--) {\n          var r = Math.floor(Math.random() * (i + 1));\n          var tmp = array[k].answer[i];\n          array[k].answer[i] = array[k].answer[r];\n          array[k].answer[r] = tmp;\n        }\n      }\n\n      return array;\n    },\n    nextQuestion: function nextQuestion(questionType, questionID, quiz) {\n      this.$store.commit('setQuizID', quiz);\n      this.handleCounyUpDict(this.selectedAnswer, questionType, questionID);\n      this.pagination.a += 1;\n      this.pagination.b += 1;\n      this.selectedIndexNum = null;\n      this.showNextOrFinishButton = false;\n      this.selectAnswerHandler(questionType);\n      this.NumOfIscorrect = 0;\n      this.maxSelectReach = false;\n      this.selectedOrderAnswer = {};\n      this.selectedAnswer = {};\n      this.selectAnswerCounter = 0;\n      this.questionLengthCounter += 1;\n      this.answerIDAndOrder = {}; // this. progressBar()\n\n      this.scrollTop();\n    },\n    Finish: function Finish(questionType, questionID, quiz) {\n      this.$store.commit('setQuizID', quiz);\n      this.handleCounyUpDict(this.selectedAnswer, questionType, questionID);\n      this.updateQuizTaker();\n      this.showResult = true;\n      this.result = true;\n      this.selectedIndexNum = null;\n      this.selectAnswerHandler(questionType);\n      this.NumOfIscorrect = 0;\n      this.maxSelectReach = false;\n      this.selectedOrderAnswer = {};\n      this.selectedAnswer = {};\n      this.selectAnswerCounter = 0;\n      this.answerIDAndOrder = {};\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    onClick: function onClick(answerindex, answer, question) {\n      // this is for 2 things,\n      // first is for controling CSS return selectedIndexNum\n      // which used for questionType 3, and selectedOrderAnswer\n      // which used for questionType 4 and 5.\n      // second is for selected-answer and is_correct.\n      // return selectedAnswer for questionType 3.\n      // for questionType 4, use getAnswerIDAndOrder function.\n      // for questionType 5, use getIDAndIsCorrect function.\n      this.progressBar();\n\n      if (question.question_type == 3) {\n        if (this.selectedIndexNum == answerindex) {\n          this.selectedIndexNum = null;\n          this.selectedAnswer = {};\n          this.showNextOrFinishButton = false;\n        } else {\n          this.selectedIndexNum = answerindex;\n          this.selectedAnswer['answerID'] = answer.id;\n          this.selectedAnswer['isCorrect'] = answer.is_correct;\n          this.handleShowNextOrFinishButton();\n        }\n      } else if (question.question_type == 4) {\n        if (this.selectedOrderAnswer[answerindex + 1] && this.questions.length >= this.selectAnswerCounter) {\n          this.selectedOrderAnswer = this.changeOrder(this.selectedOrderAnswer, answerindex + 1);\n          this.getAnswerIDAndOrder(answer.answer_id, this.selectAnswerCounter);\n          this.selectAnswerCounter -= 1;\n          this.showNextOrFinishButton = false;\n        } else {\n          this.selectAnswerCounter += 1;\n          this.selectedOrderAnswer[answerindex + 1] = this.selectAnswerCounter;\n          this.getAnswerIDAndOrder(answer.answer_id, this.selectAnswerCounter);\n\n          if (Object.keys(this.selectedOrderAnswer).length == question.answer.length) {\n            this.handleShowNextOrFinishButton();\n          }\n        }\n      } else if (question.question_type == 5) {\n        this.getNumOfIscorrect(question.answer);\n\n        if (this.selectedOrderAnswer[answerindex + 1]) {\n          this.selectedOrderAnswer = this.changeOrder(this.selectedOrderAnswer, answerindex + 1);\n          this.getIDAndIsCorrect(answer.id, answer.is_correct);\n          this.selectAnswerCounter -= 1;\n\n          if (question.max_select) {\n            if (Object.keys(this.selectedOrderAnswer).length < question.max_select) {\n              this.showNextOrFinishButton = false;\n              this.maxSelectReach = false;\n            }\n          } else if (Object.keys(this.selectedOrderAnswer).length == 0) {\n            this.showNextOrFinishButton = false;\n          }\n        } else {\n          this.selectAnswerCounter += 1;\n          this.selectedOrderAnswer[answerindex + 1] = this.selectAnswerCounter;\n          this.getIDAndIsCorrect(answer.id, answer.is_correct);\n\n          if (question.max_select) {\n            if (Object.keys(this.selectedOrderAnswer).length == question.max_select) {\n              this.handleShowNextOrFinishButton();\n              this.maxSelectReach = true;\n            }\n          } else {\n            this.handleShowNextOrFinishButton();\n          }\n        }\n      }\n    },\n    changeOrder: function changeOrder(dict, index) {\n      // if deleted, the num or nums before the deleted items order num\n      // change\n      var orderNum = dict[index];\n      delete dict[index];\n\n      if (dict) {\n        var changeDict = {};\n        Object.keys(dict).forEach(function (key) {\n          if (dict[key] > orderNum) {\n            dict[key] -= 1;\n          }\n        });\n      }\n\n      return dict;\n    },\n    selectAnswerHandler: function selectAnswerHandler(questionType) {\n      var _this2 = this;\n\n      // this is get informations about selected-answer for result component\n      // return SelectedAnswerInfo\n      if (questionType == 3) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect;\n        this.handleUserStatus(this.selectedAnswer.isCorrect);\n        this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID;\n      } else if (questionType == 4) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        var stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function (a) {\n          return Number(a);\n        });\n\n        if (JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true;\n          this.handleUserStatus(true);\n        } else {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false;\n          this.handleUserStatus(false);\n        }\n\n        this.makeOrderBoolean();\n        this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder;\n      } else if (questionType == 5) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        var isCorrectCounter = 0;\n        var type5IsCorrect = true;\n        Object.values(this.selectedAnswer).forEach(function (value) {\n          if (value == false) {\n            _this2.SelectedAnswerInfo[_this2.questionLengthCounter]['isCorrect'] = false;\n\n            _this2.handleUserStatus(false);\n\n            type5IsCorrect = false;\n          } else {\n            isCorrectCounter += 1;\n          }\n        });\n\n        if (this.NumOfIscorrect == isCorrectCounter && type5IsCorrect) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true;\n          this.handleUserStatus(true);\n        } else if (type5IsCorrect == false && isCorrectCounter > 0) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null;\n          this.handleUserStatus(false);\n        }\n\n        this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer;\n      }\n    },\n    getAnswerIDAndOrder: function getAnswerIDAndOrder(answerID, orderNum) {\n      // this is for collecting answer from questionType 4\n      if (this.questionLengthCounter in this.answerIDAndOrder) {\n        if (orderNum in this.answerIDAndOrder[this.questionLengthCounter]) {\n          this.answerIDAndOrder[this.questionLengthCounter] = this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter], orderNum);\n        } else {\n          this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID;\n        }\n      } else {\n        this.answerIDAndOrder[this.questionLengthCounter] = {};\n        this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID;\n      }\n    },\n    makeOrderBoolean: function makeOrderBoolean() {\n      // this is for AnswerIDAndOrder{1:1} to be {1:true}\n      var newDict = {};\n      var IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function (a) {\n        return Number(a);\n      });\n\n      for (var i = 0; i < IntegerKeys.length; i++) {\n        if (IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]) {\n          newDict[i + 1] = true;\n        } else {\n          newDict[i + 1] = false;\n        }\n      }\n\n      this.answerIDAndOrder = newDict;\n    },\n    getIDAndIsCorrect: function getIDAndIsCorrect(id, isCorrect) {\n      // this is for questionType 5 \n      if (id in this.selectedAnswer) {\n        delete this.selectedAnswer[id];\n      } else {\n        this.selectedAnswer[id] = isCorrect;\n      }\n    },\n    getNumOfIscorrect: function getNumOfIscorrect(answers) {\n      var _this3 = this;\n\n      // this is for questionType 5\n      if (this.NumOfIscorrect == false) {\n        Object.values(answers).forEach(function (value) {\n          if (value.is_correct) {\n            _this3.NumOfIscorrect += 1;\n          }\n        });\n      }\n    },\n    handleShowNextOrFinishButton: function handleShowNextOrFinishButton() {\n      this.showNextOrFinishButton = true;\n    },\n    resultAnswerHandler: function resultAnswerHandler() {\n      var _this4 = this;\n\n      if (this.result) {\n        this.resultHandleDict.isCorrect = false;\n        this.resultHandleDict.isNotCorrect = false;\n        this.resultHandleDict.answerAllTrueType4 = false;\n        this.resultHandleDict.questionType4 = false;\n        this.resultHandleDict.answerIDType3 = '';\n        this.resultHandleDict.answerIDType4 = '';\n        this.resultHandleDict.answerIDType5 = '';\n        Object.keys(this.SelectedAnswerInfo).forEach(function (key) {\n          if (key == _this4.questionLengthCounter) {\n            if (_this4.SelectedAnswerInfo[key].isCorrect) {\n              if (_this4.SelectedAnswerInfo[key].questionType == 4) {\n                _this4.resultHandleDict.answerAllTrueType4 = true;\n              } else if (_this4.SelectedAnswerInfo[key].questionType == 5) {\n                _this4.resultHandleDict.answerIDType5 = _this4.SelectedAnswerInfo[key].selectedAnswer;\n              }\n\n              _this4.resultHandleDict.isCorrect = true;\n            } else if (_this4.SelectedAnswerInfo[key].isCorrect == false && _this4.SelectedAnswerInfo[key].questionType == 3) {\n              _this4.resultHandleDict.isCorrect = true;\n              _this4.resultHandleDict.isNotCorrect = true;\n              _this4.resultHandleDict.answerIDType3 = _this4.SelectedAnswerInfo[key].answerID;\n            } else if (_this4.SelectedAnswerInfo[key].questionType == 5) {\n              _this4.resultHandleDict.isCorrect = true;\n              _this4.resultHandleDict.isNotCorrect = true;\n              _this4.resultHandleDict.answerIDType5 = _this4.SelectedAnswerInfo[key].selectedAnswer;\n            } else if (_this4.SelectedAnswerInfo[key].isCorrect == false && _this4.SelectedAnswerInfo[key].questionType == 4) {\n              _this4.resultHandleDict.questionType4 = true;\n              _this4.resultHandleDict.isCorrect = true;\n              _this4.resultHandleDict.isNotCorrect = true;\n              _this4.resultHandleDict.answerIDType4 = _this4.SelectedAnswerInfo[key].orderAnswer;\n            }\n          }\n        });\n      }\n    },\n    type3And5CheckResult: function type3And5CheckResult(selectedAnswer5, selectedAnswer3, answerID) {\n      if (this.result) {\n        if (this.SelectedAnswerInfo[this.questionLengthCounter].questionType == 5) {\n          if (answerID in selectedAnswer5) {\n            return true;\n          } else {\n            return false;\n          }\n        } else if (this.SelectedAnswerInfo[this.questionLengthCounter].questionType == 3) {\n          if (answerID == selectedAnswer3) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n    },\n    handleCounyUpDict: function handleCounyUpDict(selectedAnswer, questionType, questionID) {\n      var _this5 = this;\n\n      this.countupDict.questionType = questionType;\n      this.countupDict.questionID = questionID;\n\n      if (questionType == 5) {\n        this.countupDict.answerID = Object.keys(selectedAnswer);\n      } else if (questionType == 3) {\n        Object.keys(selectedAnswer).forEach(function (key) {\n          if (key = \"answerID\") {\n            _this5.countupDict.answerID = selectedAnswer[key];\n          }\n        });\n      }\n\n      console.log(\"HCUD\", this.countupDict);\n      this.$store.dispatch('countUpAnswerAndQuestion', this.countupDict);\n    },\n    handlePagination: function handlePagination(a, b) {\n      // this is for result component\n      this.pagination.a = a;\n      this.pagination.b = b;\n      this.questionLengthCounter = b;\n    },\n    HandleShowResult: function HandleShowResult() {\n      this.showResult = !this.showResult;\n    },\n    handleResult: function handleResult() {\n      this.result = !this.result;\n    },\n    handleUserStatus: function handleUserStatus(selectedAnswer) {\n      // this is for only is_true and is_false\n      console.log(selectedAnswer);\n      this.userStatusDict.isCorrect = 0;\n      this.userStatusDict.isFalse = 0;\n\n      if (selectedAnswer) {\n        this.userStatusDict.isCorrect = 1;\n      } else {\n        this.userStatusDict.isFalse = 1;\n      }\n\n      this.$store.dispatch('userStatusPost', this.userStatusDict);\n      console.log('HUS', this.userStatusDict);\n    },\n    getQuestionStatus: function getQuestionStatus(lavel, status) {\n      this.userStatusDict.status = status;\n      return lavel;\n    },\n    updateQuizTaker: function updateQuizTaker() {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.patch(\"api/quiz-taker-practice/?quiz_taker=\".concat(_this6.$store.state.signup.djangoUser.quiz_taker[0].id)).catch(function (e) {\n                  var logger = {\n                    message: \"in MyQuizPractice/updateQuizTaker. couldn't update QuizTaker\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this6.$store.commit('setLogger', logger);\n\n                  _this6.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    resultNext: function resultNext() {\n      this.pagination.a += 1;\n      this.pagination.b += 1;\n      this.questionLengthCounter += 1;\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    resultBack: function resultBack() {\n      this.pagination.a -= 1;\n      this.pagination.b -= 1;\n      this.questionLengthCounter -= 1;\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    scrollTop: function scrollTop() {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    closeStart: function closeStart() {\n      console.log(\"clicked\");\n      this.startQuiz = false;\n    },\n    playAgain: function playAgain() {\n      console.log('clicked play again');\n      this.startQuiz = true;\n      this.attributeReset();\n    },\n    attributeReset: function attributeReset() {\n      this.result = false;\n      this.showResult = false;\n      this.pagination.a = 0;\n      this.pagination.b = 1;\n      this.selectedIndexNum = null;\n      this.showNextOrFinishButton = false;\n      this.SelectedAnswerInfo = {};\n      this.NumOfIscorrect = 0;\n      this.maxSelectReach = false;\n      this.selectedOrderAnswer = {};\n      this.selectedAnswer = {};\n      this.selectAnswerCounter = 0;\n      this.questionLengthCounter = 1;\n      this.resultHandleDict.isCorrect = false, this.resultHandleDict.IsNotCorrect = false, this.resultHandleDict.answerIDType3 = '', this.resultHandleDict.questionType4 = false, this.resultHandleDict.answerAllTrueType4 = false, this.resultHandleDict.answerIDType4 = '', this.resultHandleDict.answerIDType5 = '';\n      this.answerIDAndOrder = {}; // this.getquestions()\n    },\n    backQuizHome: function backQuizHome() {\n      this.$emit('backQuizHome');\n      this.attributeReset();\n    },\n    progressBar: function progressBar() {\n      this.progressBarSwitch = true;\n      console.log(this.questionLengthCounter, this.questions.length);\n      var percentage = this.questionLengthCounter / this.questions.length * 100;\n      var a = document.getElementById('progress');\n      a.setAttribute('style', \"width:\".concat(percentage, \"%\"));\n    },\n    deleteMyQuestion: function deleteMyQuestion(question) {\n      console.log(\"INDELETE\", question, this.myQuestionIdList);\n      var payload = {\n        \"question\": question.id,\n        \"myQuiz\": this.getMyQuizInfo.id\n      };\n\n      if (!this.myQuestionIdList.includes(question.id)) {\n        if (this.myQuestionIdList.length >= this.getMyQuizInfo.max) {\n          this.showError = true;\n          setTimeout(this.showErrorFalse, 3000);\n        } else {\n          this.myQuestionIdList.push(question.id);\n          console.log(\"added\", this.myQuestionIdList);\n          this.$store.commit(\"addMyQuestion\", {\n            'question': question\n          });\n          this.$store.dispatch(\"createAndDeleteMyQuiz\", payload);\n        }\n      } else {\n        this.myQuestionIdList = this.myQuestionIdList.filter(function (item) {\n          return item != question.id;\n        });\n        console.log(\"deleted\", this.myQuestionIdList);\n        this.$store.commit(\"deleteMyQuestion\", question.id);\n        this.$store.dispatch(\"createAndDeleteMyQuiz\", payload);\n      }\n    },\n    getMyQuestionIds: function getMyQuestionIds(myQuestion) {\n      var _iterator = _createForOfIteratorHelper(myQuestion),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n          this.myQuestionIdList.push(i.question.id);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      console.log('GMQI', this.myQuestionIdList);\n    },\n    showErrorFalse: function showErrorFalse() {\n      this.showError = false;\n    } // setTimeout(context.commit, 3000,\"resetNotifications\")     \n    // handleShowRegister(questionId){\n    //     console.log(this.getMyQuestion)\n    //     try{\n    //         for(let i of this.getMyQuestion){\n    //             console.log(\"HSR\",i.question.id,questionId)\n    //             if(i.question.id==questionId){\n    //                 this.showRegister= false\n    //                 return false\n    //             }\n    //         }\n    //         this.showRegister= true\n    //         return true\n    //     }\n    //     catch{\n    //         // this.showRegister= true\n    //         // return true\n    //     }\n    // }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","mapGetters","mapActions","Result","Start","components","props","data","questionLengthCounter","questionLength","SelectedAnswerInfo","selectedAnswer","answerIDAndOrder","showResult","showNextOrFinishButton","result","startQuiz","progressBarSwitch","pagination","a","b","resultHandleDict","isCorrect","IsNotCorrect","answerIDType3","questionType4","answerAllTrueType4","answerIDType4","answerIDType5","countupDict","answerID","questionID","questionType","userStatusDict","status","isFalse","maxSelectReach","selectedIndexNum","showSelectNum","selectedOrderAnswer","selectAnswerCounter","NumOfIscorrect","showError","myQuestionIdList","questions","created","mounted","console","log","getMyQuestion","getMyQuestionIds","getQuestionFromMyQuestion","$store","commit","quizTaker","length","watch","v","computed","methods","get","catch","logger","message","path","window","location","pathname","actualErrorName","e","name","actualErrorMessage","router","push","response","getRandomQuestion","array","k","i","answer","r","Math","floor","random","tmp","nextQuestion","quiz","handleCounyUpDict","selectAnswerHandler","scrollTop","Finish","updateQuizTaker","resultAnswerHandler","onClick","answerindex","question","progressBar","question_type","id","is_correct","handleShowNextOrFinishButton","changeOrder","getAnswerIDAndOrder","answer_id","Object","keys","getNumOfIscorrect","getIDAndIsCorrect","max_select","dict","index","orderNum","changeDict","forEach","key","handleUserStatus","stringKeys","map","Number","JSON","stringify","values","makeOrderBoolean","isCorrectCounter","type5IsCorrect","value","newDict","IntegerKeys","answers","isNotCorrect","orderAnswer","type3And5CheckResult","selectedAnswer5","selectedAnswer3","dispatch","handlePagination","HandleShowResult","handleResult","getQuestionStatus","lavel","patch","state","signup","djangoUser","quiz_taker","resultNext","resultBack","scrollTo","top","behavior","closeStart","playAgain","attributeReset","backQuizHome","$emit","percentage","document","getElementById","setAttribute","deleteMyQuestion","payload","getMyQuizInfo","includes","max","setTimeout","showErrorFalse","filter","item","myQuestion"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/Logger.vue"],"sourcesContent":["<template>\n    <div class=\"quiz-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <!-- <Start v-if=\"startQuiz&&questionLength&&$store.state.isLoading==false\"\n            :questionLength=\"questionLength\"\n            :forQuizPageInfo=\"forQuizPageInfo\"\n            @closeStart=\"closeStart\"/> -->\n            <div v-if=\"!$store.state.isLoading\">\n                <!-- {{userStatusDict.status.status[0]}} -->\n                <p class=\"quiz-description title-white\">My Quiz</p>\n                <div class=\"progress-wrapper\">\n                    <div v-if=\"result==false\" class=\"progress-bar-outer\">\n                        <div id=\"progress\" style=\"width:0%\" class=\"progress-bar-inner\"></div>\n                    </div>\n                </div>\n\n                <div v-if=\"showResult==false\" class='quiz-countainer'>\n                    <div\n                    class=\"question-loop\"\n                    v-for=\"(question,questionindex) in questions.slice(pagination.a,pagination.b)\"\n                    v-bind:key=\"questionindex\">\n                        <div class='question-wrapper'>\n                            <div class=\"question-header\"><i class='q'>Q</i>第{{ questionLengthCounter }}問</div>\n                            <div class='question-body'>{{ getQuestionStatus(question.label,question.status[0]) }}</div>\n                        </div>\n                        \n                        <!-- <div :class='showPic(question.image)'> -->\n                        <div class=\"image-container\" v-if=\"question.image\">\n                            <img class=\"image\" v-bind:src=\"question.get_image\"/>\n                        </div>\n\n                        <!-- answer part -->\n                        <!-- questiontype 3 is '選択'\n                        ４ is '並び替え'\n                        5 is '多答' -->\n                        <div class='answer-wrapper'>\n                            <button \n                            class=\"answer-loop\"\n                            :class=\"{\n                            'selected-answer':selectedIndexNum==answerindex||\n                            answerindex+1 in selectedOrderAnswer,\n                            'is-correct-answer':resultHandleDict.isCorrect&&answer.is_correct||\n                            resultHandleDict.answerAllTrueType4||\n                            resultHandleDict.answerIDType4[answer.answer_id],\n                            'isnot-correct-answer':resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                            resultHandleDict.answerIDType5[answer.id]==false||\n                            resultHandleDict.answerIDType4[answer.answer_id]==false,\n                            'answer-hover':!result}\"\n                            @click=\"e => result==false && onClick(answerindex,answer,question)\"\n                            :disabled=\"maxSelectReach&&answer.id in selectedAnswer==false\"\n                            v-for=\"(answer,answerindex) in question.answer\"\n                            v-bind:key=\"answerindex\">\n                                <div class='answer-select-bases'>\n                                    <div class=\"answer-select\">\n                                        <div class=\"selecter\">{{ String.fromCharCode(answerindex+65) }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"answer-label-bases\">\n                                    <div class=\"answer-label\">\n                                        {{ answer.label }}\n                                    </div>\n                                </div>\n                                <div class=\"selected-answer-bases\">\n                                    <div v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==4\" class=\"selected-answer-order\">\n                                        {{ selectedOrderAnswer[answerindex+1] }}\n                                    </div>\n                                    <div class=\"result-answer-order\">\n                                        <div class=\"order\" v-if=\"resultHandleDict.questionType4\">\n                                            {{ answer.answer_id}}\n                                        </div>\n                                        <div v-if=\"type3And5CheckResult(resultHandleDict.answerIDType5,resultHandleDict.answerIDType3,answer.id)&&question.question_type!=4\">\n                                            <i class=\"fas fa-check\"></i>\n                                        </div>\n                                    </div>\n                                    <i v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==5\" class=\"fas fa-check\"></i>\n                                    <!-- for result -->\n                                    <!-- <i v-if=\"answer.id in resultHandleDict.answerIDType5&&question.question_type==5\" class=\"fas fa-check\"></i> -->\n                                    <i v-if=\"resultHandleDict.isCorrect&&answer.is_correct||\n                                    resultHandleDict.answerAllTrueType4||\n                                    resultHandleDict.answerIDType4[answer.answer_id]\" class=\"far fa-circle\"></i>\n                                    <i v-if=\"resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                                    resultHandleDict.answerIDType5[answer.id]==false||\n                                    resultHandleDict.answerIDType4[answer.answer_id]==false\" class=\"fas fa-times\"></i>\n                                </div>\n                            </button>\n                        </div>\n                        <!-- <div  @click=\"deleteMyQuestion(question.id)\" class=\"register-container\"> -->\n                        <div class=\"quiz-footer\" :class=\"{'quiz-footer-result':result}\">\n                            <div class=\"register-container\" :class=\"{'register-container-result':result}\">\n                                <div v-if=\"showError\" class='error-form'>\n                                    <i class=\"fas fa-exclamation-triangle\"></i>\n                                    <div>これ以上登録できません</div>\n                                    <div>現在、最大で{{ getMyQuizInfo.max }}まで登録できます</div>\n                                </div>\n                                <button @click=\"deleteMyQuestion(question)\" :disabled=\"showError\" class=\"register-border-red\" v-if=\"myQuestionIdList.includes(question.id)==false\">この問題を<br>登録する</button>\n                                <button @click=\"deleteMyQuestion(question)\" class=\"register-border-blue\" v-if=\"myQuestionIdList.includes(question.id)\">この問題を<br>登録解除する</button>\n                            </div>\n                            <div v-if=\"showNextOrFinishButton&&\n                            result==false\" class=\"button-quiz-container\">\n                                <div v-if=\"questions.length==questionLengthCounter\"\n                                @click=\"Finish(question.question_type,question.id,question.quiz)\" class=\"btn-tr-white-base-sq\">FINSH</div>\n                                <div v-if=\"questions.length!=questionLengthCounter\"\n                                @click=\"nextQuestion(question.question_type,question.id,question.quiz)\" class=\"btn-tr-white-base-sq\">NEXT ＞</div>\n                            </div>\n\n                            <!-- here for buttun in result -->\n                            <div v-if=\"result\" class=\"buttun-in-result\">\n                                <div class=\"back-container\">\n                                    <div v-if=\"questionLengthCounter!=1\" \n                                    @click=\"resultBack()\" class=\"btn-tr-white-base-sq back\">\n                                        ＜BACK\n                                    </div>\n                                </div>\n                                <div \n                                @click=\"HandleShowResult()\"\n                                class=\"btn-base-black-db-ov result\">結果画面</div>\n                                <div class=\"next-container\">\n                                    <div v-if=\"questions.length!=questionLengthCounter\"\n                                    @click=\"resultNext()\" class=\"btn-tr-white-base-sq next\">\n                                        NEXT＞\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Result\n                v-if=\"showResult\"\n                :SelectedAnswerInfo='SelectedAnswerInfo'\n                :question_length='questions.length'\n                @handlePagination='handlePagination'\n                @HandleShowResult='HandleShowResult'\n                @resultAnswerHandler='resultAnswerHandler'\n                @handleResult='handleResult'\n                @playAgain=\"playAgain\"\n                @backQuizHome=\"backQuizHome\"\n                />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {mapGetters,mapActions} from 'vuex'\nimport Result from '@/components/quiz_components/Result.vue'\nimport Start from '@/components/quiz_components/Start.vue'\n\nexport default {\n    components: {\n    Result,\n    Start\n    },\n    props:[\n        \"forQuizPageInfo\",\n    ],\n    data(){\n        return{\n            questionLengthCounter:1,\n            questionLength:'',\n            SelectedAnswerInfo:{},\n            selectedAnswer: {},\n            answerIDAndOrder:{},\n            showResult: false,\n            showNextOrFinishButton:false,\n            result: false,\n            startQuiz: false,\n            progressBarSwitch: false,\n            pagination:{\n                a: 0,\n                b: 1,\n            },\n            resultHandleDict:{\n                isCorrect: false,\n                IsNotCorrect: false,\n                answerIDType3: '',\n                questionType4: false,\n                answerAllTrueType4: false,\n                answerIDType4: '',\n                answerIDType5: '',\n            },\n            countupDict:{\n                answerID:'',\n                questionID:'',\n                questionType:''\n            },\n            userStatusDict:{\n                status:'',\n                isCorrect:0,\n                isFalse:0\n            },\n            maxSelectReach: false,\n            selectedIndexNum: null,\n            showSelectNum: true,\n            selectedOrderAnswer:{},\n            selectAnswerCounter:0,\n            NumOfIscorrect:0,\n            showError: false,\n            myQuestionIdList:[],\n            questions:'',\n        }\n    },\n    created(){\n        // this.getquiz()\n        // this.getquestions()\n    },\n    mounted(){\n        console.log(\"mounted MYQuizP\",this.getMyQuestion)\n        this.getMyQuestionIds(this.getMyQuestion)\n        this.getQuestionFromMyQuestion()\n        this.$store.commit('setQuizTakerID',this.quizTaker)\n        this.questionLength = this.questions.length\n        this.startQuiz = true\n        this.SelectedAnswerInfo = {}\n        \n    },\n    watch:{\n        questions:function(v) {\n            if(this.questions){\n                this.questionLength = this.questions.length\n                // this.userStatusDict.status = this.questions[0]\n            }\n        },\n        // startQuiz:function(v) {\n        //     if(v == false){\n        //         let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n        //         let a = document.getElementById('progress')\n        //         a.setAttribute('style',`width:${percentage}%`)}\n        // }\n    },\n    computed: mapGetters(['getMyQuestion','getMyQuizInfo','quizTaker']),\n        // myQuestion(){\n        //     return this.$store.state.signup.myQuestion\n        // },\n    methods:{\n        // ...mapActions(['getquestions']),\n        async getQuestionFromMyQuestion(){\n            this.$store.commit('setIsLoading', true)\n            var response = await axios\n            .get(`/api/my-question-list?ids=${this.myQuestionIdList}`)\n            .catch(e => {\n                    let logger = {\n                        message: \"in components/quiz_components/MyQuiz/MyQuizPracticet/getQuestionFromMyQuestion. couldn't get QuestionFromMyQuestion\",\n                        path: window.location.pathname,\n                        actualErrorName: e.name,\n                        actualErrorMessage: e.message,\n                    }\n                    this.$store.commit('setLogger',logger)\n                    this.$store.commit('setIsLoading', false)\n                    router.push({ name: 'ConnectionError' })\n                })\n            this.questions = this.getRandomQuestion(response.data)\n            console.log(\"GMQQQ\",this.questions)\n            this.$store.commit('setIsLoading', false)\n        },\n        getRandomQuestion(array){\n            console.log('in randomQ', array)\n            // for (let i = array.length - 1; i >= 0; i--) {\n            //     let r = Math.floor(Math.random() * (i + 1))\n            //     let tmp = array[i]\n            //     array[i] = array[r]\n            //     array[r] = tmp\n            // }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                    let r = Math.floor(Math.random() * (i + 1))\n                    let tmp = array[k].answer[i]\n                    array[k].answer[i] = array[k].answer[r]\n                    array[k].answer[r] = tmp\n                }\n            }\n            return array\n        },\n        nextQuestion(questionType,questionID,quiz){\n            this.$store.commit('setQuizID',quiz)\n            this.handleCounyUpDict(this.selectedAnswer,questionType,questionID)\n            this.pagination.a += 1\n            this.pagination.b += 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.questionLengthCounter += 1\n            this.answerIDAndOrder = {}\n            // this. progressBar()\n            this.scrollTop()\n        },\n        Finish(questionType,questionID,quiz){\n            this.$store.commit('setQuizID',quiz)\n            this.handleCounyUpDict(this.selectedAnswer,questionType,questionID)\n            this.updateQuizTaker()\n            this.showResult = true\n            this.result = true\n            this.selectedIndexNum= null\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.answerIDAndOrder = {}\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        onClick(answerindex, answer, question){\n            // this is for 2 things,\n            // first is for controling CSS return selectedIndexNum\n            // which used for questionType 3, and selectedOrderAnswer\n            // which used for questionType 4 and 5.\n            // second is for selected-answer and is_correct.\n            // return selectedAnswer for questionType 3.\n            // for questionType 4, use getAnswerIDAndOrder function.\n            // for questionType 5, use getIDAndIsCorrect function.\n            this.progressBar()\n            if(question.question_type == 3){\n                if(this.selectedIndexNum==answerindex){\n                    this.selectedIndexNum = null\n                    this.selectedAnswer = {}\n                    this.showNextOrFinishButton = false\n                }else{\n                    this.selectedIndexNum = answerindex\n                    this.selectedAnswer['answerID'] = answer.id\n                    this.selectedAnswer['isCorrect'] = answer.is_correct\n                    this.handleShowNextOrFinishButton()\n                }\n            }else if(question.question_type == 4){\n                if(this.selectedOrderAnswer[answerindex+1]&&\n                this.questions.length>=this.selectAnswerCounter){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    this.selectAnswerCounter -= 1\n                    this.showNextOrFinishButton = false\n                    \n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    if(Object.keys(this.selectedOrderAnswer).length == question.answer.length){\n                    this.handleShowNextOrFinishButton()\n                    }\n                }\n            }else if(question.question_type == 5){\n                this.getNumOfIscorrect(question.answer)\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    this.selectAnswerCounter -= 1\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length < question.max_select){\n                            this.showNextOrFinishButton = false\n                            this.maxSelectReach = false\n                        }\n                    }else if(Object.keys(this.selectedOrderAnswer).length == 0){\n                        this.showNextOrFinishButton = false\n                    }\n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length == question.max_select){\n                            this.handleShowNextOrFinishButton()\n                            this.maxSelectReach = true\n                        }\n                    }else{\n                        this.handleShowNextOrFinishButton()\n                    }\n                }\n            }\n        },\n        changeOrder(dict, index){\n            // if deleted, the num or nums before the deleted items order num\n            // change\n            let orderNum = dict[index]\n            delete dict[index]\n            if(dict){\n                let changeDict = {}\n                Object.keys(dict).forEach(key =>{\n                    if(dict[key] > orderNum){\n                        dict[key] -= 1\n                    }\n                })\n            }\n        return dict\n        },\n        selectAnswerHandler(questionType){\n            // this is get informations about selected-answer for result component\n            // return SelectedAnswerInfo\n            if(questionType == 3){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect\n                this.handleUserStatus(this.selectedAnswer.isCorrect)\n                this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID\n            }\n            else if(questionType == 4){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n                if(JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else{\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                    this.handleUserStatus(false)\n                }\n                this.makeOrderBoolean()\n                this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder\n            }else if(questionType == 5){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let isCorrectCounter = 0\n                var type5IsCorrect = true\n                Object.values(this.selectedAnswer).forEach(value =>{\n                    if(value == false){\n                        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                        this.handleUserStatus(false)\n                        type5IsCorrect = false\n                    }else{\n                        isCorrectCounter += 1\n                    }\n                })\n                if(this.NumOfIscorrect == isCorrectCounter&&\n                type5IsCorrect){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                    this.handleUserStatus(true)\n                }else if(type5IsCorrect==false&&\n                isCorrectCounter > 0){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                    this.handleUserStatus(false)\n                }\n                this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer\n            }\n        },\n        getAnswerIDAndOrder(answerID,orderNum){\n            // this is for collecting answer from questionType 4\n            if(this.questionLengthCounter in this.answerIDAndOrder){\n                if(orderNum in this.answerIDAndOrder[this.questionLengthCounter]){\n                    this.answerIDAndOrder[this.questionLengthCounter] =\n                    this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter],orderNum)\n                }else{\n                    this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID   \n                }\n            }else{\n                this.answerIDAndOrder[this.questionLengthCounter] = {}\n                this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID\n            }   \n        },\n        makeOrderBoolean(){\n            // this is for AnswerIDAndOrder{1:1} to be {1:true}\n            let newDict = {}\n            let IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n            for(let i = 0; i < IntegerKeys.length; i++){\n                if(IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]){\n                    newDict[i+1] = true\n                }else{\n                    newDict[i+1] = false\n                }\n            }\n            this.answerIDAndOrder = newDict\n        },\n        getIDAndIsCorrect(id, isCorrect){\n            // this is for questionType 5 \n            if(id in this.selectedAnswer){\n                delete this.selectedAnswer[id]\n            }else{\n                this.selectedAnswer[id] = isCorrect\n            }\n        },\n        getNumOfIscorrect(answers){\n            // this is for questionType 5\n            if(this.NumOfIscorrect==false){\n                 Object.values(answers).forEach(value =>{\n                    if(value.is_correct){\n                        this.NumOfIscorrect += 1\n                    }\n                })\n            }\n        },\n        handleShowNextOrFinishButton(){\n            this.showNextOrFinishButton = true\n        },\n        resultAnswerHandler(){\n            if(this.result){\n                this.resultHandleDict.isCorrect = false\n                this.resultHandleDict.isNotCorrect = false\n                this.resultHandleDict.answerAllTrueType4 = false\n                this.resultHandleDict.questionType4 = false\n                this.resultHandleDict.answerIDType3 = ''\n                this.resultHandleDict.answerIDType4 = ''\n                this.resultHandleDict.answerIDType5 = ''\n                Object.keys(this.SelectedAnswerInfo).forEach(key =>{\n                    if(key==this.questionLengthCounter){\n                        if(this.SelectedAnswerInfo[key].isCorrect){\n                            if(this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.answerAllTrueType4 = true\n                            }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                            }\n                            this.resultHandleDict.isCorrect = true\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==3){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType3 = this.SelectedAnswerInfo[key].answerID\n                        }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.questionType4 = true\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType4 = this.SelectedAnswerInfo[key].orderAnswer\n                        }\n                    }\n                })      \n            }\n        },\n        type3And5CheckResult(selectedAnswer5,selectedAnswer3, answerID){\n            if(this.result){\n                if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==5){\n                    if(answerID in selectedAnswer5){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n                else if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==3){\n                    if(answerID == selectedAnswer3){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n        },\n        handleCounyUpDict(selectedAnswer,questionType,questionID){\n            this.countupDict.questionType = questionType\n            this.countupDict.questionID = questionID\n            if(questionType == 5){\n                this.countupDict.answerID = Object.keys(selectedAnswer)\n            }else if(questionType == 3){\n                Object.keys(selectedAnswer).forEach(key => {\n                    if(key = \"answerID\"){\n                        this.countupDict.answerID = selectedAnswer[key]\n                    }\n                })\n            }\n            console.log(\"HCUD\",this.countupDict)\n            this.$store.dispatch('countUpAnswerAndQuestion',this.countupDict)\n        },\n        handlePagination(a,b){\n            // this is for result component\n            this.pagination.a = a\n            this.pagination.b = b\n            this.questionLengthCounter = b\n        },\n        HandleShowResult(){\n            this.showResult = !this.showResult          \n        },\n        handleResult(){\n            this.result = ! this.result\n        },\n        handleUserStatus(selectedAnswer){\n            // this is for only is_true and is_false\n            console.log(selectedAnswer)\n            this.userStatusDict.isCorrect = 0\n            this.userStatusDict.isFalse = 0\n            if(selectedAnswer){\n                this.userStatusDict.isCorrect = 1\n            }else{\n                this.userStatusDict.isFalse = 1\n            }\n            this.$store.dispatch('userStatusPost',this.userStatusDict)\n            console.log('HUS',this.userStatusDict)\n            \n        },\n        getQuestionStatus(lavel,status){\n            this.userStatusDict.status = status\n            return lavel\n        },\n        async updateQuizTaker(){\n            await axios\n            .patch(`api/quiz-taker-practice/?quiz_taker=${this.$store.state.signup.djangoUser.quiz_taker[0].id}`)\n            .catch(e => {\n                    let logger = {\n                        message: \"in MyQuizPractice/updateQuizTaker. couldn't update QuizTaker\",\n                        path: window.location.pathname,\n                        actualErrorName: e.name,\n                        actualErrorMessage: e.message,\n                    }\n                    this.$store.commit('setLogger',logger)\n                    this.$store.commit('setIsLoading', false)\n                    router.push({ name: 'ConnectionError' })\n                })\n        },\n        resultNext(){\n            this.pagination.a += 1 \n            this.pagination.b += 1\n            this.questionLengthCounter += 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        resultBack(){\n            this.pagination.a -= 1 \n            this.pagination.b -= 1\n            this.questionLengthCounter -= 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        scrollTop(){\n            window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n            });\n        },\n        closeStart(){\n            console.log(\"clicked\")\n            this.startQuiz = false\n        },\n        playAgain(){\n            console.log('clicked play again')\n            this.startQuiz = true\n            this.attributeReset()\n        },\n        attributeReset(){\n            this.result = false\n            this.showResult = false\n            this.pagination.a = 0\n            this.pagination.b = 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.SelectedAnswerInfo = {}\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.questionLengthCounter = 1\n            this.resultHandleDict.isCorrect = false,\n            this.resultHandleDict.IsNotCorrect =false,\n            this.resultHandleDict.answerIDType3 = '',\n            this.resultHandleDict.questionType4 = false,\n            this.resultHandleDict.answerAllTrueType4 =false,\n            this.resultHandleDict.answerIDType4 ='',\n            this.resultHandleDict.answerIDType5 = ''\n            this.answerIDAndOrder = {}\n            // this.getquestions()\n        },\n        backQuizHome(){\n            this.$emit('backQuizHome')\n            this.attributeReset()\n        },\n        progressBar(){\n            \n            this.progressBarSwitch = true\n            console.log(this.questionLengthCounter,(this.questions.length))\n            let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n            let a = document.getElementById('progress')\n            a.setAttribute('style',`width:${percentage}%`)\n            \n        },\n        deleteMyQuestion(question){\n            console.log(\"INDELETE\",question,this.myQuestionIdList)\n            let payload = {\n                \"question\":question.id,\n                \"myQuiz\":this.getMyQuizInfo.id\n            }\n            if(!this.myQuestionIdList.includes(question.id)){\n                if(this.myQuestionIdList.length >=this.getMyQuizInfo.max){\n                    this.showError = true\n                    setTimeout(this.showErrorFalse, 3000)  \n                }\n                else{\n                    this.myQuestionIdList.push(question.id)\n                    console.log(\"added\",this.myQuestionIdList)\n                    this.$store.commit(\"addMyQuestion\",{'question':question})\n                    this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n                }\n            }\n            else{\n                this.myQuestionIdList = this.myQuestionIdList.filter(item =>item != question.id )\n                console.log(\"deleted\",this.myQuestionIdList)\n                this.$store.commit(\"deleteMyQuestion\",question.id)\n                this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n            }\n        },\n        getMyQuestionIds(myQuestion){\n            for(let i of myQuestion){\n                this.myQuestionIdList.push(i.question.id)\n            }\n            console.log('GMQI',this.myQuestionIdList)\n        },\n        showErrorFalse(){\n            this.showError = false\n        }\n        // setTimeout(context.commit, 3000,\"resetNotifications\")     \n        // handleShowRegister(questionId){\n        //     console.log(this.getMyQuestion)\n        //     try{\n        //         for(let i of this.getMyQuestion){\n        //             console.log(\"HSR\",i.question.id,questionId)\n\n        //             if(i.question.id==questionId){\n        //                 this.showRegister= false\n        //                 return false\n        //             }\n        //         }\n        //         this.showRegister= true\n        //         return true\n        //     }\n        //     catch{\n        //         // this.showRegister= true\n        //         // return true\n        //     }\n        // }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.progress-wrapper{\n    display: flex;\n    justify-content: center;\n    min-height: 80%;\n    .progress-bar-outer{\n        position: relative;\n        border: solid black;\n        border-radius: 50vh;\n        width:80%;\n        height: 2rem;\n        background: rgb(238, 238, 238);\n        margin-bottom: 0.5rem;\n        overflow: hidden;\n        .progress-bar-inner{\n            position:absolute;\n            top:0;\n            left:0;\n            box-sizing: inherit;\n            height: 1.8rem;\n            transform:skewX(-10deg);\n            transition: 1s;\n            background: linear-gradient(to bottom right,#F6F3E4 1%,#ffc890);       \n        }\n    }\n}\n.quiz-wrapper{\n    width: 100%;\n    min-height: 80vh;\n    padding-bottom: 1rem;\n    display: flex;\n    justify-content: center;\n    .quiz-countainer{\n        width: 100%;\n        display: flex;\n        // align-items: center;\n        justify-content: center;\n        .question-loop{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .question-wrapper{\n            width: 95%;\n            border: solid  rgba(243, 91, 36, 0.808);\n            border-radius: 1rem;\n            overflow:hidden;\n                .question-header{\n                background: linear-gradient($base-lite,$base-color);\n                color:white;\n                padding:0.5rem;\n                font-weight:bold;\n                position:relative;\n                }\n                .question-body{\n                    background-color: rgb(253, 245, 239);\n                    padding:1rem;\n                    font-weight:bold;\n                }\n                .q{\n                position:absolute;\n                left:5%;\n                bottom:2%;\n                font-size:1.5rem;  \n                }\n            }\n            .image-container{\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                .image{\n                    width: 40%;\n                }\n            }\n            .answer-wrapper{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                margin-top: 1rem;\n                .is-correct-answer{\n                    background: rgb(148, 255, 235);\n                }\n                .answer-hover:hover{\n                    border: solid $base-color;\n                    // background: $base-lite-3;\n                    .answer-select{\n                        background: $base-lite-2;\n                    }\n                }\n                .answer-loop{\n                    width: 95%;\n                    height: 3rem;\n                    border: solid black;\n                    border-radius: 0.5rem;\n                    background: white;\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 0.5rem;\n                    transition:0.3s;\n                    .answer-select-bases{\n                        flex-basis: 15%;\n                        .answer-select{\n                            border: solid black;\n                            border-radius: 50vh;\n                            width: 2.5rem;\n                            height: 2.5rem;\n                            margin-left: 0.5rem;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            transition:0.3s;\n                            .selecter{\n                                font-weight: bold;\n                                font-size: 1.5rem;\n                            }\n                        }\n                    }\n                    .answer-label-bases{\n                        flex-basis: 70%;\n                        .answer-label{\n\n                        }\n                    }\n                    .selected-answer-bases{\n                        flex-basis: 15%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        .selected-answer-order{\n                            font-size: 1.5rem;\n                            font-weight: bold;\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .result-answer-order{\n                            flex-basis: 50%;\n                            .order{\n                                font-size: 1.5rem;\n                                font-weight: bold;\n                                color: gray;\n                                margin-right: 0.5rem;\n                            }\n                        }\n                        .fa-check{\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .fa-circle{\n                            color: rgba(0, 84, 75, 0.839);\n                            font-size: 1.5rem;\n                            flex-basis: 50%;\n                            margin-right: 0.1rem;\n                        }\n                        .fa-times{\n                            color: rgba(244, 10, 10, 0.839);\n                            font-size: 1.5rem;\n                            margin-right: 0.1rem;\n                            flex-basis: 50%;\n                        }\n                    }\n                }\n                .is-correct-answer{\n                    background: rgb(177, 243, 231);\n                }\n                .isnot-correct-answer{\n                    background: rgb(255, 147, 147)\n                }\n                .selected-answer{\n                    background: $base-lite-3;\n                    .answer-select{\n                        background: $base-color;\n                        color: white;\n                    }\n                }\n            }\n            .quiz-footer{\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                position: relative;\n                margin-bottom: 1rem;\n                height: 3rem;\n                .register-container{\n                    position: absolute;\n                    display: flex;\n                    width: 100%;\n                    justify-content: flex-end;\n                    margin-top: 0.5rem;\n                    margin-right: 1rem;\n                    .error-form{\n                        animation: notification 3s;\n                        animation-fill-mode: forwards;\n                        position: absolute;\n                        left: 0;\n                        right: 0;\n                        top: 0;\n                        padding-bottom: 0.7rem;\n                        margin: auto;\n                        width: 80%;\n                        background: rgba(252, 252, 252, 0.85);\n                        z-index: 2;\n\n                    }\n                    .register-border-red{\n                        border:0.3rem solid $dull-red;\n                        border-radius: 5px;\n                        padding: 0.2rem;\n                        font-size: 0.8rem;\n                        background: $back-white;\n                        color: $dark-blue;\n                        font-weight: bold;\n                        transition: .5s;\n                    }\n                    .register-border-red:hover{\n                        background: white;\n                        border:0.3rem solid $lite-dull-red;\n                    }\n                    .register-border-blue{\n                        border:0.3rem solid $dull-blue;\n                        border-radius: 5px;\n                        padding: 0.2rem;\n                        font-size: 0.8rem;\n                        background: $back-white;\n                        color: $dark-blue;\n                        font-weight: bold;\n                        transition: .5s;\n                    }\n                    .register-border-blue:hover{\n                        background: white;\n                        border:0.3rem solid $lite-dull-blue;\n                    }\n                    \n                }\n                .button-quiz-container{\n                    display: flex;\n                    margin-top: 1rem;\n                    z-index: 1;\n                    div{\n                        padding-right: 0.3rem;\n                        padding-left: 0.3rem;\n                    }\n                }\n                .buttun-in-result{\n                    display: flex;\n                    margin-top: 1rem;\n                    width: 100%;\n                    z-index: 1;\n                    .back-container{\n                        flex-basis: 45%;\n                        display: flex;\n                        justify-content: flex-end;\n                        .back{\n                            display: inline-block;\n                            padding-left: 0.5rem;\n                            padding-right: 0.5rem;\n                            padding-top: 0.2rem;\n                            padding-bottom: 0.2rem;\n                        }\n                    }\n                    .result{\n                        flex-basis: 20%;\n                        width: auto;\n                        padding-left: 0.5rem;\n                        padding-right: 0.5rem;\n                        padding-top: 0.2rem;\n                        padding-bottom: 0.2rem;\n                        margin-right: 0.5rem;\n                        margin-left: 0.5rem;\n                        font-weight: bold;                    \n                    }\n                    .next-container{\n                         flex-basis: 45%;\n                         display: flex;\n                        .next{\n                            display: inline-block;\n                            padding-left: 0.5rem;\n                            padding-right: 0.5rem;\n                            padding-top: 0.2rem;\n                            padding-bottom: 0.2rem;\n                            // margin-bottom: 0.5rem;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n@media(max-width: 480px){\n    .progress-bar-outer{\n        margin-bottom: 0.5rem!important;\n        margin-top: 0!important;\n    }\n    .result{\n        flex-basis: 33%!important;\n    }\n    .register-container-result{\n    margin-top: 4rem!important;\n    }\n}\n@media(max-height: 960px){\n    .quiz-footer-result{\n        margin-bottom: 5rem!important;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}