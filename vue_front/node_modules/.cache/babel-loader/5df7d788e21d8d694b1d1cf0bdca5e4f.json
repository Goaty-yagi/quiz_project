{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","mtime":1651984052018},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"names":["createPersistedState","Cookies","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","store","namespace","state","username","email","email2","country","password","user","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","tempUser","test","statusList","grade","level","favoriteQuestion","getters","getUID","getUser","getDjangouser","getEmailVerified","getTempUser","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","setDjangoUser","emailVerifiedHandler","checkEmailHandler","setTempUser","status","setTempUserReset","remove","tempUserTestTrue","resetQuizKeyStorage","actions","getDjangoUser","commit","get","then","response","data","catch","error","getFavoriteQuestion","questionId","favorite_question","question","i","push","signup","context","ref","currentUser","Error","sendEmailVerify","sentValidation","login","dispatch","checkEmail","passwordReset","logout","name","unsub"],"mappings":"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","sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport Cookies from 'js-cookie'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n        },\n        tempUser: {\n            test: false,\n            statusList:'',\n            grade:'',\n            level:''\n        },\n        favoriteQuestion:''\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getUser(state){\n            return state.user\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        },\n        getEmailVerified(state){\n            return state.emailVerified\n        },\n        getTempUser(state){\n            return state.tempUser\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            if(state.user){\n                state.UID = state.user.uid\n            }\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        setDjangoUser(state,payload){\n            state.djangoUser = payload\n            console.log('set Django user',state.djangoUser)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        },\n        setTempUser(state,payload){\n            state.tempUser.test = true\n            state.tempUser.statusList = payload.status\n            state.tempUser.grade = payload.grade\n            state.tempUser.level = payload.level\n            console.log('set-temp-user', state.tempUser)\n        },\n        setTempUserReset(state){\n            state.tempUser.test = false\n            state.tempUser.statusList = '',\n            state.tempUser.grade = '',\n            state.tempUser.level = ''\n            Cookies.remove('tempKey')\n            console.log('set',state.tempUser)\n        },\n        tempUserTestTrue(state){\n            state.tempUser.test = true\n        },\n        resetQuizKeyStorage(state){\n            state.UID = null\n            state.djangoUser = null\n            state.emailVerified = null\n            console.log('all-Reset')\n        },\n    },\n    actions:{\n        async getDjangoUser({ state, getters,commit }){\n            if(state.user){\n                await axios\n                .get(`/api/user/${getters.getUID}`)\n                .then(response => {\n                    commit('setDjangoUser',response.data)\n                    })\n                .catch(error => {\n                    console.log(error)\n                })\n            }\n        },\n        async getFavoriteQuestion({ state, commit }){\n            state.favoriteQuestion = null\n            if(state.djangoUser){\n                const questionId = []\n                for(let i of state.djangoUser.favorite_question[0].question){\n                    questionId.push(i)\n                }\n                if(questionId[0]){\n                    await axios\n                    .get(`/api/board/question-favorite?question_id=${questionId}`)\n                    .then(response => {\n                        state.favoriteQuestion = response.data\n                        })\n                    .catch(error => {\n                        console.log(error)\n                    })\n                }\n            }\n        },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not conmplite signup')\n            }\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            // context.commit('setIsLoading', true, {root:true})\n            console.log('in_login')\n            try{\n                var ref = await signInWithEmailAndPassword(auth, email, password)\n            }catch{\n                console.log('error')\n                throw new Error('could not complite signin')\n            }\n            if(ref){\n                console.log(\"IF YES\")\n                context.commit('setUser',ref.user)\n                context.dispatch('getDjangoUser')\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log(context.state.user,context.state.emailVerified)\n            }else{\n                console.log('error in sign in')\n                throw new Error('could not complite signin')\n            }\n            // context.commit('setIsLoading', false, {root:true})                \n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            context.commit('resetQuizKeyStorage')\n            router.push({ name: 'Home' })\n        }\n    }\n\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n    }else{\n        store.commit('resetQuizKeyStorage')\n    }\n    unsub()\n})"]}]}