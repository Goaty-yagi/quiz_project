{"ast":null,"code":"import _defineProperty from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\nvar _components$data$crea;\n\nimport \"core-js/modules/es.function.name.js\";\nimport { mapGetters, mapActions } from 'vuex';\nexport default (_components$data$crea = {\n  components: {},\n  data: function data() {\n    return {\n      showSideBar: true,\n      tempQuiz: '初級',\n      formQuestionData: {\n        quiz: '初級',\n        quiz_level: 1,\n        question_type: '選択',\n        field: 'ひらがな',\n        label: '',\n        status: '',\n        max_select: '',\n        image: ''\n      },\n      formAnswerDataList: [{\n        label: '',\n        is_correct: '',\n        answer_id: ''\n      }],\n      formAnswerData: {\n        label: '',\n        is_correct: '',\n        answer_id: ''\n      },\n      answerNum: 1,\n      handleAnswerLength: 1\n    };\n  },\n  created: function created() {\n    this.$store.dispatch('getQuestionTypeId');\n  },\n  beforeMount: function beforeMount() {// this.$store.dispatch('getQuestionTypeId')\n  },\n  mounted: function mounted() {\n    console.log('mounted at create-question', this.questionTypeId);\n  },\n  watch: {\n    answerNum: function answerNum(v) {\n      console.log('v', v);\n\n      if (this.handleAnswerLength > v) {\n        this.handleAnswerLength = v;\n        this.formAnswerDataList.pop();\n      } else {\n        var _ = require('lodash');\n\n        var copyObject = _.cloneDeep(this.formAnswerData);\n\n        this.formAnswerDataList.push(copyObject);\n        this.handleAnswerLength = v;\n      }\n    },\n    tempQuiz: function tempQuiz(v) {\n      console.log('T', v);\n      this.formQuestionData.quiz = v;\n    }\n  },\n  computed: {\n    quizFieldList: function quizFieldList() {\n      console.log('unko');\n      var list = [];\n\n      var _iterator = _createForOfIteratorHelper(fieldNameId),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n\n          if (this.convertQuizGradeToId(this.tempQuiz) == i.id) {\n            list.push(i.name);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return list;\n    }\n  }\n}, _defineProperty(_components$data$crea, \"computed\", mapGetters(['quizNameId', 'fieldNameId', 'questionTypeId'])), _defineProperty(_components$data$crea, \"methods\", {\n  // ...mapActions(['getQuestionTypeId']),\n  handleShowSideBar: function handleShowSideBar() {\n    console.log(this.showSideBar);\n    this.showSideBar = !this.showSideBar;\n    console.log(this.showSideBar);\n  },\n  addAnswer: function addAnswer() {\n    this.answerNum += 1;\n  },\n  subtractAnswer: function subtractAnswer() {\n    if (this.answerNum > 1) {\n      this.answerNum -= 1;\n    }\n  },\n  submitForm: function submitForm() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('start add');\n\n              _this.setAllFormData(); // await axios({\n              //     method: 'post',\n              //     url: '/api/questions-create/',\n              //     data: {\n              //         title: this.$store.state.board.title,\n              //         description: this.$store.state.board.description,\n              //         user: this.$store.state.signup.user.uid,\n              //         slug: this.uuid,\n              //         liked_num:{},\n              //         tag: this.getTagId()\n              //     },\n              // })\n\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  setAllFormData: function setAllFormData() {\n    // need to think about status part regarding of field\n    if (this.formQuestionData.question_type == \"選択\") {// for(let i of this.formAnswerDataList){\n      //     if(i.is_correct) {\n      //         counter += 1\n      //     }\n      // }\n    } else if (this.formQuestionData.question_type == \"多答\") {\n      var counter = 0;\n\n      var _iterator2 = _createForOfIteratorHelper(this.formAnswerDataList),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var i = _step2.value;\n\n          if (i.is_correct) {\n            counter += 1;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (counter >= 1) {\n        console.log('error more than 2');\n      } else if (this.formAnswerDataList.length == counter) {\n        console.log('error all ture');\n      } else {\n        this.formQuestionData.max_select = counter;\n      }\n    }\n\n    this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type);\n    this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz);\n    this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field);\n    console.log(\"set\", this.formQuestionData);\n  },\n  convertQuizGradeToId: function convertQuizGradeToId(grade) {\n    var _iterator3 = _createForOfIteratorHelper(this.quizNameId),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var i = _step3.value;\n\n        if (i.name == grade) {\n          return i.id;\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  },\n  convertQuizTypeToId: function convertQuizTypeToId(type) {\n    var _iterator4 = _createForOfIteratorHelper(this.questionTypeId),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var i = _step4.value;\n\n        if (i.name == type) {\n          return i.id;\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  },\n  convertQuizFieldToId: function convertQuizFieldToId(field) {\n    var _iterator5 = _createForOfIteratorHelper(this.fieldNameId),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var i = _step5.value;\n\n        if (i.name == field) {\n          return i.id;\n        }\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n  }\n}), _components$data$crea);","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","components","data","showSideBar","tempQuiz","formQuestionData","quiz","quiz_level","question_type","field","label","status","max_select","image","formAnswerDataList","is_correct","answer_id","formAnswerData","answerNum","handleAnswerLength","created","$store","dispatch","beforeMount","mounted","console","log","questionTypeId","watch","v","pop","_","require","copyObject","cloneDeep","push","computed","quizFieldList","list","fieldNameId","i","convertQuizGradeToId","id","name","handleShowSideBar","addAnswer","subtractAnswer","submitForm","setAllFormData","counter","length","convertQuizTypeToId","convertQuizFieldToId","grade","quizNameId","type"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/CreateQuizQuestion.vue"],"sourcesContent":["<template>\n    <div v-if=\"questionTypeId\" class=\"create-question-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-container\" v-if=\"$store.state.isLoading==false\">\n                <form @submit.prevent='submitForm' class=\"field-wrapper\">\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_grade\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model='tempQuiz'>\n                                <option\n                                    v-for=\"(id,idindex) in quizNameId\" \n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formMail'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_level\n                                </div>\n                            </div>\n                            <div class=\"text-box level\">\n                                <input required type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model=\"formQuestionData.level\">\n                            </div>\n                        </div>         \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_type\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.question_type\">\n                                <option\n                                    v-for=\"(id,idindex) in questionTypeId\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <!-- <div class=\"additional-field-wrapper\">\n                        <div class=\"additional-field\">\n                            <div class=\"input-box\">\n                                <div class='each-title-container'>\n                                    <div class=\"each-title\">\n                                        quiz_field\n                                    </div>\n                                </div>\n                                <div class=\"text-box\">\n                                    <input required input type=\"number\" value=\"1\" min=\"1\" max=\"10\" step=\"1\">\n                                </div>\n                            </div>\n                            <div class=\"input-box\" ref='formName'>\n                                <div class='each-title-container'>\n                                    <div class=\"each-title\">\n                                        quiz_field\n                                    </div>\n                                </div>\n                                <select required class=\"text-box\" >\n                                    <option\n                                        v-for=\"(id,idindex) in quizNameId\" \n                                        v-bind:key=\"idindex\">\n                                        <p class=\"option\">{{ id.name }}</p>\n                                    </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div> -->\n                    {{ formQuestionData}}\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_field\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.field\">\n                                <option\n                                    v-for=\"(id,idindex) in quizFieldList\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"texarea-field\">\n                        <div class=\"texarea-box\">\n                            <div class=\"each-title-container\">\n                                <div class=\"each-title\">\n                                    quiz_label\n                                </div>\n                            </div>\n                            <textarea required class=\"text-box\" v-on:focus=\"onFocus\" v-model='formQuestionData.label'>\n                            </textarea>\n                        </div>       \n                    </div>\n                    <div class=\"answer-wrapper\" >\n                        <div class=\"answer-title-container\">\n                            <i @click=\"subtractAnswer()\" class=\"fas fa-minus\"></i>\n                            <div class=\"answer-title\">\n                                <p>Answer</p>\n                            </div>\n                            <i @click=\"addAnswer()\" class=\"fas fa-plus\"></i>\n                        </div>\n                        <div class=\"answer-container\"\n                            v-for=\"(num) of handleAnswerLength\" \n                                v-bind:key=\"num\">\n                            <div class=\"num\">\n                                <p>{{ num }}</p>\n                            </div>\n                            <input class=\"answer-label\" type=\"text\" placeholder=\"答え\" v-model='formAnswerDataList[num-1].label'>\n                            <div class=\"checkbox-container\">\n                                <p>true?</p>\n                                <input class=\"checkbox\" type=\"checkbox\" v-model='formAnswerDataList[num-1].is_correct'>\n                            </div>\n                            <div v-if=\"formQuestionData.questionType=='並び替え'\" class=\"correct-order-container\">\n                                <div class=\"correct-order\">\n                                    <p>order?</p>\n                                    <input required input type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model='formAnswerDataList[num-1].answer_id'>\n                                </div>\n                            </div>\n                            <!-- unko{{ formAnswerDataList[num-1] }} -->\n                        </div>\n                    </div>\n                    <!-- <div v-if='mailError||nameError||mailInUseError' class='error-form'>\n                        <i class=\"fas fa-exclamation-triangle\"></i>\n                        <div v-if='mailError'>{{ mailError}}</div>\n                        <div v-if='nameError'>{{ nameError }}</div>\n                        <div v-if='mailInUseError'>{{ mailInUseError }}</div>\n                    </div> -->\n                    <div>\n                        <button class='fbottun' ref='bform' id=''>作成する</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nexport default {\n    components: {\n        \n    },\n    data(){\n        return{\n            showSideBar: true,\n            tempQuiz:'初級',\n            formQuestionData:{\n                quiz:'初級',\n                quiz_level:1,\n                question_type:'選択',\n                field:'ひらがな',\n                label:'',\n                status:'',\n                max_select:'',\n                image:''\n            },\n            formAnswerDataList:[{\n                label:'',\n                is_correct:'',\n                answer_id:'',\n            },],\n            formAnswerData:{\n                label:'',\n                is_correct:'',\n                answer_id:'',\n            },\n            answerNum: 1,\n            handleAnswerLength: 1,\n        }\n    },\n    created(){\n        this.$store.dispatch('getQuestionTypeId')\n    },\n    beforeMount(){\n        // this.$store.dispatch('getQuestionTypeId')\n    },\n    mounted(){\n        console.log('mounted at create-question',this.questionTypeId)\n    },\n    watch:{\n        answerNum:function(v) {\n            console.log('v',v)\n            if (this.handleAnswerLength > v){\n                this.handleAnswerLength = v\n                this.formAnswerDataList.pop()   \n            } else {\n                const _ = require('lodash');\n                let copyObject = _.cloneDeep(this.formAnswerData)\n                this.formAnswerDataList.push(copyObject)\n                this.handleAnswerLength = v\n            }\n        },\n        tempQuiz:function(v) {\n            console.log('T',v)\n            this.formQuestionData.quiz = v\n        }\n    },\n    computed:{ \n        quizFieldList() {\n            console.log('unko')\n            let list = [];\n            for (let i of fieldNameId) {\n                if (this.convertQuizGradeToId(this.tempQuiz) == i.id) {\n                    list.push(i.name)\n                }\n            }\n            return list\n        },\n    },\n    computed: mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n    methods:{\n        // ...mapActions(['getQuestionTypeId']),\n        handleShowSideBar(){\n            console.log(this.showSideBar)\n            this.showSideBar = !this.showSideBar \n            console.log(this.showSideBar)\n        },\n        addAnswer(){\n            this.answerNum += 1\n        },\n        subtractAnswer(){\n            if(this.answerNum > 1){\n                this.answerNum -= 1\n            }\n        },\n        async submitForm(){\n            console.log('start add')\n            this.setAllFormData()\n            // await axios({\n            //     method: 'post',\n            //     url: '/api/questions-create/',\n            //     data: {\n            //         title: this.$store.state.board.title,\n            //         description: this.$store.state.board.description,\n            //         user: this.$store.state.signup.user.uid,\n            //         slug: this.uuid,\n            //         liked_num:{},\n            //         tag: this.getTagId()\n            //     },\n                \n            // })\n        },\n        setAllFormData(){\n            // need to think about status part regarding of field\n            if(this.formQuestionData.question_type == \"選択\") {\n                // for(let i of this.formAnswerDataList){\n                //     if(i.is_correct) {\n                //         counter += 1\n                //     }\n                // }\n            }\n            else if(this.formQuestionData.question_type == \"多答\") {\n                let counter = 0\n                for(let i of this.formAnswerDataList){\n                    if(i.is_correct) {\n                        counter += 1\n                    }\n                }\n                if(counter >= 1) {\n                    console.log('error more than 2')\n                } else if(this.formAnswerDataList.length == counter) {\n                    console.log('error all ture')\n                } else {\n                    this.formQuestionData.max_select = counter\n                }\n            }\n            this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type)\n            this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz)\n            this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field)\n            console.log(\"set\", this.formQuestionData)\n        },\n        convertQuizGradeToId(grade) {\n            for (let i of this.quizNameId){\n                if (i.name == grade){\n                    return i.id\n                }\n            }\n        },\n        convertQuizTypeToId(type) {\n            for (let i of this.questionTypeId){\n                if (i.name == type){\n                    return i.id\n                }\n            }\n        },\n        convertQuizFieldToId(field) {\n            for (let i of this.fieldNameId){\n                if (i.name == field){\n                    return i.id\n                }\n            }\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n\n\n.create-question-wrapper{\n    width: 100%;\n    margin: 0;margin-top: 2rem;\n    display: flex;\n    justify-content: center;\n}\n.field-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    .field{\n        display: flex;\n        justify-content: center;\n        // border: solid red;\n        .input-box{\n            display: flex;\n            font-size: 1.2rem;\n            width: 80%;\n            justify-content: center;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            min-height: 40px;\n            background: $back-white;\n            // padding: 0.2rem 0.5rem;\n            overflow:hidden;\n            .each-title-container{\n                flex-basis: 30%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-right: solid $base-color;\n                background: $dark-blue;                \n                .each-title{\n                    color: $base-white;\n                    width: 100px;\n                    font-weight: bold;\n                    // font-size: 1rem;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .text-box{\n                flex-basis: 70%;\n                background: transparent;\n                border: none;\n                margin-right: 1rem;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: $back-white;\n                .option{\n                    font-weight: bold;\n                }\n            }\n            .text-box:focus{\n                outline: none;\n            }\n            .level{\n                display: flex;\n            }\n        }\n    }\n    .texarea-field{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        .texarea-box{\n            width: 80%;\n            .each-title-container{\n                display: flex;\n                justify-content: center;\n                .each-title{\n                    width: 40%;\n                    border-top: solid $base-color;\n                    border-right: solid $base-color;\n                    border-left: solid $base-color;\n                    background: $dark-blue;\n                    color: $base-white;\n                    font-weight: bold;\n                    border-radius: 0.5rem 0.5rem 0 0;\n                }\n            }\n             .text-box{\n                width: 100%;\n                background: $back-white;\n                height: auto;\n                min-height: 100px;\n                border: 0.1rem solid $base-color;\n                border-radius: 1vh;\n                padding: 1rem;\n                resize: none;\n                transition: 0.5s;\n            }\n            .text-box:focus{\n                outline: none;\n                border: solid $middle-blue;\n            }\n        }\n    }\n    .answer-wrapper{\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        .answer-title-container{\n            display: flex;\n            align-items: center;\n            .fa-minus{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-minus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n            .answer-title{\n                border: solid $base-color;\n                border-radius: 0.5rem;\n                padding-right: 0.5rem;\n                padding-left: 0.5rem;\n                background: $dark-blue;\n                margin-bottom: 0.2rem;\n                color: $base-white;\n                font-weight: bold;\n            }\n            .fa-plus{\n                margin-left: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-plus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n        }\n        .answer-container{\n            display: flex;\n            align-items: center;\n            // justify-content: center;\n            width: 80%;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            background: $back-white;\n            margin-bottom: 0.4rem;\n            .num{\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                width: 2rem;\n                height: 2rem;\n                background: $dark-blue;\n                border-radius: 50vh;\n                border: solid $base-color;\n                color: $base-white;\n                font-weight: bold;\n                margin: 0.2rem 0.5rem;\n            }\n            .answer-label{\n                width: 50%;\n                height: 2rem;\n                padding: 0 0.5rem;\n            }\n            .checkbox-container{\n                margin-left: 1rem;\n                .checkbox{\n                }\n            }\n            .correct-order-container{\n                margin-left: 0.5rem;\n            }\n        }\n    }\n    // .additional-field-wrapper{\n    //     width: 100%;\n    //     display: flex;\n    //     justify-content: center;\n    //     flex-direction: column;\n    //     align-items: center;\n    //     .additional-field{\n    //         display: flex;\n    //         flex-direction: column;\n    //         align-items: flex-end;\n    //         width: 80%;\n    //         .input-box{\n    //             display: flex;\n    //             font-size: 1.2rem;\n    //             width: 80%;\n    //             justify-content: center;\n    //             border: solid $base-color;\n    //             border-radius: 0.5rem;\n    //             min-height: 20px;\n    //             background: $back-white;\n    //             // padding: 0.2rem 0.5rem;\n    //             overflow:hidden;\n    //             .each-title-container{\n    //                 flex-basis: 30%;\n    //                 display: flex;\n    //                 align-items: center;\n    //                 justify-content: center;\n    //                 border-right: solid $base-color;\n    //                 background: $dark-blue;                \n    //                 .each-title{\n    //                     color: $base-white;\n    //                     width: 100px;\n    //                     font-weight: bold;\n    //                     margin: 0.2rem 0.5rem;\n    //                 }\n    //             }\n    //             .text-box{\n    //                 flex-basis: 70%;\n    //                 background: transparent;\n    //                 border: none;\n    //                 margin-right: 1rem;\n    //                 margin-left: 1rem;\n    //                 font-size: 1rem;\n    //                 background: $back-white;\n    //                 .option{\n    //                     font-weight: bold;\n    //                 }\n    //             }\n    //             .text-box:focus{\n    //                 outline: none;\n    //             }\n    //             .level{\n    //                 display: flex;\n    //             }\n    //         }\n    //     }\n    // }\n}\n</style>"]},"metadata":{},"sourceType":"module"}