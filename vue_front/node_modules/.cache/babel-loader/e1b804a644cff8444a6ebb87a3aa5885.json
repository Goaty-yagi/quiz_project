{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'questions',\n  data: function data() {\n    return {\n      st: 'o',\n      id: 5,\n      selectedFile: ''\n    };\n  },\n  methods: _objectSpread({\n    getImage: function getImage(event) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('event', event);\n                _this.selectedFile = URL.createObjectURL(event.target.files[0]);\n                _this.image = event.target.files;\n                _context.next = 5;\n                return console.log();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    registerUserOndDjango: function registerUserOndDjango() {\n      console.log('start add');\n      var formData = new FormData();\n      formData.append('thumbnail', this.image[0]);\n      formData.append('UID', 'kokomoko');\n      formData.append('name', 'mokokoko');\n      formData.append('email', 'ko@k.com');\n      formData.append('grade', 'kokomoko');\n      formData.append('country', 'japan');\n      axios({\n        method: 'post',\n        url: '/api/user/',\n        data: formData // {\n        //   headers:{'Content-Type': \"multipart/form-data\"},\n        //     UID: 'kokomoko',\n        //     name: 'mokkoro',\n        //     email: 'koko@k.com',\n        //     grade: 'unko',\n        //     thumbnail: this.selectedFile,\n        //     country: 'japan'\n        // },\n\n      });\n    },\n    userUpdate: function userUpdate() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var formData;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('thumbnail', _this2.selectedFile);\n                console.log('getthumb', formData.get('thumbnail'));\n                _context2.next = 5;\n                return axios.patch(\"/api/user/\".concat(_this2.$route.params.uid), formData, formData.name);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    quizRouter: function quizRouter(i, f, n) {\n      return {\n        name: 'Quiz',\n        params: {\n          id: i,\n          field: f,\n          num: n\n        }\n      };\n    }\n  }, mapActions(['getquiz', 'getquestions'])),\n  created: function created() {// this.$store.commit('setNum',this.id)\n    // this.getquiz()\n    // this.getquestions()\n  },\n  // mounted(){\n  //     this.st = this.$store.commit('unko')\n  //     console.log(this.st)\n  // }\n  computed: mapGetters(['questions', 'quizzes'])\n};","map":{"version":3,"mappings":";;;;;;;;;AAgBA,SAAQA,UAAR,EAAmBC,UAAnB,QAAoC,MAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,EAAC,WADQ;EAEbC,IAFa,kBAEP;IACJ,OAAM;MACJC,EAAE,EAAC,GADC;MAEJC,EAAE,EAAE,CAFA;MAGJC,YAAY,EAAC;IAHT,CAAN;EAKD,CARY;EASbC,OAAO;IACCC,QADD,oBACUC,KADV,EACgB;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACbC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;gBACA,KAAI,CAACH,YAAL,GAAoBM,GAAG,CAACC,eAAJ,CAAoBJ,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB,CAApB;gBACA,KAAI,CAACC,KAAL,GAAaP,KAAK,CAACK,MAAN,CAAaC,KAA1B;gBAHa;gBAAA,OAIPL,OAAO,CAACC,GAAR,EAJO;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMhB,CAPA;IAQLM,qBARK,mCAQkB;MACfP,OAAO,CAACC,GAAR,CAAY,WAAZ;MACA,IAAMO,QAAO,GAAI,IAAIC,QAAJ,EAAjB;MACAD,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA4B,KAAKJ,KAAL,CAAW,CAAX,CAA5B;MACAE,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAsB,UAAtB;MACAF,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuB,UAAvB;MACAF,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwB,UAAxB;MACAF,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwB,UAAxB;MACAF,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,OAA1B;MACAnB,KAAK,CAAC;QACFoB,MAAM,EAAE,MADN;QAEFC,GAAG,EAAE,YAFH;QAGFnB,IAAI,EAAEe,QAHJ,CAIF;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MAZE,CAAD,CAAL;IAcH,CA/BA;IAgCGK,UAhCH,wBAgCe;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACNL,QADM,GACK,IAAIC,QAAJ,EADL;gBAEZD,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA4B,MAAI,CAACd,YAAjC;gBACAI,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBO,QAAQ,CAACM,GAAT,CAAa,WAAb,CAAvB;gBAHY;gBAAA,OAIRvB,KAAK,CAACwB,KAAN,qBAAyB,MAAI,CAACC,MAAL,CAAYC,MAAZ,CAAmBC,GAA5C,GACFV,QADE,EACQA,QAAQ,CAAChB,IADjB,CAJQ;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAeX,CA/CJ;IAgDL2B,UAhDK,sBAgDMC,CAhDN,EAgDQC,CAhDR,EAgDUC,CAhDV,EAgDY;MACf,OAAO;QAAE9B,IAAI,EAAE,MAAR;QAAgByB,MAAM,EAAC;UAAEtB,EAAE,EAACyB,CAAL;UAAQG,KAAK,EAACF,CAAd;UAAiBG,GAAG,EAACF;QAArB;MAAvB,CAAP;IACD;EAlDI,GAmDFhC,UAAU,CAAC,CAAC,SAAD,EAAW,cAAX,CAAD,CAnDR,CATM;EAkEXmC,OAlEW,qBAkEF,CACP;IACA;IACA;EACD,CAtEU;EAwEb;EACA;EACA;EACA;EACAC,QAAQ,EAAErC,UAAU,CAAC,CAAC,WAAD,EAAa,SAAb,CAAD;AA5EP,CAAf","names":["mapGetters","mapActions","axios","name","data","st","id","selectedFile","methods","getImage","event","console","log","URL","createObjectURL","target","files","image","registerUserOndDjango","formData","FormData","append","method","url","userUpdate","get","patch","$route","params","uid","quizRouter","i","f","n","field","num","created","computed"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n      <div class=\"lds-dual-ring\"></div>\n    </div>\n     <form @submit.prevent='registerUserOndDjango' >\n          <input type=\"file\" @change='getImage'>\n          <div v-if=\"selectedFile\">\n              <img ref='image' :src=\"selectedFile\">\n          </div>\n            <button>save</button>\n      </form>\n  </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport axios from 'axios'\nexport default {\n  name:'questions',\n  data(){\n    return{\n      st:'o',\n      id: 5,\n      selectedFile:''\n    }\n  },\n  methods:{\n    async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files\n            await console.log()\n            // this.imageCropper()\n        },\n    registerUserOndDjango(){\n            console.log('start add')\n            const formData = new FormData()\n            formData.append('thumbnail',this.image[0])\n            formData.append('UID','kokomoko')\n            formData.append('name','mokokoko')\n            formData.append('email','ko@k.com')\n            formData.append('grade','kokomoko')\n            formData.append('country','japan')\n            axios({\n                method: 'post',\n                url: '/api/user/',\n                data: formData\n                // {\n                //   headers:{'Content-Type': \"multipart/form-data\"},\n                //     UID: 'kokomoko',\n                //     name: 'mokkoro',\n                //     email: 'koko@k.com',\n                //     grade: 'unko',\n                //     thumbnail: this.selectedFile,\n                //     country: 'japan'\n                // },\n            })\n        },\n      async userUpdate(){\n            const formData = new FormData()\n            formData.append('thumbnail',this.selectedFile)\n            console.log('getthumb',formData.get('thumbnail'))\n          await axios.patch(`/api/user/${this.$route.params.uid}`,\n              formData, formData.name\n          )\n        //   ({\n        //       methods: 'patch',\n        //       url: `/api/user/${this.$route.params.uid}`,\n        //       data:{\n        //         //   thumbnail: this.selectedFile\n        //         name: 'unko'\n        //             }\n        //         })      \n            },\n    quizRouter(i,f,n){\n      return { name: 'Quiz', params:{ id:i, field:f, num:n}}\n    },\n    ...mapActions(['getquiz','getquestions'])\n    // unko(){\n    //   this.$store.commit('unko',)\n    // }\n    },\n    \n    created(){\n      // this.$store.commit('setNum',this.id)\n      // this.getquiz()\n      // this.getquestions()\n    },\n    \n  // mounted(){\n  //     this.st = this.$store.commit('unko')\n  //     console.log(this.st)\n  // }\n  computed: mapGetters(['questions','quizzes'])\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}