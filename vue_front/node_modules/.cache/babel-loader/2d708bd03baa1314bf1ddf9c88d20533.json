{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-126d06ac\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"main-wrapper\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"lds-dual-ring\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_3 = {\n  key: 0,\n  class: \"main-container\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  class: \"notification-text\"\n};\nvar _hoisted_5 = {\n  key: 1,\n  class: \"notification-text\"\n};\n\nvar _hoisted_6 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"h1\", {\n    class: \"title-white\"\n  }, \"質問板\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_7 = {\n  class: \"user-info\"\n};\nvar _hoisted_8 = {\n  class: \"header\"\n};\nvar _hoisted_9 = [\"src\"];\nvar _hoisted_10 = {\n  class: \"content\"\n};\n\nvar _hoisted_11 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", null, \"ベストアンサー数 0\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_12 = {\n  class: \"tag-container\"\n};\n\nvar _hoisted_13 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"tag-text\"\n  }, \"関連するタグ\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_14 = {\n  class: \"tag-wrapper\"\n};\nvar _hoisted_15 = {\n  key: 0\n};\n\nvar _hoisted_16 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"現在表示できるタグはありません。\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_17 = [_hoisted_16];\nvar _hoisted_18 = [\"onClick\"];\nvar _hoisted_19 = {\n  key: 1,\n  class: \"nav-ber\"\n};\nvar _hoisted_20 = {\n  class: \"selecter\"\n};\n\nvar _hoisted_21 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"lds-dual-ring\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_22 = {\n  key: 2,\n  class: \"no-question\"\n};\nvar _hoisted_23 = {\n  key: 0\n};\n\nvar _hoisted_24 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"表示できる質問はありません。\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_25 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"質問をするとここに表示されます。\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_26 = [_hoisted_24, _hoisted_25];\nvar _hoisted_27 = {\n  key: 1\n};\n\nvar _hoisted_28 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"表示できる質問はありません。\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_29 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"質問に回答するとここに表示されます。\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_30 = [_hoisted_28, _hoisted_29];\nvar _hoisted_31 = {\n  key: 2\n};\n\nvar _hoisted_32 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"表示できる質問はありません。\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_33 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", null, \"お気に入りに登録するとここに表示されます。\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_34 = [_hoisted_32, _hoisted_33];\nvar _hoisted_35 = [\"onClick\"];\nvar _hoisted_36 = {\n  class: \"tag-wrapper\"\n};\nvar _hoisted_37 = {\n  class: \"on-answer-wrapper\"\n};\nvar _hoisted_38 = {\n  key: 0,\n  class: \"on-answer\"\n};\nvar _hoisted_39 = {\n  key: 0,\n  class: \"on-answer-container\"\n};\n\nvar _hoisted_40 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", {\n    class: \"span1\"\n  }, \" NEW\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_41 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", {\n    class: \"span2\"\n  }, \"ANSWER\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_42 = [_hoisted_40, _hoisted_41];\nvar _hoisted_43 = {\n  key: 1,\n  class: \"on-answer-container\"\n};\n\nvar _hoisted_44 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", {\n    class: \"span1\"\n  }, \" NEW\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_45 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", {\n    class: \"span2\"\n  }, \"Reply\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_46 = [_hoisted_44, _hoisted_45];\nvar _hoisted_47 = {\n  key: 1,\n  class: \"on-answer\"\n};\n\nvar _hoisted_48 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"on-answer-container\"\n  }, [/*#__PURE__*/_createElementVNode(\"span\", {\n    class: \"span1\"\n  }, \" NEW\"), /*#__PURE__*/_createElementVNode(\"span\", {\n    class: \"span2\"\n  }, \"REPLY\")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_49 = [_hoisted_48];\nvar _hoisted_50 = {\n  class: \"question-title\"\n};\nvar _hoisted_51 = {\n  key: 0,\n  class: \"question-description\"\n};\nvar _hoisted_52 = {\n  class: \"good-like-wrapper\"\n};\n\nvar _hoisted_53 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"far fa-heart\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_54 = {\n  key: 0,\n  class: \"good\"\n};\nvar _hoisted_55 = {\n  class: \"date\"\n};\nvar _hoisted_56 = {\n  key: 3,\n  class: \"question-list-dammy shine\"\n};\n\nvar _hoisted_57 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"tag-wrapper-dammy\\\" data-v-126d06ac><div class=\\\"tag-dammy\\\" data-v-126d06ac></div></div><div class=\\\"question-title-dammy\\\" data-v-126d06ac></div><div class=\\\"questiondescroption-dammy\\\" data-v-126d06ac></div><div class=\\\"footer-dammy\\\" data-v-126d06ac></div>\", 4);\n\nvar _hoisted_61 = [_hoisted_57];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"board-account-wrapper scroll_area\", {\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading\n    }])\n  }, [_createCommentVNode(\" <i class=\\\"fas fa-cog\\\"></i> \"), _hoisted_2], 2\n  /* CLASS */\n  ), _ctx.$store.state.isLoading == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [$data.onNotification.show ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass({\n      'notification-blue': $data.onNotification.show\n    })\n  }, [$data.onNotification.onAnswer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" 新しい回答があります。 \")) : _createCommentVNode(\"v-if\", true), $data.onNotification.onReply ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" 新しい返信があります。 \")) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true), _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"img\", {\n    class: \"img\",\n    src: $options.user.thumbnail\n  }, null, 8\n  /* PROPS */\n  , _hoisted_9), _createElementVNode(\"p\", null, _toDisplayString($options.user.name), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", null, \"質問数 \" + _toDisplayString($options.user.question.length), 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", null, \"回答数 \" + _toDisplayString($options.user.answer.length), 1\n  /* TEXT */\n  ), _hoisted_11])]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"div\", _hoisted_14, [!$options.getThreeUsertag ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _hoisted_17)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getThreeUsertag, function (tag, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      onClick: function onClick($event) {\n        return $options.handleTag(questionindex, tag.tag.id, 'tag');\n      },\n      class: _normalizeClass([\"tag\", {\n        'animation-tag': $data.active == questionindex\n      }]),\n      key: questionindex\n    }, _toDisplayString(tag.tag.tag), 11\n    /* TEXT, CLASS, PROPS */\n    , _hoisted_18);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createCommentVNode(\" <p>編集する></p> \")]), $data.tag == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'selected': $data.showQuestion.questionType.question\n    }),\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.handleQuestionType('question');\n    })\n  }, \"質問\", 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'selected': $data.showQuestion.questionType.answered\n    }),\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $options.handleQuestionType('answered');\n    })\n  }, \"回答\", 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'selected': $data.showQuestion.questionType.reccomend\n    }),\n    onClick: _cache[2] || (_cache[2] = function ($event) {\n      return $options.handleQuestionType('reccomend');\n    })\n  }, \"おすすめ\", 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'selected': $data.showQuestion.questionType.favorite\n    }),\n    onClick: _cache[3] || (_cache[3] = function ($event) {\n      return $options.handleQuestionType('favorite');\n    })\n  }, \"お気に入り\", 2\n  /* CLASS */\n  ), _createCommentVNode(\" <div :class=\\\"{'selected': showQuestion.questionType.message}\\\">メッセージ</div> \")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", {\n    class: _normalizeClass([{\n      'option-selected': $data.showQuestion.questionStatus.all\n    }, \"select-item\"]),\n    onClick: _cache[4] || (_cache[4] = function ($event) {\n      return $options.handleQuestionStatus('all');\n    })\n  }, \"ALL\", 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass([{\n      'option-selected': $data.showQuestion.questionStatus.solved\n    }, \"select-item\"]),\n    onClick: _cache[5] || (_cache[5] = function ($event) {\n      return $options.handleQuestionStatus('solved');\n    })\n  }, \"解決\", 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass([{\n      'option-selected': $data.showQuestion.questionStatus.unsolved\n    }, \"select-item\"]),\n    onClick: _cache[6] || (_cache[6] = function ($event) {\n      return $options.handleQuestionStatus('unsolved');\n    })\n  }, \"未解決\", 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass([{\n      'option-selected': $data.showQuestion.questionStatus.onVoting\n    }, \"select-item\"]),\n    onClick: _cache[7] || (_cache[7] = function ($event) {\n      return $options.handleQuestionStatus('onVoting');\n    })\n  }, \"投票中\", 2\n  /* CLASS */\n  ), $data.showQuestion.questionType.answered ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([{\n      'option-selected': $data.showQuestion.questionStatus.best\n    }, \"select-item\"]),\n    onClick: _cache[8] || (_cache[8] = function ($event) {\n      return $options.handleQuestionStatus('best');\n    })\n  }, \"ベスト\", 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered middle-loading\", {\n      'is-loading': $data.spinner\n    }])\n  }, [_createCommentVNode(\" <i class=\\\"fas fa-cog\\\"></i> \"), _hoisted_21], 2\n  /* CLASS */\n  ), !$options.handleQuestion[0] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [$data.showQuestion.questionType.question ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, _hoisted_26)) : _createCommentVNode(\"v-if\", true), $data.showQuestion.questionType.answered ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, _hoisted_30)) : _createCommentVNode(\"v-if\", true), $data.showQuestion.questionType.favorite ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, _hoisted_34)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.handleQuestion, function (question, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"question-container\",\n      key: questionindex\n    }, [$data.spinner == false ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"question-list\",\n      onClick: function onClick($event) {\n        return $options.getDetail(question.slug);\n      }\n    }, [_createElementVNode(\"div\", _hoisted_36, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(question.tag, function (tag, tagindex) {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"tag\",\n        key: tagindex\n      }, _toDisplayString(tag.tag), 1\n      /* TEXT */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    )), _createElementVNode(\"div\", _hoisted_37, [$options.handleOnAnswer(question) || $options.handleOnReply2(question) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_38, [$options.handleOnAnswer(question) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, _hoisted_42)) : _createCommentVNode(\"v-if\", true), $options.handleOnReply2(question) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_43, _hoisted_46)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $options.onReplayCheck(question.answer) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, _hoisted_49)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_50, _toDisplayString(question.title), 1\n    /* TEXT */\n    ), question.description ? (_openBlock(), _createElementBlock(\"div\", _hoisted_51, _toDisplayString(question.description.substr(0, 10) + '...'), 1\n    /* TEXT */\n    )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_52, [_hoisted_53, question ? (_openBlock(), _createElementBlock(\"div\", _hoisted_54, _toDisplayString($options.viewedNum(question.liked_num)), 1\n    /* TEXT */\n    )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_55, \"作成日：\" + _toDisplayString($options.dateConvert(question.created_on)), 1\n    /* TEXT */\n    )])], 8\n    /* PROPS */\n    , _hoisted_35)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" v-if=\\\"scrollBottom&&questions.next\\\" \"), $data.questions.next && $data.scrollBottom ? (_openBlock(), _createElementBlock(\"div\", _hoisted_56, _hoisted_61)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_16","_hoisted_24","_hoisted_25","_hoisted_28","_hoisted_29","_hoisted_32","_hoisted_33","_hoisted_40","_hoisted_41","_hoisted_44","_hoisted_45","_hoisted_48","_hoisted_57","_createElementBlock","_ctx","state","isLoading","_createCommentVNode","_hoisted_2","$data","show","onAnswer","onReply","_hoisted_6","src","$options","thumbnail","_toDisplayString","name","question","length","answer","_hoisted_11","_hoisted_13","_hoisted_15","_hoisted_17","_Fragment","_renderList","tag","questionindex","onClick","id","key","_hoisted_18","questionType","answered","reccomend","favorite","questionStatus","all","solved","unsolved","onVoting","best","_hoisted_21","_hoisted_23","_hoisted_26","_hoisted_27","_hoisted_30","_hoisted_31","_hoisted_34","slug","tagindex","_hoisted_42","_hoisted_46","_hoisted_49","title","description","substr","_hoisted_53","liked_num","created_on","next","_hoisted_61"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/board/BoardAccount.vue"],"sourcesContent":["<template>\n    <div  class=\"board-account-wrapper scroll_area\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading}\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div v-if=\"$store.state.isLoading==false\" class='main-container'>\n                <div v-if=\"onNotification.show\" :class=\"{'notification-blue':onNotification.show}\">\n                    <div class=\"notification-text\" v-if=\"onNotification.onAnswer\">\n                        新しい回答があります。\n                    </div>\n                    <div class=\"notification-text\" v-if=\"onNotification.onReply\">\n                        新しい返信があります。\n                    </div>\n                </div>\n                <h1 class='title-white'>質問板</h1>\n                <div class=\"user-info\">\n                    <div class=\"header\">\n                        <img class='img' v-bind:src=\"user.thumbnail\"/>\n                        <p>{{ user.name}}</p>\n                    </div>\n                    <div class=\"content\">\n                        <div>質問数 {{ user.question.length }}</div>\n                        <div>回答数 {{ user.answer.length }}</div>\n                        <div>ベストアンサー数 0</div>\n                    </div>\n                </div>\n                <div class=\"tag-container\">\n                    <div class=\"tag-text\">関連するタグ</div>\n                    <div class=\"tag-wrapper\">\n                        <div v-if=\"!getThreeUsertag\">\n                            <p>現在表示できるタグはありません。</p>\n                        </div>\n                        <div \n                            @click=\"handleTag(questionindex,tag.tag.id,'tag')\"\n                            class=\"tag\"\n                            :class=\"{'animation-tag':active==questionindex}\" \n                            v-for=\"(tag,questionindex) in getThreeUsertag\"\n                            v-bind:key=\"questionindex\"\n                            >\n                            {{ tag.tag.tag }}\n                        </div>\n                        \n                    </div>\n                        <!-- <p>編集する></p> -->\n                </div>\n                <div class=\"nav-ber\" v-if=\"tag==false\">\n                    <div :class=\"{'selected': showQuestion.questionType.question}\" @click=\"handleQuestionType('question')\">質問</div>\n                    <div :class=\"{'selected': showQuestion.questionType.answered}\" @click=\"handleQuestionType('answered')\">回答</div>\n                    <div :class=\"{'selected': showQuestion.questionType.reccomend}\" @click=\"handleQuestionType('reccomend')\">おすすめ</div>\n                    <div :class=\"{'selected': showQuestion.questionType.favorite}\" @click=\"handleQuestionType('favorite')\">お気に入り</div>\n                    <!-- <div :class=\"{'selected': showQuestion.questionType.message}\">メッセージ</div> -->\n                </div>\n                <div class=\"selecter\">\n                    <div :class=\"{'option-selected': showQuestion.questionStatus.all}\" @click=\"handleQuestionStatus('all')\" class=\"select-item\">ALL</div>\n                    <div :class=\"{'option-selected': showQuestion.questionStatus.solved}\" @click=\"handleQuestionStatus('solved')\" class=\"select-item\">解決</div>\n                    <div :class=\"{'option-selected': showQuestion.questionStatus.unsolved}\" @click=\"handleQuestionStatus('unsolved')\" class=\"select-item\">未解決</div>\n                    <div :class=\"{'option-selected': showQuestion.questionStatus.onVoting}\" @click=\"handleQuestionStatus('onVoting')\" class=\"select-item\">投票中</div>\n                    <div v-if=\"showQuestion.questionType.answered\" :class=\"{'option-selected': showQuestion.questionStatus.best}\" @click=\"handleQuestionStatus('best')\" class=\"select-item\">ベスト</div>\n                </div>\n                <div class=\"is-loading-bar has-text-centered middle-loading\" v-bind:class=\"{'is-loading': spinner }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div class=\"no-question\" v-if=\"!handleQuestion[0]\">\n                <div v-if=\"showQuestion.questionType.question\">\n                    <p>表示できる質問はありません。</p>\n                    <p>質問をするとここに表示されます。</p>\n                </div>\n                <div v-if=\"showQuestion.questionType.answered\">\n                    <p>表示できる質問はありません。</p>\n                    <p>質問に回答するとここに表示されます。</p>\n                </div>\n                <div v-if=\"showQuestion.questionType.favorite\">\n                    <p>表示できる質問はありません。</p>\n                    <p>お気に入りに登録するとここに表示されます。</p>\n                </div>\n            </div>\n                <div\n                    class='question-container'\n                    v-for=\"(question,questionindex) in handleQuestion\"\n                    v-bind:key=\"questionindex\">\n                    \n                    <div class='question-list' v-if=\"spinner==false\" @click=\"getDetail(question.slug)\">\n                        <div class=\"tag-wrapper\">\n                            <div \n                                class=\"tag\"\n                                v-for=\"(tag,tagindex) in question.tag\" \n                                v-bind:key=\"tagindex\">{{ tag.tag }}\n                            </div>\n                            <div class=\"on-answer-wrapper\">\n                                <div class=\"on-answer\" v-if=\"handleOnAnswer(question)||handleOnReply2(question)\">\n                                        <div class=\"on-answer-container\" v-if=\"handleOnAnswer(question)\">\n                                            <span class=\"span1\"> NEW</span><span class=\"span2\">ANSWER</span>\n                                        </div>\n                                        <div class=\"on-answer-container\" v-if=\"handleOnReply2(question)\">\n                                            <span class=\"span1\"> NEW</span><span class=\"span2\">Reply</span>\n                                        </div>\n                                </div>\n                                <div class=\"on-answer\" v-if=\"onReplayCheck(question.answer)\">\n                                    <div class=\"on-answer-container\">\n                                        <span class=\"span1\"> NEW</span><span class=\"span2\">REPLY</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"question-title\">{{ question.title }}</div>\n                        <div class=\"question-description\" v-if=\"question.description\">{{ question.description.substr(0,10)+'...' }}</div>\n                        <div class='good-like-wrapper'>\n                            <i class=\"far fa-heart\"></i>\n                            <div class=\"good\" v-if=\"question\">{{ viewedNum(question.liked_num) }}</div>\n                            <div class=\"date\">作成日：{{ dateConvert(question.created_on) }}</div>\n                        </div>\n                    </div>   \n                </div>\n                <!-- v-if=\"scrollBottom&&questions.next\" -->\n                <div v-if=\"questions.next&&scrollBottom\" class=\"question-list-dammy shine\">\n                    <div class=\"tag-wrapper-dammy\">\n                        <div class=\"tag-dammy\"></div>\n                    </div>\n                    <div class=\"question-title-dammy\"></div>\n                    <div class=\"questiondescroption-dammy\"></div>\n                    <div class=\"footer-dammy\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {router} from \"/src/main.js\"\nimport axios from 'axios'\nexport default {\n    data(){\n        return{\n            questions:'',\n            reccomendedQuestion:'',\n            answeredQuestion:'',\n            userQuestion:'',\n            tagQuestion:'',\n            bottomScrollActionHandler: true,\n            scrollBottom: false,\n            tag:false,\n            active: null,\n            spinner:false,\n            onNotification:{\n                onReply:false,\n                onAnswer:false,\n                show: false\n            },\n            showNotifications: false,\n            temporaryStatus:'',\n            showQuestion:{\n                questionType:{\n                    question: true,\n                    answered: false,\n                    reccomend: false,\n                    favorite: false,\n                    tag:false,\n\n                },\n                questionStatus:{\n                    all: true,\n                    solved: false,\n                    unsolved: false,\n                    onVoting: false,\n                    best: false,\n                }\n            }\n        }\n    },\n    computed:{\n        user(){\n            return this.$store.getters.getDjangouser\n        },\n        // notifications(){\n        //     return this.$store.getters.notifications\n        // },\n        getThreeUsertag(){\n            const _ = require('lodash');\n            let used_num_list = []\n            let userTag = _.cloneDeep(this.user.user_tag)\n            if(userTag){\n                if(userTag.length == 1){\n                    return userTag\n                }\n                else if(userTag.length == 2){\n                    used_num_list.push(userTag.reduce((a,b)=>a.used_num>b.used_num?a:b))\n                    used_num_list.push(userTag.reduce((a,b)=>a.used_num<b.used_num?a:b))\n                    return used_num_list\n                }\n                else if(userTag.length >= 3){\n                    while (used_num_list.length < 3){\n                        used_num_list.push(userTag.reduce((a,b)=>a.used_num>b.used_num?a:b))\n                        Object.values(userTag).forEach(value =>{\n                            if(value.id == used_num_list.slice(-1)[0].id)                   \n                                delete userTag[userTag.indexOf(value)]\n                        })\n                    }\n                    return used_num_list\n                }\n            }else{\n                \n            }\n            // console.log(\"GT\",this.user.user_tag.reduce((a,b)=>a.used_num>b.used_num?a:b));\n            // let used_num_temp_list = []\n            // let used_num_list = []\n            // let counter = 0\n            // for(let i of this.user.user_tag){\n            //     if(counter == 0){\n            //         used_num_temp_list.push(i)\n            //         counter += 1\n            //     }else{\n\n            //     }\n            // }\n        },\n        getAnsweredQuestion(){\n            console.log(\"getdazeAQ\")\n            return this.$store.getters.gettersAnsweredQuestions\n        },\n        handleQuestion(){\n            const handledQuestion= []\n            console.log(\"questiontype\",this.showQuestion.questionType)\n            if(this.showQuestion.questionType.question){\n                try{\n                    this.questions = this.userQuestion\n                    console.log(\"UQR\",this.questions.results)\n                    return this.handleStatus(this.HandleQuestionOnanswerOrder(this.questions.results))\n                }catch{\n                }\n            }\n            else if(this.showQuestion.questionType.answered){\n                const answeredquiz = []\n                console.log('AQ',this.getAnsweredQuestion)\n                this.questions = this.getAnsweredQuestion\n                console.log(\"best\",this.showQuestion.questionStatus.best)\n                if(this.showQuestion.questionStatus.best){\n                    Object.values(this.questions.results).forEach(value =>{\n                        console.log(\"loop\",value.answer)\n                        for(let answer of value.answer){\n                            if(answer.best==true&&answer.user.UID==this.user.UID){\n                                answeredquiz.push(value)\n                            }\n                        }\n                    })\n                    console.log(\"best list\",answeredquiz)\n                    return answeredquiz\n                }\n                else{\n                    console.log(\"not best\")\n                    var answeredquiz2 = []\n                    // for(let i of this.answeredQuestion){\n                        Object.values(this.questions.results).forEach(value =>{\n                            console.log(\"value\",value.answer)\n                            if(value.answer[0].on_reply==true&&value.answer[0].user.UID==this.user.UID){\n                                answeredquiz.push(value)\n                            }else{\n                                answeredquiz2.push(value)\n                            }\n                        })\n                        console.log(answeredquiz,answeredquiz2)\n                        if(answeredquiz){\n                            for(let i of answeredquiz2){\n                                answeredquiz.push(i)\n                            }\n                            return this.handleStatus(answeredquiz)\n                        }\n                    return this.handleStatus(this.getAnsweredQuestion.results)   \n                }\n            }else if(this.showQuestion.questionType.reccomend){\n                this.questions = this.$store.state.board.reccomendedQuestion\n                return this.handleStatus(this.questions.results)\n            }else if(this.showQuestion.questionType.favorite){\n                if(this.$store.state.signup.favoriteQuestion){\n                     this.questions = this.$store.state.signup.favoriteQuestion\n                    return this.handleStatus(this.questions.results)\n                }else{\n                    this.questions = ''\n                    return this.handleStatus(this.questions)\n                }\n            }else if(this.showQuestion.questionType.tag){\n                this.questions = this.tagQuestion\n                return this.handleStatus(this.questions.results)\n            }\n            \n        },\n    },\n    beforeMount(){\n        console.log(\"beforeMounted\")\n        this.getUserQuestion()\n        this.scrollTop()\n        this.$store.dispatch(\"getAnsweredQuestion\")\n        this.$store.dispatch(\"getFavoriteQuestion\")\n    },\n    mounted(){\n        console.log('THREE',this.getThreeUsertag)\n        console.log('mounted')\n        this.getUserQuestion()\n        window.addEventListener('scroll', this.handleScroll)\n        window.addEventListener('scroll', this.getScrollY)\n        this.bottomScrollActionHandler = true\n        this.scrollBottom = false, \n        this.handleOnReply()\n        this.$store.dispatch('getRelatedQuestion')\n        this.reccomendedQuestion = this.$store.state.board.reccomendedQuestion\n        this.setTime()\n    },\n    beforeUnmount(){\n        window.removeEventListener('scroll', this.handleScroll)\n        window.removeEventListener('scroll', this.getScrollY)\n    },\n    methods:{\n        getDetail(slug){\n            router.push(`/board-detail/${slug}` )\n        },\n        async getAdditionalQuestion(next){\n            console.log(\"addQ\",next)\n            if(next!=null){\n                await axios\n                .get(next)\n                .then(response => {\n                    for(let i of response.data.results){\n                        this.questions.results.push(i)\n                    }\n                    this.questions.next= response.data.next\n                    this.bottomScrollActionHandler = true\n                    if(this.questions.next==null){\n                        this.bottomScrollActionHandler = false\n                        this.scrollBottom = false\n                        // window.removeEventListener('scroll', this.handleScroll)\n                        // window.removeEventListener('scroll', this.getScrollY)\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            }\n        },\n        async getUserQuestion(){\n            this.$store.commit('setIsLoading', true)\n            await axios\n                .get(`/api/board/question-user-question?uid=${this.user.UID}`)\n                .then(response => {\n                    this.userQuestion = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.$store.commit('setIsLoading', false)\n        },\n        async getTagQuestion(tagID, tag){\n            this.spinner = true\n            await axios\n                .get(`/api/board/tag-question?tag=${tagID}`)\n                .then(response => {\n                    this.tagQuestion = response.data\n                    console.log(\"GTQ\",this.tagQuestion,tagID,tag)\n                    this.handleQuestionType(tag)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.spinner = false\n        },\n        handleStatus(question){\n            console.log(\"handle\",question)\n            const handledQuestion= []\n            if(this.showQuestion.questionStatus.all){\n                console.log('just_return__dayo')\n                    return question\n                }\n                else if(this.showQuestion.questionStatus.solved){\n                    console.log('solved_dayo')\n                    for(let i of question){\n                        if(i.solved){\n                            handledQuestion.push(i)\n                        }\n                    }\n                    return handledQuestion\n                }else if(this.showQuestion.questionStatus.unsolved){\n                    for(let i of question){\n                        console.log(i.title)\n                        if(i.solved==false){\n                            handledQuestion.push(i)\n                        }\n                    }\n                    return handledQuestion\n                }else if(this.showQuestion.questionStatus.onVoting){\n                    console.log('on_going_dayo')\n                    for(let i of question){\n                        if(i.vote_on_going==true){\n                            handledQuestion.push(i)\n                        }\n                    }\n                    return handledQuestion\n                }\n        },\n        HandleQuestionOnanswerOrder(question){\n            const questionList = []\n            var questionList2 = []\n            for(let i of question){\n                if(i.on_answer==true){\n                    questionList.push(i)\n                }else{\n                    questionList2.push(i)\n                }\n            }\n            if(questionList){\n                for(let o of questionList2){\n                    questionList.push(o)\n                }\n                return questionList\n            }\n            return question\n\n        },\n        // handleQuestion(){\n        //     if(this.showQuestion.questionType.question){\n        //         // console.log(\"return_recen:\",this.questions)\n        //         return this.user.questions\n        //     }\n        //     else if(this.showQuestion.questionType.answered){\n        //         // console.log(\"return_reco:\",this.reccomendedQuestion)\n        //         return this.user.answer.question\n        //     }\n        // },\n        handleQuestionStatus(status){\n            // handle questionStatus start from here by click.\n            // change all status = false then invocation = true\n            // then handleQuestion on computed will be triggered\n            // which make question from answer to return question to handleStatus\n            console.log('status',status)\n            if(this.showQuestion.questionStatus[status]){\n                console.log('same')\n                ;\n            }\n            else{\n                console.log('not the same')\n                Object.keys(this.showQuestion.questionStatus).forEach(key =>{\n                    this.showQuestion.questionStatus[key] = false\n                })\n                this.showQuestion.questionStatus[status] = true\n                console.log(this.showQuestion.questionStatus)\n                this.scrollTop()\n            }\n        },\n        handleQuestionType(type){\n            console.log('got type', type)\n            this.bottomScrollActionHandler = true\n            if(this.showQuestion.questionType[type]){\n                console.log('same',this.showQuestion.questionType)\n                ;\n            }\n            else{\n                console.log('not the same')\n                Object.keys(this.showQuestion.questionType).forEach(key =>{\n                    this.showQuestion.questionType[key] = false\n                })\n                this.showQuestion.questionType[type] = true\n                console.log('after true',this.showQuestion.questionType)\n                this.scrollTop()\n                if(this.showQuestion.questionStatus.best==true){\n                    this.showQuestion.questionStatus.best==false\n                    this.handleQuestionStatus('all')\n                }\n            }\n            // if(type == question){\n                \n                // }\n                // for(let i=0; i<Object.keys(this.showQuestion.questionType.length); i++){\n\n                // }\n            \n        },\n        resetNotifications(){\n            this.onNotification.show = false\n            console.log('reset is done',this.onNotification.showReplyNotify)\n        },\n        setTime(){\n            if(this.onNotification.onReply||this.onNotification.onAnswer){\n                this.onNotification.show = true\n                setTimeout(this.resetNotifications, 4500) \n            }\n        },\n        handleOnReply(){\n            try{\n                console.log(\"handleOnREPLY\", this.getAnsweredQuestion)\n                for(let question of this.getAnsweredQuestion.results){\n                    console.log(\"first loop\",question.answer)\n                    for(let answer of question.answer){\n                        console.log(\"second loop\",answer)\n                        if(answer.on_reply==true&&answer.user.UID==this.user.UID){\n                            this.onNotification.onReply = true\n                        }\n                    }\n                }\n                console.log(\"end\")\n            }\n            catch{\n\n            }\n        },\n        handleOnAnswer(question){\n            if(question.on_answer&&question.user.UID==this.user.UID){\n                this.onNotification.onAnswer = true\n                return true      \n            }else{\n                return false\n            }\n        },\n        handleOnReply2(question){\n            if(question.on_reply&&question.user.UID==this.user.UID){\n                this.onNotification.onReply = true\n                return true      \n            }else{\n                return false\n            }\n        },\n        onReplayCheck(questionAnswer){\n            console.log('in ORC',questionAnswer)\n            for(let answer of questionAnswer){\n                console.log('loop',answer)\n                if(answer.on_reply==true){\n                    console.log(\"check on_reply\",answer.on_reply)\n                    if(answer.user.UID==this.user.UID){\n                    return true\n                    }\n                }\n            }\n            return false\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n                behavior: \"smooth\"\n            });\n        },\n        getScrollY(){\n            this.scrollY = window.scrollY\n        },\n        handleScroll(){\n            console.log(\"inSCROLL\")\n            var doch = document.querySelector('.scroll_area').scrollHeight\n            var winh = window.innerHeight; //ウィンドウの高さ\n            var bottom = doch - winh; //ページ全体の高さ - ウィンドウの高さ = ページの最下部位置\n            console.log(\"inSCROLL2\",\"doch\",doch,\"winh\",winh,'bottom',bottom,'scTOP',this.scrollY,this.bottomScrollActionHandler)\n            if (bottom+100 <= this.scrollY&&this.bottomScrollActionHandler) {\n                this.bottomScrollActionHandler = false\n                this.scrollBottom = true\n                console.log(\"shitadayo\",this.scrollBottom,this.questions.next)\n                this.getAdditionalQuestion(this.questions.next)\n                // if(this.next==null){\n                //     this.scrollBottom = false\n                // }\n            }\n        },\n        handleTag(indexNum, tagID, tag){\n            this.tag = !this.tag\n            console.log('inHT',this.showQuestion.questionType)\n            if(this.showQuestion.questionType.tag == false){\n                for(let i of Object.keys(this.showQuestion.questionType)){\n                    if(this.showQuestion.questionType[i]==true){\n                        this.temporaryStatus = i\n                        console.log('TMK',this.temporaryStatus)\n                    }\n                }\n            }\n            console.log('TMK2',this.temporaryStatus)\n            if(this.active == indexNum){\n                this.active = null\n                this.tag = false\n                this.showQuestion.questionType.tag = false\n                console.log(\"before\",this.showQuestion.questionType,this.temporaryStatus)\n                this.handleQuestionType(this.temporaryStatus)\n            }else{\n                this.active = indexNum\n                this.tag = true\n                this.getTagQuestion(tagID, tag)\n            }\n        },\n        dateConvert(date){\n            var date = date\n            var time = ''\n            var newDate = ''\n            var dt = new Date(date)\n            if(dt.getHours() > 11){\n                time = \" PM\"\n                dt = dt.setHours(dt.getHours()-12)\n                date = new Date(dt)\n            }else{\n                time = \" AM\"\n            }\n            newDate = date + time + \" UTC\"\n            dt = new Date(newDate)\n            var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n            return stringDT.replace(/\\//g,'-')\n        },\n        viewedNum(likedNum){\n            console.log('in_liked',likedNum)\n            try{\n                if(likedNum){\n                    return likedNum[0].liked_num\n                }\n                else{\n                    return 0\n                }\n            }\n            catch{\n                return 0\n            }\n        }\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n\n.animation-tag{\n    color: white;\n    background: $dark-blue;\n    animation-name: tag;\n    animation-timing-function:linear;\n    animation-duration:1s;\n    animation-iteration-count:1;\n    animation:tag  forwards;\n}\n@keyframes tag {\n  from   { opacity: 1;\n        } \n  100% { \n      color:white;\n      background: $dark-blue;\n      border: 0.1rem solid $base-color;\n      \n  }\n}\n\n.board-account-wrapper{\n    display: flex;\n    height: auto;\n    min-height: 80vh;\n    width: 100vw;\n    margin-bottom: 1rem;\n    flex-direction: column;\n    align-items: center;\n}\n.main-container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    .notification-blue{\n        display: flex;\n        display: flex;\n        flex-direction: column;\n        .notification-text{\n            margin-top: 1rem;\n        }\n    }\n    \n    .user-info{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 90%;\n        padding:0.5rem;\n        .header{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            p{\n                flex-basis: 70%;\n                font-size: 2rem;\n                font-weight: bold;\n            }\n        }\n        .content{\n            margin-top: 0.5rem;\n            width:100%;\n            position: relative;\n            text-align: left;\n        }\n    }\n    .tag-container{\n        margin-top: 1rem;\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 90%;\n        padding:0.5rem;\n        .tag-text{\n            font-size: 1.2rem;\n            margin: 0.5rem;\n        }\n        .tag-wrapper{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n            .tag{\n                border: solid $dark-blue;\n                border-radius: 50vh;\n                background: $base-lite-2;\n                margin-top: 0.5rem;\n                margin-left: 0.5rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                padding: 0.5rem;\n                min-width: 5rem;\n                font-size: 1rem;\n                font-weight: bold;\n                color:$dark-blue;\n                transition: 0.5s;\n            }\n            .tag:hover{\n                color: gray\n            }\n        }\n        p{\n            text-align: right;\n        }\n    }\n    .nav-ber{\n        width:100%;\n        display: flex;\n        justify-content: center;\n        margin-top: 1rem;\n        div{\n            font-size:0.8rem;\n            color: white;\n            border:0.1rem solid white;\n            position:flex;\n            flex-direction: column;\n            flex-basis:20%;\n            padding-left:0.1rem;\n            padding-right:0.1rem;\n            padding: 0.2rem;\n            background: linear-gradient(rgba(91, 117, 159, 0.9),rgba(28, 37, 76, 0.9));\n            transition:0.5s;\n        }\n        div:hover{\n            font-weight: bold;\n        }\n        .selected{\n            background: $base-color;\n            font-weight: bold;\n            color: black;\n        }\n    }\n    .selecter{\n        width:100%;\n        display: flex;\n        justify-content: center;\n        margin-top: 1rem;\n        transition: 0.5s;\n        .select-item{\n            font-size:0.8rem;\n            color: white;\n            border:0.1rem solid $base-color;\n            border-radius: 1rem;\n            margin:0.3rem;\n            min-width: 3rem;\n            position:flex;\n            // flex-basis:20%;\n            padding-left:0.1rem;\n            padding-right:0.1rem;\n            padding: 0.2rem;\n            transition:0.5s;\n        }\n        .select-item:hover{\n            font-weight: bold;\n        }\n        .option-selected{\n            color: black;\n            font-weight: bold;\n            background: $base-lite;\n            border:0.1rem solid $dark-blue;\n        }\n    }\n    .middle-loading{\n        margin-top: 2rem;\n    }\n    .question-container{\n        width: 90%;\n        .question-list:hover{\n            background: $base-lite-3;\n        }\n        .question-list{\n            border: solid $base-color;\n            margin-bottom: 0.5rem;\n            width:100%;\n            background: rgb(252, 252, 252);\n            display: flex;\n            flex-direction: column;\n            .tag-wrapper{\n                display: flex;\n                width: 100%;\n                .tag{\n                    border: solid black;\n                    border-radius: 50vh;\n                    background: rgb(230, 230, 230);\n                    margin-top: 0.5rem;\n                    margin-left: 0.3rem;\n                    margin-bottom: 0.5rem;\n                    padding: 0.5rem;\n                    min-width: 3rem;\n                }\n                .on-answer-wrapper{\n                    position:relative;\n                    width:100%;\n                    .on-answer{\n                        position: absolute;\n                        right: 0;\n                        flex-direction: column;\n                        width:3.7rem;\n                        margin-top: 0.5rem;\n                        margin-right: 0.3rem;\n                        padding-right:0.2rem;\n                        padding-left:0.2rem; \n                        .on-answer-container{\n                            display: flex;\n                            flex-direction: column;\n                            color: red;\n                            border: solid red;\n                            border-radius: 0.5rem;\n                            margin-bottom: 0.3rem;     \n                        }\n                        .span1{\n                            font-weight: bold;\n                        }\n                        .span2{\n                            margin-top: -0.5rem;\n                            font-size: 0.6rem;\n                            font-weight: bold;             \n                        }\n                    }\n                }\n            }\n            .good-like-wrapper{\n                display: flex;\n                .fa-heart{\n                    color: rgb(221, 36, 221);\n                    margin-left: 0.5rem;\n                    margin-right: 0.3rem;\n                    margin-top: 0.2rem;\n                }\n                .date{\n                    margin-left: 0.5rem;\n                }\n            }\n        }\n    }\n    .question-list-dammy{\n        background: gray;\n        display: flex;\n        width: 90%;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .tag-wrapper-dammy{\n            display: flex;\n            width: 100%;\n            .tag-dammy{\n                border-radius: 50vh;\n                background: rgb(92, 92, 92);\n                margin-top: 0.5rem;\n                margin-left: 0.3rem;\n                margin-bottom: 0.5rem;\n                padding: 0.5rem;\n                min-width: 3rem;\n                min-height: 1.5rem;\n            }\n        }\n        .question-title-dammy{\n            background: rgb(92, 92, 92);\n            padding: 0.5rem;\n            width: 80%;\n        }\n        .questiondescroption-dammy{\n            background: rgb(92, 92, 92);\n            padding: 0.5rem;\n            width: 80%;\n            margin-top: 0.5rem;\n        }\n        .footer-dammy{\n            background: rgb(92, 92, 92);\n            padding: 0.5rem;\n            width: 80%;\n            margin-top: 0.5rem;\n            margin-bottom: 1rem;\n        }\n    }\n}\n.no-question{\n    border: solid $lite-gray;\n    background: $back-gra-white;\n    width: 80%;\n    padding: 1rem 0;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}