{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-56af8991\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"main-wrapper\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"lds-dual-ring\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_3 = {\n  key: 1,\n  class: \"main-container\"\n};\nvar _hoisted_4 = {\n  class: \"my-quiz-header\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"p\", {\n    class: \"title-white\"\n  }, \"My-Quiz\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_6 = {\n  class: \"register\"\n};\nvar _hoisted_7 = {\n  class: \"max\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  class: \"my-quiz-container\"\n};\nvar _hoisted_9 = {\n  key: 0,\n  class: \"no-my-quiz\"\n};\n\nvar _hoisted_10 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"no-quiz\"\n  }, [/*#__PURE__*/_createTextVNode(\" 登録したクイズはありません。\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" クイズ画面から登録できます。\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" クイズを登録すると、\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"そのクイズだけ練習できます。 \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_11 = /*#__PURE__*/_createTextVNode(\" クイズへ行く \");\n\nvar _hoisted_12 = [\"onClick\"];\nvar _hoisted_13 = {\n  class: \"each-quiz-container\"\n};\nvar _hoisted_14 = {\n  class: \"question-index-container\"\n};\nvar _hoisted_15 = {\n  class: \"question-index\"\n};\nvar _hoisted_16 = {\n  class: \"question-field\"\n};\nvar _hoisted_17 = {\n  class: \"question-grade\"\n};\nvar _hoisted_18 = {\n  class: \"question-label\"\n};\n\nvar _hoisted_19 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"close-container\"\n  }, [/*#__PURE__*/_createCommentVNode(\" <div @click=\\\"deleteMyQuestion(question.question.id)\\\" class=\\\"close\\\">\\n                                    <i class=\\\"fas fa-times\\\"></i>\\n                                </div> \")], -1\n  /* HOISTED */\n  );\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_MyQuizPractice = _resolveComponent(\"MyQuizPractice\");\n\n  var _component_router_link = _resolveComponent(\"router-link\");\n\n  var _component_QuizDetail = _resolveComponent(\"QuizDetail\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"my-quiz-wrapper\", {\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading && !$data.quizOpen\n    }])\n  }, [_createCommentVNode(\" <i class=\\\"fas fa-cog\\\"></i> \"), _hoisted_2], 2\n  /* CLASS */\n  ), $data.quizOpen ? (_openBlock(), _createBlock(_component_MyQuizPractice, {\n    key: 0,\n    onHandleQuizOpen: $options.handleQuizOpen\n  }, null, 8\n  /* PROPS */\n  , [\"onHandleQuizOpen\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <QuizP\\n            v-if=\\\"componentHandleDict.quiz\\\"\\n            :forQuizPageInfo=\\\"forQuizPageInfo\\\"\\n            @backQuizHome=\\\"backQuizHome\\\"/> \"), !$data.quizOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"p\", _hoisted_6, \"登録数\" + _toDisplayString($options.length) + \" / \" + _toDisplayString($options.myQuiz.max_num), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", _hoisted_7, \"(最大 \" + _toDisplayString($options.myQuiz.max_num) + \" 個まで登録できます)\", 1\n  /* TEXT */\n  )]), _ctx.$store.state.isLoading == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [!$data.showButtonAndNoQuiz ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_hoisted_10, _createVNode(_component_router_link, {\n    to: {\n      name: 'QuizHome'\n    },\n    class: \"btn-basegra-white-db-sq\"\n  }, {\n    default: _withCtx(function () {\n      return [_hoisted_11];\n    }),\n    _: 1\n    /* STABLE */\n\n  })])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.myQuestion, function (question, questionindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"my-quiz-loop\",\n      onClick: function onClick($event) {\n        return $options.getQuestionDetailInfo(question);\n      },\n      key: questionindex\n    }, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, _toDisplayString(questionindex + 1), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_16, _toDisplayString($options.convertFieldIdToInt(question.question.field[0])), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_17, _toDisplayString($options.convertQuizIdToInt(question.question.quiz)), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_18, _toDisplayString(question.question.label.substr(0, 15) + '...'), 1\n    /* TEXT */\n    ), _hoisted_19])], 8\n    /* PROPS */\n    , _hoisted_12);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), $data.quizDetail ? (_openBlock(), _createBlock(_component_QuizDetail, {\n    key: 1,\n    questionDetailInfo: $data.questionDetailInfo,\n    myQuestion: $data.myQuestion,\n    showButtonAndNoQuiz: $data.showButtonAndNoQuiz,\n    onHandleQuizDetail: $options.handleQuizDetail,\n    onDeleteQuestionFunForDetailPage: $options.deleteQuestionFunForDetailPage\n  }, null, 8\n  /* PROPS */\n  , [\"questionDetailInfo\", \"myQuestion\", \"showButtonAndNoQuiz\", \"onHandleQuizDetail\", \"onDeleteQuestionFunForDetailPage\"])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $data.showButtonAndNoQuiz ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.handleQuizOpen();\n    }),\n    class: \"btn-basegra-white-db-sq\"\n  }, \" 練習 \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_ctx","state","isLoading","$data","_hoisted_2","_createBlock","_component_MyQuizPractice","onHandleQuizOpen","$options","_hoisted_5","_toDisplayString","max_num","_hoisted_10","_createVNode","_component_router_link","to","name","_Fragment","_renderList","question","questionindex","onClick","key","field","quiz","label","substr","_hoisted_19","_component_QuizDetail","questionDetailInfo","myQuestion","showButtonAndNoQuiz","onHandleQuizDetail","onDeleteQuestionFunForDetailPage"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/MyQuiz.vue"],"sourcesContent":["<template>\n    <div class=\"my-quiz-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading&&!quizOpen}\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <MyQuizPractice\n            v-if=\"quizOpen\"\n            @handleQuizOpen=\"handleQuizOpen\"\n            />\n            <!-- <QuizP\n            v-if=\"componentHandleDict.quiz\"\n            :forQuizPageInfo=\"forQuizPageInfo\"\n            @backQuizHome=\"backQuizHome\"/> -->\n            <div class=\"main-container\" v-if=\"!quizOpen\">\n                <div class=\"my-quiz-header\">\n                    <p class=\"title-white\">My-Quiz</p>\n                    <p class=\"register\">登録数{{ length }} / {{myQuiz.max_num}}</p>\n                    <p class=\"max\">(最大 {{myQuiz.max_num}} 個まで登録できます)</p>\n                </div>\n                <div class=\"my-quiz-container\" v-if=\"$store.state.isLoading==false\">\n                    <div class=\"no-my-quiz\" v-if=\"!showButtonAndNoQuiz\">\n                        <div class=\"no-quiz\">\n                            登録したクイズはありません。<br>\n                            クイズ画面から登録できます。<br><br>\n                            クイズを登録すると、<br>そのクイズだけ練習できます。\n                        </div>\n                        <router-link :to=\"{ name: 'QuizHome'}\" class=\"btn-basegra-white-db-sq\">\n                            クイズへ行く\n                        </router-link>\n                    </div>\n                    <div class=my-quiz-loop @click=\"getQuestionDetailInfo(question)\" v-for=\"(question,questionindex) in myQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class=\"each-quiz-container\">\n                            <div class=\"question-index-container\">\n                                <div class=\"question-index\">{{ questionindex+1 }}</div>\n                            </div>\n                            <div class=\"question-field\">{{ convertFieldIdToInt(question.question.field[0]) }}</div>\n                            <div class=\"question-grade\">{{ convertQuizIdToInt(question.question.quiz) }}</div>\n                            <div class=\"question-label\">{{ question.question.label.substr(0,15)+'...' }}</div>\n                            <div class=\"close-container\">\n                    \n                                <!-- <div @click=\"deleteMyQuestion(question.question.id)\" class=\"close\">\n                                    <i class=\"fas fa-times\"></i>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                    <QuizDetail\n                    v-if=\"quizDetail\"\n                    :questionDetailInfo=\"questionDetailInfo\"\n                    :myQuestion=\"myQuestion\"\n                    :showButtonAndNoQuiz=\"showButtonAndNoQuiz\"\n                    @handleQuizDetail='handleQuizDetail'\n                    @deleteQuestionFunForDetailPage=\"deleteQuestionFunForDetailPage\"                    \n                    />\n                </div>\n                <div @click=\"handleQuizOpen()\" v-if=\"showButtonAndNoQuiz\" class=\"btn-basegra-white-db-sq\">\n                    練習\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport MyQuizPractice from '@/components/quiz_components/MyQuizPractice.vue'\nimport QuizDetail from '@/components/quiz_components/QuizDetail.vue'\n\nexport default {\n    components: {\n        MyQuizPractice,\n        NotVerified,\n        QuizDetail,\n    },\n    data(){\n        return{\n            myQuestion:'',\n            showButtonAndNoQuiz:false,\n            quizOpen: false,\n            quizDetail: false,\n            questionDetailInfo:{\n                id:'',\n                grade:'',\n                field:'',\n                status:'',\n                label:'',\n                image:'',\n            }\n        }\n    },\n    mounted(){\n        this.getMyQuestion()\n        console.log(\"mountedINMQ\",this.statusNameId)\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        myQuiz(){\n            return this.$store.state.signup.djangoUser.my_quiz[0]\n        },\n        length(){\n            // length = this.$store.state.signup.djangoUser.my_quiz[0].my_question\n            return this.myQuestion.length\n        },\n        fieldNameId(){\n            return this.$store.getters.fieldNameId\n        },\n        quizNameId(){\n            return this.$store.getters.quizNameId\n        },\n        statusNameId(){\n            this.$store.dispatch(\"getStatusNameId\")\n            return this.$store.getters.statusNameId\n        }\n\n    },\n    methods:{\n        convertFieldIdToInt(fieldId){\n            for(let i of this.fieldNameId){\n                if(i.id==fieldId){\n                    return i.name\n                }\n            }\n        },\n        convertQuizIdToInt(quizId){\n            for(let i of this.quizNameId){\n                if(i.id==quizId){\n                    return i.name\n                }\n            }\n        },\n        convertStatusIdToInt(statusId){\n            for(let i of this.statusNameId){\n                if(i.id==statusId){\n                    return i.name\n                }\n            }\n        },\n        getQuestionDetailInfo(question){\n            this.questionDetailInfo.id = question.question.id\n            this.questionDetailInfo.grade = this.convertQuizIdToInt(question.question.quiz)\n            this.questionDetailInfo.field = this.convertFieldIdToInt(question.question.field[0])\n            this.questionDetailInfo.status = this.convertStatusIdToInt(question.question.status[0])\n            this.questionDetailInfo.label = question.question.label\n            this.questionDetailInfo.image = question.question.image\n            this.handleQuizDetail()\n\n        },\n        getMyQuestion(){\n            this.myQuestion = this.$store.state.signup.myQuestion\n            if(this.myQuestion.length){\n                this.showButtonAndNoQuiz = true\n            }\n        },\n        deleteMyQuestion(question){\n            console.log(question)\n            let payload = {\n                \"question\":question,\n                \"myQuiz\":this.myQuiz.id\n            }\n            console.log('in_delete',this.myQuestion)\n            this.myQuestion = this.myQuestion.filter(item =>{\n                return (item.question.id !=question)\n            })\n            if(this.myQuestion.length==0){\n                this.myQuestion = ''\n                this.showButtonAndNoQuiz = false\n            }\n            console.log(payload,this.myQuestion)\n            this.$store.commit(\"deleteMyQuestion\",question)\n            this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n        },\n        deleteQuestionFunForDetailPage(question){\n            console.log('length1',this.myQuestion.length)\n            this.myQuestion = this.myQuestion.filter(item =>{\n                return (item.question.id !=question)\n            })\n            if(this.myQuestion.length==0){\n                this.myQuestion = ''\n                this.showButtonAndNoQuiz = false\n            }\n            console.log('length2',this.myQuestion.length)\n        },\n        // deleteQuestionFunForDetailPage2(){\n        //     if(this.myQuestion.length==0){\n        //         this.myQuestion = ''\n        //         this.showButtonAndNoQuiz = false\n        //     }\n        // },\n        // showButtonAndNoQuizFalse(){\n        //     console.log('INSF')\n        //     this.showButtonAndNoQuiz = false\n        // },\n        handleQuizOpen(){\n            this.quizOpen = !this.quizOpen\n        },\n        handleQuizDetail(){\n            this.quizDetail = !this.quizDetail\n        }\n    }\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.main-container{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        }\n\n.my-quiz-wrapper{\n    display: flex;\n    justify-content: center;\n    .main-wrapper{\n        .my-quiz-header{\n            margin-bottom: 1rem;\n            .register{\n                font-size: 1.3rem;\n                color: $lite-gray;\n                font-weight: bold;\n            }\n            .max{\n                font-size: 0.8rem;\n                color: $lite-gray;\n            }\n        }\n        .my-quiz-container{\n            width: 95%;\n            min-height: 300px;\n            border: solid $base-color;\n            border-radius: 5px;\n            background: $back-white;\n            padding-top: 1rem;\n            padding-bottom: 1rem;\n            .no-my-quiz{\n                margin:2rem;\n                .no-quiz{\n                    color: $dark-blue;\n                    font-weight: bold;\n                    margin-bottom: 2rem;\n                }\n            \n            }\n            .my-quiz-loop:hover{\n                background: $back-lite-white;\n                border-bottom: solid $lite-gray;\n            }\n            .my-quiz-loop{\n                position: relative;\n                display: flex;\n                align-items: center;\n                border-bottom: solid $lite-gray;\n                transition: .5s;\n                .each-quiz-container{\n                    position: relative;\n                    display: flex;\n                    width: 100%;\n                    margin-bottom: 1rem;\n                    margin-top: 1rem;\n                    // padding-bottom: 0.5rem;\n                    align-items: center;\n                    // justify-content: center;\n                    .question-index-container{\n                        flex-basis: 10%;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        .question-index{\n                            border: solid $base-color;\n                            border-radius: 50vh;\n                            width: 1.7rem;\n                            height: 1.7rem;\n                            margin-left: 0.4rem;\n                            font-weight: bold;\n                            background: $dark-blue;\n                            color: white;\n                        }\n                    }\n                    .question-field{\n                        flex-basis: 20%;\n\n                    }\n                    .question-grade{\n                        flex-basis: 20%;\n                    }\n                    .question-label{\n                        flex-basis: 50%;\n                        font-size: 0.8rem;\n                    }\n                    // .close-container{\n                    //     position: absolute;\n                    //     right: 0;\n                    //     margin-bottom: 0.8rem;\n                    //     margin-right: 0.5rem;\n                    //     flex-basis: 5%;\n                    //     display: flex;\n                    //     align-items: center;\n                    //     justify-content: center;\n                    //     margin-left: 0.7rem;\n                    //     height: 20px;\n                    //     .close{\n                    //         position:relative;\n                    //         border: 0.1rem solid rgb(180, 179, 179);\n                    //         border-radius: 50vh;\n                    //         width: 1rem;\n                    //         height: 1rem;\n                    //         margin-top: auto;\n                    //         margin-right: auto;\n                    //         .fa-times{\n                    //             font-size: 0.8rem;\n                    //         }\n                    //     }\n                    // }\n                }\n            }\n           \n        }\n        .btn-basegra-white-db-sq{\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            padding-top: 0.2rem;\n            padding-bottom: 0.2rem;\n            padding-left: 1.2rem;\n            padding-right: 1.2rem;\n            font-weight: bold;\n            font-size: 1.2rem;\n\n        }\n\n    }\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}