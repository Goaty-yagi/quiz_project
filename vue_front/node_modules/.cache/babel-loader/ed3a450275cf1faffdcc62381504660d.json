{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue","mtime":1644794455703},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC1zZWFyY2gtcGFyYW1zLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdxdWVzdGlvbnMnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdDogJ28nLAogICAgICBpZDogNSwKICAgICAgc2VsZWN0ZWRGaWxlOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoewogICAgZ2V0SW1hZ2U6IGZ1bmN0aW9uIGdldEltYWdlKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdldmVudCcsIGV2ZW50KTsKICAgICAgICAgICAgICAgIF90aGlzLnNlbGVjdGVkRmlsZSA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZXZlbnQudGFyZ2V0LmZpbGVzWzBdKTsKICAgICAgICAgICAgICAgIF90aGlzLmltYWdlID0gZXZlbnQudGFyZ2V0LmZpbGVzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHJlZ2lzdGVyVXNlck9uZERqYW5nbzogZnVuY3Rpb24gcmVnaXN0ZXJVc2VyT25kRGphbmdvKCkgewogICAgICBjb25zb2xlLmxvZygnc3RhcnQgYWRkJyk7CiAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3RodW1ibmFpbCcsIHRoaXMuaW1hZ2VbMF0pOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ1VJRCcsICdrb2tvbW9rbycpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ25hbWUnLCAnbW9rb2tva28nKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCdlbWFpbCcsICdrb0BrLmNvbScpOwogICAgICBmb3JtRGF0YS5hcHBlbmQoJ2dyYWRlJywgJ2tva29tb2tvJyk7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnY291bnRyeScsICdqYXBhbicpOwogICAgICBheGlvcyh7CiAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgdXJsOiAnL2FwaS91c2VyLycsCiAgICAgICAgZGF0YTogZm9ybURhdGEgLy8gewogICAgICAgIC8vICAgaGVhZGVyczp7J0NvbnRlbnQtVHlwZSc6ICJtdWx0aXBhcnQvZm9ybS1kYXRhIn0sCiAgICAgICAgLy8gICAgIFVJRDogJ2tva29tb2tvJywKICAgICAgICAvLyAgICAgbmFtZTogJ21va2tvcm8nLAogICAgICAgIC8vICAgICBlbWFpbDogJ2tva29Aay5jb20nLAogICAgICAgIC8vICAgICBncmFkZTogJ3Vua28nLAogICAgICAgIC8vICAgICB0aHVtYm5haWw6IHRoaXMuc2VsZWN0ZWRGaWxlLAogICAgICAgIC8vICAgICBjb3VudHJ5OiAnamFwYW4nCiAgICAgICAgLy8gfSwKCiAgICAgIH0pOwogICAgfSwKICAgIHVzZXJVcGRhdGU6IGZ1bmN0aW9uIHVzZXJVcGRhdGUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGZvcm1EYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCd0aHVtYm5haWwnLCBfdGhpczIuc2VsZWN0ZWRGaWxlKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXR0aHVtYicsIGZvcm1EYXRhLmdldCgndGh1bWJuYWlsJykpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBhdGNoKCIvYXBpL3VzZXIvIi5jb25jYXQoX3RoaXMyLiRyb3V0ZS5wYXJhbXMudWlkKSwgZm9ybURhdGEsIGZvcm1EYXRhLm5hbWUpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBxdWl6Um91dGVyOiBmdW5jdGlvbiBxdWl6Um91dGVyKGksIGYsIG4pIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBuYW1lOiAnUXVpeicsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBpZDogaSwKICAgICAgICAgIGZpZWxkOiBmLAogICAgICAgICAgbnVtOiBuCiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0sIG1hcEFjdGlvbnMoWydnZXRxdWl6JywgJ2dldHF1ZXN0aW9ucyddKSksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsvLyB0aGlzLiRzdG9yZS5jb21taXQoJ3NldE51bScsdGhpcy5pZCkKICAgIC8vIHRoaXMuZ2V0cXVpeigpCiAgICAvLyB0aGlzLmdldHF1ZXN0aW9ucygpCiAgfSwKICAvLyBtb3VudGVkKCl7CiAgLy8gICAgIHRoaXMuc3QgPSB0aGlzLiRzdG9yZS5jb21taXQoJ3Vua28nKQogIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLnN0KQogIC8vIH0KICBjb21wdXRlZDogbWFwR2V0dGVycyhbJ3F1ZXN0aW9ucycsICdxdWl6emVzJ10pCn07"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Test.vue"],"names":[],"mappings":";;;;;;;;;AAgBA,SAAQ,UAAR,EAAmB,UAAnB,QAAoC,MAApC;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,eAAe;AACb,EAAA,IAAI,EAAC,WADQ;AAEb,EAAA,IAFa,kBAEP;AACJ,WAAM;AACJ,MAAA,EAAE,EAAC,GADC;AAEJ,MAAA,EAAE,EAAE,CAFA;AAGJ,MAAA,YAAY,EAAC;AAHT,KAAN;AAKD,GARY;AASb,EAAA,OAAO;AACC,IAAA,QADD,oBACU,KADV,EACgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,gBAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAoB,KAApB;AACA,gBAAA,KAAI,CAAC,YAAL,GAAoB,GAAG,CAAC,eAAJ,CAAoB,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,CAAnB,CAApB,CAApB;AACA,gBAAA,KAAI,CAAC,KAAL,GAAa,KAAK,CAAC,MAAN,CAAa,KAA1B;AAHa;AAAA,uBAIP,OAAO,CAAC,GAAR,EAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhB,KAPA;AAQL,IAAA,qBARK,mCAQkB;AACf,MAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACA,UAAM,QAAO,GAAI,IAAI,QAAJ,EAAjB;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,WAAhB,EAA4B,KAAK,KAAL,CAAW,CAAX,CAA5B;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,KAAhB,EAAsB,UAAtB;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,MAAhB,EAAuB,UAAvB;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,OAAhB,EAAwB,UAAxB;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,OAAhB,EAAwB,UAAxB;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,SAAhB,EAA0B,OAA1B;AACA,MAAA,KAAK,CAAC;AACF,QAAA,MAAM,EAAE,MADN;AAEF,QAAA,GAAG,EAAE,YAFH;AAGF,QAAA,IAAI,EAAE,QAHJ,CAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZE,OAAD,CAAL;AAcH,KA/BA;AAgCG,IAAA,UAhCH,wBAgCe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,gBAAA,QADM,GACK,IAAI,QAAJ,EADL;AAEZ,gBAAA,QAAQ,CAAC,MAAT,CAAgB,WAAhB,EAA4B,MAAI,CAAC,YAAjC;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAuB,QAAQ,CAAC,GAAT,CAAa,WAAb,CAAvB;AAHY;AAAA,uBAIR,KAAK,CAAC,KAAN,qBAAyB,MAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,GAA5C,GACF,QADE,EACQ,QAAQ,CAAC,IADjB,CAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeX,KA/CJ;AAgDL,IAAA,UAhDK,sBAgDM,CAhDN,EAgDQ,CAhDR,EAgDU,CAhDV,EAgDY;AACf,aAAO;AAAE,QAAA,IAAI,EAAE,MAAR;AAAgB,QAAA,MAAM,EAAC;AAAE,UAAA,EAAE,EAAC,CAAL;AAAQ,UAAA,KAAK,EAAC,CAAd;AAAiB,UAAA,GAAG,EAAC;AAArB;AAAvB,OAAP;AACD;AAlDI,KAmDF,UAAU,CAAC,CAAC,SAAD,EAAW,cAAX,CAAD,CAnDR,CATM;AAkEX,EAAA,OAlEW,qBAkEF,CACP;AACA;AACA;AACD,GAtEU;AAwEb;AACA;AACA;AACA;AACA,EAAA,QAAQ,EAAE,UAAU,CAAC,CAAC,WAAD,EAAa,SAAb,CAAD;AA5EP,CAAf","sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n      <div class=\"lds-dual-ring\"></div>\n    </div>\n     <form @submit.prevent='registerUserOndDjango' >\n          <input type=\"file\" @change='getImage'>\n          <div v-if=\"selectedFile\">\n              <img ref='image' :src=\"selectedFile\">\n          </div>\n            <button>save</button>\n      </form>\n  </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport axios from 'axios'\nexport default {\n  name:'questions',\n  data(){\n    return{\n      st:'o',\n      id: 5,\n      selectedFile:''\n    }\n  },\n  methods:{\n    async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files\n            await console.log()\n            // this.imageCropper()\n        },\n    registerUserOndDjango(){\n            console.log('start add')\n            const formData = new FormData()\n            formData.append('thumbnail',this.image[0])\n            formData.append('UID','kokomoko')\n            formData.append('name','mokokoko')\n            formData.append('email','ko@k.com')\n            formData.append('grade','kokomoko')\n            formData.append('country','japan')\n            axios({\n                method: 'post',\n                url: '/api/user/',\n                data: formData\n                // {\n                //   headers:{'Content-Type': \"multipart/form-data\"},\n                //     UID: 'kokomoko',\n                //     name: 'mokkoro',\n                //     email: 'koko@k.com',\n                //     grade: 'unko',\n                //     thumbnail: this.selectedFile,\n                //     country: 'japan'\n                // },\n            })\n        },\n      async userUpdate(){\n            const formData = new FormData()\n            formData.append('thumbnail',this.selectedFile)\n            console.log('getthumb',formData.get('thumbnail'))\n          await axios.patch(`/api/user/${this.$route.params.uid}`,\n              formData, formData.name\n          )\n        //   ({\n        //       methods: 'patch',\n        //       url: `/api/user/${this.$route.params.uid}`,\n        //       data:{\n        //         //   thumbnail: this.selectedFile\n        //         name: 'unko'\n        //             }\n        //         })      \n            },\n    quizRouter(i,f,n){\n      return { name: 'Quiz', params:{ id:i, field:f, num:n}}\n    },\n    ...mapActions(['getquiz','getquestions'])\n    // unko(){\n    //   this.$store.commit('unko',)\n    // }\n    },\n    \n    created(){\n      // this.$store.commit('setNum',this.id)\n      // this.getquiz()\n      // this.getquestions()\n    },\n    \n  // mounted(){\n  //     this.st = this.$store.commit('unko')\n  //     console.log(this.st)\n  // }\n  computed: mapGetters(['questions','quizzes'])\n\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":""}]}