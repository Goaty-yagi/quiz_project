{"ast":null,"code":"import _objectSpread from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport Result from '@/components/quiz_components/Result.vue';\nimport Start from '@/components/quiz_components/Start.vue';\nexport default {\n  components: {\n    Result: Result,\n    Start: Start\n  },\n  data: function data() {\n    return {\n      questionLengthCounter: 1,\n      SelectedAnswerInfo: {},\n      selectedAnswer: {},\n      answerIDAndOrder: {},\n      showResult: false,\n      showNextOrFinishButton: false,\n      result: false,\n      startQuiz: false,\n      pagination: {\n        a: 0,\n        b: 1\n      },\n      resultHandleDict: {\n        isCorrect: false,\n        IsNotCorrect: false,\n        answerIDType3: '',\n        questionType4: false,\n        answerAllTrueType4: false,\n        answerIDType4: '',\n        answerIDType5: ''\n      },\n      maxSelectReach: false,\n      selectedIndexNum: null,\n      showSelectNum: true,\n      selectedOrderAnswer: {},\n      selectAnswerCounter: 0,\n      NumOfIscorrect: 0\n    };\n  },\n  created: function created() {\n    // this.getquiz()\n    this.getquestions();\n  },\n  mounted: function mounted() {\n    this.SelectedAnswerInfo = {};\n    this.progressBar();\n  },\n  watch: {\n    questions: function questions(v) {\n      var percentage = this.questionLengthCounter / this.questions.length * 100;\n      var a = document.getElementById('progress');\n      a.setAttribute('style', \"width:\".concat(percentage, \"%\"));\n    }\n  },\n  computed: mapGetters(['questions', 'quiz']),\n  methods: _objectSpread(_objectSpread({}, mapActions(['getquestions'])), {}, {\n    nextQuestion: function nextQuestion(questionType) {\n      this.pagination.a += 1;\n      this.pagination.b += 1;\n      this.selectedIndexNum = null;\n      this.showNextOrFinishButton = false;\n      this.selectAnswerHandler(questionType);\n      this.NumOfIscorrect = 0;\n      this.maxSelectReach = false;\n      this.selectedOrderAnswer = {};\n      this.selectedAnswer = {};\n      this.selectAnswerCounter = 0;\n      this.questionLengthCounter += 1;\n      this.progressBar();\n      this.scrollTop();\n    },\n    Finish: function Finish(questionType) {\n      this.showResult = true;\n      this.result = true;\n      this.selectedIndexNum = null;\n      this.selectAnswerHandler(questionType);\n      this.NumOfIscorrect = 0;\n      this.maxSelectReach = false;\n      this.selectedOrderAnswer = {};\n      this.selectedAnswer = {};\n      this.selectAnswerCounter = 0;\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    onClick: function onClick(answerindex, answer, question) {\n      // this is for 2 things,\n      // first is for controling CSS return selectedIndexNum\n      // which used for questionType 3, and selectedOrderAnswer\n      // which used for questionType 4 and 5.\n      // second is for selected-answer and is_correct.\n      // return selectedAnswer for questionType 3.\n      // for questionType 4, use getAnswerIDAndOrder function.\n      // for questionType 5, use getIDAndIsCorrect function.\n      if (question.question_type == 3) {\n        if (this.selectedIndexNum == answerindex) {\n          this.selectedIndexNum = null;\n          this.selectedAnswer = {};\n          this.showNextOrFinishButton = false;\n        } else {\n          this.selectedIndexNum = answerindex;\n          this.selectedAnswer['answerID'] = answer.id;\n          this.selectedAnswer['isCorrect'] = answer.is_correct;\n          this.handleShowNextOrFinishButton();\n        }\n      } else if (question.question_type == 4) {\n        if (this.selectedOrderAnswer[answerindex + 1] && this.questions.length >= this.selectAnswerCounter) {\n          this.selectedOrderAnswer = this.changeOrder(this.selectedOrderAnswer, answerindex + 1);\n          this.getAnswerIDAndOrder(answer.answer_id, this.selectAnswerCounter);\n          this.selectAnswerCounter -= 1;\n          this.showNextOrFinishButton = false;\n        } else {\n          this.selectAnswerCounter += 1;\n          this.selectedOrderAnswer[answerindex + 1] = this.selectAnswerCounter;\n          this.getAnswerIDAndOrder(answer.answer_id, this.selectAnswerCounter);\n\n          if (Object.keys(this.selectedOrderAnswer).length == this.questions.length) {\n            this.handleShowNextOrFinishButton();\n          }\n        }\n      } else if (question.question_type == 5) {\n        this.getNumOfIscorrect(question.answer);\n\n        if (this.selectedOrderAnswer[answerindex + 1]) {\n          this.selectedOrderAnswer = this.changeOrder(this.selectedOrderAnswer, answerindex + 1);\n          this.getIDAndIsCorrect(answer.id, answer.is_correct);\n          this.selectAnswerCounter -= 1;\n\n          if (question.max_select) {\n            if (Object.keys(this.selectedOrderAnswer).length < question.max_select) {\n              this.showNextOrFinishButton = false;\n              this.maxSelectReach = false;\n            }\n          } else if (Object.keys(this.selectedOrderAnswer).length == 0) {\n            this.showNextOrFinishButton = false;\n          }\n        } else {\n          this.selectAnswerCounter += 1;\n          this.selectedOrderAnswer[answerindex + 1] = this.selectAnswerCounter;\n          this.getIDAndIsCorrect(answer.id, answer.is_correct);\n\n          if (question.max_select) {\n            if (Object.keys(this.selectedOrderAnswer).length == question.max_select) {\n              this.handleShowNextOrFinishButton();\n              this.maxSelectReach = true;\n            }\n          } else {\n            this.handleShowNextOrFinishButton();\n          }\n        }\n      }\n    },\n    changeOrder: function changeOrder(dict, index) {\n      // if deleted, the num or nums before the deleted items order num\n      // change\n      var orderNum = dict[index];\n      delete dict[index];\n\n      if (dict) {\n        var changeDict = {};\n        Object.keys(dict).forEach(function (key) {\n          if (dict[key] > orderNum) {\n            dict[key] -= 1;\n          }\n        });\n      }\n\n      return dict;\n    },\n    selectAnswerHandler: function selectAnswerHandler(questionType) {\n      var _this = this;\n\n      // this is get informations about selected-answer for result component\n      // return SelectedAnswerInfo\n      if (questionType == 3) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect;\n        this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID;\n      } else if (questionType == 4) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        var stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function (a) {\n          return Number(a);\n        });\n\n        if (JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true;\n        } else {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false;\n        }\n\n        this.makeOrderBoolean();\n        this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder;\n      } else if (questionType == 5) {\n        this.SelectedAnswerInfo[this.questionLengthCounter] = {};\n        this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType;\n        var isCorrectCounter = 0;\n        var type5IsCorrect = true;\n        Object.values(this.selectedAnswer).forEach(function (value) {\n          if (value == false) {\n            _this.SelectedAnswerInfo[_this.questionLengthCounter]['isCorrect'] = false;\n            type5IsCorrect = false;\n          } else {\n            isCorrectCounter += 1;\n          }\n        });\n\n        if (this.NumOfIscorrect == isCorrectCounter && type5IsCorrect) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true;\n        } else if (type5IsCorrect == false && isCorrectCounter > 0) {\n          this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null;\n        }\n\n        this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer;\n      }\n    },\n    getAnswerIDAndOrder: function getAnswerIDAndOrder(answerID, orderNum) {\n      // this is for collecting answer from questionType 4\n      if (this.questionLengthCounter in this.answerIDAndOrder) {\n        if (orderNum in this.answerIDAndOrder[this.questionLengthCounter]) {\n          this.answerIDAndOrder[this.questionLengthCounter] = this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter], orderNum);\n        } else {\n          this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID;\n        }\n      } else {\n        this.answerIDAndOrder[this.questionLengthCounter] = {};\n        this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID;\n      }\n    },\n    makeOrderBoolean: function makeOrderBoolean() {\n      // this is for AnswerIDAndOrder{1:1} to be {1:true}\n      var newDict = {};\n      var IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function (a) {\n        return Number(a);\n      });\n\n      for (var i = 0; i < IntegerKeys.length; i++) {\n        if (IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]) {\n          newDict[i + 1] = true;\n        } else {\n          newDict[i + 1] = false;\n        }\n      }\n\n      this.answerIDAndOrder = newDict;\n    },\n    getIDAndIsCorrect: function getIDAndIsCorrect(id, isCorrect) {\n      // this is for questionType 5 \n      if (id in this.selectedAnswer) {\n        delete this.selectedAnswer[id];\n      } else {\n        this.selectedAnswer[id] = isCorrect;\n      }\n    },\n    getNumOfIscorrect: function getNumOfIscorrect(answers) {\n      var _this2 = this;\n\n      // this is for questionType 5\n      if (this.NumOfIscorrect == false) {\n        Object.values(answers).forEach(function (value) {\n          if (value.is_correct) {\n            _this2.NumOfIscorrect += 1;\n          }\n        });\n      }\n    },\n    handleShowNextOrFinishButton: function handleShowNextOrFinishButton() {\n      this.showNextOrFinishButton = true;\n    },\n    resultAnswerHandler: function resultAnswerHandler() {\n      var _this3 = this;\n\n      if (this.result) {\n        this.resultHandleDict.isCorrect = false;\n        this.resultHandleDict.isNotCorrect = false;\n        this.resultHandleDict.answerAllTrueType4 = false;\n        this.resultHandleDict.questionType4 = false;\n        this.resultHandleDict.answerIDType3 = '';\n        this.resultHandleDict.answerIDType4 = '';\n        this.resultHandleDict.answerIDType5 = '';\n        Object.keys(this.SelectedAnswerInfo).forEach(function (key) {\n          if (key == _this3.questionLengthCounter) {\n            if (_this3.SelectedAnswerInfo[key].isCorrect) {\n              if (_this3.SelectedAnswerInfo[key].questionType == 4) {\n                _this3.resultHandleDict.answerAllTrueType4 = true;\n              } else if (_this3.SelectedAnswerInfo[key].questionType == 5) {\n                _this3.resultHandleDict.answerIDType5 = _this3.SelectedAnswerInfo[key].selectedAnswer;\n              }\n\n              _this3.resultHandleDict.isCorrect = true;\n            } else if (_this3.SelectedAnswerInfo[key].isCorrect == false && _this3.SelectedAnswerInfo[key].questionType == 3) {\n              _this3.resultHandleDict.isCorrect = true;\n              _this3.resultHandleDict.isNotCorrect = true;\n              _this3.resultHandleDict.answerIDType3 = _this3.SelectedAnswerInfo[key].answerID;\n            } else if (_this3.SelectedAnswerInfo[key].questionType == 5) {\n              _this3.resultHandleDict.isCorrect = true;\n              _this3.resultHandleDict.isNotCorrect = true;\n              _this3.resultHandleDict.answerIDType5 = _this3.SelectedAnswerInfo[key].selectedAnswer;\n            } else if (_this3.SelectedAnswerInfo[key].isCorrect == false && _this3.SelectedAnswerInfo[key].questionType == 4) {\n              _this3.resultHandleDict.questionType4 = true;\n              _this3.resultHandleDict.isCorrect = true;\n              _this3.resultHandleDict.isNotCorrect = true;\n              _this3.resultHandleDict.answerIDType4 = _this3.SelectedAnswerInfo[key].orderAnswer;\n            }\n          }\n        });\n      }\n    },\n    type3And5CheckResult: function type3And5CheckResult(selectedAnswer5, selectedAnswer3, answerID) {\n      if (this.result) {\n        if (this.SelectedAnswerInfo[this.questionLengthCounter].questionType == 5) {\n          if (answerID in selectedAnswer5) {\n            return true;\n          } else {\n            return false;\n          }\n        } else if (this.SelectedAnswerInfo[this.questionLengthCounter].questionType == 3) {\n          if (answerID == selectedAnswer3) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n    },\n    handlePagination: function handlePagination(a, b) {\n      // this is for result component\n      this.pagination.a = a;\n      this.pagination.b = b;\n      this.questionLengthCounter = b;\n    },\n    HandleShowResult: function HandleShowResult() {\n      this.showResult = !this.showResult;\n    },\n    handleResult: function handleResult() {\n      this.result = !this.result;\n    },\n    resultNext: function resultNext() {\n      this.pagination.a += 1;\n      this.pagination.b += 1;\n      this.questionLengthCounter += 1;\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    resultBack: function resultBack() {\n      this.pagination.a -= 1;\n      this.pagination.b -= 1;\n      this.questionLengthCounter -= 1;\n      this.resultAnswerHandler();\n      this.scrollTop();\n    },\n    scrollTop: function scrollTop() {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    progressBar: function progressBar() {\n      console.log(this.questionLengthCounter, this.questions.length);\n      var percentage = this.questionLengthCounter / this.questions.length * 100;\n      var a = document.getElementById('progress');\n      a.setAttribute('style', \"width:\".concat(percentage, \"%\"));\n    }\n  })\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","Result","Start","components","data","questionLengthCounter","SelectedAnswerInfo","selectedAnswer","answerIDAndOrder","showResult","showNextOrFinishButton","result","startQuiz","pagination","a","b","resultHandleDict","isCorrect","IsNotCorrect","answerIDType3","questionType4","answerAllTrueType4","answerIDType4","answerIDType5","maxSelectReach","selectedIndexNum","showSelectNum","selectedOrderAnswer","selectAnswerCounter","NumOfIscorrect","created","getquestions","mounted","progressBar","watch","questions","v","percentage","length","document","getElementById","setAttribute","computed","methods","nextQuestion","questionType","selectAnswerHandler","scrollTop","Finish","resultAnswerHandler","onClick","answerindex","answer","question","question_type","id","is_correct","handleShowNextOrFinishButton","changeOrder","getAnswerIDAndOrder","answer_id","Object","keys","getNumOfIscorrect","getIDAndIsCorrect","max_select","dict","index","orderNum","changeDict","forEach","key","answerID","stringKeys","map","Number","JSON","stringify","values","makeOrderBoolean","isCorrectCounter","type5IsCorrect","value","newDict","IntegerKeys","i","answers","isNotCorrect","orderAnswer","type3And5CheckResult","selectedAnswer5","selectedAnswer3","handlePagination","HandleShowResult","handleResult","resultNext","resultBack","window","scrollTo","top","behavior","console","log"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/QuizPractice.vue"],"sourcesContent":["<template>\n    <div class=\"quiz-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <!-- <Start v-if=\"startQuiz==false\"/> -->\n            <div >\n                <p class=\"quiz-description title-white\">{{ quiz.description }}</p>\n                <div class=\"progress-wrapper\">\n                    <div v-if=\"result==false\" class=\"progress-bar-outer\">\n                        <div id=\"progress\" class=\"progress-bar-inner\"></div>\n                    </div>\n                </div>\n\n                <div v-if=\"showResult==false\" class='quiz-countainer'>\n                    <div\n                    class=\"question-loop\"\n                    v-for=\"(question,questionindex) in questions.slice(pagination.a,pagination.b)\"\n                    v-bind:key=\"questionindex\">\n                        <div class='question-wrapper'>\n                            <div class=\"question-header\"><i class='q'>Q</i>第{{ questionLengthCounter }}問</div>\n                            <div class='question-body'>{{ question.label }}</div>\n                        </div>\n                        \n                        <!-- <div :class='showPic(question.image)'> -->\n                        <div class=\"image-container\" v-if=\"question.image\">\n                            <img class=\"image\" v-bind:src=\"question.get_image\"/>\n                        </div>\n\n                        <!-- answer part -->\n                        <!-- questiontype 3 is '選択'\n                        ４ is '並び替え'\n                        5 is '多答' -->\n                        <div class='answer-wrapper'>\n                            <button \n                            class=\"answer-loop\"\n                            :class=\"{'selected-answer':selectedIndexNum==answerindex||\n                            answerindex+1 in selectedOrderAnswer,\n                            'is-correct-answer':resultHandleDict.isCorrect&&answer.is_correct||\n                            resultHandleDict.answerAllTrueType4||\n                            resultHandleDict.answerIDType4[answer.answer_id],\n                            'isnot-correct-answer':resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                            resultHandleDict.answerIDType5[answer.id]==false||\n                            resultHandleDict.answerIDType4[answer.answer_id]==false}\"\n                            @click=\"e => result==false && onClick(answerindex,answer,question)\"\n                            :disabled=\"maxSelectReach&&answer.id in selectedAnswer==false\"\n                            v-for=\"(answer,answerindex) in question.answer\"\n                            v-bind:key=\"answerindex\">\n                                <div class='answer-select-bases'>\n                                    <div class=\"answer-select\">\n                                        <div class=\"selecter\">{{ String.fromCharCode(answerindex+65) }}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"answer-label-bases\">\n                                    <div class=\"answer-label\">\n                                        {{ answer.label }}\n                                    </div>\n                                </div>\n                                <div class=\"selected-answer-bases\">\n                                    <div v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==4\" class=\"selected-answer-order\">\n                                        {{ selectedOrderAnswer[answerindex+1] }}\n                                    </div>\n                                    <div class=\"result-answer-order\">\n                                        <div class=\"order\" v-if=\"resultHandleDict.questionType4\">\n                                            {{ answer.answer_id}}\n                                        </div>\n                                        <div v-if=\"type3And5CheckResult(resultHandleDict.answerIDType5,resultHandleDict.answerIDType3,answer.id)&&question.question_type!=4\">\n                                            <i class=\"fas fa-check\"></i>\n                                        </div>\n                                    </div>\n                                    <i v-if=\"selectedOrderAnswer[answerindex+1]&&question.question_type==5\" class=\"fas fa-check\"></i>\n                                    <!-- for result -->\n                                    <!-- <i v-if=\"answer.id in resultHandleDict.answerIDType5&&question.question_type==5\" class=\"fas fa-check\"></i> -->\n                                    <i v-if=\"resultHandleDict.isCorrect&&answer.is_correct||\n                                    resultHandleDict.answerAllTrueType4||\n                                    resultHandleDict.answerIDType4[answer.answer_id]\" class=\"far fa-circle\"></i>\n                                    <i v-if=\"resultHandleDict.isNotCorrect&&resultHandleDict.answerIDType3==answer.id||\n                                    resultHandleDict.answerIDType5[answer.id]==false||\n                                    resultHandleDict.answerIDType4[answer.answer_id]==false\" class=\"fas fa-times\"></i>\n                                </div>\n                            </button>\n                        </div>\n                        <div v-if=\"showNextOrFinishButton&&\n                        result==false\" class=\"button-container\">\n                            <div v-if=\"questions.length==questionLengthCounter\"\n                            @click=\"Finish(question.question_type)\" class=\"btn-tr-white-base-sq\">FINSH</div>\n                            <div v-if=\"questions.length!=questionLengthCounter\"\n                            @click=\"nextQuestion(question.question_type)\" class=\"btn-tr-white-base-sq\">NEXT ＞</div>\n                        </div>\n\n                        <!-- here for buttun in result -->\n                        <div v-if=\"result\" class=\"buttun-in-result\">\n                            <div v-if=\"questionLengthCounter!=1\" \n                            @click=\"resultBack()\" class=\"btn-tr-white-base-sq\">＜BACK</div>\n                            <div \n                            @click=\"HandleShowResult()\"\n                            class=\"btn-base-black-db-ov\">結果画面</div>\n                            <div v-if=\"questions.length!=questionLengthCounter\"\n                            @click=\"resultNext()\" class=\"btn-tr-white-base-sq\">NEXT＞</div>\n                        </div>\n                    </div>\n                </div>\n                <Result\n                v-if=\"showResult\"\n                :SelectedAnswerInfo='SelectedAnswerInfo'\n                :question_length='questions.length'\n                @handlePagination='handlePagination'\n                @HandleShowResult='HandleShowResult'\n                @resultAnswerHandler='resultAnswerHandler'\n                @handleResult='handleResult'\n                />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport Result from '@/components/quiz_components/Result.vue'\nimport Start from '@/components/quiz_components/Start.vue'\n\nexport default {\n    components: {\n    Result,\n    Start\n  },  \n    data(){\n        return{\n            questionLengthCounter:1,\n            SelectedAnswerInfo:{},\n            selectedAnswer: {},\n            answerIDAndOrder:{},\n            showResult: false,\n            showNextOrFinishButton:false,\n            result: false,\n            startQuiz: false,\n            pagination:{\n                a: 0,\n                b: 1,\n            },\n            resultHandleDict:{\n                isCorrect: false,\n                IsNotCorrect: false,\n                answerIDType3: '',\n                questionType4: false,\n                answerAllTrueType4: false,\n                answerIDType4: '',\n                answerIDType5: '',\n            },\n            \n            maxSelectReach: false,\n            selectedIndexNum: null,\n            showSelectNum: true,\n            selectedOrderAnswer:{},\n            selectAnswerCounter:0,\n            NumOfIscorrect:0\n        }\n    },\n    created(){\n        // this.getquiz()\n        this.getquestions()\n    },\n    mounted(){\n        this.SelectedAnswerInfo = {}\n        this.progressBar()\n    },\n    watch:{\n        questions:function(v) {\n            let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n            let a = document.getElementById('progress')\n            a.setAttribute('style',`width:${percentage}%`)},\n    },\n    computed: mapGetters(['questions','quiz']),\n    methods:{\n        ...mapActions(['getquestions']),\n        nextQuestion(questionType){\n            this.pagination.a += 1\n            this.pagination.b += 1\n            this.selectedIndexNum= null\n            this.showNextOrFinishButton = false\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.questionLengthCounter += 1\n            this. progressBar()\n            this.scrollTop()\n        },\n        Finish(questionType){\n            this.showResult = true\n            this.result = true\n            this.selectedIndexNum= null\n            this.selectAnswerHandler(\n                questionType,\n                )\n            this.NumOfIscorrect = 0\n            this.maxSelectReach = false\n            this.selectedOrderAnswer = {}\n            this.selectedAnswer = {}\n            this.selectAnswerCounter = 0\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        onClick(answerindex, answer, question){\n            // this is for 2 things,\n            // first is for controling CSS return selectedIndexNum\n            // which used for questionType 3, and selectedOrderAnswer\n            // which used for questionType 4 and 5.\n            // second is for selected-answer and is_correct.\n            // return selectedAnswer for questionType 3.\n            // for questionType 4, use getAnswerIDAndOrder function.\n            // for questionType 5, use getIDAndIsCorrect function.\n            if(question.question_type == 3){\n                if(this.selectedIndexNum==answerindex){\n                    this.selectedIndexNum = null\n                    this.selectedAnswer = {}\n                    this.showNextOrFinishButton = false\n                }else{\n                    this.selectedIndexNum = answerindex\n                    this.selectedAnswer['answerID'] = answer.id\n                    this.selectedAnswer['isCorrect'] = answer.is_correct\n                    this.handleShowNextOrFinishButton()\n                }\n            }else if(question.question_type == 4){\n                if(this.selectedOrderAnswer[answerindex+1]&&\n                this.questions.length>=this.selectAnswerCounter){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    this.selectAnswerCounter -= 1\n                    this.showNextOrFinishButton = false\n                    \n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getAnswerIDAndOrder(answer.answer_id,this.selectAnswerCounter)\n                    if(Object.keys(this.selectedOrderAnswer).length == this.questions.length){\n                    this.handleShowNextOrFinishButton()\n                    }\n                }\n            }else if(question.question_type == 5){\n                this.getNumOfIscorrect(question.answer)\n                if(this.selectedOrderAnswer[answerindex+1]){\n                    this.selectedOrderAnswer = \n                    this.changeOrder(this.selectedOrderAnswer,answerindex+1)\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    this.selectAnswerCounter -= 1\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length < question.max_select){\n                            this.showNextOrFinishButton = false\n                            this.maxSelectReach = false\n                        }\n                    }else if(Object.keys(this.selectedOrderAnswer).length == 0){\n                        this.showNextOrFinishButton = false\n                    }\n                }else{\n                    this.selectAnswerCounter += 1\n                    this.selectedOrderAnswer[answerindex+1] = this.selectAnswerCounter\n                    this.getIDAndIsCorrect(answer.id, answer.is_correct)\n                    if(question.max_select){\n                        if(Object.keys(this.selectedOrderAnswer).length == question.max_select){\n                            this.handleShowNextOrFinishButton()\n                            this.maxSelectReach = true\n                        }\n                    }else{\n                        this.handleShowNextOrFinishButton()\n                    }\n                }\n            }\n        },\n        changeOrder(dict, index){\n            // if deleted, the num or nums before the deleted items order num\n            // change\n            let orderNum = dict[index]\n            delete dict[index]\n            if(dict){\n                let changeDict = {}\n                Object.keys(dict).forEach(key =>{\n                    if(dict[key] > orderNum){\n                        dict[key] -= 1\n                    }\n                })\n            }\n        return dict\n        },\n        selectAnswerHandler(questionType){\n            // this is get informations about selected-answer for result component\n            // return SelectedAnswerInfo\n            if(questionType == 3){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = this.selectedAnswer.isCorrect\n                this.SelectedAnswerInfo[this.questionLengthCounter]['answerID'] = this.selectedAnswer.answerID\n            }\n            else if(questionType == 4){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let stringKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n                if(JSON.stringify(stringKeys) == JSON.stringify(Object.values(this.answerIDAndOrder[this.questionLengthCounter]))){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                }else{\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                }\n                this.makeOrderBoolean()\n                this.SelectedAnswerInfo[this.questionLengthCounter]['orderAnswer'] = this.answerIDAndOrder\n            }else if(questionType == 5){\n                this.SelectedAnswerInfo[this.questionLengthCounter] = {}\n                this.SelectedAnswerInfo[this.questionLengthCounter]['questionType'] = questionType\n                let isCorrectCounter = 0\n                var type5IsCorrect = true\n                Object.values(this.selectedAnswer).forEach(value =>{\n                    if(value == false){\n                        this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = false\n                        type5IsCorrect = false\n                    }else{\n                        isCorrectCounter += 1\n                    }\n                })\n                if(this.NumOfIscorrect == isCorrectCounter&&\n                type5IsCorrect){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = true\n                }else if(type5IsCorrect==false&&\n                isCorrectCounter > 0){\n                    this.SelectedAnswerInfo[this.questionLengthCounter]['isCorrect'] = null\n                }\n                this.SelectedAnswerInfo[this.questionLengthCounter]['selectedAnswer'] = this.selectedAnswer\n            }\n        },\n        getAnswerIDAndOrder(answerID,orderNum){\n            // this is for collecting answer from questionType 4\n            if(this.questionLengthCounter in this.answerIDAndOrder){\n                if(orderNum in this.answerIDAndOrder[this.questionLengthCounter]){\n                    this.answerIDAndOrder[this.questionLengthCounter] =\n                    this.changeOrder(this.answerIDAndOrder[this.questionLengthCounter],orderNum)\n                }else{\n                    this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID   \n                }\n            }else{\n                this.answerIDAndOrder[this.questionLengthCounter] = {}\n                this.answerIDAndOrder[this.questionLengthCounter][orderNum] = answerID\n            }   \n        },\n        makeOrderBoolean(){\n            // this is for AnswerIDAndOrder{1:1} to be {1:true}\n            let newDict = {}\n            let IntegerKeys = Object.keys(this.answerIDAndOrder[this.questionLengthCounter]).map(function(a){\n                    return Number(a)\n                })\n            for(let i = 0; i < IntegerKeys.length; i++){\n                if(IntegerKeys[i] == Object.values(this.answerIDAndOrder[this.questionLengthCounter])[i]){\n                    newDict[i+1] = true\n                }else{\n                    newDict[i+1] = false\n                }\n            }\n            this.answerIDAndOrder = newDict\n        },\n        getIDAndIsCorrect(id, isCorrect){\n            // this is for questionType 5 \n            if(id in this.selectedAnswer){\n                delete this.selectedAnswer[id]\n            }else{\n                this.selectedAnswer[id] = isCorrect\n            }\n        },\n        getNumOfIscorrect(answers){\n            // this is for questionType 5\n            if(this.NumOfIscorrect==false){\n                 Object.values(answers).forEach(value =>{\n                    if(value.is_correct){\n                        this.NumOfIscorrect += 1\n                    }\n                })\n            }\n        },\n        handleShowNextOrFinishButton(){\n            this.showNextOrFinishButton = true\n        },\n        resultAnswerHandler(){\n            if(this.result){\n                this.resultHandleDict.isCorrect = false\n                this.resultHandleDict.isNotCorrect = false\n                this.resultHandleDict.answerAllTrueType4 = false\n                this.resultHandleDict.questionType4 = false\n                this.resultHandleDict.answerIDType3 = ''\n                this.resultHandleDict.answerIDType4 = ''\n                this.resultHandleDict.answerIDType5 = ''\n                Object.keys(this.SelectedAnswerInfo).forEach(key =>{\n                    if(key==this.questionLengthCounter){\n                        if(this.SelectedAnswerInfo[key].isCorrect){\n                            if(this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.answerAllTrueType4 = true\n                            }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                            }\n                            this.resultHandleDict.isCorrect = true\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==3){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType3 = this.SelectedAnswerInfo[key].answerID\n                        }else if(this.SelectedAnswerInfo[key].questionType==5){\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType5 = this.SelectedAnswerInfo[key].selectedAnswer\n                        }else if(this.SelectedAnswerInfo[key].isCorrect==false&&\n                            this.SelectedAnswerInfo[key].questionType==4){\n                                this.resultHandleDict.questionType4 = true\n                                this.resultHandleDict.isCorrect = true\n                                this.resultHandleDict.isNotCorrect = true\n                                this.resultHandleDict.answerIDType4 = this.SelectedAnswerInfo[key].orderAnswer\n                        }\n                    }\n                })      \n            }\n        },\n        type3And5CheckResult(selectedAnswer5,selectedAnswer3, answerID){\n            if(this.result){\n                if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==5){\n                    if(answerID in selectedAnswer5){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n                else if(this.SelectedAnswerInfo[this.questionLengthCounter].questionType==3){\n                    if(answerID == selectedAnswer3){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n        },\n        handlePagination(a,b){\n            // this is for result component\n            this.pagination.a = a\n            this.pagination.b = b\n            this.questionLengthCounter = b\n        },\n        HandleShowResult(){\n            this.showResult = !this.showResult          \n        },\n        handleResult(){\n            this.result = ! this.result\n        },\n        resultNext(){\n            this.pagination.a += 1 \n            this.pagination.b += 1\n            this.questionLengthCounter += 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        resultBack(){\n            this.pagination.a -= 1 \n            this.pagination.b -= 1\n            this.questionLengthCounter -= 1\n            this.resultAnswerHandler()\n            this.scrollTop()\n        },\n        scrollTop(){\n            window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n            });\n        },\n        progressBar(){\n            console.log(this.questionLengthCounter,(this.questions.length))\n            let percentage = this.questionLengthCounter/(this.questions.length) * 100 \n            let a = document.getElementById('progress')\n            a.setAttribute('style',`width:${percentage}%`)\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.progress-wrapper{\n    display: flex;\n    justify-content: center;\n    .progress-bar-outer{\n        position: relative;\n        border: solid black;\n        border-radius: 50vh;\n        width:80%;\n        height: 2rem;\n        background: rgb(238, 238, 238);\n        margin-bottom: 0.5rem;\n        overflow: hidden;\n        .progress-bar-inner{\n            position:absolute;\n            top:0;\n            left:0;\n            box-sizing: inherit;\n            height: 1.8rem;\n            transform:skewX(-10deg);\n            transition: 1s;\n            background: linear-gradient(to bottom right,#F6F3E4 1%,#ffc890);       \n        }\n    }\n}\n.quiz-wrapper{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    .quiz-countainer{\n        width: 100%;\n        display: flex;\n        // align-items: center;\n        justify-content: center;\n        .question-loop{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .question-wrapper{\n            width: 95%;\n            border: solid  rgba(243, 91, 36, 0.808);\n            border-radius: 1rem;\n            overflow:hidden;\n                .question-header{\n                background: linear-gradient($base-lite,$base-color);\n                color:white;\n                padding:0.5rem;\n                font-weight:bold;\n                position:relative;\n                }\n                .question-body{\n                    background-color: rgb(253, 245, 239);\n                    padding:1rem;\n                    font-weight:bold;\n                }\n                .q{\n                position:absolute;\n                left:5%;\n                bottom:2%;\n                font-size:1.5rem;  \n                }\n            }\n            .image-container{\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                .image{\n                    width: 40%;\n                }\n            }\n            .answer-wrapper{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                margin-top: 1rem;\n                .is-correct-answer{\n                    background: rgb(148, 255, 235);\n                }\n                .answer-loop{\n                    width: 95%;\n                    height: 3rem;\n                    border: solid black;\n                    border-radius: 0.5rem;\n                    background: white;\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 0.5rem;\n                    transition:0.3s;\n                    .answer-select-bases{\n                        flex-basis: 15%;\n                        .answer-select{\n                            border: solid black;\n                            border-radius: 50vh;\n                            width: 2.5rem;\n                            height: 2.5rem;\n                            margin-left: 0.5rem;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            transition:0.3s;\n                            .selecter{\n                                font-weight: bold;\n                                font-size: 1.5rem;\n                            }\n                        }\n                    }\n                    .answer-label-bases{\n                        flex-basis: 70%;\n                        .answer-label{\n\n                        }\n                    }\n                    .selected-answer-bases{\n                        flex-basis: 15%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        .selected-answer-order{\n                            font-size: 1.5rem;\n                            font-weight: bold;\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .result-answer-order{\n                            flex-basis: 50%;\n                            .order{\n                                font-size: 1.5rem;\n                                font-weight: bold;\n                                color: gray;\n                                margin-right: 0.5rem;\n                            }\n                        }\n                        .fa-check{\n                            color: gray;\n                            flex-basis: 50%;\n                        }\n                        .fa-circle{\n                            color: rgba(0, 84, 75, 0.839);\n                            font-size: 1.5rem;\n                            flex-basis: 50%;\n                            margin-right: 0.1rem;\n                        }\n                        .fa-times{\n                            color: rgba(244, 10, 10, 0.839);\n                            font-size: 1.5rem;\n                            margin-right: 0.1rem;\n                            flex-basis: 50%;\n                        }\n                    }\n                }\n                .is-correct-answer{\n                    background: rgb(177, 243, 231);\n                }\n                .isnot-correct-answer{\n                    background: rgb(255, 147, 147)\n                }\n                .selected-answer{\n                    background: $base-lite-3;\n                    .answer-select{\n                        background: $base-color;\n                        color: white;\n                    }\n                }\n            }\n            .button-container{\n                display: flex;\n                margin-top: 1rem;\n                div{\n                    padding-right: 0.3rem;\n                    padding-left: 0.3rem;\n                }\n            }\n            .buttun-in-result{\n                display: flex;\n                margin-top: 1rem;\n                .btn-base-black-db-ov{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                    margin-right: 0.5rem;\n                    margin-left: 0.5rem;\n                    font-weight: bold;                    \n                }\n                .btn-tr-white-base-sq{\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-top: 0.2rem;\n                    padding-bottom: 0.2rem;\n                }\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}