{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/Confirm.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/Confirm.vue","mtime":1646798735189},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlci5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvb3NzYW4vZ2l0LWNsb25lL3F1aXpfcHJvamVjdC92dWVfZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IHV1aWQgfSBmcm9tICd2dWUtdXVpZCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGl0bGU6ICcnLAogICAgICBkaXNjcmlwdGlvbjogJycsCiAgICAgIHV1aWQ6IHV1aWQudjEoKQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBjb25zb2xlLmxvZyh0aGlzLiRzdG9yZS5zdGF0ZS5zZWxlY3RlZFRhZ0lkKTsKICAgIHRoaXMudGl0bGUgPSB0aGlzLiRzdG9yZS5zdGF0ZS50aXRsZTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHB1Ymxpc2g6IGZ1bmN0aW9uIHB1Ymxpc2goKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdGFydCBhZGQnLCAndXVpZCcsIF90aGlzLnV1aWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MoewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICAgICAgdXJsOiAnL2FwaS9ib2FyZC9xdWVzdGlvbi9jcmVhdGUnLAogICAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IF90aGlzLiRzdG9yZS5zdGF0ZS50aXRsZSwKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogX3RoaXMuJHN0b3JlLnN0YXRlLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICAgIHVzZXI6IF90aGlzLiRzdG9yZS5zdGF0ZS5zaWdudXAudXNlci51aWQsCiAgICAgICAgICAgICAgICAgICAgc2x1ZzogX3RoaXMudXVpZCwKICAgICAgICAgICAgICAgICAgICBsaWtlZF9udW06IHt9LAogICAgICAgICAgICAgICAgICAgIHRhZzogX3RoaXMuZ2V0VGFnSWQoKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgLy8gdGhpcy4kZW1pdCgnaGFuZGxlTm90aWZpY2F0aW9ucycpCiAgICAgICAgICAgICAgICBfdGhpcy4kZW1pdCgnZ2V0RGV0YWlsJywgX3RoaXMudXVpZCk7CgogICAgICAgICAgICAgICAgX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCJoYW5kbGVOb3RpZmljYXRpb25zIiwgJ3Bvc3QnKTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kZW1pdCgnaGFuZGxlU2hvd0NvbmZpcm0nKTsgLy8gdGhpcy4kcm91dGVyLmdvKHtwYXRoOiB0aGlzLiRyb3V0ZXIuY3VycmVudFJvdXRlLnBhdGgsIGZvcmNlOiB0cnVlfSkKCgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRUYWdJZDogZnVuY3Rpb24gZ2V0VGFnSWQoKSB7CiAgICAgIHZhciBpZExpc3QgPSBbXTsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLiRzdG9yZS5zdGF0ZS5ib2FyZC5zZWxlY3RlZFRhZ0xpc3QpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgaSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgaWRMaXN0LnB1c2goaS5pZCk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpZExpc3Q7CiAgICB9IC8vICAgICBheGlvcy5wb3N0KAogICAgLy8gICAgICAgICAnL2FwaS9mb3J1bS9xdWVzdGlvbi8nLAogICAgLy8gICAgICAgICB7dGl0bGU6IHRoaXMuJHN0b3JlLnN0YXRlLnRpdGxlLCAKICAgIC8vICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMuJHN0b3JlLnN0YXRlLmRlc2NyaXB0aW9uCiAgICAvLyAgICAgICAgIH0sCiAgICAvLyAgICAgKS50aGVuKHJlc3BvbnNlID0+IHsKICAgIC8vICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpCiAgICAvLyAgICAgfSkKICAgIC8vIH0sCiAgICAvLyBhZGRRdWVzdGlvbigpewogICAgLy8gICAgIGNvbnNvbGUubG9nKCdzdGFydCBhZGQnKQogICAgLy8gICAgIGF4aW9zKHsKICAgIC8vICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAvLyAgICAgICAgIHVybDogJy9hcGkvZm9ydW0vcXVlc3Rpb24nLAogICAgLy8gICAgICAgICBkYXRhOiB7CiAgICAvLyAgICAgICAgICAgICB0aXRsZTogdGhpcy4kc3RvcmUuc3RhdGUudGl0bGUsCiAgICAvLyAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy4kc3RvcmUuc3RhdGUuZGVzY3JpcHRpb24KICAgIC8vICAgICAgICAgfSwKICAgIC8vICAgICB9KQogICAgLy8gLnRoZW4oKHJlc3BvbnNlKSA9PnsKICAgIC8vIH0KICAgIC8vICkKCiAgfQp9Ow=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/Confirm.vue"],"names":[],"mappings":";;;;;AAiDA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,IAAT,QAAqB,UAArB;AACA,eAAe;AACX,EAAA,IADW,kBACL;AACF,WAAM;AACF,MAAA,KAAK,EAAE,EADL;AAEF,MAAA,WAAW,EAAC,EAFV;AAGF,MAAA,IAAI,EAAC,IAAI,CAAC,EAAL;AAHH,KAAN;AAKH,GAPU;AAQX,EAAA,OARW,qBAQF;AACL,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,MAAL,CAAY,KAAZ,CAAkB,aAA9B;AACA,SAAK,KAAL,GAAW,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAA7B;AACH,GAXU;AAYX,EAAA,OAAO,EAAC;AACE,IAAA,OADF,qBACW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,gBAAA,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAwB,MAAxB,EAA+B,KAAI,CAAC,IAApC;AADW;AAAA,uBAEL,KAAK,CAAC;AACR,kBAAA,MAAM,EAAE,MADA;AAER,kBAAA,GAAG,EAAE,4BAFG;AAGR,kBAAA,IAAI,EAAE;AACF,oBAAA,KAAK,EAAE,KAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,KADvB;AAEF,oBAAA,WAAW,EAAE,KAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,WAF7B;AAGF,oBAAA,IAAI,EAAE,KAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,MAAlB,CAAyB,IAAzB,CAA8B,GAHlC;AAIF,oBAAA,IAAI,EAAE,KAAI,CAAC,IAJT;AAKF,oBAAA,SAAS,EAAC,EALR;AAMF,oBAAA,GAAG,EAAE,KAAI,CAAC,QAAL;AANH;AAHE,iBAAD,CAFA;;AAAA;AAeX;AACA,gBAAA,KAAI,CAAC,KAAL,CAAW,WAAX,EAAuB,KAAI,CAAC,IAA5B;;AACA,gBAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,qBAArB,EAA4C,MAA5C;;AACA,gBAAA,KAAI,CAAC,KAAL,CAAW,mBAAX,EAlBW,CAmBX;;;AAnBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBd,KArBG;AAsBJ,IAAA,QAtBI,sBAsBM;AACN,UAAM,MAAK,GAAI,EAAf;;AADM,iDAEQ,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,CAAwB,eAFhC;AAAA;;AAAA;AAEN,4DAAsD;AAAA,cAA7C,CAA6C;AAClD,UAAA,MAAM,CAAC,IAAP,CAAY,CAAC,CAAC,EAAd;AACJ;AAJM;AAAA;AAAA;AAAA;AAAA;;AAKN,aAAO,MAAP;AACJ,KA5BI,CA6BJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AApDI;AAZG,CAAf","sourcesContent":["<template>\n    <div class=\"l-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-wrapper\">\n                <div class=\"title-black\">\n                    <p>質問投稿</p>\n                </div>\n                <div class=\"form\">\n                    <div class=\"question-title-container\">\n                        <div class='title-flex'>\n                            <p>TITLE</p>\n                        </div>\n                        <div\n                         class=\"question-title\">\n                            <p> {{ $store.state.title }} </p>\n                        </div>\n                        <!-- <input class='question-title' type=\"text\" v-model='title' :placeholder=\"$store.state.title\"> -->\n                    </div>\n                    <div class='tag-group-container'>\n                        <div v-for=\"(tag,tagindex) in $store.state.board.selectedTagList\"\n                        v-bind:key=\"tagindex\"\n                        class=\"tag-group\">\n                            <p>{{ tag.tag }}</p>  \n                        </div>\n                    </div>\n\n                    <div class=\"line\"></div>\n\n                    <div class=\"question-description\">\n                        <p class=\"title-black\">質問文</p>\n                    </div>\n                    <div class='text-field'>\n                        <div class='form-text'>\n                            {{ $store.state.description }}\n                        </div>\n                    </div>\n                    <div class='confirm-message'>この内容で投稿しますか。\n                    </div>\n                    <div class=\"button-group\">\n                            <div @click=\"this.$emit('handleShowConfirm')\">戻る</div>\n                            <button class=\"btn-tr-black-base-sq\" @click='publish'>投稿する</button>\n                    </div>            \n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { uuid } from 'vue-uuid';\nexport default {\n    data(){\n        return{\n            title: '',\n            discription:'',\n            uuid:uuid.v1(),\n        }\n    },\n    mounted(){\n        console.log(this.$store.state.selectedTagId)\n        this.title=this.$store.state.title\n    },\n    methods:{\n        async publish(){\n            console.log('start add','uuid',this.uuid)\n            await axios({\n                method: 'post',\n                url: '/api/board/question/create',\n                data: {\n                    title: this.$store.state.title,\n                    description: this.$store.state.description,\n                    user: this.$store.state.signup.user.uid,\n                    slug: this.uuid,\n                    liked_num:{},\n                    tag: this.getTagId()\n                },\n                \n            })\n            // this.$emit('handleNotifications')\n            this.$emit('getDetail',this.uuid)\n            this.$store.dispatch(\"handleNotifications\", 'post')\n            this.$emit('handleShowConfirm')\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        },\n        getTagId(){\n            const idList = []\n            for( let i of this.$store.state.board.selectedTagList){\n                idList.push(i.id)\n            }\n            return idList\n        }\n        //     axios.post(\n        //         '/api/forum/question/',\n        //         {title: this.$store.state.title, \n        //         description: this.$store.state.description\n        //         },\n        //     ).then(response => {\n        //         console.log(response)\n        //     })\n        // },\n        // addQuestion(){\n        //     console.log('start add')\n        //     axios({\n        //         method: 'post',\n        //         url: '/api/forum/question',\n        //         data: {\n        //             title: this.$store.state.title,\n        //             description: this.$store.state.description\n        //         },\n        //     })\n        // .then((response) =>{\n            \n        // }\n\n        // )\n    }\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"style/_variables.scss\";\n.l-wrapper{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .create-question-wrapper{\n        top:0;\n        left:0;\n        background: $back-tr-white;\n        border: solid $dark-blue;\n        width:100%;\n        height: auto;\n        flex-direction: column;\n        display: flex;\n        // justify-content: center;\n        align-items: center;\n        padding: 1.5rem;\n        .form{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            // justify-content: center;\n            align-items: center;\n            .question-title-container{\n                width:90%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                .title-flex{\n                    display: flex;\n                    width: 90%;\n                }\n                .question-title{\n                    display: flex;\n                    align-items: center;\n                    border: solid $base-color;\n                    width: 90%;\n                    height: 2.5rem;\n                    background: $back-white;\n                    padding-left: 0.5rem;\n                    text-align: left;\n                    font-size: 0.8rem;            \n                }\n            }\n            .tag-group-container{\n                width:80%;\n                display: flex;\n                justify-content: center;\n                padding-top: 0.5rem;\n                .tag-group{\n                    border: solid gray;\n                    border-radius: 50vh;\n                    width: auto;\n                    min-width: 3rem;\n                    margin-right: 0.5rem;\n                    display: inline-block;\n                    align-items: center;\n                    padding-top:0.1rem;\n                    padding-bottom: 0.1rem;\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    font-size:0.8rem;\n                }\n            }\n            .line{\n                width: 80%;\n                border-bottom: 0.2rem solid $dark-blue;\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n            }\n            .question-description{\n                .title-black{\n                    margin: 0;\n                }\n            }\n            .text-field{\n                width:80%;\n                // overflow-y: scroll;\n                .form-text{\n                    text-align: left;\n                    height: 200px;\n                    width: 100%;\n                    background: $back-white;\n                    min-height: 100px;\n                    border: 0.1rem solid $base-color;\n                    border-radius: 1vh;\n                    padding: 1rem;\n                    white-space: pre-wrap;\n                    overflow-y: scroll;\n                }\n                .form-text:focus{\n                    outline: none;\n                }\n            }\n            .confirm-message{\n                margin-top: 1rem;\n                color: red;\n                font-weight: bold;\n            }\n            .button-group{\n                width: 80%;\n                display:flex;\n                margin:1rem;\n                justify-content: center;\n                .btn-tr-black-base-sq{\n                    margin-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-left: 0.5rem;\n                }\n            }\n        }   \n    }\n}\n</style>"],"sourceRoot":""}]}