{"ast":null,"code":"import axios from 'axios'; // import { computed } from 'vue'\n// import { useStore } from 'vuex'\n\nimport NotVerified from '@/components/login/NotVerified.vue';\nimport NotLogin from '@/components/login/NotLogin.vue';\nimport { router } from \"../main.js\";\nimport CreateQuestion from '@/components/board/CreateQuestion.vue';\nimport Confirm from '@/components/board/Confirm.vue';\nimport Search from '@/components/board/Search.vue';\nexport default {\n  // setup(){\n  //     const store = useStore()\n  //     return{\n  //         user: computed(() => store.state.signup.user),\n  //         email: computed(() => store.state.signup.email),\n  //         password: computed(() => store.state.signup.password),\n  //         emailVerified: computed(() => store.state.signup.emailVerified),\n  //     }\n  // },\n  components: {\n    CreateQuestion,\n    Confirm,\n    Search,\n    NotVerified,\n    NotLogin\n  },\n\n  data() {\n    return {\n      questions: '',\n      temporaryQuestion: '',\n      search: '',\n      wordList: [],\n      parentTagDict: {},\n      showCreateQuestion: false,\n      showEmailVerified: false,\n      showNotLogin: false,\n      showConfirm: false,\n      scrollFixed: false,\n      scroll_position: '100',\n      userTagList: [],\n      // reccomendedQuestion: [],\n      searchedQuestion: '',\n      onAnswerOrReply: false,\n      scrollY: 0,\n      scrollHeight: '',\n      scrollBottom: false,\n      bottomScrollActionHandler: true,\n      // notifications:false,\n      next: '',\n      showQuestionStatus: {\n        recent: true,\n        reccomend: false,\n        search: false\n      },\n      styles: {\n        position: '',\n        top: ''\n      }\n    };\n  },\n\n  created() {\n    console.log('created'); // this.$store.dispatch('getAnsweredQuestion')\n\n    this.$store.dispatch('getDjangoUser'); // this.$store.dispatch('getNotificationApi')\n  },\n\n  beforeMount() {\n    // this.getQuestion()\n    console.log('before-mounted');\n    this.$store.dispatch('getNotificationApi');\n  },\n\n  mounted() {\n    window.addEventListener('scroll', this.handleScroll);\n    window.addEventListener('scroll', this.getScrollY);\n    this.bottomScrollActionHandler = true;\n    this.scrollBottom = false, this.scrollTop();\n    this.handleOnAnswerOrReply();\n    this.$store.dispatch('getRelatedQuestion');\n    this.getQuestion();\n    this.showEmailVerified = false;\n    this.$store.commit('showModalFalse');\n    this.$store.commit('fixedScrollFalse');\n  },\n\n  beforeUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    window.removeEventListener('scroll', this.getScrollY);\n    this.$store.commit('showModalFalse');\n    this.$store.commit('fixedScrollFalse');\n  },\n\n  // unmounted(){\n  //     console.log(\"DSTROY\")\n  //     window.removeEventListener('scroll', this.handleScroll)\n  //     window.removeEventListener('scroll', this.getScrollY)\n  // },\n  // watch:{\n  //     scrollY:function(v) {this.scrollY = window.scrollY }\n  //     },\n  computed: {\n    user() {\n      return this.$store.state.signup.djangoUser;\n    },\n\n    roginUser() {\n      return this.$store.state.signup.user;\n    },\n\n    notification() {\n      return;\n    },\n\n    reccomendedQuestion() {\n      return this.$store.getters.gettersReccomendedQuestion;\n    },\n\n    emailVerified() {\n      return this.$store.getters.getEmailVerified;\n    },\n\n    fixedScroll() {\n      return this.$store.getters.fixedScroll;\n    },\n\n    handleQuestions() {\n      console.log(\"in handlequestion\");\n\n      if (this.showQuestionStatus.recent) {\n        this.questions = this.temporaryQuestion;\n        return this.questions.results;\n      } else if (this.showQuestionStatus.reccomend) {\n        console.log('RECCOMEND', this.reccomendedQuestion);\n        this.questions = this.reccomendedQuestion;\n        return this.questions.results;\n      } else if (this.showQuestionStatus.search) {\n        this.questions = this.searchedQuestion;\n        return this.questions.results;\n      }\n    }\n\n  },\n  methods: {\n    async getQuestion() {\n      this.$store.commit('setIsLoading', true);\n      await axios.get('/api/board/question/list').then(response => {\n        this.temporaryQuestion = response.data; // this.next = response.data.next\n        // document.title = this.product.name + ' | Djackets'\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n      this.getParentTag();\n    },\n\n    async getAdditionalQuestion(next) {\n      if (next != null) {\n        await axios.get(next).then(response => {\n          for (let i of response.data.results) {\n            this.questions.results.push(i);\n          }\n\n          this.questions.next = response.data.next;\n          this.bottomScrollActionHandler = true;\n\n          if (this.questions.next == null) {\n            this.bottomScrollActionHandler = false;\n            this.scrollBottom = false;\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    },\n\n    async getParentTag() {\n      await axios.get('/api/board/parent-tag').then(response => {\n        let parentTags = response.data;\n        this.getParentTagDict(parentTags);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    handleOnAnswerOrReply() {\n      if (this.$store.getters.handleOnAnswer || this.$store.getters.handleOnReply) {\n        this.onAnswerOrReply = true;\n      }\n    },\n\n    async getSearchQuestion() {\n      this.$store.commit('setIsLoading', true);\n      await axios.get(`/api/board/question/search/?keyword=${this.wordList}`).then(response => {\n        this.searchedQuestion = response.data;\n        console.log(\"SQ\", this.searchedQuestion);\n        this.questionHandler(\"search\");\n        console.log(\"status changed to :\", this.showQuestionStatus.search);\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n\n    async splitSearch() {\n      if (this.search) {\n        this.wordList = [];\n        let letterList = [];\n        this.search = this.search.trim();\n        this.search = this.search.split('');\n\n        for (let i of this.search) {\n          console.log(i === ' ');\n\n          if (i === ' ' && letterList[0] || i === '　' && letterList[0]) {\n            this.wordList.push(letterList.join(''));\n            letterList = [];\n          } else if (i === ' ' || i === '　') {\n            ;\n          } else {\n            letterList.push(i);\n          }\n        }\n\n        this.wordList.push(letterList.join(''));\n        letterList = [];\n        this.search = '';\n        await this.getSearchQuestion();\n      }\n    },\n\n    getParentTagDict(parentTags) {\n      for (let i of parentTags) {\n        this.parentTagDict[i.parent_tag] = i.center_tag;\n      }\n    },\n\n    handleShowCreateQuestion() {\n      console.log('showCreate');\n\n      if (this.emailVerified && this.roginUser) {\n        this.showCreateQuestion = !this.showCreateQuestion;\n        this.$store.commit('handleFixedScroll'); // this.handleScrollFixed()\n        // this.a()\n      } else if (!this.emailVerified && this.roginUser) {\n        this.handleShowEmailVerified();\n        this.$store.commit('fixedScrollTrue');\n        this.$store.commit('showModalTrue');\n      } else {\n        this.handleShowNotLogin();\n        this.$store.commit('fixedScrollTrue');\n        this.$store.commit('showModalTrue');\n      }\n    },\n\n    handleShowEmailVerified() {\n      this.showEmailVerified = !this.showEmailVerified;\n    },\n\n    handleShowNotLogin() {\n      this.showNotLogin = !this.showNotLogin;\n    },\n\n    handleShowConfirm() {\n      this.showConfirm = !this.showConfirm;\n    },\n\n    getDetail(slug) {\n      console.log('slugdayo', slug); // this.$store.commit('getSlug',slug)\n\n      router.push(`/board-detail/${slug}`);\n    },\n\n    // nextHandlar(next){\n    //     return next\n    // },\n    questionHandler(key) {\n      // recieve \"recent\" or \"reccomend\" to change status\n      this.bottomScrollActionHandler = true;\n\n      for (let i of Object.keys(this.showQuestionStatus)) {\n        if (i == key) {\n          this.showQuestionStatus[i] = true;\n        } else {\n          this.showQuestionStatus[i] = false;\n        }\n      } // this.showQuestionStatus[key] = true\n\n    },\n\n    // handleScrollFixed(){\n    //     this.scrollFixed = !this.scrollFixed\n    // },\n    handleShowQuestionStatusSearch() {\n      this.showQuestionStatus.search = false;\n    },\n\n    goHome() {\n      router.push(\"/\");\n      this.$store.commit('reset');\n    },\n\n    goAccount() {\n      router.push(\"/board/account\");\n    },\n\n    scrollTop() {\n      window.scrollTo({\n        top: 0\n      });\n    },\n\n    getScrollY() {\n      this.scrollY = window.scrollY;\n    },\n\n    handleScroll() {\n      var doch = document.querySelector('.scroll_area').scrollHeight;\n      var winh = window.innerHeight; //ウィンドウの高さ\n\n      var bottom = doch - winh; //ページ全体の高さ - ウィンドウの高さ = ページの最下部位置\n\n      if (bottom + 100 <= this.scrollY && this.bottomScrollActionHandler) {\n        this.bottomScrollActionHandler = false;\n        this.scrollBottom = true;\n        console.log(\"shitadayo\", this.scrollBottom, this.questions.next);\n        this.getAdditionalQuestion(this.questions.next); // this.scrollBottom = false\n        // this.next==null\n\n        if (this.next == null) {\n          this.scrollBottom = false;\n        }\n      }\n    },\n\n    // dammySetTime(){\n    //     this.scrollBottom = false\n    // },\n    // resetNotifications(){\n    //     this.notifications = false\n    // },\n    // handleNotifications(){\n    //         this.notifications = true\n    //         setTimeout(this.resetNotifications, 3000)    \n    // },\n    // a(){\n    //     this.scroll_position = window.pageYOffset;\n    //     this.styles.top = this.scroll_position\n    //     console.log(this.scroll_position,)\n    // },\n    dateConvert(date) {\n      var date = date;\n      var time = '';\n      var newDate = '';\n      var dt = new Date(date);\n\n      if (dt.getHours() > 11) {\n        time = \" PM\";\n        dt = dt.setHours(dt.getHours() - 12);\n        date = new Date(dt);\n      } else {\n        time = \" AM\";\n      }\n\n      newDate = date + time + \" UTC\";\n      dt = new Date(newDate);\n      var stringDT = dt.toLocaleString([], {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      return stringDT.replace(/\\//g, '-');\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","NotVerified","NotLogin","router","CreateQuestion","Confirm","Search","components","data","questions","temporaryQuestion","search","wordList","parentTagDict","showCreateQuestion","showEmailVerified","showNotLogin","showConfirm","scrollFixed","scroll_position","userTagList","searchedQuestion","onAnswerOrReply","scrollY","scrollHeight","scrollBottom","bottomScrollActionHandler","next","showQuestionStatus","recent","reccomend","styles","position","top","created","console","log","$store","dispatch","beforeMount","mounted","window","addEventListener","handleScroll","getScrollY","scrollTop","handleOnAnswerOrReply","getQuestion","commit","beforeUnmount","removeEventListener","computed","user","state","signup","djangoUser","roginUser","notification","reccomendedQuestion","getters","gettersReccomendedQuestion","emailVerified","getEmailVerified","fixedScroll","handleQuestions","results","methods","get","then","response","catch","error","getParentTag","getAdditionalQuestion","i","push","parentTags","getParentTagDict","handleOnAnswer","handleOnReply","getSearchQuestion","questionHandler","splitSearch","letterList","trim","split","join","parent_tag","center_tag","handleShowCreateQuestion","handleShowEmailVerified","handleShowNotLogin","handleShowConfirm","getDetail","slug","key","Object","keys","handleShowQuestionStatusSearch","goHome","goAccount","scrollTo","doch","document","querySelector","winh","innerHeight","bottom","dateConvert","date","time","newDate","dt","Date","getHours","setHours","stringDT","toLocaleString","year","month","day","hour","minute","replace"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Community.vue"],"sourcesContent":["<template>\n<!-- this scroll fixed should be change -->\n    <div class=\"community-wrapper scroll_area\" :class=\"{'scroll-fixed':fixedScroll, 'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div class=\"community-container\" v-if=\"$store.state.isLoading==false\">\n                <div class=\"header-flex\">\n                    <h1 class='title-white'>質問板</h1>\n                    <i v-if=\"emailVerified\" @click=\"goAccount()\" class=\"fas fa-user user-font\"></i>\n                    <i v-if=\"$store.getters.notificationApi\" class=\"fas fa-exclamation\"></i>\n                    <!-- <i @click=\"goAccount()\" class=\"fas fa-address-book user-font\"></i> -->\n                </div>\n                <!-- <div v-if=\"notifications\" :class=\"{'notification-blue':notifications}\">\n                        <div class=\"notification-text\">\n                            投稿しました。\n                        </div>\n                    </div> -->\n                <form class='search-wrapper' @submit.prevent='splitSearch()'>\n                    <i class=\"fas fa-search\"><input class='search' v-model='search' type=\"text\"></i>\n                </form>\n            \n                \n                <div class=\"question-box\" v-if='showQuestionStatus.search==false' >\n                    <p class='word'>わからない事があったら質問してみよう。</p>\n                    <button class='btn-base-white-db-sq' \n                    @click='handleShowCreateQuestion'>質問する</button>\n                </div>\n                <!-- <button @click=\"handleNotifications\">unko</button> -->\n\n                <div class=select-wrapper v-if='showQuestionStatus.search==false'>\n                    <button\n                    @click=\"questionHandler('recent')\"\n                    :class=\"{'btn-tr-white-base-cir':showQuestionStatus.recent==false,'btn-tr-black-baselite-cir':showQuestionStatus.recent}\"\n                    >最近の投稿</button>\n                    <button\n                    @click=\"questionHandler('reccomend')\"\n                    :class=\"{'btn-tr-white-base-cir':showQuestionStatus.reccomend==false,'btn-tr-black-baselite-cir':showQuestionStatus.reccomend}\">おすすめの<wbr>投稿</button>\n                </div>\n                <div class=\"question-wrapper\">\n                    <CreateQuestion\n                        v-if='showCreateQuestion'\n                        :parentTagDict=\"parentTagDict\"\n                        @handleShowConfirm='handleShowConfirm'\n                        @handleShowCreateQuestion='handleShowCreateQuestion'/>\n                    <transition name=\"notice\">\n                    <NotVerified\n                        v-if=\"showEmailVerified\"\n                        @handleShowEmailVerified=\"handleShowEmailVerified\"\n                        />\n                    </transition>\n                    <transition name=\"notice\">\n                    <NotLogin\n                        v-if=\"showNotLogin\"\n                        @handleShowNotLogin=\"handleShowNotLogin\"\n                        />\n                    </transition>\n                    <Confirm\n                        v-if='showConfirm'\n                        @handleShowConfirm='handleShowConfirm'\n                        @getDetail='getDetail'\n                    />\n\n                    <!-- here is for searched questions -->\n                    <div v-if='showQuestionStatus.search'>\n                        <div class=\"search-title title-blue\">検索結果</div>\n                        <div class=\"no-found\" v-if=\"questions.results==false\">\n                            <p class=\"no-found-word\">お探しの質問は見つかりませんでした。</p>\n                            <div class=\"route\">\n                                <div @click=\"goHome()\"><i class=\"fas fa-home\" ></i><p>ホームへ戻る</p></div>\n                                <div @click=\"handleShowQuestionStatusSearch()\"><i class=\"far fa-comments\"></i><p>質問板へ戻る</p></div>\n                            </div>\n                        </div>\n                        <div\n                        v-for=\"(question,questionindex) in questions.results\"\n                        v-bind:key=\"questionindex\">\n                            <div class='question-list l-question-list' @click=\"getDetail(question.slug)\">\n                                <div \n                                    class=\"tag-wrapper\">\n                                    <div \n                                        class=\"tag\"\n                                        v-for=\"(tag,tagindex) in question.tag\" \n                                        v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                                </div>\n                                <div class=\"question-title\">{{ question.title }}</div>\n                                <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                                <div class='good-like-wrapper'>\n                                    <i class=\"far fa-heart\"></i>\n                                    <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                                    <div class=\"date\">作成日：{{ dateConvert(question.created_on) }}</div>\n                                </div>\n                            </div>        \n                        </div>\n                    </div\n                    >\n                    <!-- here for general questions -->\n                    <div\n                    v-for=\"(question,questionindex) in handleQuestions\"\n                    v-bind:key=\"questionindex\"\n                    >\n                        <div class='question-list' v-if='showQuestionStatus.search==false' @click=\"getDetail(question.slug)\">\n                            <div \n                            class=\"tag-wrapper\">\n                                <div \n                                class=\"tag\"\n                                v-for=\"(tag,tagindex) in question.tag\" \n                                v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                            </div>\n                            <div class=\"question-title\">{{ question.title }}</div>\n                            <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                            <div class='good-like-wrapper'>\n                                <i class=\"far fa-heart\"></i>\n                                <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                                <div class=\"date\">作成日：{{ dateConvert(question.created_on) }}</div>\n                            </div>\n                        </div>        \n                    </div>\n                    <div v-if=\"scrollBottom&&questions.next\" class=\"question-list-dammy shine\">\n                        <div class=\"tag-wrapper-dammy\">\n                            <div class=\"tag-dammy\"></div>\n                        </div>\n                        <div class=\"question-title-dammy\"></div>\n                        <div class=\"questiondescroption-dammy\"></div>\n                        <div class=\"footer-dammy\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n// import { computed } from 'vue'\n// import { useStore } from 'vuex'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport NotLogin from '@/components/login/NotLogin.vue'\nimport {router} from \"../main.js\"\nimport  CreateQuestion from '@/components/board/CreateQuestion.vue'\nimport  Confirm from '@/components/board/Confirm.vue'\nimport  Search from '@/components/board/Search.vue'\nexport default {\n    // setup(){\n    //     const store = useStore()\n    //     return{\n    //         user: computed(() => store.state.signup.user),\n    //         email: computed(() => store.state.signup.email),\n    //         password: computed(() => store.state.signup.password),\n    //         emailVerified: computed(() => store.state.signup.emailVerified),\n    //     }\n    // },\n    components: {\n        CreateQuestion,\n        Confirm,\n        Search,\n        NotVerified,\n        NotLogin\n  },\n    data(){\n        return{\n            questions:'',\n            temporaryQuestion:'',\n            search:'',\n            wordList: [],\n            parentTagDict:{},       \n            showCreateQuestion: false,\n            showEmailVerified: false,\n            showNotLogin: false,\n            showConfirm: false,\n            scrollFixed: false,\n            scroll_position: '100',\n            userTagList: [],\n            // reccomendedQuestion: [],\n            searchedQuestion:'',\n            onAnswerOrReply:false,\n            scrollY: 0,\n            scrollHeight:'',\n            scrollBottom: false, \n            bottomScrollActionHandler:true,\n            // notifications:false,\n            next: '',\n            showQuestionStatus:{\n                recent: true,\n                reccomend: false,\n                search: false\n            },\n            styles:{\n                position:'',\n                top:'',\n            }\n        }\n    },\n    created(){\n        console.log('created')\n        // this.$store.dispatch('getAnsweredQuestion')\n        this.$store.dispatch('getDjangoUser')\n        // this.$store.dispatch('getNotificationApi')\n    },\n    beforeMount(){\n        // this.getQuestion()\n        console.log('before-mounted')\n        this.$store.dispatch('getNotificationApi')\n    },\n    mounted() {\n        window.addEventListener('scroll', this.handleScroll)\n        window.addEventListener('scroll', this.getScrollY)\n        this.bottomScrollActionHandler = true\n        this.scrollBottom = false, \n        this.scrollTop()\n        this.handleOnAnswerOrReply()\n        this.$store.dispatch('getRelatedQuestion')\n        this.getQuestion()\n        this.showEmailVerified = false\n        this.$store.commit('showModalFalse')\n        this.$store.commit('fixedScrollFalse')\n    },\n    beforeUnmount(){\n        window.removeEventListener('scroll', this.handleScroll)\n        window.removeEventListener('scroll', this.getScrollY)\n        this.$store.commit('showModalFalse')\n        this.$store.commit('fixedScrollFalse')\n    },\n    // unmounted(){\n    //     console.log(\"DSTROY\")\n    //     window.removeEventListener('scroll', this.handleScroll)\n    //     window.removeEventListener('scroll', this.getScrollY)\n    // },\n    // watch:{\n    //     scrollY:function(v) {this.scrollY = window.scrollY }\n    //     },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        roginUser(){\n            return this.$store.state.signup.user\n        },\n        notification(){\n            return \n        },\n        reccomendedQuestion(){\n            return this.$store.getters.gettersReccomendedQuestion\n        },\n        emailVerified(){\n            return this.$store.getters.getEmailVerified\n        },\n        fixedScroll(){\n            return this.$store.getters.fixedScroll\n        },\n        handleQuestions(){\n            console.log(\"in handlequestion\")\n            if(this.showQuestionStatus.recent){\n                this.questions = this.temporaryQuestion\n                return this.questions.results\n            }\n            else if(this.showQuestionStatus.reccomend){\n                console.log('RECCOMEND',this.reccomendedQuestion)\n                this.questions = this.reccomendedQuestion\n                return this.questions.results\n            }\n            else if(this.showQuestionStatus.search){\n                this.questions = this.searchedQuestion\n                return this.questions.results\n            }\n        }\n    },\n    methods: {\n        async getQuestion() {\n            this.$store.commit('setIsLoading', true)\n            await axios\n                .get('/api/board/question/list')\n                .then(response => {\n                    this.temporaryQuestion = response.data\n                    // this.next = response.data.next\n                    // document.title = this.product.name + ' | Djackets'\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.$store.commit('setIsLoading', false)\n            this.getParentTag()\n        },\n        async getAdditionalQuestion(next){\n            if(next!=null){\n                await axios\n                .get(next)\n                .then(response => {\n                    for(let i of response.data.results){\n                        this.questions.results.push(i)\n                    }\n                    this.questions.next= response.data.next\n                    this.bottomScrollActionHandler = true\n                    if(this.questions.next==null){\n                        this.bottomScrollActionHandler = false\n                        this.scrollBottom = false\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            }\n        },\n        async getParentTag(){\n            await axios\n                .get('/api/board/parent-tag')\n                .then(response => {\n                    let parentTags = response.data\n                    this.getParentTagDict(parentTags)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        handleOnAnswerOrReply(){\n            if(this.$store.getters.handleOnAnswer||this.$store.getters.handleOnReply){\n                this.onAnswerOrReply = true\n            }\n        },\n        async getSearchQuestion(){\n            this.$store.commit('setIsLoading', true)\n            await axios\n                .get(`/api/board/question/search/?keyword=${this.wordList}`)\n                .then(response => {\n                    this.searchedQuestion = response.data\n                    console.log(\"SQ\", this.searchedQuestion)\n                    this.questionHandler(\"search\")\n                    console.log(\"status changed to :\",this.showQuestionStatus.search)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.$store.commit('setIsLoading', false)\n        },          \n        async splitSearch(){\n            if(this.search){\n                this.wordList = []\n                let letterList = []\n                this.search = this.search.trim()\n                this.search = this.search.split('')\n                for(let i of this.search){\n                    console.log(i === ' ')\n                    if(i === ' '&&letterList[0] || i === '　'&&letterList[0]){\n                        this.wordList.push(letterList.join(''))\n                        letterList = []\n                    }\n                    else if(i === ' ' || i === '　'){\n                        ;\n                    }             \n                    else{\n                        letterList.push(i)\n                    }\n                }\n                this.wordList.push(letterList.join(''))\n                letterList = []\n                this.search = ''\n                await this.getSearchQuestion()\n            }\n        },\n        getParentTagDict(parentTags){\n            for (let i of parentTags){\n                this.parentTagDict[i.parent_tag] = i.center_tag\n            }\n        },\n        handleShowCreateQuestion(){\n            console.log('showCreate')\n            if(this.emailVerified&&this.roginUser){\n                this.showCreateQuestion = !this.showCreateQuestion\n                this.$store.commit('handleFixedScroll')\n                // this.handleScrollFixed()\n                // this.a()\n            }else if(!this.emailVerified&&this.roginUser){\n                this.handleShowEmailVerified()\n                this.$store.commit('fixedScrollTrue')\n                this.$store.commit('showModalTrue')\n            }else{\n                this.handleShowNotLogin()\n                this.$store.commit('fixedScrollTrue')\n                this.$store.commit('showModalTrue')\n                   \n            }\n        },\n        handleShowEmailVerified(){\n            this.showEmailVerified = !this.showEmailVerified\n        },\n        handleShowNotLogin(){\n            this.showNotLogin = !this.showNotLogin\n        },\n        handleShowConfirm(){\n            this.showConfirm = !this.showConfirm\n        },\n        getDetail(slug){\n            console.log('slugdayo',slug)\n            // this.$store.commit('getSlug',slug)\n            router.push(`/board-detail/${slug}` )\n        },\n        // nextHandlar(next){\n        //     return next\n        // },\n        questionHandler(key){\n            // recieve \"recent\" or \"reccomend\" to change status\n            this.bottomScrollActionHandler = true\n            for(let i of Object.keys(this.showQuestionStatus)){\n                if(i == key){\n                    this.showQuestionStatus[i] = true                    \n                }else{\n                    this.showQuestionStatus[i] = false\n                }\n            }\n            // this.showQuestionStatus[key] = true\n        },\n        // handleScrollFixed(){\n        //     this.scrollFixed = !this.scrollFixed\n        // },\n        handleShowQuestionStatusSearch(){\n            this.showQuestionStatus.search = false\n        },\n        goHome(){\n            router.push(\"/\")\n            this.$store.commit('reset')\n        },\n        goAccount(){\n            router.push(\"/board/account\")\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n            });\n        },\n        getScrollY(){\n            this.scrollY = window.scrollY\n        },\n        handleScroll(){\n            var doch = document.querySelector('.scroll_area').scrollHeight\n            var winh = window.innerHeight; //ウィンドウの高さ\n            var bottom = doch - winh; //ページ全体の高さ - ウィンドウの高さ = ページの最下部位置\n            if (bottom+100 <= this.scrollY&&this.bottomScrollActionHandler) {\n                this.bottomScrollActionHandler = false\n                this.scrollBottom = true\n                console.log(\"shitadayo\",this.scrollBottom,this.questions.next)\n                this.getAdditionalQuestion(this.questions.next)\n                // this.scrollBottom = false\n                // this.next==null\n                if(this.next==null){\n                    this.scrollBottom = false\n                }\n            }\n        },\n        // dammySetTime(){\n        //     this.scrollBottom = false\n        // },\n        // resetNotifications(){\n        //     this.notifications = false\n            \n        // },\n        // handleNotifications(){\n        //         this.notifications = true\n        //         setTimeout(this.resetNotifications, 3000)    \n        // },\n        // a(){\n        //     this.scroll_position = window.pageYOffset;\n        //     this.styles.top = this.scroll_position\n        //     console.log(this.scroll_position,)\n        // },\n        dateConvert(date){\n            var date = date\n            var time = ''\n            var newDate = ''\n            var dt = new Date(date)\n            if(dt.getHours() > 11){\n                time = \" PM\"\n                dt = dt.setHours(dt.getHours()-12)\n                date = new Date(dt)\n            }else{\n                time = \" AM\"\n            }\n            newDate = date + time + \" UTC\"\n            dt = new Date(newDate)\n            var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n            return stringDT.replace(/\\//g,'-')\n        },\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n.scroll{\n    position:fixed;\n}\n.community-wrapper{\n    // background: linear-gradient(#5B759F,#1C254C);\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    height: auto;\n    min-height: 80vh;\n    width: 100vw;\n    align-items: center;\n    .main-wrapper{\n        .community-container{\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            .header-flex{\n                display: flex;\n                justify-content: center;\n                position:relative;\n                width:100%;\n                .user-font{\n                    position:absolute;\n                    right:0;\n                    margin-right: 1rem;\n                    margin-top: 1rem;\n                    font-size: 2rem;\n                    color: $dark-blue;\n                    transition: 0.5s;\n                }\n                .user-font:hover{\n                    color: gray;\n                }\n                .fa-exclamation{\n                    position:absolute;\n                    right:0;\n                    margin-right: 0.6rem;\n                    margin-top: 0.5rem;\n                    font-size: 0.2rem;\n                    border: solid red;\n                    border-radius: 50vh;\n                    // padding: 0.3rem;\n                    padding-top: 0.1rem;\n                    padding-bottom: 0.1rem;\n                    padding-left: 0.3rem;\n                    padding-right: 0.3rem;\n                    color: red;\n                    background: $back-white;\n                }\n            }\n            .search-wrapper{\n                border: solid $base-color;\n                border-radius: 50vh;\n                width: 70%;\n                height: 2.5rem;\n                background: $back-white;\n                display: flex;\n                align-items: center;       \n                .fa-search{\n                    width:100%;\n                    margin-left: 1rem;\n                    padding-right: 1rem;\n                    transition: 0.5s;\n                    color: rgb(165, 165, 165);\n                    .search{\n                    border: none;\n                    padding-left: 0.5rem;\n                    background: $back-white;\n                    width: 90%;\n                    // transition: 0.5s;\n                    }\n                    // .search:focus{\n                    //     border: solid $dark-blue;\n                    // }\n                }\n                .fa-search:focus-within{\n                    color:rgb(80, 80, 80);\n                }\n            }\n            .question-box{\n                border: solid $base-color;\n                border-radius: 0.5rem;\n                width: 90%;\n                height: 10rem;\n                background: rgb(252, 252, 252);\n                margin: 1rem;\n                .word{\n                    margin: 1rem;\n                    font-size: 1.5rem;\n                }\n                .btn-base-white-db-sq{\n                    padding-top: 0.5rem;\n                    padding-bottom: 0.5rem;\n                    padding-left: 1rem;\n                    padding-right: 1rem;\n                    font-size: 1rem;\n                    font-weight: bold;\n                }\n            }\n            .select-wrapper{\n                .btn-tr-black-baselite-cir{\n                    padding-top: 0.5rem;\n                    padding-bottom: 0.5rem;\n                    font-size: 0.8rem;\n                    margin-right: 0.1rem;\n                }\n                .btn-tr-white-base-cir{\n                    padding-top: 0.5rem;\n                    padding-bottom: 0.5rem;\n                    font-size: 0.8rem;\n                    margin-left: 0.1rem;\n                }\n            }\n            .question-wrapper{\n                margin: 1rem;\n                width: 85%;\n                .search-title{\n                    margin-top: 2rem;\n                    margin-bottom: 2rem;\n                    border-bottom: 0.2rem solid $dark-blue;\n                    display: inline-block;\n                }\n                .no-found{\n                    .no-found-word{\n                        margin-top:0.5rem;\n                        color: $middle-blue;\n                        margin-bottom: 1rem;\n                    }\n                    .route{\n                        display:flex;\n                        align-items: center;\n                        justify-content: center;\n                        padding: 1rem;\n                        color: gray;\n                        div{\n                            margin:1rem;\n                        }\n                        div:hover{\n                            color:rgb(221, 221, 221);\n                            transition:0.3s;\n                        }\n                    }\n                }\n                .question-list:hover{\n                    background: $base-lite-3;\n                }\n                .question-list{\n                    border: solid $base-color;\n                    margin-bottom: 0.5rem;\n                    width:100%;\n                    background: rgb(252, 252, 252);\n                    display: flex;\n                    flex-direction: column;\n                    .tag-wrapper{\n                        display: flex;\n                        width: 100%;\n                        .tag{\n                            border: solid black;\n                            border-radius: 50vh;\n                            background: rgb(230, 230, 230);\n                            margin-top: 0.5rem;\n                            margin-left: 0.3rem;\n                            margin-bottom: 0.5rem;\n                            padding: 0.5rem;\n                            min-width: 3rem;\n                        }\n                    }\n                    .good-like-wrapper{\n                        display: flex;\n                        .fa-heart{\n                            color: rgb(221, 36, 221);\n                            margin-left: 0.5rem;\n                            margin-right: 0.3rem;\n                            margin-top: 0.2rem;\n                        }\n                        .date{\n                            margin-left: 0.5rem;\n                        }\n                    }\n                }\n                .question-list-dammy{\n                    background: gray;\n                    display: flex;\n                    width: 100%;\n                    flex-direction: column;\n                    justify-content: center;\n                    align-items: center;\n                    .tag-wrapper-dammy{\n                        display: flex;\n                        width: 100%;\n                        .tag-dammy{\n                            border-radius: 50vh;\n                            background: rgb(92, 92, 92);\n                            margin-top: 0.5rem;\n                            margin-left: 0.3rem;\n                            margin-bottom: 0.5rem;\n                            padding: 0.5rem;\n                            min-width: 3rem;\n                            min-height: 1.5rem;\n                        }\n                    }\n                    .question-title-dammy{\n                        background: rgb(92, 92, 92);\n                        padding: 0.5rem;\n                        width: 80%;\n                    }\n                    .questiondescroption-dammy{\n                        background: rgb(92, 92, 92);\n                        padding: 0.5rem;\n                        width: 80%;\n                        margin-top: 0.5rem;\n                    }\n                    .footer-dammy{\n                        background: rgb(92, 92, 92);\n                        padding: 0.5rem;\n                        width: 80%;\n                        margin-top: 0.5rem;\n                        margin-bottom: 1rem;\n                    }\n                }\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}