{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-5b7ba01b\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"notification-text\"\n  }, \" 削除しました。 \", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_2 = [_hoisted_1];\nvar _hoisted_3 = {\n  class: \"main-wrapper\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  class: \"main-container\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"logger-header\"\n  }, [/*#__PURE__*/_createCommentVNode(\" <p class=\\\"title-white\\\">My-Quiz</p>\\n                    <p class=\\\"register\\\">登録数{{ length }} / {{myQuiz.max_num}}</p>\\n                    <p class=\\\"max\\\">(最大 {{myQuiz.max_num}} 個まで登録できます)</p> \")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_6 = {\n  key: 0,\n  class: \"logger-container\"\n};\nvar _hoisted_7 = {\n  key: 0,\n  class: \"no-my-quiz\"\n};\n\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"no-quiz\"\n  }, [/*#__PURE__*/_createTextVNode(\" ログはありません。\"), /*#__PURE__*/_createElementVNode(\"br\")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_9 = [_hoisted_8];\nvar _hoisted_10 = {\n  class: \"each-log-container\"\n};\nvar _hoisted_11 = {\n  class: \"question-index-container\"\n};\nvar _hoisted_12 = {\n  class: \"question-index\"\n};\nvar _hoisted_13 = {\n  class: \"log-time\"\n};\nvar _hoisted_14 = {\n  class: \"log-message\"\n};\nvar _hoisted_15 = {\n  class: \"log-checked\"\n};\nvar _hoisted_16 = {\n  key: 1,\n  class: \"fas fa-angle-down\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_QuizDetail = _resolveComponent(\"QuizDetail\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"logger-wrapper\", {\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_ctx.$store.state.board.notifications.reply ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass({\n      'notification-blue': _ctx.$store.state.board.notifications.reply\n    })\n  }, _hoisted_2, 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_3, [!_ctx.quizOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createTextVNode(\" \" + _toDisplayString($data.loggers) + \" \", 1\n  /* TEXT */\n  ), _ctx.$store.state.isLoading == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [!$data.loggers.results ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _hoisted_9)) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.loggers.results, function (log, logindex) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"logger-loop\",\n      onClick: _cache[0] || (_cache[0] = function ($event) {\n        return _ctx.getQuestionDetailInfo(_ctx.question);\n      }),\n      key: logindex\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, _toDisplayString(logindex + 1), 1\n    /* TEXT */\n    )]), _createCommentVNode(\" <div class=\\\"log-time\\\">{{ log.created_on }}</div> \"), _createElementVNode(\"div\", _hoisted_13, _toDisplayString(log.created_on), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_14, _toDisplayString(log.actualErrorMessage.substr(0, 15) + '...'), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($options.ckeckedToString(log.checked)), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), $data.loggers.next ? (_openBlock(), _createElementBlock(\"i\", _hoisted_16)) : _createCommentVNode(\"v-if\", true), _ctx.quizDetail ? (_openBlock(), _createBlock(_component_QuizDetail, {\n    key: 2,\n    questionDetailInfo: _ctx.questionDetailInfo,\n    myQuestion: _ctx.myQuestion,\n    showButtonAndNoQuiz: _ctx.showButtonAndNoQuiz,\n    onHandleQuizDetail: _ctx.handleQuizDetail,\n    onDeleteQuestionFunForDetailPage: _ctx.deleteQuestionFunForDetailPage\n  }, null, 8\n  /* PROPS */\n  , [\"questionDetailInfo\", \"myQuestion\", \"showButtonAndNoQuiz\", \"onHandleQuizDetail\", \"onDeleteQuestionFunForDetailPage\"])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _ctx.showButtonAndNoQuiz ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return _ctx.handleQuizOpen();\n    }),\n    class: \"btn-basegra-white-db-sq\"\n  }, \" 練習 \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","_hoisted_1","_createCommentVNode","_hoisted_8","_createElementBlock","_ctx","state","isLoading","board","notifications","reply","_hoisted_5","_toDisplayString","$data","results","_hoisted_9","_Fragment","_renderList","log","logindex","onClick","key","created_on","actualErrorMessage","substr","$options","checked","next","_createBlock","_component_QuizDetail","questionDetailInfo","myQuestion","showButtonAndNoQuiz","onHandleQuizDetail","onDeleteQuestionFunForDetailPage"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/Logger.vue"],"sourcesContent":["<template>\n    <div class=\"logger-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div v-if=\"$store.state.board.notifications.reply\" :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n            <div class=\"notification-text\">\n                削除しました。\n            </div>\n        </div>\n        <div class=\"main-wrapper\">\n            <div class=\"main-container\" v-if=\"!quizOpen\">\n                <div class=\"logger-header\">\n                    <!-- <p class=\"title-white\">My-Quiz</p>\n                    <p class=\"register\">登録数{{ length }} / {{myQuiz.max_num}}</p>\n                    <p class=\"max\">(最大 {{myQuiz.max_num}} 個まで登録できます)</p> -->\n                </div>\n                {{ loggers }}\n                <div class=\"logger-container\" v-if=\"$store.state.isLoading==false\">\n                    <div class=\"no-my-quiz\" v-if=\"!loggers.results\">\n                        <div class=\"no-quiz\">\n                            ログはありません。<br>\n                        </div>\n                    </div>\n                    <div class=logger-loop @click=\"getQuestionDetailInfo(question)\" v-for=\"(log,logindex) in loggers.results\"\n                        v-bind:key=\"logindex\">\n                        <div class=\"each-log-container\">\n                            <div class=\"question-index-container\">\n                                <div class=\"question-index\">{{ logindex+1 }}</div>\n                            </div>\n                            <!-- <div class=\"log-time\">{{ log.created_on }}</div> -->\n                            <div class=\"log-time\">{{ log.created_on }}</div>\n                            <div class=\"log-message\">{{ log.actualErrorMessage.substr(0,15)+'...'  }}</div>\n                            <div class=\"log-checked\">{{ ckeckedToString(log.checked) }}</div>\n                        </div>\n                    </div>\n                    <i v-if=\"loggers.next\" class=\"fas fa-angle-down\"></i>\n                    <QuizDetail\n                    v-if=\"quizDetail\"\n                    :questionDetailInfo=\"questionDetailInfo\"\n                    :myQuestion=\"myQuestion\"\n                    :showButtonAndNoQuiz=\"showButtonAndNoQuiz\"\n                    @handleQuizDetail='handleQuizDetail'\n                    @deleteQuestionFunForDetailPage=\"deleteQuestionFunForDetailPage\"                    \n                    />\n                </div>\n                <div @click=\"handleQuizOpen()\" v-if=\"showButtonAndNoQuiz\" class=\"btn-basegra-white-db-sq\">\n                    練習\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport LogDetail from '@/components/dashboard/LogDetail.vue'\nimport axios from 'axios';\n\nexport default {\n    components: {\n        LogDetail,\n    },\n    data(){\n        return{\n            errorMessage:\"components/dshboard/Logger\",\n            loggers: \"\"\n        }\n    },\n    mounted(){\n        this.getLogger()\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        myQuiz(){\n            return this.$store.state.signup.djangoUser.my_quiz[0]\n        },\n        fieldNameId(){\n            return this.$store.getters.fieldNameId\n        },\n        quizNameId(){\n            return this.$store.getters.quizNameId\n        },\n        statusNameId(){\n            this.$store.dispatch(\"getStatusNameId\")\n            return this.$store.getters.statusNameId\n        }\n\n    },\n    methods:{\n        async getLogger(){\n            this.$store.commit('setIsLoading', true)\n            await axios\n                .get('/api/loggers-list')\n                .then(response => {\n                    this.loggers = response.data\n                    })\n                .catch(e => {\n                    let logger = {\n                    message: errorMessage + 'getLogger',\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n                }\n                this.$store.commit('setLogger',logger)\n                this.$store.commit(\"checkDjangoError\",e.message)\n                this.$store.commit('setIsLoading', false)\n                router.push({ name: 'ConnectionError' })\n                })\n            this.$store.commit('setIsLoading', false)\n        },\n        ckeckedToString(checked) {\n            if(checked){\n                return '確認済み'\n            } else {\n                return '未確認'\n            }\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.main-container{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        }\n\n.logger-wrapper{\n    display: flex;\n    justify-content: center;\n    .main-wrapper{\n        .logger-header{\n            margin-bottom: 1rem;\n            .register{\n                font-size: 1.3rem;\n                color: $lite-gray;\n                font-weight: bold;\n            }\n            .max{\n                font-size: 0.8rem;\n                color: $lite-gray;\n            }\n        }\n        .logger-container{\n            width: 95%;\n            min-height: 300px;\n            max-height: 350px;\n            border: solid $base-color;\n            border-radius: 5px;\n            background: $back-white;\n            padding-top: 1rem;\n            padding-bottom: 1rem;\n            overflow: scroll;\n            .no-my-quiz{\n                margin:2rem;\n                .no-quiz{\n                    color: $dark-blue;\n                    font-weight: bold;\n                    margin-bottom: 2rem;\n                }\n            \n            }\n            .logger-loop:hover{\n                background: $back-lite-white;\n                border-bottom: solid $lite-gray;\n            }\n            .logger-loop{\n                position: relative;\n                display: flex;\n                align-items: center;\n                border-bottom: solid $lite-gray;\n                transition: .5s;\n                .each-log-container{\n                    position: relative;\n                    display: flex;\n                    width: 100%;\n                    margin-bottom: 1rem;\n                    margin-top: 1rem;\n                    // padding-bottom: 0.5rem;\n                    align-items: center;\n                    // justify-content: center;\n                    .question-index-container{\n                        flex-basis: 10%;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        .question-index{\n                            border: solid $base-color;\n                            border-radius: 50vh;\n                            width: 1.7rem;\n                            height: 1.7rem;\n                            margin-left: 0.4rem;\n                            font-weight: bold;\n                            background: $dark-blue;\n                            color: white;\n                        }\n                    }\n                    .log-time{\n                        flex-basis: 30%;\n\n                    }\n                    .log-message{\n                        flex-basis: 50%;\n                    }\n                    .log-checked{\n                        flex-basis: 10%;\n                        // font-size: 0.8rem;\n                        color: red;\n                        margin-right: 1rem;\n                        border: solid $dull-red;\n                    }\n                }\n            }\n           \n        }\n        .btn-basegra-white-db-sq{\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            padding-top: 0.2rem;\n            padding-bottom: 0.2rem;\n            padding-left: 1.2rem;\n            padding-right: 1.2rem;\n            font-weight: bold;\n            font-size: 1.2rem;\n\n        }\n\n    }\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}