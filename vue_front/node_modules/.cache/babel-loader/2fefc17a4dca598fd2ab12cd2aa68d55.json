{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport axios from 'axios';\nimport Thumbnail from '@/components/account/Thumbnail.vue';\nimport QuizConfirm from '@/components/dashboard/QuizConfirm.vue';\n\nfunction initialData() {\n  return {\n    showThumbnail: false,\n    showSideBar: true,\n    showConfirm: false,\n    tempQuiz: '初級',\n    tempField: 'フィールドを選択してください。',\n    // tempQuizType: '選択',\n    questionDetailInfo: {},\n    formQuestionData: {\n      quiz: '初級',\n      quiz_level: 1,\n      question_type: '選択',\n      field: 'フィールドを選択してください。',\n      label: '',\n      status: '',\n      max_select: '',\n      image: ''\n    },\n    formAnswerDataList: [{\n      label: '',\n      is_correct: false,\n      answer_id: 1\n    }, {\n      label: '',\n      is_correct: false,\n      answer_id: 2\n    }, {\n      label: '',\n      is_correct: false,\n      answer_id: 3\n    }, {\n      label: '',\n      is_correct: false,\n      answer_id: 4\n    }],\n    formAnswerData: {\n      label: '',\n      is_correct: false,\n      answer_id: 0\n    },\n    formDataError: {\n      noFieldError: \"クイズフィールドを選んでください。\",\n      // highLevelError: \"レベルは１０以内の数字を入力してください。\",\n      noSetAnswerIdError: \"答えの順番を指定してください。\",\n      wrongNumOrderError: \"答えの順番に間違いがあります。\",\n      notSelectOneError: \"正解を一つ選んでください。\",\n      noMoreThanThreeError: \"多答問題は答えを３つ以上指定してください。\",\n      moreThanTwoError: \"多答問題は正解を２つ以上指定してください。\",\n      AllTrueError: \"全ての答えが正解になっています。\"\n    },\n    errorOccurred: false,\n    errorMessage: '',\n    answerNum: 4,\n    handleAnswerLength: 4,\n    formDataReady: false,\n    image: ''\n  };\n}\n\nexport default {\n  components: {\n    Thumbnail,\n    QuizConfirm\n  },\n\n  data() {\n    return initialData();\n  },\n\n  created() {\n    this.$store.dispatch('getQuestionTypeId');\n  },\n\n  beforeMount() {// this.$store.dispatch('getQuestionTypeId')\n  },\n\n  mounted() {\n    console.log('mounted at create-question', this.quizNameId, this.fieldNameId);\n  },\n\n  watch: {\n    answerNum: function (v) {\n      console.log('v', v);\n\n      if (this.handleAnswerLength > v) {\n        this.handleAnswerLength = v;\n        this.formAnswerDataList.pop();\n      } else {\n        const _ = require('lodash');\n\n        let copyObject = _.cloneDeep(this.formAnswerData);\n\n        this.formAnswerDataList.push(copyObject);\n        this.handleAnswerLength = v;\n      }\n    },\n    tempQuiz: function (v) {\n      console.log('T', v);\n      this.formQuestionData.quiz = v;\n      this.formQuestionData.field = this.tempField;\n    } // tempQuizType:function(v) {\n    //     this.formQuestionData.question_type = v\n    //     for(let i of this.formAnswerDataList) {\n    //         i.is_correct = ''\n    //     }\n    // }\n\n  },\n  computed: {\n    quizNameId() {\n      return this.$store.getters.quizNameId;\n    },\n\n    fieldNameId() {\n      return this.$store.getters.fieldNameId;\n    },\n\n    questionTypeId() {\n      return this.$store.getters.questionTypeId;\n    },\n\n    quizFieldList() {\n      let list = [];\n\n      for (let i of this.fieldNameId) {\n        if (this.convertQuizGradeToId(this.tempQuiz) == i.grade) {\n          list.push(i.name);\n        }\n      }\n\n      return list;\n    },\n\n    fixedScroll() {\n      return this.$store.getters.fixedScroll;\n    }\n\n  },\n  // mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n  methods: {\n    // ...mapActions(['getQuestionTypeId']),\n    handleShowSideBar() {\n      console.log(this.showSideBar);\n      this.showSideBar = !this.showSideBar;\n      console.log(this.showSideBar);\n    },\n\n    addAnswer() {\n      this.answerNum += 1;\n    },\n\n    subtractAnswer() {\n      if (this.answerNum > 1) {\n        this.answerNum -= 1;\n      }\n    },\n\n    async submitForm() {\n      // await this.setAllFormData()\n      let response = '';\n\n      try {\n        console.log('GO', this.formQuestionData);\n\n        if (this.formDataReady) {\n          response = await axios({\n            method: 'post',\n            url: '/api/questions-create/',\n            data: {\n              'quiz': this.formQuestionData.quiz,\n              'label': this.formQuestionData.label,\n              'field': [this.formQuestionData.field],\n              'question_type': this.formQuestionData.question_type,\n              'quiz_level': this.formQuestionData.quiz_level,\n              'answer': this.formAnswerDataList\n            }\n          });\n        }\n\n        if (this.formQuestionData.image) {\n          console.log(response.data);\n          const formdata = new FormData();\n          formdata.append('image', this.formQuestionData.image, `${this.formQuestionData.image}.png`);\n          axios.patch(`/api/questions-image-dispatch/${response.data.id}`, formdata);\n        }\n      } catch (e) {\n        console.log('error', e);\n      }\n\n      this.allResetVars();\n    },\n\n    setAllFormData() {\n      // need to think about status part regarding of field\n      if (this.formQuestionData.field == this.tempField) {\n        this.errorMessage = this.formDataError.noFieldError;\n        this.setTimeForNotification();\n        return;\n      }\n\n      if (this.formQuestionData.question_type == \"並び替え\") {\n        this.formAnswerDataList.forEach((elem, index) => {\n          this.formAnswerDataList[index].is_correct = false;\n        });\n        let answerIdList = [];\n        this.formAnswerDataList.forEach((elem, index) => {\n          answerIdList.push(elem.answer_id);\n\n          if (!this.formAnswerDataList[index].answer_id) {\n            this.errorMessage = this.formDataError.noSetAnswerIdError;\n            this.setTimeForNotification();\n            return;\n          }\n        });\n        const answerIdListSet = [...new Set(answerIdList)];\n\n        if (answerIdListSet.length == answerIdList.length) {\n          this.formDataReady = true;\n        } else {\n          this.errorMessage = this.formDataError.wrongNumOrderError;\n          this.setTimeForNotification();\n          return;\n        }\n      } else {\n        let counter = 0;\n\n        for (let i of this.formAnswerDataList) {\n          if (i.is_correct) {\n            counter += 1;\n          }\n        }\n\n        if (this.formQuestionData.question_type == \"選択\") {\n          if (counter != 1) {\n            this.errorMessage = this.formDataError.notSelectOneError;\n            this.setTimeForNotification();\n            return;\n          } else {\n            this.formAnswerDataList.forEach((elem, index) => {\n              if (elem.answer_id) {\n                this.formAnswerDataList[index].answer_id = 0;\n              }\n            });\n            this.formDataReady = true;\n          }\n        } else if (this.formQuestionData.question_type == \"多答\") {\n          if (this.formAnswerDataList.length < 3) {\n            this.errorMessage = this.formDataError.noMoreThanThreeError;\n            this.setTimeForNotification();\n            return;\n          } else if (counter <= 0 || counter == 1) {\n            this.errorMessage = this.formDataError.moreThanTwoError;\n            this.setTimeForNotification();\n            return;\n          } else if (this.formAnswerDataList.length == counter) {\n            this.errorMessage = this.formDataError.AllTrueError;\n            this.setTimeForNotification();\n            return;\n          } else {\n            this.formQuestionData.max_select = counter;\n            this.formAnswerDataList.forEach((elem, index) => {\n              if (elem.answer_id) {\n                this.formAnswerDataList[index].answer_id = 0;\n              }\n            });\n            this.formDataReady = true;\n          }\n        }\n      }\n\n      this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type);\n      this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz);\n      this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field);\n      console.log(\"set\", this.formQuestionData);\n    },\n\n    setTimeForNotification() {\n      this.errorOccurred = true;\n      setTimeout(this.errorOccurredFalse, 3000);\n    },\n\n    errorOccurredFalse() {\n      this.errorOccurred = false;\n    },\n\n    convertQuizGradeToId(grade) {\n      for (let i of this.quizNameId) {\n        if (i.name == grade) {\n          return i.id;\n        }\n      }\n    },\n\n    convertQuizTypeToId(type) {\n      for (let i of this.questionTypeId) {\n        if (i.name == type) {\n          return i.id;\n        }\n      }\n    },\n\n    convertQuizFieldToId(field) {\n      for (let i of this.fieldNameId) {\n        if (i.name == field) {\n          return i.id;\n        }\n      }\n    },\n\n    handleShowThumbnail() {\n      this.showThumbnail = true;\n    },\n\n    showThumbnailFalse() {\n      this.showThumbnail = false;\n    },\n\n    setImageBlob(blob, url) {\n      console.log('set-blob', blob);\n      this.image = url;\n      this.questionDetailInfo.image = url;\n      this.formQuestionData.image = blob;\n    },\n\n    showConfirmTrue() {\n      this.formDataReady = false;\n      this.setQuestionDetailInfo();\n      this.setAllFormData();\n\n      if (this.formDataReady) {\n        this.$store.commit('fixedScrollTrue');\n        this.showConfirm = true;\n      }\n    },\n\n    showConfirmFalse() {\n      this.showConfirm = false;\n      this.$store.commit('fixedScrollFalse');\n    },\n\n    allResetVars() {\n      Object.assign(this.$data, initialData());\n    },\n\n    setQuestionDetailInfo() {\n      console.log('info');\n      this.questionDetailInfo.grade = this.formQuestionData.quiz;\n      this.questionDetailInfo.level = this.formQuestionData.quiz_level;\n      this.questionDetailInfo.question_type = this.formQuestionData.question_type;\n      this.questionDetailInfo.field = this.formQuestionData.field;\n      this.questionDetailInfo.label = this.formQuestionData.label;\n      this.questionDetailInfo.answers = this.formAnswerDataList;\n      console.log('doneinfo');\n    },\n\n    chancelAction() {\n      this.tempQuiz = this.questionDetailInfo.grade;\n      this.formQuestionData.quiz = this.questionDetailInfo.grade;\n      this.formQuestionData.question_type = this.questionDetailInfo.question_type;\n      this.formQuestionData.field = this.questionDetailInfo.field;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","axios","Thumbnail","QuizConfirm","initialData","showThumbnail","showSideBar","showConfirm","tempQuiz","tempField","questionDetailInfo","formQuestionData","quiz","quiz_level","question_type","field","label","status","max_select","image","formAnswerDataList","is_correct","answer_id","formAnswerData","formDataError","noFieldError","noSetAnswerIdError","wrongNumOrderError","notSelectOneError","noMoreThanThreeError","moreThanTwoError","AllTrueError","errorOccurred","errorMessage","answerNum","handleAnswerLength","formDataReady","components","data","created","$store","dispatch","beforeMount","mounted","console","log","quizNameId","fieldNameId","watch","v","pop","_","require","copyObject","cloneDeep","push","computed","getters","questionTypeId","quizFieldList","list","i","convertQuizGradeToId","grade","name","fixedScroll","methods","handleShowSideBar","addAnswer","subtractAnswer","submitForm","response","method","url","formdata","FormData","append","patch","id","e","allResetVars","setAllFormData","setTimeForNotification","forEach","elem","index","answerIdList","answerIdListSet","Set","length","counter","convertQuizTypeToId","convertQuizFieldToId","setTimeout","errorOccurredFalse","type","handleShowThumbnail","showThumbnailFalse","setImageBlob","blob","showConfirmTrue","setQuestionDetailInfo","commit","showConfirmFalse","Object","assign","$data","level","answers","chancelAction"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/CreateQuizQuestion.vue"],"sourcesContent":["<template>\n    <div v-if=\"questionTypeId\" class=\"create-question-wrapper\" :class=\"{'scroll-fixed':fixedScroll, 'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-container\" v-if=\"$store.state.isLoading==false\">\n                <form @submit.prevent='showConfirmTrue' class=\"field-wrapper\">\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_grade\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model='tempQuiz'>\n                                <option\n                                    v-for=\"(id,idindex) in quizNameId\" \n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formMail'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_level\n                                </div>\n                            </div>\n                            <div class=\"text-box level\">\n                                <input required type=\"number\" min=\"1\" max=\"10\" step=\"1\" v-model=\"formQuestionData.quiz_level\">\n                            </div>\n                        </div>         \n                    </div>\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_type\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.question_type\">\n                                <option\n                                    v-for=\"(id,idindex) in questionTypeId\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id.name }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <!-- {{ formQuestionData}} -->\n                    <div class=\"field\">\n                        <div class=\"input-box\" ref='formName'>\n                            <div class='each-title-container'>\n                                <div class=\"each-title\">\n                                    quiz_field\n                                </div>\n                            </div>\n                            <select required class=\"text-box\" v-model=\"formQuestionData.field\">\n                                <option disabled>{{ tempField }}</option>\n                                <option\n                                    v-for=\"(id,idindex) in quizFieldList\"\n                                    v-bind:key=\"idindex\">\n                                    <p class=\"option\">{{ id }}</p>\n                                </option>\n                            </select>\n                        </div>       \n                    </div>\n                    <div class=\"texarea-field\">\n                        <div class=\"texarea-box\">\n                            <div class=\"each-title-container\">\n                                <div class=\"each-title\">\n                                    quiz_label\n                                </div>\n                            </div>\n                            <textarea required class=\"text-box\" v-on:focus=\"onFocus\" v-model='formQuestionData.label'>\n                            </textarea>\n                        </div>       \n                    </div>\n                    <div class=\"answer-wrapper\" >\n                        <div class=\"answer-title-container\">\n                            <i @click=\"subtractAnswer()\" class=\"fas fa-minus\"></i>\n                            <div class=\"answer-title\">\n                                <p>Answer</p>\n                            </div>\n                            <i @click=\"addAnswer()\" class=\"fas fa-plus\"></i>\n                        </div>\n                        <div class=\"answer-container\"\n                            v-for=\"(num) of handleAnswerLength\" \n                                v-bind:key=\"num\">\n                            <div class=\"num-con\">\n                                <p class=\"num\">{{ num }}</p>\n                            </div>\n                            <input required class=\"answer-label\" type=\"text\" placeholder=\"答え\" v-model='formAnswerDataList[num-1].label'>\n                            <div class=\"right-side-answer-container\">\n                                <div v-if=\"formQuestionData.question_type!='並び替え'\" class=\"checkbox-container\">\n                                    <p>true</p>\n                                    <input class=\"checkbox\" type=\"checkbox\" v-model='formAnswerDataList[num-1].is_correct'>\n                                </div>\n                                <div v-if=\"formQuestionData.question_type=='並び替え'\" class=\"correct-order-container\">\n                                    <div class=\"correct-order\">\n                                        <p>order</p>\n                                        <input required input type=\"number\" min=\"1\" :max=\"handleAnswerLength\" step=\"1\" v-model='formAnswerDataList[num-1].answer_id'>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"image-bottun\" @click='handleShowThumbnail'>\n                            <p v-if=\"!image\">画像を入れますか？</p>\n                            <p v-if=\"image\">画像を変更しますか？</p>\n                        </div>\n                        <div v-if=\"image\" class=\"image-container\">\n                            <img class=\"image\" :src=\"image\">\n                        </div>\n                        <!-- <div v-if=\"!errorOccurred\" class=\"space-height\"></div> -->\n                        <div v-if=\"errorOccurred\" :class=\"{'notification-red':errorOccurred}\">\n                            <div class=\"notification-text\">\n                            {{ errorMessage }}\n                            </div>\n                        </div>\n                        <!-- <input type=\"file\" enctype=\"multipart/form-data\"> -->\n                    </div>\n                    <!-- <p class=\"po\">{{formAnswerDataList }}</p> -->\n                    <div>\n                        <button class='fbottun' ref='bform' id=''>作成する</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <Thumbnail v-if=\"showThumbnail\"\n        @showThumbnailFalse=\"showThumbnailFalse\"\n        @setImageBlob=\"setImageBlob\"/>\n        <QuizConfirm\n        v-if=\"showConfirm\"\n        :questionDetailInfo=\"questionDetailInfo\"\n        @submitForm=\"submitForm\"\n        @showConfirmFalse=\"showConfirmFalse\"\n        @chancelAction=\"chancelAction\"/>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex';\nimport axios from 'axios'\nimport Thumbnail from '@/components/account/Thumbnail.vue'\nimport QuizConfirm from '@/components/dashboard/QuizConfirm.vue'\n\nfunction initialData() {\n    return{\n        showThumbnail: false,\n        showSideBar: true,\n        showConfirm: false,\n        tempQuiz:'初級',\n        tempField:'フィールドを選択してください。',\n        // tempQuizType: '選択',\n        questionDetailInfo:{},\n        formQuestionData:{\n            quiz:'初級',\n            quiz_level:1,\n            question_type:'選択',\n            field:'フィールドを選択してください。',\n            label:'',\n            status:'',\n            max_select:'',\n            image:''\n        },\n        formAnswerDataList:[{\n            label:'',\n            is_correct:false,\n            answer_id:1,\n        },\n        {\n            label:'',\n            is_correct:false,\n            answer_id:2,\n        },\n        {\n            label:'',\n            is_correct:false,\n            answer_id:3,\n        },\n        {\n            label:'',\n            is_correct:false,\n            answer_id:4,\n        },\n        ],\n        formAnswerData:{\n            label:'',\n            is_correct:false,\n            answer_id:0,\n        },\n        formDataError:{\n            noFieldError: \"クイズフィールドを選んでください。\",\n            // highLevelError: \"レベルは１０以内の数字を入力してください。\",\n            noSetAnswerIdError: \"答えの順番を指定してください。\",\n            wrongNumOrderError:\"答えの順番に間違いがあります。\",\n            notSelectOneError: \"正解を一つ選んでください。\",\n            noMoreThanThreeError: \"多答問題は答えを３つ以上指定してください。\",\n            moreThanTwoError:\"多答問題は正解を２つ以上指定してください。\",\n            AllTrueError:\"全ての答えが正解になっています。\"\n            },\n        errorOccurred: false,\n        errorMessage:'',\n        answerNum: 4,\n        handleAnswerLength: 4,\n        formDataReady: false,\n        image: '',\n    }\n}\n\nexport default {\n    components: {\n        Thumbnail,\n        QuizConfirm,\n    },\n    data(){\n        return initialData()\n        \n    },\n    created(){\n        this.$store.dispatch('getQuestionTypeId')\n    },\n    beforeMount(){\n        // this.$store.dispatch('getQuestionTypeId')\n    },\n    mounted(){\n        console.log('mounted at create-question',this.quizNameId,this.fieldNameId)\n    },\n    watch:{\n        answerNum:function(v) {\n            console.log('v',v)\n            if (this.handleAnswerLength > v){\n                this.handleAnswerLength = v\n                this.formAnswerDataList.pop()   \n            } else {\n                const _ = require('lodash');\n                let copyObject = _.cloneDeep(this.formAnswerData)\n                this.formAnswerDataList.push(copyObject)\n                this.handleAnswerLength = v\n            }\n        },\n        tempQuiz:function(v) {\n            console.log('T',v)\n            this.formQuestionData.quiz = v\n            this.formQuestionData.field = this.tempField\n        },\n        // tempQuizType:function(v) {\n        //     this.formQuestionData.question_type = v\n        //     for(let i of this.formAnswerDataList) {\n        //         i.is_correct = ''\n        //     }\n        // }\n    },\n    computed:{\n        quizNameId() {\n            return this.$store.getters.quizNameId\n        },\n        fieldNameId() {\n            return this.$store.getters.fieldNameId\n        },\n        questionTypeId() {\n            return this.$store.getters.questionTypeId\n        },\n        quizFieldList() {\n            let list = [];\n            for (let i of this.fieldNameId) {\n                if (this.convertQuizGradeToId(this.tempQuiz) == i.grade) {\n                    list.push(i.name)\n                }\n            }\n            return list\n        },\n        fixedScroll(){\n            return this.$store.getters.fixedScroll\n        },\n    },\n    // mapGetters(['quizNameId','fieldNameId','questionTypeId']),\n    methods:{\n        // ...mapActions(['getQuestionTypeId']),\n        handleShowSideBar(){\n            console.log(this.showSideBar)\n            this.showSideBar = !this.showSideBar \n            console.log(this.showSideBar)\n        },\n        addAnswer(){\n            this.answerNum += 1\n        },\n        subtractAnswer(){\n            if(this.answerNum > 1){\n                this.answerNum -= 1\n            }\n        },\n        async submitForm(){\n            // await this.setAllFormData()\n            let response =''\n            try{\n                console.log('GO',this.formQuestionData)\n                if(this.formDataReady){\n                    response = await axios({\n                        method: 'post',\n                        url: '/api/questions-create/',                            \n                        data: {\n                            'quiz': this.formQuestionData.quiz,\n                            'label': this.formQuestionData.label,\n                            'field': [this.formQuestionData.field],\n                            'question_type':this.formQuestionData.question_type,\n                            'quiz_level': this.formQuestionData.quiz_level,\n                            'answer': this.formAnswerDataList\n                        },\n                    })\n                }\n                if(this.formQuestionData.image){\n                    console.log(response.data)\n                    const formdata = new FormData\n                    formdata.append('image',this.formQuestionData.image,`${this.formQuestionData.image}.png`)\n                    axios\n                    .patch(\n                        `/api/questions-image-dispatch/${response.data.id}`,formdata)\n                }\n            } catch(e) {\n                console.log('error',e)\n            }\n            this.allResetVars()\n        },\n        setAllFormData(){\n            // need to think about status part regarding of field\n            if (this.formQuestionData.field == this.tempField) {\n                this.errorMessage = this.formDataError.noFieldError\n                this.setTimeForNotification()\n                return \n            }\n            if(this.formQuestionData.question_type == \"並び替え\") {\n                this.formAnswerDataList.forEach((elem, index) => {\n                    this.formAnswerDataList[index].is_correct = false\n                })\n                let answerIdList = []\n                this.formAnswerDataList.forEach((elem, index) => {\n                    answerIdList.push(elem.answer_id)\n                    if(!this.formAnswerDataList[index].answer_id) {\n                        this.errorMessage = this.formDataError.noSetAnswerIdError\n                        this.setTimeForNotification()\n                        return \n                    } \n                })\n                const answerIdListSet = [... new Set(answerIdList)];\n                if(answerIdListSet.length == answerIdList.length){\n                    this.formDataReady = true\n                } else {\n                    this.errorMessage = this.formDataError.wrongNumOrderError\n                    this.setTimeForNotification()\n                    return \n                }\n            } else {\n                let counter = 0\n                for(let i of this.formAnswerDataList){\n                    if(i.is_correct) {\n                        counter += 1\n                    }\n                }\n                if(this.formQuestionData.question_type == \"選択\") {\n                    if(counter !=1) {\n                        this.errorMessage = this.formDataError.notSelectOneError\n                        this.setTimeForNotification()\n                        return \n                    } else {\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = 0\n                            }\n                        })\n                        this.formDataReady = true\n                    }\n                }\n                else if(this.formQuestionData.question_type == \"多答\") {\n                    if(this.formAnswerDataList.length < 3) {\n                        this.errorMessage = this.formDataError.noMoreThanThreeError\n                        this.setTimeForNotification()\n                        return\n                    } else if(counter <= 0 || counter == 1) {\n                        this.errorMessage = this.formDataError.moreThanTwoError\n                        this.setTimeForNotification()\n                        return\n                    } else if(this.formAnswerDataList.length == counter) {\n                        this.errorMessage = this.formDataError.AllTrueError\n                        this.setTimeForNotification()\n                        return\n                    } else {\n                        this.formQuestionData.max_select = counter\n                        this.formAnswerDataList.forEach((elem,index) =>{\n                            if(elem.answer_id) {\n                                this.formAnswerDataList[index].answer_id = 0\n                            }\n                        })\n                        this.formDataReady = true\n                    }\n                }\n            }\n            this.formQuestionData.question_type = this.convertQuizTypeToId(this.formQuestionData.question_type)\n            this.formQuestionData.quiz = this.convertQuizGradeToId(this.formQuestionData.quiz)\n            this.formQuestionData.field = this.convertQuizFieldToId(this.formQuestionData.field)\n            console.log(\"set\", this.formQuestionData)\n        },\n        setTimeForNotification(){\n            this.errorOccurred = true\n            setTimeout(this.errorOccurredFalse, 3000);\n        },\n        errorOccurredFalse(){\n            this.errorOccurred = false\n        },\n        convertQuizGradeToId(grade) {\n            for (let i of this.quizNameId){\n                if (i.name == grade){\n                    return i.id\n                }\n            }\n        },\n        convertQuizTypeToId(type) {\n            for (let i of this.questionTypeId){\n                if (i.name == type){\n                    return i.id\n                }\n            }\n        },\n        convertQuizFieldToId(field) {\n            for (let i of this.fieldNameId){\n                if (i.name == field){\n                    return i.id\n                }\n            }\n        },\n        handleShowThumbnail(){\n            this.showThumbnail = true\n        },\n        showThumbnailFalse(){\n            this.showThumbnail = false\n        },\n        setImageBlob(blob,url) {\n            console.log('set-blob',blob)\n            this.image = url\n            this.questionDetailInfo.image = url\n            this.formQuestionData.image = blob\n        },\n        showConfirmTrue(){\n            this.formDataReady = false\n            this.setQuestionDetailInfo()\n            this.setAllFormData()\n            if(this.formDataReady){\n                this.$store.commit('fixedScrollTrue')\n                this.showConfirm = true\n            }\n        },\n        showConfirmFalse() {\n            this.showConfirm = false\n            this.$store.commit('fixedScrollFalse')\n        },\n        allResetVars() {\n            Object.assign(this.$data, initialData())\n        },\n        setQuestionDetailInfo() {\n            console.log('info')\n            this.questionDetailInfo.grade = this.formQuestionData.quiz\n            this.questionDetailInfo.level = this.formQuestionData.quiz_level\n            this.questionDetailInfo.question_type = this.formQuestionData.question_type\n            this.questionDetailInfo.field = this.formQuestionData.field\n            this.questionDetailInfo.label = this.formQuestionData.label\n            this.questionDetailInfo.answers = this.formAnswerDataList\n            console.log('doneinfo')\n        },\n        chancelAction() {\n            this.tempQuiz = this.questionDetailInfo.grade\n            this.formQuestionData.quiz = this.questionDetailInfo.grade\n            this.formQuestionData.question_type = this.questionDetailInfo.question_type\n            this.formQuestionData.field = this.questionDetailInfo.field\n        }\n    },\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n\n.po{\n    color: white;\n}\n.create-question-wrapper{\n    width: 100%;\n    margin: 0;margin-top: 2rem;\n    display: flex;\n    justify-content: center;\n    .create-question-container{\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n}\n.field-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    .field{\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        // border: solid red;\n        .input-box{\n            display: flex;\n            font-size: 1.2rem;\n            width: 80%;\n            justify-content: center;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            min-height: 40px;\n            background: $back-white;\n            // padding: 0.2rem 0.5rem;\n            overflow:hidden;\n            .each-title-container{\n                flex-basis: 30%;\n                min-width: 40%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-right: solid $base-color;\n                background: $dark-blue;                \n                .each-title{\n                    color: $base-white;\n                    width: 100px;\n                    font-weight: bold;\n                    // font-size: 1rem;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .text-box{\n                flex-basis: 70%;\n                width: 30%;\n                height: auto;\n                background: transparent;\n                border: none;\n                margin-right: 1rem;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: $back-white;\n                .option{\n                    font-weight: bold;\n                }\n            }\n            .text-box:focus{\n                outline: none;\n            }\n            .level{\n                display: flex;\n            }\n        }\n    }\n    .texarea-field{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        .texarea-box{\n            width: 80%;\n            .each-title-container{\n                display: flex;\n                justify-content: center;\n                .each-title{\n                    width: 40%;\n                    border-top: solid $base-color;\n                    border-right: solid $base-color;\n                    border-left: solid $base-color;\n                    background: $dark-blue;\n                    color: $base-white;\n                    font-weight: bold;\n                    border-radius: 0.5rem 0.5rem 0 0;\n                }\n            }\n             .text-box{\n                width: 100%;\n                background: $back-white;\n                height: auto;\n                min-height: 100px;\n                border: 0.1rem solid $base-color;\n                border-radius: 1vh;\n                padding: 1rem;\n                resize: none;\n                transition: 0.5s;\n            }\n            .text-box:focus{\n                outline: none;\n                border: solid $middle-blue;\n            }\n        }\n    }\n    .answer-wrapper{\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        width: 100%;\n        .answer-title-container{\n            display: flex;\n            align-items: center;\n            .fa-minus{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-minus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n            .answer-title{\n                border: solid $base-color;\n                border-radius: 0.5rem;\n                padding-right: 0.5rem;\n                padding-left: 0.5rem;\n                background: $dark-blue;\n                margin-bottom: 0.2rem;\n                color: $base-white;\n                font-weight: bold;\n            }\n            .fa-plus{\n                margin-left: 0.5rem;\n                border: solid gray;\n                border-radius: 50vh;\n                padding: 0.1rem;\n                background: $lite-gray;\n                font-size: 0.8rem;\n                transition: .5s;\n            }\n            .fa-plus:hover{\n                border: solid $dark-blue;\n                color: $base-color;\n            }\n        }\n        .answer-container{\n            display: flex;\n            align-items: center;\n            // justify-content: center;\n            min-width: 80%;\n            border: solid $base-color;\n            border-radius: 0.5rem;\n            background: $back-white;\n            margin-bottom: 0.4rem;\n            .num-con{\n                flex-basis: 10%;\n                .num {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    width: 2rem;\n                    height: 2rem;\n                    background: $dark-blue;\n                    border-radius: 50vh;\n                    border: solid $base-color;\n                    color: $base-white;\n                    font-weight: bold;\n                    margin: 0.2rem 0.5rem;\n                }\n            }\n            .answer-label{\n                height: 2rem;\n                flex-basis: 70%;\n                padding: 0 0.5rem;\n            }\n            .right-side-answer-container{\n                flex-basis: 16%;\n                display: flex;\n                justify-content: flex-end;\n                width: 10%;\n                padding-right: 0.1rem;\n                // margin-right: 1rem;\n                .checkbox-container{\n                    margin-left: 1rem;\n                    .checkbox{\n                    }\n                }\n                .correct-order-container{\n                    margin-left: 0.5rem;\n                }\n            }\n        }\n        .image-bottun{\n            margin-top: 1rem;\n            color: $lite-gray;\n            border: solid gray;\n            padding: 0.1rem 0.7rem;\n            transition: .5s;\n        }\n        .image-bottun:hover {\n            border: solid $base-color;\n        }\n        .image-container{\n            display: flex;\n            justify-content: center;\n            width: 100%;\n            margin-top: 1rem;\n            .image{\n                width: 40%;\n                // height: 40%;\n            }\n        }\n    }\n    .space-height{\n        min-height: 3rem;\n    }\n    // .additional-field-wrapper{\n    //     width: 100%;\n    //     display: flex;\n    //     justify-content: center;\n    //     flex-direction: column;\n    //     align-items: center;\n    //     .additional-field{\n    //         display: flex;\n    //         flex-direction: column;\n    //         align-items: flex-end;\n    //         width: 80%;\n    //         .input-box{\n    //             display: flex;\n    //             font-size: 1.2rem;\n    //             width: 80%;\n    //             justify-content: center;\n    //             border: solid $base-color;\n    //             border-radius: 0.5rem;\n    //             min-height: 20px;\n    //             background: $back-white;\n    //             // padding: 0.2rem 0.5rem;\n    //             overflow:hidden;\n    //             .each-title-container{\n    //                 flex-basis: 30%;\n    //                 display: flex;\n    //                 align-items: center;\n    //                 justify-content: center;\n    //                 border-right: solid $base-color;\n    //                 background: $dark-blue;                \n    //                 .each-title{\n    //                     color: $base-white;\n    //                     width: 100px;\n    //                     font-weight: bold;\n    //                     margin: 0.2rem 0.5rem;\n    //                 }\n    //             }\n    //             .text-box{\n    //                 flex-basis: 70%;\n    //                 background: transparent;\n    //                 border: none;\n    //                 margin-right: 1rem;\n    //                 margin-left: 1rem;\n    //                 font-size: 1rem;\n    //                 background: $back-white;\n    //                 .option{\n    //                     font-weight: bold;\n    //                 }\n    //             }\n    //             .text-box:focus{\n    //                 outline: none;\n    //             }\n    //             .level{\n    //                 display: flex;\n    //             }\n    //         }\n    //     }\n    // }\n}\n</style>"]},"metadata":{},"sourceType":"module"}