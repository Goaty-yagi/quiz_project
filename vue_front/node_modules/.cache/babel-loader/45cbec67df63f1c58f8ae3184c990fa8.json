{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport createPersistedState from 'vuex-persistedstate';\nimport Cookies from 'js-cookie';\nimport { auth } from '@/firebase/config';\nimport { router } from \"@/main.js\";\nimport axios from 'axios';\nimport { createUserWithEmailAndPassword, fetchSignInMethodsForEmail, sendEmailVerification, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail, GoogleAuthProvider, signInWithPopup, getAuth } from 'firebase/auth';\nimport store from '..';\nexport default {\n  namespace: true,\n  // plugins: [\n  //     createPersistedState({\n  //       key: 'signupKey',  // 設定しなければ'vuex'\n  //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n  //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n  //     })],\n  state: {\n    username: '',\n    email: '',\n    email2: '',\n    country: '',\n    password: '',\n    user: null,\n    registeredUser: false,\n    djangoUser: null,\n    UID: '',\n    fasvoriteQuestion: '',\n    emailVerified: null,\n    authIsReady: false,\n    checkedEmail: null,\n    accountURL: 'http://localhost:8080/',\n    actionCodeSettings: {\n      url: null,\n      handleCodeInApp: true\n    },\n    tempUser: {\n      test: false,\n      statusList: '',\n      grade: '',\n      level: ''\n    },\n    favoriteQuestion: '',\n    logger: {\n      actualError: '',\n      message: '',\n      name: ''\n    },\n    userInfo: '',\n    exceptUserInfo: '',\n    beingException: false,\n    reloadForException: false,\n    apiError: {\n      // this is for connection Error\n      django: false,\n      firebase: false,\n      ipinfo: false,\n      any: false\n    },\n    onSigningup: false,\n    myQuestion: '',\n    myQuizInfo: {\n      id: '',\n      max: ''\n    },\n    gradeDict: {\n      '超初級': 0,\n      '初級': 10,\n      '中級': 20,\n      '上級': 30\n    }\n  },\n  getters: {\n    getUID: function getUID(state) {\n      return state.UID;\n    },\n    getUser: function getUser(state) {\n      return state.user;\n    },\n    getDjangouser: function getDjangouser(state) {\n      return state.djangoUser;\n    },\n    getEmailVerified: function getEmailVerified(state) {\n      return state.emailVerified;\n    },\n    getTempUser: function getTempUser(state) {\n      return state.tempUser;\n    },\n    logger: function logger(state) {\n      return state.logger;\n    },\n    onSigningup: function onSigningup(state) {\n      return state.onSigningup;\n    },\n    getMyQuestion: function getMyQuestion(state) {\n      return state.myQuestion;\n    },\n    getMyQuizInfo: function getMyQuizInfo(state) {\n      return state.myQuizInfo;\n    },\n    quizNameIdInSignup: function quizNameIdInSignup(state, getters, rootState) {\n      return rootState.quiz.quizNameId;\n    }\n  },\n  mutations: {\n    getUsername: function getUsername(state, item) {\n      state.username = item;\n    },\n    getEmail: function getEmail(state, item) {\n      state.email = item;\n    },\n    getEmail2: function getEmail2(state, item) {\n      state.email2 = item;\n    },\n    getCountry: function getCountry(state, item) {\n      state.country = item;\n    },\n    getPassword: function getPassword(state, item) {\n      state.password = item;\n    },\n    setUser: function setUser(state, payload) {\n      state.user = payload;\n\n      if (state.user) {\n        state.registeredUser = true;\n        state.UID = state.user.uid;\n      }\n\n      console.log('user state changed:', state.user);\n    },\n    setAuthIsReady: function setAuthIsReady(state, payload) {\n      state.authIsReady = payload;\n      console.log('setauth is changed:', state.user);\n    },\n    setDjangoUser: function setDjangoUser(state, payload) {\n      state.djangoUser = payload;\n      console.log('set Django user', state.djangoUser);\n    },\n    emailVerifiedHandler: function emailVerifiedHandler(state, payload) {\n      state.emailVerified = payload;\n      console.log('emailV chainged', state.emailVerified);\n    },\n    checkEmailHandler: function checkEmailHandler(state, payload) {\n      state.checkedEmail = payload;\n    },\n    setTempUser: function setTempUser(state, payload) {\n      state.tempUser.test = true;\n      state.tempUser.statusList = payload.status;\n      state.tempUser.grade = payload.grade;\n      state.tempUser.level = payload.level;\n      console.log('set-temp-user', state.tempUser);\n    },\n    setTempUserReset: function setTempUserReset(state) {\n      state.tempUser.test = false;\n      state.tempUser.statusList = '', state.tempUser.grade = '', state.tempUser.level = '';\n      Cookies.remove('tempKey');\n      console.log('reset-TempUser', state.tempUser);\n    },\n    tempUserTestTrue: function tempUserTestTrue(state) {\n      state.tempUser.test = true;\n    },\n    resetQuizKeyStorage: function resetQuizKeyStorage(state) {\n      // this is for log out\n      state.UID = null;\n      state.djangoUser = null;\n      state.emailVerified = null;\n      state.beingException = false, state.reloadForException = false;\n      state.apiError.django = false;\n      state.apiError.firebase = false;\n      state.apiError.ipinfo = false;\n      state.apiError.any = false;\n      state.myQuizInfo.id = '';\n      state.myQuizInfo.max = '';\n      state.myQuestion = '';\n      state.registeredUser = false;\n      console.log('all-Reset');\n    },\n    setLogger: function setLogger(state, payload) {\n      state.logger.actualError = payload.actualError;\n      state.logger.name = payload.name;\n      state.logger.message = payload.message;\n    },\n    setUserInfo: function setUserInfo(state, payload) {\n      state.userInfo = payload;\n    },\n    checkBeingException: function checkBeingException(state, payload) {\n      if (state.user && !state.djangoUser) {\n        state.beingException = true;\n        console.log('set-being-exception', state.beingException);\n      }\n    },\n    reloadForExceptionTrue: function reloadForExceptionTrue(state) {\n      if (state.user && !state.djangoUser) {\n        state.reloadForException = true;\n        console.log('setRUFEtrue');\n      }\n    },\n    reloadForExceptionFalse: function reloadForExceptionFalse(state) {\n      state.reloadForException = false;\n      console.log('setRUFEfalse');\n    },\n    handleapiError: function handleapiError(state, payload) {\n      if (payload == 'django') {\n        state.apiError.django = true;\n      } else if (payload == 'firebase') {\n        state.apiError.firebase = true;\n      } else if (payload == 'ipinfo') {\n        state.apiError.ipinfo = true;\n      }\n    },\n    checkDjangoError: function checkDjangoError(state, payload) {\n      console.log('checkDE', payload);\n\n      if (state.apiError.django) {\n        router.push({\n          name: 'ConnectionError'\n        });\n      } else if (payload == \"Network Error\") {\n        state.apiError.django = true;\n        state.apiError.any = true;\n      } else {\n        router.push({\n          name: 'NotFound404'\n        });\n      }\n    },\n    resetDjangoError: function resetDjangoError(state) {\n      state.apiError.django = false;\n      state.apiError.any = false;\n    },\n    handleOnSigningup: function handleOnSigningup(state) {\n      state.onSigningup = !state.onSigningup;\n    },\n    deleteMyQuestion: function deleteMyQuestion(state, payload) {\n      console.log(\"before\", state.myQuestion, payload);\n      state.myQuestion = state.myQuestion.filter(function (item) {\n        console.log('item', item);\n        return item.question.id != payload;\n      });\n      console.log(\"after\", state.myQuestion);\n    },\n    addMyQuestion: function addMyQuestion(state, payload) {\n      console.log(\"before\", state.myQuestion, payload);\n      state.myQuestion.push(payload);\n      console.log(\"after\", state.myQuestion);\n    },\n    updateQuizTaker: function updateQuizTaker(state, payload) {\n      state.djangoUser.quiz_taker[0].grade = payload.grade;\n      state.djangoUser.quiz_taker[0].level = payload.level;\n      console.log('set', state.djangoUser);\n    },\n    updateQuizTakerMax: function updateQuizTakerMax(state, payload) {\n      // this is for session storage only to reduce API hit\n      state.djangoUser.quiz_taker[0].max_level = state.djangoUser.quiz_taker[0].level;\n      state.djangoUser.quiz_taker[0].max_grade = payload;\n      console.log('set_max', state.djangoUser);\n    }\n  },\n  actions: {\n    signupDjangoUser: function signupDjangoUser(_ref, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var state, commit, logger;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _ref.state, commit = _ref.commit;\n                console.log(\"INSDU\", payload);\n                _context.prev = 2;\n                _context.next = 5;\n                return axios({\n                  method: 'post',\n                  url: '/api/user/',\n                  data: payload\n                }).then(function (response) {\n                  commit('setDjangoUser', response.data);\n                });\n\n              case 5:\n                state.beingException = false;\n                commit(\"resetDjangoError\");\n                commit(\"setTempUserReset\");\n                state.userInfo = '';\n                _context.next = 17;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                state.userInfo = payload;\n                logger = {\n                  message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n                  name: window.location.pathname,\n                  actualError: _context.t0\n                };\n                commit('setLogger', logger);\n                commit(\"checkDjangoError\", _context.t0.message);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }))();\n    },\n    signupDjangoUserForException: function signupDjangoUserForException(_ref2, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var state, commit, logger, _logger, _logger2;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref2.state, commit = _ref2.commit;\n                // this is only for unsub below. dont use other part\n                console.log(\"INSDUFX\");\n\n                if (!(!state.djangoUser && state.beingException)) {\n                  _context2.next = 48;\n                  break;\n                }\n\n                if (!state.userInfo) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                _context2.prev = 4;\n                _context2.next = 7;\n                return axios({\n                  method: 'post',\n                  url: '/api/user/',\n                  data: state.userInfo\n                }).then(function (response) {\n                  commit('setDjangoUser', response.data);\n                });\n\n              case 7:\n                state.beingException = false;\n                commit('resetDjangoError');\n                commit(\"setTempUserReset\");\n                state.userInfo = '';\n                _context2.next = 20;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.log('catchdayo', _context2.t0.message);\n                commit(\"checkDjangoError\", _context2.t0.message);\n                logger = {\n                  message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                  name: window.location.pathname,\n                  actualError: _context2.t0\n                };\n                commit('setLogger', logger);\n                commit(\"checkDjangoError\", _context2.t0.message);\n\n              case 20:\n                _context2.next = 48;\n                break;\n\n              case 22:\n                _context2.prev = 22;\n                console.log('NO TEMP');\n                _context2.next = 26;\n                return axios.get(\"https://ipinfo.io/json?token=32e16159d962c5\").then(function (response) {\n                  var IP = response.data;\n                  state.exceptUserInfo = {\n                    UID: state.user.uid,\n                    name: '名前を変更しよう',\n                    email: state.user.email,\n                    ip_data: [{\n                      city: IP.city,\n                      ip: IP.ip,\n                      loc: IP.loc,\n                      org: IP.org,\n                      postal: IP.postal,\n                      region: IP.region,\n                      timezone: IP.timezone,\n                      country: IP.country\n                    }]\n                  };\n                });\n\n              case 26:\n                _context2.next = 34;\n                break;\n\n              case 28:\n                _context2.prev = 28;\n                _context2.t1 = _context2[\"catch\"](22);\n                commit(\"checkDjangoError\", _context2.t1.message);\n                _logger = {\n                  message: \"in store/signup.signup.DjangoUserForException. ipinfo error\",\n                  name: window.location.pathname,\n                  actualError: _context2.t1\n                };\n                commit('setLogger', _logger);\n                router.push({\n                  name: 'NotFound404'\n                });\n\n              case 34:\n                _context2.prev = 34;\n                console.log('try non_userINFO', state.exceptUserInfo); // throw new Error('could not sent validation')\n\n                _context2.next = 38;\n                return axios({\n                  method: 'post',\n                  url: '/api/user/',\n                  data: state.exceptUserInfo\n                });\n\n              case 38:\n                state.beingException = false;\n                commit(\"resetDjangoError\");\n                _context2.next = 48;\n                break;\n\n              case 42:\n                _context2.prev = 42;\n                _context2.t2 = _context2[\"catch\"](34);\n                commit(\"checkDjangoError\", _context2.t2.message);\n                _logger2 = {\n                  message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                  name: window.location.pathname,\n                  actualError: _context2.t2\n                };\n                commit('setLogger', _logger2);\n                router.push({\n                  name: 'NotFound404'\n                });\n\n              case 48:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 13], [22, 28], [34, 42]]);\n      }))();\n    },\n    getDjangoUser: function getDjangoUser(_ref3) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var state, commit, dispatch, logger;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = _ref3.state, commit = _ref3.commit, dispatch = _ref3.dispatch;\n\n                if (!(state.user && !state.beingException)) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                console.log('GDU_pass', state.beingException);\n                _context3.prev = 3;\n                _context3.next = 6;\n                return axios.get(\"/api/user/\".concat(state.user.uid)).then(function (response) {\n                  commit('setDjangoUser', response.data);\n                  state.myQuestion = response.data.my_quiz[0].my_question;\n                  state.myQuizInfo.id = response.data.my_quiz[0].id;\n                  state.myQuizInfo.max = response.data.my_quiz[0].max_num;\n                  console.log(\"MQ\", state.myQuestion);\n                });\n\n              case 6:\n                commit(\"resetDjangoError\");\n                _context3.next = 15;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log('catch');\n                logger = {\n                  message: \"in store/signup.getDjangoUser. couldn't get django user\",\n                  name: window.location.pathname,\n                  actualError: _context3.t0\n                };\n                commit('setLogger', logger);\n                commit(\"checkDjangoError\", _context3.t0.message);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 9]]);\n      }))();\n    },\n    getFavoriteQuestion: function getFavoriteQuestion(_ref4) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var state, commit, questionId, _iterator, _step, i;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = _ref4.state, commit = _ref4.commit;\n                state.favoriteQuestion = null;\n\n                if (!state.djangoUser) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                _context4.prev = 3;\n                questionId = [];\n                _iterator = _createForOfIteratorHelper(state.djangoUser.favorite_question[0].question);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    i = _step.value;\n                    questionId.push(i);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                if (!questionId[0]) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _context4.next = 10;\n                return axios.get(\"/api/board/question-favorite?question_id=\".concat(questionId)).then(function (response) {\n                  state.favoriteQuestion = response.data;\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 10:\n                _context4.next = 14;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](3);\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[3, 12]]);\n      }))();\n    },\n    signup: function signup(context, _ref5) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var email, password, ref, logger;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                email = _ref5.email, password = _ref5.password;\n                console.log('signup in');\n                _context5.prev = 2;\n                _context5.next = 5;\n                return createUserWithEmailAndPassword(auth, email, password);\n\n              case 5:\n                ref = _context5.sent;\n                context.state.actionCodeSettings['url'] = context.state.accountURL;\n                sendEmailVerification(ref.user, context.state.actionCodeSettings);\n                context.commit('setUser', ref.user);\n                context.commit('emailVerifiedHandler', ref.user.emailVerified);\n                console.log('signup is done', auth.currentUser);\n                _context5.next = 18;\n                break;\n\n              case 13:\n                _context5.prev = 13;\n                _context5.t0 = _context5[\"catch\"](2);\n                logger = {\n                  message: \"in store/signup.signup. couldn't signup firebase user\",\n                  name: window.location.pathname,\n                  actualError: _context5.t0\n                };\n                context.commit('setLogger', logger);\n                router.push({\n                  name: 'NotFound404'\n                });\n\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[2, 13]]);\n      }))();\n    },\n    googleLogin: function googleLogin() {\n      var provider = new GoogleAuthProvider();\n      var auth = getAuth();\n      signInWithPopup(auth, provider).then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var credential = GoogleAuthProvider.credentialFromResult(result);\n        var token = credential.accessToken; // The signed-in user info.\n\n        var user = result.user;\n        console.log('googlrUser', user); // ...\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The AuthCredential type that was used.\n\n        var credential = GoogleAuthProvider.credentialFromError(error); // ...\n      });\n    },\n    sendEmailVerify: function sendEmailVerify(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                context.state.actionCodeSettings['url'] = context.state.accountURL;\n                console.log('sendEmail', context.state.user, context.state.actionCodeSettings);\n                _context6.next = 4;\n                return sendEmailVerification(context.state.user, context.state.actionCodeSettings);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    sentValidation: function sentValidation(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                console.log('insentV');\n                _context7.prev = 1;\n                _context7.next = 4;\n                return context.state.user.sendEmailVerification();\n\n              case 4:\n                _context7.next = 10;\n                break;\n\n              case 6:\n                _context7.prev = 6;\n                _context7.t0 = _context7[\"catch\"](1);\n                console.log('error in sent');\n                throw new Error('could not sent validation');\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[1, 6]]);\n      }))();\n    },\n    login: function login(context, _ref6) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var email, password, ref;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                email = _ref6.email, password = _ref6.password;\n                // context.commit('setIsLoading', true, {root:true})\n                console.log('in_login');\n                _context8.prev = 2;\n                _context8.next = 5;\n                return signInWithEmailAndPassword(auth, email, password);\n\n              case 5:\n                ref = _context8.sent;\n                _context8.next = 12;\n                break;\n\n              case 8:\n                _context8.prev = 8;\n                _context8.t0 = _context8[\"catch\"](2);\n                console.log('error');\n                throw new Error('could not complite signin');\n\n              case 12:\n                if (!ref) {\n                  _context8.next = 21;\n                  break;\n                }\n\n                console.log(\"IF YES\");\n                context.commit('setUser', ref.user);\n                context.dispatch('getDjangoUser');\n                context.commit(\"setTempUserReset\");\n                context.commit('emailVerifiedHandler', ref.user.emailVerified);\n                console.log(context.state.user, context.state.emailVerified);\n                _context8.next = 23;\n                break;\n\n              case 21:\n                console.log('error in sign in');\n                throw new Error('could not complite signin');\n\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[2, 8]]);\n      }))();\n    },\n    checkEmail: function checkEmail(context, email) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var ref;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return fetchSignInMethodsForEmail(auth, email);\n\n              case 3:\n                ref = _context9.sent;\n\n                if (ref == 'password') {\n                  context.commit('checkEmailHandler', false);\n                  console.log('already in use');\n                } else {\n                  context.commit('checkEmailHandler', true);\n                  console.log('you can use it');\n                }\n\n                _context9.next = 11;\n                break;\n\n              case 7:\n                _context9.prev = 7;\n                _context9.t0 = _context9[\"catch\"](0);\n                console.log('error in sign up');\n                throw new Error('could not check email');\n\n              case 11:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 7]]);\n      }))();\n    },\n    passwordReset: function passwordReset(context, email) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                console.log('passreset action', email);\n                _context10.prev = 1;\n                context.state.actionCodeSettings['url'] = context.state.accountURL;\n                _context10.next = 5;\n                return sendPasswordResetEmail(auth, email, context.state.actionCodeSettings);\n\n              case 5:\n                console.log('password reset sent');\n                _context10.next = 12;\n                break;\n\n              case 8:\n                _context10.prev = 8;\n                _context10.t0 = _context10[\"catch\"](1);\n                console.log('error in pass reset');\n                throw new Error('could not sent pass reset');\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[1, 8]]);\n      }))();\n    },\n    logout: function logout(context) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return signOut(auth);\n\n              case 2:\n                context.commit('setUser', null);\n                context.commit('resetQuizKeyStorage');\n                router.push({\n                  name: 'Home'\n                });\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }))();\n    },\n    updateQuizTakerAction: function updateQuizTakerAction(_ref7, payload) {\n      var state = _ref7.state,\n          commit = _ref7.commit,\n          getters = _ref7.getters;\n      console.log('inUQTA', getters);\n      commit('updateQuizTaker', payload);\n      console.log('UPaction', getters.quizNameIdInSignup);\n\n      var _iterator2 = _createForOfIteratorHelper(getters.quizNameIdInSignup),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var i = _step2.value;\n\n          if (i.id == payload.grade) {\n            if (state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] < state.gradeDict[i.name]) {\n              commit('updateQuizTakerMax', i.name);\n              break;\n            } else if (state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] == state.gradeDict[i.name]) {\n              if (state.djangoUser.quiz_taker[0].max_level < payload.level) {\n                commit('updateQuizTakerMax', i.name);\n                break;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }\n};\nvar unsub = onAuthStateChanged(auth, function (user) {\n  store.commit('setAuthIsReady', true);\n  store.commit('setUser', user);\n  console.log('unsub', user);\n\n  if (user) {\n    store.dispatch('getDjangoUser');\n    store.commit('emailVerifiedHandler', user.emailVerified);\n    store.dispatch('signupDjangoUserForException');\n  } else {\n    store.commit('resetQuizKeyStorage');\n  }\n\n  unsub();\n});","map":{"version":3,"names":["createPersistedState","Cookies","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","GoogleAuthProvider","signInWithPopup","getAuth","store","namespace","state","username","email","email2","country","password","user","registeredUser","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","tempUser","test","statusList","grade","level","favoriteQuestion","logger","actualError","message","name","userInfo","exceptUserInfo","beingException","reloadForException","apiError","django","firebase","ipinfo","any","onSigningup","myQuestion","myQuizInfo","id","max","gradeDict","getters","getUID","getUser","getDjangouser","getEmailVerified","getTempUser","getMyQuestion","getMyQuizInfo","quizNameIdInSignup","rootState","quiz","quizNameId","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","setDjangoUser","emailVerifiedHandler","checkEmailHandler","setTempUser","status","setTempUserReset","remove","tempUserTestTrue","resetQuizKeyStorage","setLogger","setUserInfo","checkBeingException","reloadForExceptionTrue","reloadForExceptionFalse","handleapiError","checkDjangoError","push","resetDjangoError","handleOnSigningup","deleteMyQuestion","filter","question","addMyQuestion","updateQuizTaker","quiz_taker","updateQuizTakerMax","max_level","max_grade","actions","signupDjangoUser","commit","method","data","then","response","window","location","pathname","signupDjangoUserForException","get","IP","ip_data","city","ip","loc","org","postal","region","timezone","getDjangoUser","dispatch","my_quiz","my_question","max_num","getFavoriteQuestion","questionId","favorite_question","i","catch","error","signup","context","ref","currentUser","googleLogin","provider","result","credential","credentialFromResult","token","accessToken","errorCode","code","errorMessage","credentialFromError","sendEmailVerify","sentValidation","Error","login","checkEmail","passwordReset","logout","updateQuizTakerAction","unsub"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport Cookies from 'js-cookie'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  GoogleAuthProvider,\n  signInWithPopup,\n  getAuth,\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        registeredUser: false,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n        },\n        tempUser: {\n            test: false,\n            statusList:'',\n            grade:'',\n            level:''\n        },\n        favoriteQuestion:'',\n        logger:{\n            actualError:'',\n            message:'',\n            name:''\n        },\n        userInfo:'',\n        exceptUserInfo:'',\n        beingException:false,\n        reloadForException: false,\n        apiError:{\n            // this is for connection Error\n            django: false,\n            firebase: false,\n            ipinfo: false,\n            any: false\n        },\n        onSigningup:false,\n        myQuestion:'',\n        myQuizInfo:{\n            id:'',\n            max:'',\n        },\n        gradeDict:{\n            '超初級':0,\n            '初級':10,\n            '中級':20,\n            '上級':30\n        }\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getUser(state){\n            return state.user\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        },\n        getEmailVerified(state){\n            return state.emailVerified\n        },\n        getTempUser(state){\n            return state.tempUser\n        },\n        logger(state){\n            return state.logger\n        },\n        onSigningup(state){\n            return state.onSigningup\n        },\n        getMyQuestion(state){\n            return state.myQuestion\n        },\n        getMyQuizInfo(state){\n            return state.myQuizInfo\n        },\n        quizNameIdInSignup(state, getters, rootState){\n            return rootState.quiz.quizNameId\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            if(state.user){\n                state.registeredUser = true\n                state.UID = state.user.uid\n            }\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        setDjangoUser(state,payload){\n            state.djangoUser = payload\n            console.log('set Django user',state.djangoUser)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        },\n        setTempUser(state,payload){\n            state.tempUser.test = true\n            state.tempUser.statusList = payload.status\n            state.tempUser.grade = payload.grade\n            state.tempUser.level = payload.level\n            console.log('set-temp-user', state.tempUser)\n        },\n        setTempUserReset(state){\n            state.tempUser.test = false\n            state.tempUser.statusList = '',\n            state.tempUser.grade = '',\n            state.tempUser.level = ''\n            Cookies.remove('tempKey')\n            console.log('reset-TempUser',state.tempUser)\n        },\n        tempUserTestTrue(state){\n            state.tempUser.test = true\n        },\n        resetQuizKeyStorage(state){\n            // this is for log out\n            state.UID = null\n            state.djangoUser = null\n            state.emailVerified = null\n            state.beingException = false,\n            state.reloadForException = false\n            state.apiError.django = false\n            state.apiError.firebase = false\n            state.apiError.ipinfo = false\n            state.apiError.any = false\n            state.myQuizInfo.id = ''\n            state.myQuizInfo.max = ''\n            state.myQuestion = ''\n            state.registeredUser = false\n            console.log('all-Reset')\n        },\n        setLogger(state,payload){\n            state.logger.actualError = payload.actualError\n            state.logger.name = payload.name\n            state.logger.message = payload.message\n        },\n        setUserInfo(state,payload){\n            state.userInfo = payload\n        },\n        checkBeingException(state,payload){\n            if(state.user&&!state.djangoUser){\n                state.beingException = true\n                console.log('set-being-exception',state.beingException)\n            }\n        },\n        reloadForExceptionTrue(state){\n            if(state.user&&!state.djangoUser){\n                state.reloadForException = true\n                console.log('setRUFEtrue')\n            }\n        },\n        reloadForExceptionFalse(state){\n            state.reloadForException = false\n            console.log('setRUFEfalse')\n        },\n        handleapiError(state,payload){\n            if(payload=='django'){\n                state.apiError.django = true\n            }\n            else if(payload=='firebase'){\n                state.apiError.firebase = true\n            }\n            else if(payload=='ipinfo'){\n                state.apiError.ipinfo = true\n            }\n        },\n        checkDjangoError(state,payload){\n            console.log('checkDE',payload)\n            if(state.apiError.django){\n                router.push({ name: 'ConnectionError' })\n            }\n            else if(payload==\"Network Error\"){\n                state.apiError.django = true\n                state.apiError.any = true\n            }else{\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        resetDjangoError(state){\n            state.apiError.django = false\n            state.apiError.any = false\n        },\n        handleOnSigningup(state){\n            state.onSigningup = !state.onSigningup\n        },\n        deleteMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion = state.myQuestion.filter(item =>{\n                console.log('item',item)\n                return (item.question.id !=payload)\n            })\n            console.log(\"after\",state.myQuestion)\n        },\n        addMyQuestion(state,payload){\n            console.log(\"before\",state.myQuestion,payload)\n            state.myQuestion.push(payload)\n            console.log(\"after\",state.myQuestion)\n        },\n        updateQuizTaker(state,payload) {\n            state.djangoUser.quiz_taker[0].grade = payload.grade\n            state.djangoUser.quiz_taker[0].level = payload.level\n            console.log('set', state.djangoUser)\n        },\n        updateQuizTakerMax(state, payload) {\n            // this is for session storage only to reduce API hit\n            state.djangoUser.quiz_taker[0].max_level = state.djangoUser.quiz_taker[0].level\n            state.djangoUser.quiz_taker[0].max_grade = payload\n                    \n            console.log('set_max', state.djangoUser)\n        },\n    },\n    actions:{\n        async signupDjangoUser( {state, commit},payload ){\n            console.log(\"INSDU\",payload)\n            try{\n                // throw new Error('could not sent validation')\n                await axios({\n                    method: 'post',\n                    url: '/api/user/',\n                    data: payload\n                })\n                .then(response => {\n                    commit('setDjangoUser',response.data)\n                })\n                state.beingException = false\n                commit(\"resetDjangoError\")\n                commit(\"setTempUserReset\")\n                state.userInfo = ''\n            }\n            catch(e){\n                state.userInfo = payload\n                let logger = {\n                    message: \"in store/signup.getDjangoUser. couldn't signup django user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                commit('setLogger',logger)\n                commit(\"checkDjangoError\", e.message)\n            }\n        },\n        async signupDjangoUserForException( {state, commit},payload ){\n            // this is only for unsub below. dont use other part\n            console.log(\"INSDUFX\")\n            if(!state.djangoUser&&state.beingException){\n                if(state.userInfo){\n                    try{\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.userInfo\n                        })\n                        .then(response => {\n                            commit('setDjangoUser',response.data)\n                        })\n                        state.beingException = false\n                        commit('resetDjangoError')\n                        commit(\"setTempUserReset\")\n                        state.userInfo = ''\n                    }\n                    catch(e){\n                        console.log('catchdayo',e.message)\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        commit(\"checkDjangoError\", e.message)\n                    }\n                }\n                else{\n                    try{\n                        console.log('NO TEMP')\n                        await axios\n                        .get(\"https://ipinfo.io/json?token=32e16159d962c5\")\n                        .then(response => {\n                            let IP = response.data\n                            state.exceptUserInfo = {\n                                UID: state.user.uid,\n                                name: '名前を変更しよう',\n                                email: state.user.email,\n                                ip_data: [{\n                                    city: IP.city,\n                                    ip: IP.ip,\n                                    loc: IP.loc,\n                                    org: IP.org,\n                                    postal: IP.postal,\n                                    region: IP.region,\n                                    timezone: IP.timezone,\n                                    country: IP.country\n                                }]\n                            } \n                        })\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.signup.DjangoUserForException. ipinfo error\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                     \n                    try{\n                        console.log('try non_userINFO',state.exceptUserInfo)\n                        // throw new Error('could not sent validation')\n                        await axios({\n                            method: 'post',\n                            url: '/api/user/',\n                            data: state.exceptUserInfo\n                        })\n                        state.beingException = false\n                        commit(\"resetDjangoError\")\n                    }\n                    catch(e){\n                        commit(\"checkDjangoError\", e.message)\n                        let logger = {\n                            message: \"in store/signup.getDjangoUserForException. couldn't signup django user\",\n                            name: window.location.pathname,\n                            actualError: e\n                        }\n                        commit('setLogger',logger)\n                        router.push({ name: 'NotFound404' })\n                    }\n                }   \n            }\n        },\n        async getDjangoUser({ state, commit,dispatch }){\n            if(state.user&&!state.beingException){\n                console.log('GDU_pass',state.beingException)\n                try{\n                    await axios\n                    .get(`/api/user/${state.user.uid}`)\n                    .then(response => {\n                        commit('setDjangoUser',response.data)\n                        state.myQuestion = response.data.my_quiz[0].my_question\n                        state.myQuizInfo.id = response.data.my_quiz[0].id\n                        state.myQuizInfo.max = response.data.my_quiz[0].max_num\n                        console.log(\"MQ\",state.myQuestion)\n                    })\n                    commit(\"resetDjangoError\")\n                }\n                catch(e){\n                    console.log('catch')\n                    let logger = {\n                        message: \"in store/signup.getDjangoUser. couldn't get django user\",\n                        name: window.location.pathname,\n                        actualError: e\n                    }\n                    commit('setLogger',logger)\n                    commit(\"checkDjangoError\", e.message)\n                }\n            }\n        },\n        async getFavoriteQuestion({ state, commit }){\n            state.favoriteQuestion = null\n            if(state.djangoUser){\n                try{\n                    const questionId = []\n                    for(let i of state.djangoUser.favorite_question[0].question){\n                        questionId.push(i)\n                    }\n                    if(questionId[0]){\n                        await axios\n                        .get(`/api/board/question-favorite?question_id=${questionId}`)\n                        .then(response => {\n                            state.favoriteQuestion = response.data\n                            })\n                        .catch(error => {\n                            console.log(error)\n                        })\n                    }\n                }catch{\n                    \n                }\n            }\n        },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch(e){\n                let logger = {\n                    message: \"in store/signup.signup. couldn't signup firebase user\",\n                    name: window.location.pathname,\n                    actualError: e\n                }\n                context.commit('setLogger',logger)\n                router.push({ name: 'NotFound404' })\n            }\n        },\n        googleLogin(){\n            const provider = new GoogleAuthProvider();\n            const auth = getAuth();\n            signInWithPopup(auth, provider)\n            .then((result) => {\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                const credential = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential.accessToken;\n                // The signed-in user info.\n                const user = result.user;\n                console.log('googlrUser',user)\n                // ...\n            }).catch((error) => {\n                // Handle Errors here.\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                // The email of the user's account used.\n                const email = error.email;\n                // The AuthCredential type that was used.\n                const credential = GoogleAuthProvider.credentialFromError(error);\n                // ...\n            });\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            // context.commit('setIsLoading', true, {root:true})\n            console.log('in_login')\n            try{\n                var ref = await signInWithEmailAndPassword(auth, email, password)\n            }catch{\n                console.log('error')\n                throw new Error('could not complite signin')\n            }\n            if(ref){\n                console.log(\"IF YES\")\n                context.commit('setUser',ref.user)\n                context.dispatch('getDjangoUser')\n                context.commit(\"setTempUserReset\")\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log(context.state.user,context.state.emailVerified)\n            }else{\n                console.log('error in sign in')\n                throw new Error('could not complite signin')\n            }\n            // context.commit('setIsLoading', false, {root:true})                \n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            context.commit('resetQuizKeyStorage')\n            router.push({ name: 'Home' })\n        },\n        updateQuizTakerAction({state, commit, getters},payload){\n            console.log('inUQTA',getters)\n            commit('updateQuizTaker',payload);\n            console.log('UPaction',getters.quizNameIdInSignup)\n            for(let i of getters.quizNameIdInSignup){\n                if(i.id == payload.grade){\n                    if(state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] < state.gradeDict[i.name]){\n                        commit('updateQuizTakerMax',i.name);\n                        break\n                    }\n                    else if(state.gradeDict[state.djangoUser.quiz_taker[0].max_grade] == state.gradeDict[i.name]){\n                        if(state.djangoUser.quiz_taker[0].max_level < payload.level){\n                            commit('updateQuizTakerMax',i.name);\n                            break\n                        }\n                    }\n                }\n            }\n        },\n        \n    }\n\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    console.log('unsub',user)\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n        store.dispatch('signupDjangoUserForException')\n    }else{\n        store.commit('resetQuizKeyStorage')\n    }\n    unsub()\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}