{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/CropperField.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/CropperField.vue","mtime":1649294761936},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9vc3Nhbi9naXQtY2xvbmUvcXVpel9wcm9qZWN0L3Z1ZV9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IENyb3BwZXIgZnJvbSAnY3JvcHBlcmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwcmV2aWV3RmlsZTogJycsCiAgICAgIGNhbnZhczogJycKICAgIH07CiAgfSwKICBwcm9wczogWydzZWxlY3RlZEZpbGUnXSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7CiAgICB0aGlzLnByZXZpZXdGaWxlID0gdGhpcy5zZWxlY3RlZEZpbGU7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgY29uc29sZS5sb2coJ2Nyb3BwZXJPcGVuJywgdGhpcy5wcmV2aWV3RmlsZSk7CiAgICB0aGlzLmltYWdlQ3JvcHBlcigpOwogIH0sCiAgbWV0aG9kczogewogICAgc2F2ZUltZzogZnVuY3Rpb24gc2F2ZUltZygpIHsKICAgICAgdGhpcy5jYW52YXMgPSB0aGlzLmNyb3BwZXIuZ2V0Q3JvcHBlZENhbnZhcyh7CiAgICAgICAgd2lkdGg6IDE2MCwKICAgICAgICBoZWlnaHQ6IDkwLAogICAgICAgIG1pbkNyb3BCb3hIZWlnaHQ6IDMwMCwKICAgICAgICBtaW5Dcm9wQm94V2lkdGg6IDMwMCwKICAgICAgICBtYXhXaWR0aDogNDA5NiwKICAgICAgICBtYXhIZWlnaHQ6IDQwOTYsCiAgICAgICAgZmlsbENvbG9yOiAnI2ZmZicsCiAgICAgICAgaW1hZ2VTbW9vdGhpbmdFbmFibGVkOiBmYWxzZSwKICAgICAgICBpbWFnZVNtb290aGluZ1F1YWxpdHk6ICdoaWdoJwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2codGhpcy5jYW52YXMpOwogICAgICB0aGlzLiRlbWl0KCdnZXRDYW52YXMnLCB0aGlzLmNhbnZhcyk7CiAgICAgIHRoaXMuJGVtaXQoJ2hhbmRsZVNob3dDcm9wcGVyJyk7CiAgICB9LAogICAgaW1hZ2VDcm9wcGVyOiBmdW5jdGlvbiBpbWFnZUNyb3BwZXIoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmNyb3BwZXIgPSBuZXcgQ3JvcHBlcihfdGhpcy4kcmVmcy5pbWFnZSwgewogICAgICAgICAgICAgICAgICB6b29tYWJsZTogZmFsc2UsCiAgICAgICAgICAgICAgICAgIHNjYWxhYmxlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgem9vbU9uVG91Y2g6IHRydWUsCiAgICAgICAgICAgICAgICAgIGFzcGVjdFJhdGlvOiAxLAogICAgICAgICAgICAgICAgICBjcm9wOiBmdW5jdGlvbiBjcm9wKGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQuZGV0YWlsLngpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC55KTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudC5kZXRhaWwud2lkdGgpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC5oZWlnaHQpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC5yb3RhdGUpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC5zY2FsZVgpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRldGFpbC5zY2FsZVkpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNoYW5jZWw6IGZ1bmN0aW9uIGNoYW5jZWwoKSB7CiAgICAgIHRoaXMucHJldmlld0ZpbGUgPSBudWxsOwogICAgICB0aGlzLiRlbWl0KCdoYW5kbGVTaG93Q3JvcHBlcicpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/CropperField.vue"],"names":[],"mappings":";;AAaA,OAAO,OAAP,MAAoB,WAApB;AACA,eAAe;AAEX,EAAA,IAFW,kBAEL;AACF,WAAM;AACF,MAAA,WAAW,EAAC,EADV;AAEF,MAAA,MAAM,EAAC;AAFL,KAAN;AAIH,GAPU;AAQX,EAAA,KAAK,EAAC,CACF,cADE,CARK;AAWX,EAAA,WAXW,yBAWE;AACT,SAAK,WAAL,GAAmB,KAAK,YAAxB;AACH,GAbU;AAcX,EAAA,OAdW,qBAcF;AACL,IAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA0B,KAAK,WAA/B;AACA,SAAK,YAAL;AACH,GAjBU;AAkBX,EAAA,OAAO,EAAC;AACJ,IAAA,OADI,qBACK;AACL,WAAK,MAAL,GAAc,KAAK,OAAL,CAAa,gBAAb,CAA8B;AACxC,QAAA,KAAK,EAAE,GADiC;AAExC,QAAA,MAAM,EAAE,EAFgC;AAGxC,QAAA,gBAAgB,EAAE,GAHsB;AAIxC,QAAA,eAAe,EAAE,GAJuB;AAKxC,QAAA,QAAQ,EAAE,IAL8B;AAMxC,QAAA,SAAS,EAAE,IAN6B;AAOxC,QAAA,SAAS,EAAE,MAP6B;AAQxC,QAAA,qBAAqB,EAAE,KARiB;AASxC,QAAA,qBAAqB,EAAE;AATiB,OAA9B,CAAd;AAWA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,MAAjB;AACA,WAAK,KAAL,CAAW,WAAX,EAAwB,KAAK,MAA7B;AACA,WAAK,KAAL,CAAW,mBAAX;AACH,KAhBG;AAiBE,IAAA,YAjBF,0BAiBgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,gBAAA,KAAI,CAAC,OAAL,GAAe,IAAI,OAAJ,CAAY,KAAI,CAAC,KAAL,CAAW,KAAvB,EAA8B;AAC7C,kBAAA,QAAQ,EAAE,KADmC;AAE7C,kBAAA,QAAQ,EAAE,KAFmC;AAG7C,kBAAA,WAAW,EAAE,IAHgC;AAI7C,kBAAA,WAAW,EAAE,CAJgC;AAK7C,kBAAA,IAL6C,gBAKxC,KALwC,EAKjC;AACJ,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,CAAzB;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,CAAzB;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,KAAzB;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,MAAzB;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,MAAzB;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,MAAzB;AACA,oBAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,MAAN,CAAa,MAAzB;AACH;AAbwC,iBAA9B,CAAf;;AADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBnB,KAjCG;AAkCJ,IAAA,OAlCI,qBAkCK;AACL,WAAK,WAAL,GAAiB,IAAjB;AACA,WAAK,KAAL,CAAW,mBAAX;AACH;AArCG;AAlBG,CAAf","sourcesContent":["<template>\n    <div class='l-wrapper'>\n        <div class=\"cropper-outer-wrapper\" v-if=\"previewFile\">\n            <div class='cropper-wrapper'>\n                <img ref='image' :src=\"previewFile\">\n                <button class='save-button' v-if='previewFile' @click='chancel'>chancel</button>\n                <button @click=\"saveImg\">save</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Cropper from 'cropperjs';\nexport default {\n    \n    data(){\n        return{\n            previewFile:'',\n            canvas:''\n        }\n    },\n    props:[\n        'selectedFile',\n    ],\n    beforeMount(){\n        this.previewFile = this.selectedFile\n    },\n    mounted(){\n        console.log('cropperOpen',this.previewFile)\n        this.imageCropper()\n    },\n    methods:{\n        saveImg(){\n            this.canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minCropBoxHeight: 300,\n                minCropBoxWidth: 300,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n            });\n            console.log(this.canvas)\n            this.$emit('getCanvas', this.canvas)\n            this.$emit('handleShowCropper')\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: false,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.previewFile=null\n            this.$emit('handleShowCropper')\n        },\n    }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":""}]}