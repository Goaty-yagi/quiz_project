{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","mtime":1643775908075},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"names":["createPersistedState","auth","router","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","store","namespace","plugins","key","paths","storage","window","sessionStorage","state","username","email","email2","country","password","user","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","console","log","setAuthIsReady","emailVerifiedHandler","checkEmailHandler","actions","signup","context","ref","commit","currentUser","Error","sendEmailVerify","sentValidation","login","checkEmail","passwordReset","logout","push","name","unsub"],"mappings":"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","sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    plugins: [\n        createPersistedState({\n          key: 'signupKey',  // 設定しなければ'vuex'\n          paths: ['username','email','email2','country'],  // 保存するモジュール：設定しなければ全部。\n          storage: window.sessionStorage,  // 設定しなければlocalStorage\n        })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/login/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n                }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        }\n    },\n    actions:{\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not conmplite signup')\n            }\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            const ref = await signInWithEmailAndPassword(auth, email, password)\n            context.commit('setUser',ref.user)\n            context.commit('emailVerifiedHandler',ref.user.emailVerified)\n            console.log(context.state.user,context.state.emailVerified)\n                // try{\n                //     const ref = await signInWithEmailAndPassword(auth, email, password)\n                //     console.log('signin',ref)\n                //     \n                //     console.log('signin is done',auth.currentUser)\n                // }catch{\n                //     console.log('catch in store',error.code)\n                //     throw new Error('could not complite signin')\n                    \n                // }\n                // if(res){\n                //     console.log('signin',ref)\n                //     context.commit('setUser',ref.user)\n                //     context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                //     console.log('signin is done',auth.currentUser)\n                // }else{\n                //     console.log('error in sign in')\n                //     throw new Error('could not complite signin')\n                // }\n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            router.push({ name: 'Home' })\n        }\n    }\n\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    if(user){\n        store.commit('emailVerifiedHandler',user.emailVerified)\n    }\n    unsub()\n})"]}]}