{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","mtime":1651324336434},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"names":["createPersistedState","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","store","namespace","state","username","email","email2","country","password","user","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","tempUser","test","statusList","grade","level","getters","getUID","getUser","getDjangouser","getEmailVerified","getTempUser","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","setDjangoUser","emailVerifiedHandler","checkEmailHandler","setTempUser","status","actions","getDjangoUser","commit","get","then","response","data","catch","error","getFavoriteQuestion","questionId","favorite_question","question","i","push","id","favoriteQuestion","signup","context","ref","currentUser","Error","sendEmailVerify","sentValidation","login","checkEmail","passwordReset","logout","name","unsub","dispatch"],"mappings":"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","sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/login/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n        },\n        tempUser: {\n            test: false,\n            statusList:'',\n            grade:'',\n            level:''\n        },\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getUser(state){\n            return state.user\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        },\n        getEmailVerified(state){\n            return state.emailVerified\n        },\n        getTempUser(state){\n            return state.tempUser\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            if(state.user){\n                state.UID = state.user.uid\n            }\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        setDjangoUser(state,payload){\n            state.djangoUser = payload\n            console.log('get Django user',state.djangoUser)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        },\n        setTempUser(state,payload){\n            state.tempUser.test = true\n            state.tempUser.statusList = payload.status\n            state.tempUser.grade = payload.grade\n            state.tempUser.level = payload.level\n            console.log('set-temp-user', state.tempUser)\n        },\n    },\n    actions:{\n        async getDjangoUser({ state, getters,commit }){\n            console.log(getters.getUID)\n            await axios\n            .get(`/api/user/${getters.getUID}`)\n            .then(response => {\n                commit('setDjangoUser',response.data)\n                console.log('inDUGet', state.djangoUser)\n                // store.dispatch('getFavoriteQuestion')\n                })\n            .catch(error => {\n                console.log(error)\n            })\n        },\n        async getFavoriteQuestion({ state, commit }){\n            const questionId = []\n            for(let i of state.djangoUser.favorite_question[0].question){\n                questionId.push(i.id)\n            }\n            await axios\n            .get(`/api/board/question-favorite?question_id=${questionId}`)\n            .then(response => {\n                state.favoriteQuestion = response.data\n                console.log('inDUGet', state.favoriteQuestion)\n                })\n            .catch(error => {\n                console.log(error)\n            })\n        },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not conmplite signup')\n            }\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            const ref = await signInWithEmailAndPassword(auth, email, password)\n            context.commit('setUser',ref.user)\n            context.commit('emailVerifiedHandler',ref.user.emailVerified)\n            console.log(context.state.user,context.state.emailVerified)\n                // try{\n                //     const ref = await signInWithEmailAndPassword(auth, email, password)\n                //     console.log('signin',ref)\n                //     \n                //     console.log('signin is done',auth.currentUser)\n                // }catch{\n                //     console.log('catch in store',error.code)\n                //     throw new Error('could not complite signin')\n                    \n                // }\n                // if(res){\n                //     console.log('signin',ref)\n                //     context.commit('setUser',ref.user)\n                //     context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                //     console.log('signin is done',auth.currentUser)\n                // }else{\n                //     console.log('error in sign in')\n                //     throw new Error('could not complite signin')\n                // }\n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            router.push({ name: 'Home' })\n        }\n    }\n\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n    }\n    unsub()\n})"]}]}