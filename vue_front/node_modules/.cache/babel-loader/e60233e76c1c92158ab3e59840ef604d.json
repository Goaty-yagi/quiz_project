{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/thread-loader/dist/cjs.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js","mtime":1652958411578},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/quiz.js"],"names":["store","router","axios","getDefaultState","isLoading","quizID","countUpDict","questionID","answerID","questionType","userStatusDict","status","grade","quizTaker","isCorrect","isFalse","gradeForConvert","numOfQuiz","questionField","level","questions","quiz","quizNameId","fieldNameId","randomURL","test","notice","step","onQuiz","myQuestion","namespace","state","getters","rootState","signup","djangoUser","quiz_taker","id","my_quiz","my_question","console","log","mutations","getRandomQuestion","array","k","length","i","answer","r","Math","floor","random","tmp","setQuestions","setTestQuestions","getQuiz","payload","setAnswerAndQuestionID","IDs","getQuizInfo","quizInfo","quizId","fieldId","quizNum","getTestQuizInfo","setQuizNameId","setFieldNameId","getUserStatusInfo","setQuizID","setQuizTakerID","convertGradeFromIntToID","name","onQuizTrue","onQuizFalse","actions","getquestions","commit","num","root","get","response","data","shift","getQuizNameId","getFieldNameId","getTestQuestions","countUpAnswerAndQuestion","patch","userStatusPost","method","url","is_correct","is_false","createAndDeleteMyQuiz","myQuiz","question","convertGradeFromIntToIDForNewUser","dispatch"],"mappings":"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","sourcesContent":["import store from '..'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\n\n\nlet getDefaultState = () => {\n    return {\n        isLoading: false,\n        quizID: 1,\n        countUpDict:{\n            questionID: '',\n            answerID: '',\n            questionType:''\n        },\n        userStatusDict:{\n            status:'',\n            grade:'',\n            quizTaker:'',\n            isCorrect:0,\n            isFalse:0\n        },\n        gradeForConvert:'',\n        numOfQuiz: 3,\n        questionField: [1,2],\n        level: 1,\n        questions:[],\n        quiz:[],\n        quizNameId:'',\n        fieldNameId:'',\n        randomURL:'',\n        test:null,\n        notice:false,\n        step:1,\n        onQuiz: false,\n        myQuestion: ''\n    }\n}\n\nexport default {\n    namespace: true,\n    state: getDefaultState(),\n    getters:{\n        questions:(state) => state.questions,\n        quiz:(state) => state.quiz,\n        quizNameId:(state) => state.quizNameId,\n        fieldNameId:(state) => state.fieldNameId,\n        gradeForConvert:(state) => state.gradeForConvert,\n        quizTaker(state, getters, rootState){\n            try{\n                return rootState.signup.djangoUser.quiz_taker[0].id\n            }catch{\n                return null\n            }\n        },\n        quizID(state, getters, rootState){\n            try{\n                return rootState.signup.djangoUser.quiz_taker[0].grade\n            }catch{\n                return null\n            }\n        },\n        myQuestion(state, getters, rootState){\n            state.myQuestion = rootState.signup.djangoUser.my_quiz[0].my_question\n            console.log(\"myquestion\",state.myQuestion)\n        }\n    },\n    mutations:{\n        getRandomQuestion(state,array){\n            console.log('in randomQ', array)\n            // for (let i = array.length - 1; i >= 0; i--) {\n            //     let r = Math.floor(Math.random() * (i + 1))\n            //     let tmp = array[i]\n            //     array[i] = array[r]\n            //     array[r] = tmp\n            // }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                    let r = Math.floor(Math.random() * (i + 1))\n                    let tmp = array[k].answer[i]\n                    array[k].answer[i] = array[k].answer[r]\n                    array[k].answer[r] = tmp\n                }\n            }\n            return array\n        },\n        setQuestions:(state,questions) => (state.questions = questions),\n        setTestQuestions:(state,questions) => (state.questions = questions),\n        getQuiz(state, payload){\n            state.quiz = payload\n            console.log(state.quiz)\n        },\n        setAnswerAndQuestionID(state,IDs){\n            state.countUpDict.questionID = IDs.questionID\n            state.countUpDict.answerID = IDs.answerID\n            state.countUpDict.questionType = IDs.questionType\n        },\n        getQuizInfo(state, quizInfo){\n            console.log('GQIStore',quizInfo)\n            state.questionField = []\n            state.quizID = ''\n            state.numOfQuiz = ''\n            state.quizID = quizInfo.quizId\n            if(quizInfo.fieldId){\n                state.questionField = quizInfo.fieldId\n            }\n            state.numOfQuiz = quizInfo.quizNum\n            console.log('GQINFOStore',state.quizID,state.questionField)\n        },\n        getTestQuizInfo(state, quizInfo){\n            state.quizID = quizInfo.quizId\n            state.level = quizInfo.level\n        },\n        setQuizNameId(state, payload){\n            state.quizNameId = payload\n        },\n        setFieldNameId(state, payload){\n            state.fieldNameId = payload\n        },\n        getUserStatusInfo(state, payload){\n            state.userStatusDict.status = payload.status\n            // state.userStatusDict.grade = payload.grade\n            // state.userStatusDict.quiz_taker = payload.quiz_taker\n            state.userStatusDict.isCorrect = payload.isCorrect\n            state.userStatusDict.isFalse = payload.isFalse\n            console.log(\"GUSI\",state.userStatusDict)\n        },\n        // getUserStatusInfoForInit(state, payload){\n        //     state.userStatusDict.status = payload.status\n        //     // state.userStatusDict.grade = payload.grade\n        //     // state.userStatusDict.quiz_taker = payload.quiz_taker\n        //     state.userStatusDict.isCorrect = payload.isCorrect\n        //     state.userStatusDict.isFalse = payload.isFalse\n        //     console.log(\"GUSI\",state.userStatusDict)\n        // },\n        setQuizID(state, payload){\n            state.userStatusDict.grade = payload\n        },\n        setQuizTakerID(state, payload){\n            state.userStatusDict.quizTaker = payload\n        },\n        convertGradeFromIntToID(state, payload){\n            console.log('CGFITI',state.quizNameId,payload)\n            for(let i of state.quizNameId){\n                console.log('loop',i.name,i.name==payload)\n                if(i.name == payload){\n                    state.gradeForConvert = i.id\n                }\n            }\n        },\n        onQuizTrue(state){\n            state.onQuiz = true\n        },\n        onQuizFalse(state){\n            state.onQuiz = false\n        }\n    },\n    actions:{\n        async getquestions({ state, commit,getters }){\n            console.log('action2',state.num)\n            state.questions = []\n            state.quiz = []\n            commit('setIsLoading', true, {root:true})\n            if(state.questionField[0]){\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}&field=${state.questionField}`)\n            }else{\n                var response = await axios.get(`/api/quizzes-questions/?quiz=${state.quizID}&num=${state.numOfQuiz}`)\n            }\n            console.log(getters.quizTaker)\n            commit('setQuizTakerID',getters.quizTaker)\n            commit('getQuiz',response.data[0])\n            commit('setQuizID',response.data[0].name)\n            response.data.shift()\n            commit('getRandomQuestion',response.data)\n            commit('setQuestions',response.data);\n            commit('setIsLoading', false,{root:true})\n        },\n        async getQuizNameId({ state, commit }){\n            if(state.quizNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/quizzes-name-id/\")\n                commit('setQuizNameId',response.data)\n                console.log(state.quizNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getFieldNameId({ state, commit }){\n            if(state.fieldNameId==false){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(\"/api/field-list/\")\n                commit('setFieldNameId',response.data)\n                console.log(state.fieldNameId)\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async getTestQuestions({ state, commit, getters }){\n            // need things for non login\n            if(getters.quizID!=null){\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(`/api/quizzes-tests/?quiz=${getters.quizID}&level=${state.level}`)\n                commit('getQuiz',response.data[0])\n                commit('setQuizTakerID',getters.quizTaker)\n                commit('setQuizID',response.data[0])\n                response.data.shift()\n                commit('getRandomQuestion',response.data)\n                commit('setTestQuestions',response.data);\n                commit('setIsLoading', false,{root:true})\n            }else{\n                commit('setIsLoading', true, {root:true})\n                let response = await axios.get(`/api/quizzes-tests/?quiz=4&level=${state.level}`)\n                commit('getQuiz',response.data[0])\n                response.data.shift()\n                commit('getRandomQuestion',response.data)\n                commit('setTestQuestions',response.data);\n                commit('setIsLoading', false,{root:true})\n            }\n        },\n        async countUpAnswerAndQuestion({ state , commit }, payload){\n            // commit('setIsLoading', true, {root:true})\n            commit('setAnswerAndQuestionID',payload)\n            if(state.countUpDict.questionType!=4){\n                await axios.patch(`/api/answers-count/?answer=${state.countUpDict.answerID}&question=${state.countUpDict.questionID}`)\n            }\n            // commit('setIsLoading', false,{root:true})\n            \n        },\n        async userStatusPost({ state , commit }, payload){\n            console.log(\"userStatusPost\",state.userStatusDict)\n            commit('getUserStatusInfo',payload)\n            await axios({\n                method: 'post',\n                url: '/api/user-status/',\n                data: {\n                    status: state.userStatusDict.status,\n                    grade: state.userStatusDict.grade,\n                    quiz_taker: state.userStatusDict.quizTaker,\n                    is_correct: state.userStatusDict.isCorrect,\n                    is_false: state.userStatusDict.isFalse,\n                }\n            })\n        },\n        async createAndDeleteMyQuiz({ state , commit }, payload){\n            console.log(\"inMY\",payload)\n            await axios({\n                method: 'post',\n                url: '/api/my-question/',\n                data: {\n                    my_quiz: payload.myQuiz,\n                    question: payload.question\n                }\n            })\n        },\n        async convertGradeFromIntToIDForNewUser({ state , dispatch, commit }, payload){\n            if(!state.quizNameId){\n                await dispatch('getQuizNameId')\n            }\n            commit('convertGradeFromIntToID', payload)\n            console.log('done convert')\n        }\n    }\n}"]}]}