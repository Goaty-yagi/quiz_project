{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      description: '',\n      alert: false\n    };\n  },\n  props: ['questionDescription', 'questionTitle', 'questionId', 'handleNotifications'],\n  mounted: function mounted() {\n    console.log('answerMounted', this.questionId);\n  },\n  methods: {\n    resetNotifications: function resetNotifications() {\n      this.alert = false;\n    },\n    descriptionCheck: function descriptionCheck() {\n      if (this.description == '') {\n        this.alert = true;\n        setTimeout(this.resetNotifications, 3000);\n      }\n    },\n    answerPost: function answerPost() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"this.questionId\", _this.questionId);\n                _context.next = 3;\n                return axios({\n                  method: 'post',\n                  url: '/api/board/answer/create',\n                  data: {\n                    description: _this.description,\n                    user: _this.$store.state.signup.user.uid,\n                    question: _this.questionId,\n                    liked_answer: []\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    addAnswer: function addAnswer() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.descriptionCheck();\n\n                console.log('start add');\n\n                if (!(_this2.alert == false)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _this2.answerPost();\n\n              case 5:\n                _this2.$emit('getDetail');\n\n                _this2.$store.dispatch(\"handleNotifications\", 'answer');\n\n                _this2.$emit('handleShowAnswerPage');\n\n                console.log(\"end_answer\", _this2.$store.state.board.notifications);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AAyCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACXC,IADW,kBACL;IACF,OAAM;MACFC,WAAW,EAAC,EADV;MAEFC,KAAK,EAAE;IAFL,CAAN;EAIH,CANU;EAOXC,KAAK,EAAC,CACF,qBADE,EAEF,eAFE,EAGF,YAHE,EAIF,qBAJE,CAPK;EAaXC,OAbW,qBAaF;IACLC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKC,UAAjC;EACH,CAfU;EAgBXC,OAAO,EAAC;IACJC,kBADI,gCACgB;MAChB,KAAKP,KAAL,GAAa,KAAb;IACH,CAHG;IAIJQ,gBAJI,8BAIc;MACb,IAAG,KAAKT,WAAL,IAAkB,EAArB,EAAwB;QACpB,KAAKC,KAAL,GAAa,IAAb;QACAS,UAAU,CAAC,KAAKF,kBAAN,EAA0B,IAA1B,CAAV;MACJ;IACH,CATE;IAUEG,UAVF,wBAUc;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACdP,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAI,CAACC,UAAnC;gBADc;gBAAA,OAERR,KAAK,CAAC;kBACRc,MAAM,EAAE,MADA;kBAERC,GAAG,EAAE,0BAFG;kBAGRd,IAAI,EAAE;oBACFC,WAAW,EAAE,KAAI,CAACA,WADhB;oBAEFc,IAAI,EAAE,KAAI,CAACC,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,CAAyBH,IAAzB,CAA8BI,GAFlC;oBAGFC,QAAQ,EAAE,KAAI,CAACb,UAHb;oBAIFc,YAAY,EAAC;kBAJX;gBAHE,CAAD,CAFG;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAYjB,CAtBG;IAuBEC,SAvBF,uBAuBa;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACb,MAAI,CAACZ,gBAAL;;gBACAL,OAAO,CAACC,GAAR,CAAY,WAAZ;;gBAFa,MAGV,MAAI,CAACJ,KAAL,IAAY,KAHF;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAIJ,MAAI,CAACU,UAAL,EAJI;;cAAA;gBAKT,MAAI,CAACW,KAAL,CAAW,WAAX;;gBACA,MAAI,CAACP,MAAL,CAAYQ,QAAZ,CAAqB,qBAArB,EAA4C,QAA5C;;gBACA,MAAI,CAACD,KAAL,CAAW,sBAAX;;gBACAlB,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,MAAI,CAACU,MAAL,CAAYC,KAAZ,CAAkBQ,KAAlB,CAAwBC,aAAjD;;cARS;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAWf;EAlCE;AAhBG,CAAf","names":["axios","data","description","alert","props","mounted","console","log","questionId","methods","resetNotifications","descriptionCheck","setTimeout","answerPost","method","url","user","$store","state","signup","uid","question","liked_answer","addAnswer","$emit","dispatch","board","notifications"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/Answer.vue"],"sourcesContent":["<template>\n     <div class=\"l-wrapper\">\n        <div class='l-container'>\n            <div class=\"title-black\">\n                 <p>質問文</p>\n            </div>\n            \n            <form class=\"form\" @submit.prevent='addAnswer'>\n                <div class=\"question-title\">\n                    <p>{{ questionTitle }}</p>\n                </div>\n                <div class=\"question-discription\">\n                    <p>{{ questionDescription }}</p>\n                </div>\n\n                <div class=\"line\"></div>\n\n                <div class=\"answer-wraper\">\n                    <p class=\"title-black\">回答文</p>\n                    <textarea class='form-text' type=\"text\" v-model='description' placeholder=\"回答\"></textarea>\n                </div>\n                <!-- <div class=\"image\">\n                    <i class=\"fas fa-camera\"></i>\n                    <p>写真を添付</p>\n                </div> -->\n                <div class=\"button-group\">\n                    <p @click=\"$emit('handleShowAnswerPage')\">キャンセル</p>\n                    <button class=\"btn-tr-black-base-sq\" \n                    :disabled=\"alert\">回答する</button>\n                </div>\n            </form>\n            <div v-if=\"alert\" :class=\"{'notification-red':alert}\">\n                <div class=\"notification-text\">\n                    文章を入力してください。\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    data(){\n        return{\n            description:'',\n            alert: false\n        }\n    },\n    props:[\n        'questionDescription',\n        'questionTitle',\n        'questionId',\n        'handleNotifications'\n    ],\n    mounted(){\n        console.log('answerMounted',this.questionId)\n    },\n    methods:{\n        resetNotifications(){\n            this.alert = false\n        },\n        descriptionCheck(){\n             if(this.description==''){\n                 this.alert = true\n                 setTimeout(this.resetNotifications, 3000)\n             }\n         },\n        async answerPost(){\n            console.log(\"this.questionId\",this.questionId)\n            await axios({\n                method: 'post',\n                url: '/api/board/answer/create',\n                data: {\n                    description: this.description,\n                    user: this.$store.state.signup.user.uid,\n                    question: this.questionId,\n                    liked_answer:[]\n                }\n            })\n        },\n        async addAnswer(){\n            this.descriptionCheck()\n            console.log('start add')\n            if(this.alert==false){\n               await this.answerPost()\n                this.$emit('getDetail')\n                this.$store.dispatch(\"handleNotifications\", 'answer')\n                this.$emit('handleShowAnswerPage')\n                console.log(\"end_answer\",this.$store.state.board.notifications)\n            }\n            //   this.$router.go({path: this.$router.currentRoute.path, force: true})\n         },\n    }\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"style/_variables.scss\";\n.l-container{\n    animation: l-container 3s;\n    display: flex;\n    flex-direction: column;\n    // justify-content: center;\n    align-items: center;\n    position:relative;\n    .title-black{\n        margin: 2rem;\n    }\n    .form{\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        // justify-content: center;\n        align-items: center;\n        .question-discription{\n            width:90%;\n            height: 100px;\n            background: rgb(228, 228, 228);\n            margin-top: 1rem;\n            padding: 0.5rem;\n            text-align: left;\n            white-space: pre-wrap;\n            overflow-y: scroll;\n\n        }\n        .line{\n            width: 80%;\n            border-bottom: 0.2rem solid $dark-blue;\n            margin-top: 2rem;\n            margin-bottom: 2rem;\n        }\n        .answer-wraper{\n            width: 100%;\n            .title-black{\n                margin: 0;\n            }\n            .form-text{\n                background: $back-white;\n                padding: 1rem;\n                width: 80%;\n                height:10rem;\n                border: 0.1rem solid $base-color;\n                border-radius: 1vh;\n                resize: none;\n            }\n        }\n        .image{\n            width:80%;\n            display:flex;\n            // align-items: left;  \n            margin:1rem;\n            // justify-content: flex-start;\n        }\n        .button-group{\n            width: 80%;\n            display:flex;\n            margin:1rem;\n            justify-content: flex-end;\n            .btn-tr-black-base-sq{\n                margin-left: 0.5rem;\n                padding-right: 0.5rem;\n                padding-left: 0.5rem;\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}