{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/Account.vue?vue&type=template&id=7cbffb3a&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/Account.vue","mtime":1645412527684},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCB2U2hvdyBhcyBfdlNob3csIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwppbXBvcnQgX2ltcG9ydHNfMCBmcm9tICdAL2Fzc2V0cy9sb2dvLnBuZyc7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtN2NiZmZiM2EiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiYWNjb3VudC13cmFwcGVyIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBrZXk6IDAKfTsKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJtYWluLW5vdGlmaWNhdGlvbi13cmFwcGVyIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogIm1haW4tbm90aWNlLXdyYXBwZXIiCn07Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgY2xhc3M6ICJtYWluLWltYWdlIiwKICAgIHNyYzogX2ltcG9ydHNfMAogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgICBjbGFzczogIm1haW4tdGV4dDEiCiAgfSwgIuODoeODvOODq+aJv+iqjeOBjOWujOS6huOBl+OBpuOBhOOBvuOBm+OCk+OAgiIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgICBjbGFzczogIm1haW4tdGV4dDEiCiAgfSwgIuODoeODvOODq+aJv+iqjeOCkuWujOS6huOBl+OBpuOBj+OBoOOBleOBhOOAgiIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzggPSB7CiAga2V5OiAyLAogIGNsYXNzOiAiYWNjb3VudCIKfTsKCnZhciBfaG9pc3RlZF85ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgImFjY291bnRkYXlvIiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAgY2xhc3M6ICJjcm9wcGVyLXdyYXBwZXIiCn07CnZhciBfaG9pc3RlZF8xMSA9IFsic3JjIl07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfU2VudCA9IF9yZXNvbHZlQ29tcG9uZW50KCJTZW50Iik7CgogIHZhciBfY29tcG9uZW50X1RodW1ibmFpbCA9IF9yZXNvbHZlQ29tcG9uZW50KCJUaHVtYm5haWwiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgWyRzZXR1cC5lbWFpbFZlcmlmaWVkID09IGZhbHNlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF80LCBbX2hvaXN0ZWRfNSwgX2hvaXN0ZWRfNiwgX2hvaXN0ZWRfNywgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgb25DbGljazogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5yZXNlbnQgJiYgJG9wdGlvbnMucmVzZW50LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBvbmNsaWNrOiAiZGlzYWJsZWQgPSB0cnVlIiwKICAgIGNsYXNzOiAibWFpbi10ZXh0MSIKICB9LCAi5om/6KqN44Oh44O844Or44KS6YCB44KL44CCIiksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8YnV0dG9uICBAY2xpY2s9J2FkZFN0ZXAnIGNsYXNzPSdidXR0b24nIGlkPSdjb2xvci1idXR0b24nPjxwPuasoeOBuDwvcD48L2J1dHRvbj4gIildKV0pXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfU2VudCwgbnVsbCwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZTaG93LCAkZGF0YS5zaG93U2VudF1dKSwgJGRhdGEuc2hvd1RodW1ibmFpbCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X1RodW1ibmFpbCwgewogICAga2V5OiAxCiAgfSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCB0aGlzLiRzdG9yZS5zdGF0ZS5zaWdudXAuZW1haWxWZXJpZmllZCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzgsIFtfaG9pc3RlZF85LCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogJGRhdGEudXNlckRhdGEudGh1bWJuYWlsCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBfaG9pc3RlZF8xMSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmhhbmRsZVNob3dUaHVtYm5haWwgJiYgJG9wdGlvbnMuaGFuZGxlU2hvd1RodW1ibmFpbC5hcHBseSgkb3B0aW9ucywgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIueUu+WDj+OCkuWkieabtOOBmeOCiyIpXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBudWxsLCAiIFVzZXJuYW1lICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnVzZXJEYXRhLm5hbWUpLCAxCiAgLyogVEVYVCAqLwogICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBudWxsLCAiIGdyYWRlICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnVzZXJEYXRhLmdyYWRlKSwgMQogIC8qIFRFWFQgKi8KICApXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSk7Cn0="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Account.vue"],"names":[],"mappings":";;OAKwC,U,MAAuB,mB;;;;;;;AAJxD,EAAA,KAAK,EAAC;;;;;;AAEA,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;;sBACP,mBAAA,CAAgD,KAAhD,EAAgD;AAA3C,IAAA,KAAK,EAAC,YAAqC;AAAxB,IAAA,GAAuB,EAAvB;AAAwB,GAAhD,E,IAAA,E;;AAAA,G;;;;sBACA,mBAAA,CAAyC,GAAzC,EAAyC;AAAtC,IAAA,KAAK,EAAC;AAAgC,GAAzC,EAAsB,iBAAtB,EAAqC,CAAA;AAAA;AAArC,G;;;;sBACA,mBAAA,CAAyC,GAAzC,EAAyC;AAAtC,IAAA,KAAK,EAAC;AAAgC,GAAzC,EAAsB,iBAAtB,EAAqC,CAAA;AAAA;AAArC,G;;;;;AAQL,EAAA,KAAK,EAAC;;;;sBACT,mBAAA,CAAkB,GAAlB,EAAkB,IAAlB,EAAG,aAAH,EAAc,CAAA;AAAA;AAAd,G;;;;AACK,EAAA,KAAK,EAAC;;;;;;;;uBAhBjB,mBAAA,CAuBM,KAvBN,EAAA,UAAA,EAuBM,CAtBO,MAAA,CAAA,aAAA,IAAa,K,kBAAxB,mBAAA,CAUQ,KAVR,EAUQ,UAVR,EAUQ,CATJ,mBAAA,CAQM,KARN,EAAA,UAAA,EAQM,CAPF,mBAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALF,UAKE,EAJF,UAIE,EAHF,UAGE,EAFF,mBAAA,CAAuF,QAAvF,EAAuF;AAA9E,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,MAAA,IAAA,QAAA,CAAA,MAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAAyE;AAA/D,IAAA,OAAO,EAAC,iBAAuD;AAArC,IAAA,KAAK,EAAC;AAA+B,GAAvF,EAAqE,WAArE,CAEE,EADF,mBAAA,CAAA,iFAAA,CACE,CANN,CAOE,CARN,CASI,CAVR,C,qCAsBI,E,gBAXF,YAAA,CAAyB,eAAzB,EAAyB,IAAzB,EAAyB,IAAzB,EAAyB;AAAA;AAAzB,G,EAAyB,C,SAAX,KAAA,CAAA,Q,CAAW,C,CAWvB,EAVe,KAAA,CAAA,a,kBAAjB,YAAA,CAAiC,oBAAjC,EAAiC;AAAA,IAAA,GAAA,EAAA;AAAA,GAAjC,C,qCAUE,E,KAT+B,M,CAAO,K,CAAM,M,CAAO,a,kBAArD,mBAAA,CAQM,KARN,EAAA,UAAA,EAQM,CAPJ,UAOI,EANJ,mBAAA,CAGM,KAHN,EAAA,WAAA,EAGM,CAFF,mBAAA,CAAsC,KAAtC,EAAsC;AAA1B,IAAA,GAAG,EAAE,KAAA,CAAA,QAAA,CAAS;AAAY,GAAtC,E,IAAA,E;;AAAA,I,WAAA,CAEE,EADF,mBAAA,CAA2C,GAA3C,EAA2C;AAAvC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,mBAAA,IAAA,QAAA,CAAA,mBAAA,OAAA,QAAA,YAAF;AAAA,KAAA;AAAkC,GAA3C,EAAgC,SAAhC,CACE,CAHN,CAMI,EAFJ,mBAAA,CAAmC,GAAnC,EAAmC,IAAnC,EAAG,eAAU,gBAAA,CAAG,KAAA,CAAA,QAAA,CAAS,IAAZ,CAAb,EAA6B;AAAA;AAA7B,GAEI,EADJ,mBAAA,CAAiC,GAAjC,EAAiC,IAAjC,EAAG,YAAO,gBAAA,CAAG,KAAA,CAAA,QAAA,CAAS,KAAZ,CAAV,EAA2B;AAAA;AAA3B,GACI,CARN,C,qCASE,CAvBN,C","sourcesContent":["<template>\n  <div class=\"account-wrapper\">\n    <div v-if='emailVerified==false'>\n        <div class='main-notification-wrapper'>\n            <div class='main-notice-wrapper'>\n                <img class='main-image' src=\"@/assets/logo.png\">\n                <p class='main-text1'>メール承認が完了していません。</p>\n                <p class='main-text1'>メール承認を完了してください。</p>\n                <button @click='resent' onclick=\"disabled = true\" class='main-text1'>承認メールを送る。</button>                      \n                <!-- <button  @click='addStep' class='button' id='color-button'><p>次へ</p></button> -->\n            </div>\n        </div>\n      </div>\n      <Sent v-show='showSent'/>\n      <Thumbnail v-if=\"showThumbnail\"/>\n      <div class='account'  v-if='this.$store.state.signup.emailVerified'>\n        <p>accountdayo</p>\n        <div class=\"cropper-wrapper\">\n            <img v-bind:src=\"userData.thumbnail\"/>\n            <p @click='handleShowThumbnail'>画像を変更する</p>\n        </div>\n        <p> Username {{ userData.name}}</p>\n        <p> grade {{ userData.grade}}</p>\n      </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport 'cropperjs/dist/cropper.css';\nimport  Thumbnail from '@/components/account/Thumbnail.vue'\nimport Sent from '@/components/signin/Sent.vue'\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nexport default{\n  setup(){\n    const store = useStore()\n    return{\n      user: computed(() => store.state.signup.user),\n      email: computed(() => store.state.signup.email),\n      password: computed(() => store.state.signup.password),\n      emailVerified: computed(() => store.state.signup.emailVerified),\n    }\n  },\n  data(){\n    return{\n      showSent:false,\n      error:'',\n      userData:'',\n      showThumbnail:false\n    }\n  },\n  components: {\n    Sent,\n    Thumbnail\n  },\n  mounted(){\n    console.log('account mounted',this.$route.params.uid)\n    this.getUserData()\n  },\n  methods:{\n      async getUserData(){\n          await axios\n            .get(`/api/user/${this.$route.params.uid}`)\n            .then(response => {\n                this.userData = response.data\n                console.log('inGet', this.userData)\n                })\n            .catch(error => {\n                console.log(error)\n                })\n            },\n    async resent(){\n          try{\n              await this.$store.dispatch('sendEmailVerify')\n              this.handleShowSent()\n              console.log('showsent:',this.showSent)\n          }catch(err){\n            this.error = err\n            console.log(this.error)\n          }\n    },\n    handleShowSent(){\n      this.showSent = true\n    },\n    handleShowThumbnail(){\n        this.showThumbnail = true\n    }        \n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"style/_variables.scss\";\n// @import 'cropperjs/dist/cropper.css';\n.main-notification-wrapper{\n        top:0;\n        position: fixed;\n        background:rgba(0,0,0,0.5);\n        width:100vw;\n        height:100vh;\n        flex-direction: column;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .main-notice-wrapper{\n        border: solid $base-color;\n        border-radius: 2vh;\n        background:$back-white;\n        text-align: center;       \n        position:relative;\n        padding-top:1.5rem;\n        height:30rem;\n        width: 20rem;\n        }\n    .main-image{\n        width:15%;\n        height:auto;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .main-text1{\n        font-size:1rem;\n        font-weight: bold;\n        margin:2rem;\n    }\n    img {\n        border-radius: 50%; \n        width:  5rem;   \n        height: 5rem;       \n    }\n    .cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n</style>"],"sourceRoot":""}]}