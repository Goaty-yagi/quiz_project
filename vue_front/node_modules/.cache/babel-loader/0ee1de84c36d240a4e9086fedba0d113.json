{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport axios from 'axios';\nimport { router } from \"../main.js\";\nimport NotVerified from '@/components/login/NotVerified.vue';\nimport NotLogin from '@/components/login/NotLogin.vue';\nimport Answer from '@/components/board/Answer.vue';\nimport Reply from '@/components/board/Reply.vue';\nexport default {\n  components: {\n    Answer: Answer,\n    Reply: Reply,\n    NotVerified: NotVerified,\n    NotLogin: NotLogin\n  },\n  data: function data() {\n    return {\n      currentUserId: '',\n      question: '',\n      showAnswerPage: false,\n      showReplyPage: false,\n      questionTitle: '',\n      questionDescription: '',\n      questionSlug: '',\n      questionId: '',\n      answerId: '',\n      allAnswer: '',\n      answerDict: {},\n      addedAnswerLiked: {},\n      viewed: 0,\n      questionStatus: ['回答受付中', '解決済み'],\n      reply: '',\n      questionUser: '',\n      questionUserBoolean: false,\n      liked_num: '',\n      addedLiked: false,\n      addedFavorite: false,\n      likedUserIdList: '',\n      checkedLikedUserList: [],\n      relatedQuestion: '',\n      slicedRelatedQuestion: '',\n      questionTags: [],\n      showEmailVerified: false,\n      showNotLogin: false\n    };\n  },\n  mounted: function mounted() {\n    this.getDetail();\n    console.log(\"mounted_detail\", this.$route.params.slug);\n  },\n  beforeUnmount: function beforeUnmount() {\n    console.log('beforeUNMOUNT');\n    this.$store.dispatch('getDjangoUser');\n  },\n  computed: {\n    user: function user() {\n      return this.$store.state.signup.djangoUser;\n    },\n    UID: function UID() {\n      try {\n        return this.$store.state.signup.djangoUser.UID;\n      } catch (_unused) {\n        return '';\n      }\n    },\n    loginUser: function loginUser() {\n      return this.$store.state.signup.user;\n    },\n    emailVerified: function emailVerified() {\n      return this.$store.getters.getEmailVerified;\n    },\n    fixedScroll: function fixedScroll() {\n      return this.$store.getters.fixedScroll;\n    }\n  },\n  methods: {\n    dateConvert: function dateConvert(date) {\n      var date = date;\n      var time = '';\n      var newDate = '';\n      var dt = new Date(date);\n\n      if (dt.getHours() > 11) {\n        time = \" PM\";\n        dt = dt.setHours(dt.getHours() - 12);\n        date = new Date(dt);\n      } else {\n        time = \" AM\";\n      }\n\n      newDate = date + time + \" UTC\";\n      dt = new Date(newDate);\n      var stringDT = dt.toLocaleString([], {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      return stringDT.replace(/\\//g, '-');\n    },\n    getDetail: function getDetail() {\n      var _arguments = arguments,\n          _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var slug, url;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                slug = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : \"\";\n\n                _this.$store.commit('setIsLoading', true);\n\n                _this.scrollTop();\n\n                console.log('inthegetdetail');\n\n                if (slug == \"\") {\n                  url = \"/api/board/question/\".concat(_this.$route.params.slug);\n                } else {\n                  url = \"/api/board/question/\".concat(slug);\n                }\n\n                _context.next = 7;\n                return axios.get(url).then(function (response) {\n                  _this.question = response.data;\n                  _this.questionTitle = _this.question.title;\n                  _this.questionDescription = _this.question.description;\n                  _this.questionSlug = _this.question.slug;\n                  _this.questionId = _this.question.id;\n                  _this.liked_num = _this.question.liked_num[0].liked_num;\n                  _this.likedUserIdList = _this.question.liked_num[0].user;\n                  _this.questionUser = _this.question.user.UID;\n                  _this.allAnswer = _this.question.answer;\n                  _this.viewed = _this.question.viewed;\n\n                  _this.patchOnReply(); // this.patchOnAnswer()\n\n\n                  _this.questionPatch();\n\n                  _this.makeAnswerDict();\n\n                  console.log(\"after_makeAD\");\n\n                  _this.getQuestionTagList(_this.question.tag);\n\n                  console.log(\"after_taglist\");\n\n                  _this.getRelatedQuestion();\n\n                  console.log(\"after_relation\");\n\n                  _this.countViewedNumUp();\n\n                  console.log(\"after_numup\");\n\n                  _this.favoriteCheck();\n\n                  console.log(\"after_favocheck\"); // if(!this.loginUser){\n                  //     this.$store.commit('setIsLoading', false)\n                  // }\n                }).catch(function (e) {\n                  var logger = {\n                    message: \"in Community/getDetail. couldn't get Detail-question\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this.$store.commit('setLogger', logger);\n\n                  _this.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    patchOnReply: function patchOnReply() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _iterator, _step, answer, url;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"patchOnReply\", _this2.allAnswer);\n                _iterator = _createForOfIteratorHelper(_this2.allAnswer);\n                _context2.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                answer = _step.value;\n                console.log(\"answer\", answer);\n\n                if (!(answer.on_reply == true && answer.user.UID == _this2.$store.getters.user.UID)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                url = \"/api/board/answer-detail/\".concat(answer.id);\n                _context2.next = 11;\n                return axios({\n                  method: 'patch',\n                  url: url,\n                  data: {\n                    on_reply: false\n                  }\n                }) // if error happenes, delete catch part\n                .catch(function (e) {\n                  var logger = {\n                    message: \"in Community/PatchOnReplay. couldn't patch onReplay\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this2.$store.commit('setLogger', logger);\n\n                  _this2.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 11:\n                _this2.$store.dispatch('getDjangoUser');\n\n                _this2.$store.dispatch('getAnsweredQuestion');\n\n              case 13:\n                _context2.next = 4;\n                break;\n\n              case 15:\n                _context2.next = 20;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _iterator.e(_context2.t0);\n\n              case 20:\n                _context2.prev = 20;\n\n                _iterator.f();\n\n                return _context2.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 17, 20, 23]]);\n      }))();\n    },\n    getRelatedQuestion: function getRelatedQuestion() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // relatedQuestion.results Start from here.\n                // => deleteSameQuestion to delete the same question in RQ as detail Q.\n                // => makeRandomSlicedArray to make random sliced RQ array\n                if (_this3.user) {\n                  _this3.$store.commit('setIsLoading', true);\n\n                  if (_this3.questionTags.length == 1) {\n                    url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&uid=\").concat(_this3.user.UID);\n                  }\n\n                  if (_this3.questionTags.length == 2) {\n                    url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&tag=\").concat(_this3.questionTags[1], \"&uid=\").concat(_this3.user.UID);\n                  }\n\n                  if (_this3.questionTags.length == 3) {\n                    url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&tag=\").concat(_this3.questionTags[1], \"&tag=\").concat(_this3.questionTags[2], \"&uid=\").concat(_this3.user.UID);\n                  }\n                } else {\n                  console.log('elsedayo');\n\n                  _this3.$store.commit('setIsLoading', true);\n\n                  if (_this3.questionTags.length == 1) {\n                    url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0]);\n                  }\n\n                  if (_this3.questionTags.length == 2) {\n                    url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&tag=\").concat(_this3.questionTags[1]);\n                  }\n\n                  if (_this3.questionTags.length == 3) {\n                    url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&tag=\").concat(_this3.questionTags[1], \"&tag=\").concat(_this3.questionTags[2]);\n                  }\n                }\n\n                _context3.next = 3;\n                return axios.get(url).then(function (response) {\n                  _this3.relatedQuestion = response.data;\n                }).catch(function (e) {\n                  var logger = {\n                    message: \"in Community/getRelatedQuestion. couldn't get RelatedQuestion\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this3.$store.commit('setLogger', logger);\n\n                  _this3.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 3:\n                _this3.$store.commit('setRelatedQuestion', _this3.relatedQuestion.results);\n\n                _this3.deleteSameQuestion();\n\n                _this3.makeRandomSlicedArray();\n\n                _this3.$store.commit('setIsLoading', false);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    createFavorite: function createFavorite() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios({\n                  method: 'post',\n                  url: '/api/board/favorte-question-create/',\n                  data: {\n                    user: _this4.$store.state.signup.user.uid,\n                    question: [_this4.question.id]\n                  }\n                }).catch(function (e) {\n                  var logger = {\n                    message: \"in Community/createFavorite. couldn't create Favorite\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this4.$store.commit('setLogger', logger);\n\n                  _this4.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    handleAddedFavorite: function handleAddedFavorite() {\n      if (this.user) {\n        this.addedFavorite = !this.addedFavorite;\n        this.createFavorite();\n      } else {\n        this.handleShowNotLogin();\n      }\n    },\n    countViewedNumUp: function countViewedNumUp() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var i;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!_this5.loginUser) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                i = 0;\n\n              case 2:\n                if (!(i < _this5.question.tag.length)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                _context5.next = 5;\n                return axios({\n                  method: 'post',\n                  url: '/api/board/user-tag/create/',\n                  data: {\n                    user: _this5.$store.state.signup.user.uid,\n                    tag: _this5.question.tag[i].id\n                  }\n                }).catch(function (e) {\n                  var logger = {\n                    message: \"in Community/createFavorite. couldn't increase ViewedNum\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this5.$store.commit('setLogger', logger);\n\n                  _this5.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 5:\n                i++;\n                _context5.next = 2;\n                break;\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    handleShowAnswerPage: function handleShowAnswerPage() {\n      console.log('clicked');\n\n      if (this.user) {\n        if (this.emailVerified) {\n          this.showAnswerPage = !this.showAnswerPage;\n          this.$store.commit('handleFixedScroll');\n        } else {\n          this.handleShowEmailVerified();\n          this.$store.commit('fixedScrollTrue');\n          this.$store.commit('showModalTrue');\n        }\n      } else {\n        this.handleShowNotLogin();\n        this.$store.commit('fixedScrollTrue');\n        this.$store.commit('showModalTrue');\n      } // this.handleScrollFixed()\n\n    },\n    getReply: function getReply(reply) {\n      this.reply = reply;\n    },\n    handleShowReplyPage: function handleShowReplyPage() {\n      this.showReplyPage = !this.showReplyPage;\n      this.$store.commit('handleFixedScroll');\n    },\n    handleReplyPage: function handleReplyPage(id) {\n      var reply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      this.$store.commit('handleFixedScroll');\n      this.getAnswerId(id);\n      this.showReplyPage = !this.showReplyPage;\n      this.getReply(reply);\n    },\n    getAnswerId: function getAnswerId(id) {\n      this.answerId = id;\n    },\n    getReplyUserAndQuestionUser: function getReplyUserAndQuestionUser(reply, question) {\n      this.questionAnswerUser.push(reply);\n      this.questionAnswerUser.push(question);\n    },\n    handleQuestionStatus: function handleQuestionStatus(status) {\n      if (status == true) {\n        return this.questionStatus[1];\n      } else {\n        return this.questionStatus[0];\n      }\n    },\n    getQuestionTagList: function getQuestionTagList(questionTags) {\n      console.log(\"GQTL\", questionTags);\n      this.questionTags = [];\n\n      var _iterator2 = _createForOfIteratorHelper(questionTags),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var tag = _step2.value;\n          this.questionTags.push(tag.id);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    // G-method return a value from array invoked\n    // RandArray(array){\n    //     var rand = Math.random()*array.length | 0;\n    //     var rValue = array[rand];\n    //     console.log(\"RAndA\", rValue)\n    //     return rValue;\n    // },\n    makeRandomSlicedArray: function makeRandomSlicedArray() {\n      var num = 3;\n      console.log(\"MRSA\");\n\n      if (this.relatedQuestion.results.lendth < 3) {\n        num = this.relatedQuestion.results.lendth;\n      }\n\n      console.log(\"MRSA2\");\n      this.getRandomQuestion(this.relatedQuestion.results);\n      this.slicedRelatedQuestion = this.relatedQuestion.results.slice(0, num);\n      console.log(this.slicedRelatedQuestion);\n    },\n    deleteSameQuestion: function deleteSameQuestion() {\n      if (this.loginUser) {\n        var _iterator3 = _createForOfIteratorHelper(this.relatedQuestion.results),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var q = _step3.value;\n\n            if (q.id == this.question.id) {\n              this.relatedQuestion.results.splice(this.relatedQuestion.results.indexOf(q), 1);\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    },\n    getRandomQuestion: function getRandomQuestion(array) {\n      for (var i = array.length - 1; i >= 0; i--) {\n        var r = Math.floor(Math.random() * (i + 1));\n        var tmp = array[i];\n        array[i] = array[r];\n        array[r] = tmp;\n      }\n\n      for (var k = 0; k < array.length; k++) {\n        for (var _i = array[k].answer.length - 1; _i >= 0; _i--) {\n          var _r = Math.floor(Math.random() * (_i + 1));\n\n          var _tmp = array[k].answer[_i];\n          array[k].answer[_i] = array[k].answer[_r];\n          array[k].answer[_r] = _tmp;\n        }\n      }\n\n      return array;\n    },\n    getRelatedSlug: function getRelatedSlug(slug) {\n      this.getDetail(slug);\n      router.push(slug);\n    },\n    addLikedNum: function addLikedNum() {\n      if (this.user) {\n        this.liked_num += 1;\n        this.addedLiked = true;\n\n        for (var i = 0; i < this.likedUserIdList.length; i++) {\n          this.checkedLikedUserList.push(this.likedUserIdList[i].UID);\n        }\n\n        this.checkedLikedUserList.push(this.$store.state.signup.user.uid);\n        this.countUpLiked();\n      } else {\n        this.handleShowNotLogin();\n      }\n    },\n    clearAllLiked: function clearAllLiked() {\n      this.addedLiked = false;\n\n      for (var i in this.answerDict) {\n        this.answerDict[i].addedAnswerLiked = false;\n      }\n    },\n    checkUserLiked: function checkUserLiked() {\n      // this is for question like\n      if (this.loginUser) {\n        this.clearAllLiked();\n\n        var _iterator4 = _createForOfIteratorHelper(this.likedUserIdList),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var i = _step4.value;\n\n            if (i.UID == this.$store.state.signup.user.uid) {\n              this.addedLiked = true;\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        console.log(\"likedhere\", this.addedLiked); // this is for answer like\n\n        for (var answerId in this.answerDict) {\n          // console.log(Array.isArray(this.answerDict[answerId].likedUsers))\n          var _iterator5 = _createForOfIteratorHelper(this.answerDict[answerId].likedUsers[0]),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var user = _step5.value;\n\n              if (user == this.$store.state.signup.user.uid) {\n                this.answerDict[answerId].addedAnswerLiked = true;\n              }\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n        }\n      }\n    },\n    favoriteCheck: function favoriteCheck() {\n      try {\n        if (this.$store.state.signup.djangoUser.favorite_question[0]) {\n          this.addedFavorite = false;\n\n          var _iterator6 = _createForOfIteratorHelper(this.$store.state.signup.djangoUser.favorite_question[0].question),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var i = _step6.value;\n              console.log('loop', this.addedFavorite, i, this.question.id);\n\n              if (this.question.id == i) {\n                this.addedFavorite = true;\n                console.log(this.addedFavorite);\n                break;\n              }\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        }\n      } catch (_unused2) {}\n    },\n    countUpLiked: function countUpLiked() {\n      var _this6 = this;\n\n      // console.log('in countUPLiked',this.question.liked_num[0].id ,this.addedLiked)\n      if (this.addedLiked) {\n        axios.patch(\"/api/board/question-liked/\".concat(this.question.liked_num[0].id, \"/\"), {\n          user: this.checkedLikedUserList,\n          liked_num: this.liked_num\n        }).catch(function (e) {\n          var logger = {\n            message: \"in Community/createFavorite. couldn't countUp Liked\",\n            path: window.location.pathname,\n            actualErrorName: e.name,\n            actualErrorMessage: e.message\n          };\n\n          _this6.$store.commit('setLogger', logger);\n\n          _this6.$store.commit('setIsLoading', false);\n\n          router.push({\n            name: 'ConnectionError'\n          });\n        });\n      }\n    },\n    questionPatch: function questionPatch() {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var url, logger;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                // patch view count_up and on_answer\n                console.log(\"inPatch-question\");\n\n                if (!_this7.user) {\n                  _context6.next = 39;\n                  break;\n                }\n\n                _context6.prev = 2;\n                url = \"/api/board/question/\".concat(_this7.questionSlug);\n\n                if (!(_this7.questionUserBoolean == false && _this7.question.on_answer == true && _this7.question.on_reply == true && _this7.question.user.UID == _this7.user.UID)) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                console.log('count', _this7.questionSlug);\n                _context6.next = 8;\n                return axios.patch(url, {\n                  viewed: _this7.viewed + 1,\n                  on_answer: false,\n                  on_reply: false\n                });\n\n              case 8:\n                _this7.$store.dispatch('getDjangoUser');\n\n                _this7.$store.dispatch('getAnsweredQuestion');\n\n                console.log('done patch 2');\n                _context6.next = 31;\n                break;\n\n              case 13:\n                if (!(_this7.questionUserBoolean == false && _this7.question.on_answer == true && _this7.question.user.UID == _this7.user.UID)) {\n                  _context6.next = 21;\n                  break;\n                }\n\n                _context6.next = 16;\n                return axios.patch(url, {\n                  viewed: _this7.viewed + 1,\n                  on_answer: false\n                });\n\n              case 16:\n                _this7.$store.dispatch('getDjangoUser');\n\n                _this7.$store.dispatch('getAnsweredQuestion');\n\n                console.log('done patch answer');\n                _context6.next = 31;\n                break;\n\n              case 21:\n                if (!(!_this7.questionUserBoolean && _this7.question.on_reply && _this7.question.user.UID == _this7.user.UID)) {\n                  _context6.next = 30;\n                  break;\n                }\n\n                console.log(\"in_reply\");\n                _context6.next = 25;\n                return axios.patch(url, {\n                  viewed: _this7.viewed + 1,\n                  on_reply: false\n                });\n\n              case 25:\n                _this7.$store.dispatch('getDjangoUser');\n\n                _this7.$store.dispatch('getAnsweredQuestion');\n\n                console.log('done patch reply');\n                _context6.next = 31;\n                break;\n\n              case 30:\n                if (_this7.questionUserBoolean == false) {\n                  axios.patch(url, {\n                    viewed: _this7.viewed + 1\n                  });\n                  console.log('done patch count');\n                }\n\n              case 31:\n                _context6.next = 39;\n                break;\n\n              case 33:\n                _context6.prev = 33;\n                _context6.t0 = _context6[\"catch\"](2);\n                logger = {\n                  message: \"in Community/createFavorite. couldn't patch question\",\n                  path: window.location.pathname,\n                  actualErrorName: _context6.t0.name,\n                  actualErrorMessage: _context6.t0.message\n                };\n\n                _this7.$store.commit('setLogger', logger);\n\n                _this7.$store.commit('setIsLoading', false);\n\n                router.push({\n                  name: 'ConnectionError'\n                });\n\n              case 39:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[2, 33]]);\n      }))();\n    },\n    makeAnswerDict: function makeAnswerDict() {\n      // liked_answer start from here to make each answer dict\n      // to hold information\n      var _iterator7 = _createForOfIteratorHelper(this.allAnswer),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var answer = _step7.value;\n          this.answerDict[answer.id] = {\n            \"liked_id\": answer.liked_answer[0].id,\n            \"liked_num\": answer.liked_answer[0].liked_num,\n            \"addedAnswerLiked\": false,\n            \"likedUsers\": [answer.liked_answer[0].user]\n          };\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      this.checkUserLiked();\n    },\n    addAnsweerLikedNum: function addAnsweerLikedNum(answerId) {\n      // add answer id start from here. answerDict has each answers liked num.\n      // invoke answerId to att liked num, then addedAnswerLiked = true \n      if (this.user) {\n        this.answerDict[answerId].liked_num += 1;\n        this.answerDict[answerId].addedAnswerLiked = true;\n        this.answerDict[answerId].likedUsers[0].push(this.$store.state.signup.user.uid);\n        this.countUpLikedAnswer(answerId);\n      } else {\n        this.handleShowNotLogin();\n      }\n    },\n    countUpLikedAnswer: function countUpLikedAnswer(answerId) {\n      var _this8 = this;\n\n      axios.patch(\"/api/board/answer-liked/\".concat(this.answerDict[answerId].liked_id, \"/\"), {\n        user: this.answerDict[answerId].likedUsers[0],\n        liked_num: this.answerDict[answerId].liked_num\n      }).catch(function (e) {\n        var logger = {\n          message: \"in Community/countUpLikedAnswer. couldn't countUp LikedAnswer\",\n          path: window.location.pathname,\n          actualErrorName: e.name,\n          actualErrorMessage: e.message\n        };\n\n        _this8.$store.commit('setLogger', logger);\n\n        _this8.$store.commit('setIsLoading', false);\n\n        router.push({\n          name: 'ConnectionError'\n        });\n      });\n    },\n    handleShowEmailVerified: function handleShowEmailVerified() {\n      console.log('V');\n      this.showEmailVerified = !this.showEmailVerified;\n      console.log('V', this.showEmailVerified);\n    },\n    handleShowNotLogin: function handleShowNotLogin() {\n      this.showNotLogin = !this.showNotLogin;\n    },\n    scrollTop: function scrollTop() {\n      window.scrollTo({\n        top: 0 // behavior: \"smooth\"\n\n      });\n    } // falseNotifications(elem){\n    //     if(elem == \"answer\"){\n    //         this.notifications.answer = false\n    //     }\n    //     if(elem == \"reply\"){\n    //         this.notifications.reply = false\n    //     }\n    // },\n    // handleScrollFixed(){\n    //     this.scrollFixed = !this.scrollFixed\n    // },\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","router","NotVerified","NotLogin","Answer","Reply","components","data","currentUserId","question","showAnswerPage","showReplyPage","questionTitle","questionDescription","questionSlug","questionId","answerId","allAnswer","answerDict","addedAnswerLiked","viewed","questionStatus","reply","questionUser","questionUserBoolean","liked_num","addedLiked","addedFavorite","likedUserIdList","checkedLikedUserList","relatedQuestion","slicedRelatedQuestion","questionTags","showEmailVerified","showNotLogin","mounted","getDetail","console","log","$route","params","slug","beforeUnmount","$store","dispatch","computed","user","state","signup","djangoUser","UID","loginUser","emailVerified","getters","getEmailVerified","fixedScroll","methods","dateConvert","date","time","newDate","dt","Date","getHours","setHours","stringDT","toLocaleString","year","month","day","hour","minute","replace","commit","scrollTop","url","get","then","response","title","description","id","answer","patchOnReply","questionPatch","makeAnswerDict","getQuestionTagList","tag","getRelatedQuestion","countViewedNumUp","favoriteCheck","catch","logger","message","path","window","location","pathname","actualErrorName","e","name","actualErrorMessage","push","on_reply","method","length","results","deleteSameQuestion","makeRandomSlicedArray","createFavorite","uid","handleAddedFavorite","handleShowNotLogin","i","handleShowAnswerPage","handleShowEmailVerified","getReply","handleShowReplyPage","handleReplyPage","getAnswerId","getReplyUserAndQuestionUser","questionAnswerUser","handleQuestionStatus","status","num","lendth","getRandomQuestion","slice","q","splice","indexOf","array","r","Math","floor","random","tmp","k","getRelatedSlug","addLikedNum","countUpLiked","clearAllLiked","checkUserLiked","likedUsers","favorite_question","patch","on_answer","liked_answer","addAnsweerLikedNum","countUpLikedAnswer","liked_id","scrollTo","top"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue"],"sourcesContent":["<template>\n<!-- this scroll fixed should be change -->\n    <div  class=\"board-detail-wrapper\" :class=\"{'scroll-fixed':fixedScroll, 'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div class=\"question-wrapper\" v-if=\"question&&relatedQuestion.results&&$store.state.isLoading==false\">\n                <p class='title-white'>質問板</p>\n                    <div v-if=\"$store.state.board.notifications.reply\" :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n                        <div class=\"notification-text\">\n                            返信しました。\n                        </div>\n                    </div>\n                    <div v-if=\"$store.state.board.notifications.answer\" :class=\"{'notification-blue':$store.state.board.notifications.answer}\">\n                        <div class=\"notification-text\">\n                            回答しました。\n                        </div>\n                    </div>\n                    <div v-if=\"$store.state.board.notifications.post\" :class=\"{'notification-blue':$store.state.board.notifications.post}\">\n                        <div class=\"notification-text\">\n                            投稿しました。\n                        </div>\n                    </div>\n                <div class='question-box'> \n                    <div class=\"question-box-header\">\n                        <div class=\"image\">\n                            <img class='img' v-bind:src=\"question.user.thumbnail\"/>\n                        </div>\n                        <div class=\"username-date\">\n                            <p> {{ question.user.name}}さん </p>\n                            <p> {{ dateConvert(question.created_on) }} </p>\n                        </div>\n                        <div class=\"question-status-container\">\n                            <p class=\"question-status\"> {{ handleQuestionStatus(question.solved) }} </p>\n                        </div>\n                    </div>\n                    <div\n                     class=\"tag-container\">\n                        <div\n                         class=\"tag\"\n                         v-for=\"(tag,questionindex) in question.tag\"\n                         v-bind:key=\"questionindex\">\n                            {{ tag.tag }}\n                        </div>\n                    </div>\n                    <div class=\"title-question\">\n                        <p class=\"question-title\">  {{ question.title }} </p>        \n                        <p class='question-description'> {{ question.description}} </p>\n                    </div>\n                    <div class=\"question-box-footer\">\n                        <div class=\"like-wrapper\">\n                            <i v-if=\"addedLiked==false\" @click=\"addLikedNum\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"addedLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\" v-if=\"question.liked_num[0]\">{{ liked_num }} </p>\n                        </div>\n                        <div class=\"viewed-wrapper\">\n                            <p class=\"viewed\"> viewed {{ question.viewed}} </p>\n                        </div>\n                        <div class=\"favorite\" @click=\"handleAddedFavorite()\">\n                            <i v-if=\"addedFavorite==false\" class=\"far fa-star\"></i>\n                            <div  v-if=\"addedFavorite\" class=\"added-favorite\">\n                                <i class=\"far fa-star\"></i>\n                                <i class=\"fas fa-star\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <button v-if=\"question.user.UID != UID\" class=\"btn-base-white-db-sq\" @click='handleShowAnswerPage'>回答する</button>\n                    </div>\n                    <!-- <button @click=\"handleNotifications('reply')\" >unko</button> -->\n                </div>\n                <div class=\"relative-box\">\n                    <p>関連した質問</p>\n                    <div\n                        class=\"question-wrapper\"\n                        v-for=\"(question,questionindex) in slicedRelatedQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class='question-list' @click=\"getRelatedSlug(question.slug)\">\n                            <div class=\"tag-wrapper\">\n                                <div \n                                class=\"tag\"\n                                v-for=\"(tag,tagindex) in question.tag\" \n                                v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                            </div>\n                            <!-- <div class=\"question-title\">{{ question.title }}</div> -->\n                            <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                            <div class='good-like-wrapper'>\n                                <i class=\"far fa-heart\"></i>\n                                <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                                <div class=\"date\">投稿日：{{ dateConvert(question.created_on) }}</div>\n                            </div>\n                        </div>        \n                    </div>\n                    <div class=\"see-more\">\n                        <router-link :to=\"{name:'RelatedQuestion'}\">もっと見る></router-link>\n                    </div>\n                </div>\n                <div class=\"answer-box\" v-if='question.answer[0]'>\n                    <div class=\"answer-box-title\">\n                        <p v-if='question.answer[0]'> 回答</p>\n                        ({{ question.answer.length }}件)\n                    </div>\n                    <div\n                     class=\"under-line\"\n                     v-for=\"(answer,answerindex) in question.answer\"\n                     v-bind:key=\"answerindex\">\n                        <div class=\"answer-box-header\">\n                            <img class='img' v-bind:src=\"answer.user.thumbnail\"/>\n                            <div class=\"username-date\">\n                                <p> {{ answer.user.name}}さん </p>\n                                <p> {{ dateConvert(answer.created_on) }} </p>\n                            </div>\n                        </div>\n                        <p class=\"answer-description-container\">{{ answer.description }} </p>\n                        <div class=\"answer-box-footer\">\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked==false\" @click=\"addAnsweerLikedNum(answer.id)\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\"> {{ answerDict[answer.id].liked_num }} </p>\n                        </div>\n                        <div v-if=\"loginUser\">\n                            <button v-if=\"question.user.UID == $store.state.signup.user.uid && answer.reply.length == 0\"\n                            class='btn-base-white-db-sq' \n                            @click='handleReplyPage(answer.id, answer.description)'>\n                            返信する\n                            </button>\n                        </div>\n                        <!-- reply should be appir if post user or replyer -->\n                        <div class='reply-wrapper' v-if='answer.reply[0]'>\n                            <div>コメント</div>\n                            <div class='reply-flex' \n                            v-for=\"(reply,replyindex) in answer.reply\"\n                            v-bind:key=\"replyindex\">\n                                <div class=\"reply-wrapper-header\">\n                                    <img class='img' v-bind:src=\"reply.user.thumbnail\"/>\n                                    <div class=\"username-date\">\n                                        <p> {{ reply.user.name}}さん </p>\n                                        <p> {{ reply.created_on }} </p>\n                                    </div>\n                                </div>\n                                <p class=\"replay-description\">{{ reply.description }}</p>\n                                <div v-if=\"loginUser\">\n                                    <button v-if='$store.state.signup.user.uid==question.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID!=question.user.UID || $store.state.signup.user.uid==answer.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID==question.user.UID'\n                                    class='btn-base-white-db-sq' \n                                    @click='handleReplyPage(answer.id, reply.description)'>\n                                    返信する\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class='line-flex'>\n                            <div class=\"line\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <transition name=\"notice\">\n                <NotVerified\n                    class=\"components\"\n                    v-if=\"showEmailVerified\"\n                    @handleShowEmailVerified=\"handleShowEmailVerified\"\n                />\n            </transition>\n            <transition name=\"notice\">\n                <NotLogin\n                    class=\"components\"\n                    v-if=\"showNotLogin\"\n                    @handleShowNotLogin=\"handleShowNotLogin\"\n                />\n            </transition>\n            <Answer v-if='showAnswerPage'\n            class=\"components\"\n            @handleShowAnswerPage='handleShowAnswerPage'\n            @getDetail=\"getDetail\"\n            :questionTitle='questionTitle'\n            :questionDescription='questionDescription'\n            :questionId='questionId'\n            />\n            <Reply v-if='showReplyPage'\n            class=\"components\"\n            @handleShowReplyPage='handleShowReplyPage'\n            @getDetail=\"getDetail\"\n            :answerId='answerId'\n            :reply=\"reply\"\n            />\n        <!-- {{ questions }} -->\n        <!-- <div class=question \n         v-for=\"(question,questionindex) in questions\"\n         v-bind:key=\"questionindex\">\n            <div class=\"tag\">tag:{{ question.tag }}</div>\n            <div class=\"title\">title:{{ question.title }}</div>\n            <div class=\"good\">good:{{ question.good }}</div>\n            <div class=\"date\">data:{{ remove_T_Z(question.timestamp) }}</div>\n        </div>\n        <CreateQuestion v-if='showCreateQuestion'\n        @handleShowConfirm='handleShowConfirm'/>\n        <Confirm v-if='showConfirm'/> -->\n         </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport NotLogin from '@/components/login/NotLogin.vue'\nimport  Answer from '@/components/board/Answer.vue'\nimport  Reply from '@/components/board/Reply.vue'\nexport default {\n    components: {\n        Answer,\n        Reply,\n        NotVerified,\n        NotLogin\n  },\n    data(){\n        return{\n            currentUserId:'',\n            question:'',\n            showAnswerPage: false,\n            showReplyPage: false,\n            questionTitle:'',\n            questionDescription:'',\n            questionSlug:'',\n            questionId:'',\n            answerId:'',\n            allAnswer:'',\n            answerDict:{},\n            addedAnswerLiked:{},\n            viewed:0,\n            questionStatus:['回答受付中','解決済み'],\n            reply:'',\n            questionUser: '',\n            questionUserBoolean: false,\n            liked_num: '',\n            addedLiked: false,\n            addedFavorite: false,\n            likedUserIdList:'',\n            checkedLikedUserList:[],\n            relatedQuestion:'',\n            slicedRelatedQuestion:'',\n            questionTags:[],\n            showEmailVerified:false,\n            showNotLogin: false,\n        }\n    },\n    mounted() {\n        this.getDetail()\n        console.log(\"mounted_detail\",this.$route.params.slug)\n    },\n    beforeUnmount(){\n        console.log('beforeUNMOUNT')\n        this.$store.dispatch('getDjangoUser')\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        UID(){\n            try{\n                return this.$store.state.signup.djangoUser.UID\n            }catch{\n                return ''\n            }\n        },\n        loginUser(){\n            return this.$store.state.signup.user\n        },\n        emailVerified(){\n            return this.$store.getters.getEmailVerified\n        },\n        fixedScroll(){\n            return this.$store.getters.fixedScroll\n        }\n    },\n    methods: {\n        dateConvert(date){\n            var date = date\n            var time = ''\n            var newDate = ''\n            var dt = new Date(date)\n            if(dt.getHours() > 11){\n                time = \" PM\"\n                dt = dt.setHours(dt.getHours()-12)\n                date = new Date(dt)\n            }else{\n                time = \" AM\"\n            }\n            newDate = date + time + \" UTC\"\n            dt = new Date(newDate)\n            var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n            return stringDT.replace(/\\//g,'-')\n        },\n        async getDetail(slug=\"\") {\n            this.$store.commit('setIsLoading', true)\n            this.scrollTop()\n            console.log('inthegetdetail')\n            if(slug==\"\"){\n                var url = `/api/board/question/${this.$route.params.slug}`\n            }else{\n                var url = `/api/board/question/${slug}`\n            }\n            await axios\n                .get(url)\n                .then(response => {\n                    this.question = response.data\n                    this.questionTitle = this.question.title\n                    this.questionDescription = this.question.description\n                    this.questionSlug = this.question.slug\n                    this.questionId = this.question.id\n                    this.liked_num = this.question.liked_num[0].liked_num\n                    this.likedUserIdList = this.question.liked_num[0].user\n                    this.questionUser = this.question.user.UID\n                    this.allAnswer = this.question.answer\n                    this.viewed = this.question.viewed\n                    this.patchOnReply()\n                    // this.patchOnAnswer()\n                    this.questionPatch()\n                    this.makeAnswerDict()\n                    console.log(\"after_makeAD\")\n                    this.getQuestionTagList(this.question.tag)\n                    console.log(\"after_taglist\")\n                    this.getRelatedQuestion()\n                    console.log(\"after_relation\")\n                    this.countViewedNumUp()\n                    console.log(\"after_numup\")\n                    this.favoriteCheck()\n                    console.log(\"after_favocheck\")\n                    // if(!this.loginUser){\n                    //     this.$store.commit('setIsLoading', false)\n                    // }\n                })\n                .catch(e => {\n                    let logger = {\n                    message: \"in Community/getDetail. couldn't get Detail-question\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n                }\n                this.$store.commit('setLogger',logger)\n                this.$store.commit('setIsLoading', false)\n                router.push({ name: 'ConnectionError' })\n            })\n            // this.$store.commit('setIsLoading', false)\n        },\n        async patchOnReply(){\n            console.log(\"patchOnReply\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(\"answer\",answer)\n                if(answer.on_reply==true&&answer.user.UID==this.$store.getters.user.UID){\n                    var url = `/api/board/answer-detail/${answer.id}`\n                    await axios({\n                        method: 'patch',\n                        url: url,\n                        data: {\n                            on_reply: false,\n                        },\n                    })\n                    // if error happenes, delete catch part\n                    .catch(e =>{\n                        let logger = {\n                            message: \"in Community/PatchOnReplay. couldn't patch onReplay\",\n                            path: window.location.pathname,\n                            actualErrorName: e.name,\n                            actualErrorMessage: e.message,\n                        }\n                        this.$store.commit('setLogger',logger)\n                        this.$store.commit('setIsLoading', false)\n                        router.push({ name: 'ConnectionError' })\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                }\n            }\n        },\n        async getRelatedQuestion() {\n            // relatedQuestion.results Start from here.\n            // => deleteSameQuestion to delete the same question in RQ as detail Q.\n            // => makeRandomSlicedArray to make random sliced RQ array\n            if(this.user){\n                this.$store.commit('setIsLoading', true)\n                if(this.questionTags.length == 1){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&uid=${this.user.UID}`\n                }\n                if(this.questionTags.length == 2){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&uid=${this.user.UID}`\n                }\n                if(this.questionTags.length == 3){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}&uid=${this.user.UID}`\n                }\n            }\n            else{\n                console.log('elsedayo')\n                this.$store.commit('setIsLoading', true)\n                if(this.questionTags.length == 1){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}`\n                }\n                if(this.questionTags.length == 2){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}`\n                }\n                if(this.questionTags.length == 3){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}`\n                }\n            }\n            await axios\n                .get(url)\n                .then(response => {\n                this.relatedQuestion = response.data\n                })\n                .catch(e => {\n                    let logger = {\n                        message: \"in Community/getRelatedQuestion. couldn't get RelatedQuestion\",\n                        path: window.location.pathname,\n                        actualErrorName: e.name,\n                        actualErrorMessage: e.message,\n                    }\n                    this.$store.commit('setLogger',logger)\n                    this.$store.commit('setIsLoading', false)\n                    router.push({ name: 'ConnectionError' })\n                })\n            this.$store.commit('setRelatedQuestion', this.relatedQuestion.results)\n            this.deleteSameQuestion()\n            this.makeRandomSlicedArray()\n            this.$store.commit('setIsLoading', false)\n        },\n        async createFavorite(){\n            await axios({\n                method: 'post',\n                url: '/api/board/favorte-question-create/',\n                data: {\n                    user: this.$store.state.signup.user.uid,\n                    question: [this.question.id]\n                },\n            })\n            .catch(e => {\n                let logger = {\n                    message: \"in Community/createFavorite. couldn't create Favorite\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n                }\n                this.$store.commit('setLogger',logger)\n                this.$store.commit('setIsLoading', false)\n                router.push({ name: 'ConnectionError' })\n            })\n        },\n        handleAddedFavorite(){\n            if(this.user){\n                this.addedFavorite=!this.addedFavorite\n                this.createFavorite()\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        async countViewedNumUp(){\n            if(this.loginUser){\n                for (let i =0; i < this.question.tag.length; i++){\n                    await axios({\n                    method: 'post',\n                    url: '/api/board/user-tag/create/',\n                    data: {\n                        user: this.$store.state.signup.user.uid,\n                        tag: this.question.tag[i].id\n                        },  \n                    })\n                    .catch(e => {\n                        let logger = {\n                            message: \"in Community/createFavorite. couldn't increase ViewedNum\",\n                            path: window.location.pathname,\n                            actualErrorName: e.name,\n                            actualErrorMessage: e.message,\n                        }\n                        this.$store.commit('setLogger',logger)\n                        this.$store.commit('setIsLoading', false)\n                        router.push({ name: 'ConnectionError' })\n                    })\n                }\n            }\n        },\n        handleShowAnswerPage(){\n            console.log('clicked')\n            if(this.user){\n                if(this.emailVerified){\n                this.showAnswerPage = !this.showAnswerPage\n                this.$store.commit('handleFixedScroll')\n                }else{\n                    this.handleShowEmailVerified()\n                    this.$store.commit('fixedScrollTrue')\n                    this.$store.commit('showModalTrue')\n                }\n            }else{\n                this.handleShowNotLogin()\n                this.$store.commit('fixedScrollTrue')\n                this.$store.commit('showModalTrue')\n            }\n\n            // this.handleScrollFixed()\n        },\n        getReply(reply){\n            this.reply = reply\n        },\n        handleShowReplyPage(){\n            this.showReplyPage = !this.showReplyPage\n            this.$store.commit('handleFixedScroll')\n        },\n        handleReplyPage(id, reply=''){\n            this.$store.commit('handleFixedScroll')\n            this.getAnswerId(id)\n            this.showReplyPage = !this.showReplyPage\n            this.getReply(reply)\n        },\n        getAnswerId(id){\n            this.answerId = id\n        },\n        getReplyUserAndQuestionUser(reply, question){\n            this.questionAnswerUser.push(reply)\n            this.questionAnswerUser.push(question)\n        },\n        handleQuestionStatus(status){\n            if(status==true){\n                return this.questionStatus[1]\n            }\n            else{\n                return this.questionStatus[0]\n            }\n        },\n        getQuestionTagList(questionTags){\n            console.log(\"GQTL\",questionTags)\n            this.questionTags = []\n            for(let tag of questionTags){\n                this.questionTags.push(tag.id)\n            }\n        },\n        // G-method return a value from array invoked\n        // RandArray(array){\n        //     var rand = Math.random()*array.length | 0;\n        //     var rValue = array[rand];\n        //     console.log(\"RAndA\", rValue)\n        //     return rValue;\n        // },\n        makeRandomSlicedArray(){\n            let num = 3\n            console.log(\"MRSA\")\n            if (this.relatedQuestion.results.lendth < 3){\n                num = this.relatedQuestion.results.lendth\n            }\n            console.log(\"MRSA2\")\n            this.getRandomQuestion(this.relatedQuestion.results)\n            this.slicedRelatedQuestion = this.relatedQuestion.results.slice(0,num)\n            console.log(this.slicedRelatedQuestion)\n        },\n        deleteSameQuestion(){\n            if(this.loginUser){\n                for(let q of this.relatedQuestion.results){\n                    if (q.id == this.question.id){\n                        this.relatedQuestion.results.splice(this.relatedQuestion.results.indexOf(q),1)\n                        break\n                    }\n                }\n            }\n        },\n        getRandomQuestion(array){\n            for (let i = array.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[i]\n                array[i] = array[r]\n                array[r] = tmp\n                }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[k].answer[i]\n                array[k].answer[i] = array[k].answer[r]\n                array[k].answer[r] = tmp\n                }}\n                return array\n            },\n        getRelatedSlug(slug){\n            this.getDetail(slug)\n            router.push(slug)\n            },\n        addLikedNum(){\n            if(this.user){\n                this.liked_num += 1\n                this.addedLiked = true\n                for(let i=0; i<this.likedUserIdList.length; i++){\n                    this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n                }\n                this.checkedLikedUserList.push(this.$store.state.signup.user.uid)\n                this.countUpLiked()\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        clearAllLiked(){\n            this.addedLiked = false\n            for(let i in this.answerDict){\n                this.answerDict[i].addedAnswerLiked = false\n            }\n        },\n        checkUserLiked(){\n            // this is for question like\n            if(this.loginUser){\n                this.clearAllLiked()\n                for(let i of this.likedUserIdList){\n                    if(i.UID == this.$store.state.signup.user.uid){\n                    this.addedLiked = true\n                    }\n                }\n                console.log(\"likedhere\",this.addedLiked)\n                // this is for answer like\n                for(let answerId in this.answerDict){\n                    // console.log(Array.isArray(this.answerDict[answerId].likedUsers))\n                    for( let user of this.answerDict[answerId].likedUsers[0]){\n                        if(user == this.$store.state.signup.user.uid){\n                            this.answerDict[answerId].addedAnswerLiked = true\n                        }\n                    }\n                }   \n            }\n        },\n        favoriteCheck(){\n            try{\n                if(this.$store.state.signup.djangoUser.favorite_question[0]){\n                    this.addedFavorite = false\n                    for(let i of this.$store.state.signup.djangoUser.favorite_question[0].question){\n                        console.log('loop',this.addedFavorite,i,this.question.id)\n                        if(this.question.id==i){\n                            this.addedFavorite = true\n                            console.log(this.addedFavorite)\n                            break\n                        }\n                    }\n                }\n            }\n            catch{\n                \n            }\n        },\n        countUpLiked(){\n            // console.log('in countUPLiked',this.question.liked_num[0].id ,this.addedLiked)\n            if(this.addedLiked){\n                axios.patch(`/api/board/question-liked/${this.question.liked_num[0].id}/`,\n                {\n                    user: this.checkedLikedUserList,\n                    liked_num: this.liked_num\n                })\n                .catch(e => {\n                    let logger = {\n                        message: \"in Community/createFavorite. couldn't countUp Liked\",\n                        path: window.location.pathname,\n                        actualErrorName: e.name,\n                        actualErrorMessage: e.message,\n                    }\n                    this.$store.commit('setLogger',logger)\n                    this.$store.commit('setIsLoading', false)\n                    router.push({ name: 'ConnectionError' })\n                })\n            }\n        },\n        async questionPatch(){\n            // patch view count_up and on_answer\n            console.log(\"inPatch-question\")\n            if(this.user){\n                try{\n                    const url = `/api/board/question/${this.questionSlug}`\n                    if(this.questionUserBoolean == false&&this.question.on_answer==true&&this.question.on_reply==true&&this.question.user.UID==this.user.UID){\n                        console.log('count', this.questionSlug)\n                        await axios.patch(url,{\n                            viewed: this.viewed + 1,\n                            on_answer: false,\n                            on_reply: false\n                        })\n                        this.$store.dispatch('getDjangoUser')\n                        this.$store.dispatch('getAnsweredQuestion')\n                        console.log('done patch 2')\n                    }\n                    else if(this.questionUserBoolean == false&&this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n                        await axios.patch(url,{\n                            viewed: this.viewed + 1,\n                            on_answer: false\n                        })\n                        this.$store.dispatch('getDjangoUser')\n                        this.$store.dispatch('getAnsweredQuestion')\n                        console.log('done patch answer')\n                    }\n                    else if(!this.questionUserBoolean&&this.question.on_reply&&this.question.user.UID==this.user.UID){\n                        console.log(\"in_reply\")\n                        await axios.patch(url,{\n                            viewed: this.viewed + 1,\n                            on_reply: false\n                        })\n                        this.$store.dispatch('getDjangoUser')\n                        this.$store.dispatch('getAnsweredQuestion')\n                        console.log('done patch reply')\n                    }\n                    else if(this.questionUserBoolean == false){\n                        axios.patch(url,{\n                            viewed: this.viewed + 1\n                        })\n                        console.log('done patch count')\n                    }\n                } catch (e){\n                    let logger = {\n                        message: \"in Community/createFavorite. couldn't patch question\",\n                        path: window.location.pathname,\n                        actualErrorName: e.name,\n                        actualErrorMessage: e.message,\n                    }\n                    this.$store.commit('setLogger',logger)\n                    this.$store.commit('setIsLoading', false)\n                    router.push({ name: 'ConnectionError' })\n                }\n            }\n        },\n        makeAnswerDict(){\n            // liked_answer start from here to make each answer dict\n            // to hold information\n            for(let answer of this.allAnswer){\n                this.answerDict[answer.id] = {\n                    \"liked_id\":answer.liked_answer[0].id,\n                    \"liked_num\":answer.liked_answer[0].liked_num,\n                    \"addedAnswerLiked\":false,\n                    \"likedUsers\":[answer.liked_answer[0].user]\n                }\n            }\n            this.checkUserLiked()\n        },\n        addAnsweerLikedNum(answerId){\n            // add answer id start from here. answerDict has each answers liked num.\n            // invoke answerId to att liked num, then addedAnswerLiked = true \n            if(this.user){\n                this.answerDict[answerId].liked_num += 1\n                this.answerDict[answerId].addedAnswerLiked = true\n                this.answerDict[answerId].likedUsers[0].push(this.$store.state.signup.user.uid)\n                this.countUpLikedAnswer(answerId)\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        countUpLikedAnswer(answerId){\n            axios.patch(`/api/board/answer-liked/${this.answerDict[answerId].liked_id}/`,\n            {\n                user: this.answerDict[answerId].likedUsers[0],\n                liked_num: this.answerDict[answerId].liked_num\n            })\n            .catch(e => {\n                let logger = {\n                    message: \"in Community/countUpLikedAnswer. couldn't countUp LikedAnswer\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n                }\n                this.$store.commit('setLogger',logger)\n                this.$store.commit('setIsLoading', false)\n                router.push({ name: 'ConnectionError' })\n            })\n        },\n        handleShowEmailVerified(){\n            console.log('V')\n            this.showEmailVerified = !this.showEmailVerified\n            console.log('V',this.showEmailVerified)\n        },\n        handleShowNotLogin(){\n            this.showNotLogin = !this.showNotLogin\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n                // behavior: \"smooth\"\n            });\n        },\n        // falseNotifications(elem){\n        //     if(elem == \"answer\"){\n        //         this.notifications.answer = false\n        //     }\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = false\n        //     }\n        // },\n        // handleScrollFixed(){\n        //     this.scrollFixed = !this.scrollFixed\n        // },\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n@import \"style/_board.scss\";\n.scroll{\n    position:fixed;\n}\n.components{\n    z-index: 3;\n}\n\n.board-detail-wrapper{\n    display: flex;\n    justify-content: center;\n    width: 100vw;\n    min-height: 80vh;\n    margin-bottom: 1rem;\n    // align-items: center;\n}\n.question-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // width: 100%;\n    .question-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        .question-box-header{\n            display: flex;\n            .image{\n                .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n                }\n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n                width:40%;\n            }\n            .question-status-container{\n                display: flex;\n                justify-content: flex-end;\n                width: 50%;\n                position: relative;\n                .question-status{\n                    position: absolute;\n                    right:0;\n                    top: 0.5rem;\n                    color: rgb(255, 43, 209);\n                    margin-right: 1rem;\n                }\n            }\n        }\n        .tag-container{\n            display: flex;\n            width: 100%;\n            padding-left: 1rem;\n            .tag{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 1rem;\n                padding:0.5rem; \n            }\n        }\n        .title-question{\n            padding:1rem;\n            .question-title{\n                text-align: center;\n                margin-bottom: 1rem;\n                border-bottom: solid $dark-blue;\n                display: inline-block;\n                padding-bottom: 1rem;\n            }\n            .question-description{\n                text-align: left;\n                padding: 1rem; \n                background: rgb(236, 236, 236);\n                white-space: pre-wrap;\n            }\n        }\n        .question-box-footer{\n            display: flex;\n            margin-bottom: 0.5rem;\n            width:100%;\n            .like-wrapper{\n                flex-basis: 10%;\n                display: flex;\n                .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 0.5rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n                // flex-basis: 10%;\n                }\n            }\n            .viewed-wrapper{\n                flex-basis: 40%;\n                display: flex;\n                .viewed{\n                margin-left: 1rem;\n                margin-right: 0.5rem;\n                }\n            }\n            .favorite{\n                display: flex;\n                position:relative;\n                justify-content:flex-end;\n                flex-basis: 50%;\n                margin-top: 0.1rem;\n                margin-right: 1rem;\n                box-sizing: border-box;\n                position:relative;\n                .far{\n                    position: absolute;\n                    right: 0.1rem;\n                }\n                .added-favorite{\n                    position: relative;\n                    .far{\n                        position: absolute;\n                        z-index:2;\n                        right: 0.1rem;\n                    }\n                    .fas{\n                        position: absolute;\n                        color: yellow;\n                        right: 0.1rem;\n                        z-index:1;\n                    }\n                }\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n    }\n    .relative-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n        padding: 0.5rem;\n        display: flex;\n        flex-direction: column;\n        P{\n            margin-bottom: 0.5rem;\n        }\n        .question-wrapper{\n            width: 100%;\n            display: flex;\n            .question-list{\n                border-bottom: solid rgb(236, 234, 234);\n                margin-bottom: 0.5rem;\n                width:100%;\n                padding: 0.2rem;\n                // background: rgb(236, 234, 234);\n                display: flex;\n                flex-direction: column;\n                .tag-wrapper{\n                    display: flex;\n                    width: 100%;\n                    .tag{\n                        border: solid rgb(230, 230, 230);\n                        margin-left: 0.3rem;\n                        min-width: 2rem;\n                    }\n                }\n                .good-like-wrapper{\n                    display: flex;\n                    font-size: 0.7rem;\n                    .fa-heart{\n                        // color: rgb(221, 36, 221);\n                        margin-left: 0.5rem;\n                        margin-right: 0.3rem;\n                        margin-top: 0.2rem;\n                    }\n                    .date{\n                        margin-left: 0.5rem;\n                    }\n                }\n            }\n            // .question-list:hover{\n            //     background: rgb(230, 136, 136);\n            // }\n        }\n        .see-more{\n            display: flex;\n            justify-content: flex-end;\n            margin-right: 0.5rem;\n            margin-top: 0.5rem;\n\n        }\n    }\n    .answer-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .answer-box-title{\n            display: flex;\n            justify-content: center;\n            margin-top: 1rem;\n        }\n        .under-line{\n            width: 90%;\n            border-bottom: 0.2rem solid rgb(236, 236, 236);\n            margin-top: 2rem;\n            margin-bottom: 1rem;\n            &:last-child{\n                border-bottom: none;\n            }\n        }\n        .answer-box-header{\n            display: flex;\n            .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n            }\n        }\n        .answer-description-container{\n            margin: 1rem;\n            background: rgb(236, 236, 236);\n            padding: 1rem;\n            text-align: left;\n        }\n        .answer-box-footer{\n            display: flex;\n            .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 1rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n        .reply-wrapper{\n            // display: flex;\n            // flex-direction: column;\n            // justify-content: center;\n            // align-items: center;\n            .reply-flex{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                margin-bottom: 1rem;\n                .reply-wrapper-header{\n                    width: 80%;\n                    height: 100%;\n                    display: flex;              \n                    .img{\n                        border-radius: 50%; \n                        width:  3rem;   \n                        height: 3rem;\n                        margin: 0.5rem; \n                    }\n                    .username-date{\n                        display: flex;\n                        flex-direction: column;\n                        align-items: flex-start;\n                        margin-top: 0.5rem;\n                    }\n                \n                }\n                .replay-description{\n                    width: 63%;\n                    // border-left: solid $dark-blue;\n                    background: rgb(236, 236, 236);\n                    text-align: left;\n                    padding: 0.5rem;\n                }\n            }\n        }\n        .line-flex{\n            display: flex;\n            width: 100%;\n            justify-content: center;\n            align-items: center;\n            margin-top: 0.5rem;\n            // .line-flex:last-of-type{\n            //     border-bottom: none;\n            // }\n            &.line{\n                width: 90%;\n                border-bottom: 0.2rem solid rgb(236, 236, 236);\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n                &:last-child{\n                    border-bottom: none;\n                }\n            }\n        }\n    }\n}\n.icon{\n    animation: icon 0.5s ;\n\n}\n@keyframes icon {\n    0% {\n        transform: scale(1);\n        \n        opacity: 0;\n      }\n    30%{\n        opacity: 1;\n    }\n    80%{\n        opacity: 1;\n    }\n    100% {\n        opacity: 0;\n        transform: scale(1.5);\n      }\n}\n</style>"]},"metadata":{},"sourceType":"module"}