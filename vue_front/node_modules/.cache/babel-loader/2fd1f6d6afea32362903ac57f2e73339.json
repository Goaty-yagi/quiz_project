{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { createStore } from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport axios from 'axios';\nimport { router } from \"../main.js\";\nimport signup from './modules/signup';\nimport board from './modules/board';\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    isLoading: false,\n    id: 1,\n    field: '',\n    num: 3,\n    questions: [],\n    quizzes: [],\n    randomURL: '',\n    test: null,\n    notice: false,\n    step: 1\n  };\n};\n\nexport default createStore({\n  modules: {\n    signup: signup,\n    board: board\n  },\n  state: getDefaultState(),\n  plugins: [createPersistedState({\n    key: 'quizkey',\n    // 設定しなければ'vuex'\n    paths: ['id', 'num', 'test', \"signup.djangoUser\", \"signup.UID\", \"board.answeredQuestion\", \"board.reccomendedQuestion\", \"board.centerTag\"],\n    // 保存するモジュール：設定しなければ全部。\n    storage: window.sessionStorage // 設定しなければlocalStorage\n\n  })],\n  getters: {\n    questions: function questions(state) {\n      return state.questions;\n    },\n    quizzes: function quizzes(state) {\n      return state.quizzes;\n    }\n  },\n  mutations: {\n    setIsLoading: function setIsLoading(state, status) {\n      state.isLoading = status;\n    },\n    reset: function reset(state) {\n      Object.assign(state, getDefaultState());\n      router.push('/');\n    },\n    getURLs: function getURLs(state, item) {\n      state.num = item.num; // state.field= field\n\n      state.id = item.status;\n      state.test = item.test;\n      state.randomURL = \"/quiz/\".concat(state.id);\n    },\n    getRandomQuestion: function getRandomQuestion(state, array) {\n      for (var i = array.length - 1; i >= 0; i--) {\n        var r = Math.floor(Math.random() * (i + 1));\n        var tmp = array[i];\n        array[i] = array[r];\n        array[r] = tmp;\n      }\n\n      for (var k = 0; k < array.length; k++) {\n        for (var _i = array[k].answer.length - 1; _i >= 0; _i--) {\n          var _r = Math.floor(Math.random() * (_i + 1));\n\n          var _tmp = array[k].answer[_i];\n          array[k].answer[_i] = array[k].answer[_r];\n          array[k].answer[_r] = _tmp;\n        }\n      }\n\n      return array;\n    },\n    setQuestions: function setQuestions(state, questions) {\n      return state.questions = questions;\n    },\n    setQuiz: function setQuiz(state, quizzes) {\n      return state.quizzes = quizzes;\n    },\n    // initial\n    testHandler: function testHandler(state) {\n      state.test = false;\n    },\n    noticeHandler: function noticeHandler(state) {\n      state.notice = true;\n    },\n    noticeOff: function noticeOff(state) {\n      state.notice = false;\n    },\n    addStep: function addStep(state) {\n      state.step += 1;\n    },\n    stepClear: function stepClear(state) {\n      state.step = 1;\n    } // quizRouter(i,f,n){\n    //   state.id = i\n    //   state.field = f\n    //   state.num = n\n    //   return { name: 'Quiz', params:{ id:state.id, field:state.field, num:state.num}}\n    // }\n\n  },\n  actions: {\n    getquiz: function getquiz(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var state, commit, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                state = _ref.state, commit = _ref.commit;\n                _context.next = 3;\n                return axios.get(\"/api/quizzes/?id=\".concat(state.id)).catch(function (error) {\n                  console.log('error', error.message);\n                });\n\n              case 3:\n                response = _context.sent;\n                commit('setQuiz', response.data);\n                console.log('action', response.data);\n                console.log(state.isLoading);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getquestions: function getquestions(_ref2) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var state, commit, response2;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref2.state, commit = _ref2.commit;\n                console.log('action2', state.num);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return axios.get(\"/api/questions/quizzes/?quiz=\".concat(state.id, \"&num=\").concat(state.num));\n\n              case 5:\n                response2 = _context2.sent;\n                commit('getRandomQuestion', response2.data);\n                commit('setQuestions', response2.data);\n                commit('setIsLoading', false);\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](2);\n                commit('setIsLoading', false);\n                router.push({\n                  name: 'Notfound'\n                });\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 11]]);\n      }))();\n    }\n  }\n});","map":{"version":3,"names":["createStore","createPersistedState","axios","router","signup","board","getDefaultState","isLoading","id","field","num","questions","quizzes","randomURL","test","notice","step","modules","state","plugins","key","paths","storage","window","sessionStorage","getters","mutations","setIsLoading","status","reset","Object","assign","push","getURLs","item","getRandomQuestion","array","i","length","r","Math","floor","random","tmp","k","answer","setQuestions","setQuiz","testHandler","noticeHandler","noticeOff","addStep","stepClear","actions","getquiz","commit","get","catch","error","console","log","message","response","data","getquestions","response2","name"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport  signup  from './modules/signup'\nimport  board  from './modules/board'\n\nlet getDefaultState = () => {\n  return {\n    isLoading: false,\n    id: 1,\n    field:'',\n    num:3,\n    questions:[],\n    quizzes:[],\n    randomURL:'',\n    test:null,\n    notice:false,\n    step:1,\n  }}\n\n\nexport default createStore({\n  modules: {\n    signup,\n    board,\n  },\n  state: getDefaultState(),\n  plugins: [\n    createPersistedState({\n      key: 'quizkey',  // 設定しなければ'vuex'\n      paths: [\n        'id',\n        'num',\n        'test',\n        \"signup.djangoUser\",\n        \"signup.UID\",\n        \"board.answeredQuestion\",\n        \"board.reccomendedQuestion\",\n        \"board.centerTag\"\n      ],  // 保存するモジュール：設定しなければ全部。\n      storage: window.sessionStorage,  // 設定しなければlocalStorage\n    })],\n  getters:{\n    questions:(state) => state.questions,\n    quizzes:(state) => state.quizzes\n  },\n  mutations: {\n    setIsLoading(state, status) {\n      state.isLoading = status\n    },\n    reset(state) {\n      Object.assign(state, getDefaultState())\n      router.push('/')\n    },\n    getURLs(state,item){\n      state.num = item.num\n      // state.field= field\n      state.id = item.status\n      state.test = item.test\n      state.randomURL = `/quiz/${state.id}`\n    },\n    getRandomQuestion(state,array){\n      for (let i = array.length - 1; i >= 0; i--) {\n        let r = Math.floor(Math.random() * (i + 1))\n        let tmp = array[i]\n        array[i] = array[r]\n        array[r] = tmp\n        }\n      for ( let k =0; k < array.length; k++){\n        for (let i = array[k].answer.length - 1; i >= 0; i--) {\n          let r = Math.floor(Math.random() * (i + 1))\n          let tmp = array[k].answer[i]\n          array[k].answer[i] = array[k].answer[r]\n          array[k].answer[r] = tmp\n          }}\n        return array\n    },\n    setQuestions:(state,questions) => (state.questions = questions),\n    setQuiz:(state,quizzes) => (state.quizzes = quizzes),\n    // initial\n    testHandler(state){\n      state.test = false\n    },\n    noticeHandler(state){\n      state.notice = true\n      \n    },\n    noticeOff(state){\n      state.notice = false  \n    },\n    addStep(state){\n      state.step += 1\n    },\n    stepClear(state){\n      state.step = 1\n    },\n    // quizRouter(i,f,n){\n    //   state.id = i\n    //   state.field = f\n    //   state.num = n\n    //   return { name: 'Quiz', params:{ id:state.id, field:state.field, num:state.num}}\n    // }\n  },\n  actions: {\n    async getquiz({ state, commit }){\n      let response = await axios.get(`/api/quizzes/?id=${state.id}`)\n      .catch(error => {\n        console.log('error',error.message)\n                         })\n      commit('setQuiz',response.data);\n      console.log('action',response.data)\n      console.log(state.isLoading)\n      },\n    async getquestions({ state, commit }){\n      console.log('action2',state.num)\n      try{\n        let response2 = await axios.get(`/api/questions/quizzes/?quiz=${state.id}&num=${state.num}`)\n        commit('getRandomQuestion',response2.data)\n        commit('setQuestions',response2.data);\n        commit('setIsLoading', false)\n      }\n      catch{\n        commit('setIsLoading', false)\n        router.push({ name: 'Notfound' })\n        \n                         }\n      \n    },\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}