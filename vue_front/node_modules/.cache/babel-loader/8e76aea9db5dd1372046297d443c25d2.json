{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport axios from 'axios';\nimport Cropper from 'cropperjs';\nexport default {\n  data: function data() {\n    return {\n      file: '',\n      image: '',\n      selectedFile: null,\n      cropper: {},\n      destination: {}\n    };\n  },\n  mounted: function mounted() {\n    // this.cropper()\n    console.log(this.image);\n  },\n  methods: {\n    getImage: function getImage(event) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('event', event);\n                _this.selectedFile = URL.createObjectURL(event.target.files[0]);\n                _this.image = event.target.files[0];\n                _context.next = 5;\n                return console.log(_this.image);\n\n              case 5:\n                _this.imageCropper();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    imageCropper: function imageCropper() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.cropper = new Cropper(_this2.$refs.image, {\n                  zoomable: false,\n                  scalable: false,\n                  zoomOnTouch: true,\n                  aspectRatio: 1,\n                  crop: function crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    chancel: function chancel() {\n      this.selectedFile = null;\n    },\n    // getCroppedURL(){\n    //     console.log('croppedURL')\n    //     document.getElementById('crop-btn').addEventListener('click', function () {\n    //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n    //     var result = document.getElementById('result-img');\n    //     result.src = resultImgUrl;\n    //      });\n    // },\n    userUpdate: function userUpdate() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var canvas;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                canvas = _this3.cropper.getCroppedCanvas({\n                  width: 160,\n                  height: 90,\n                  minCropBoxHeight: 300,\n                  minCropBoxWidth: 300,\n                  maxWidth: 4096,\n                  maxHeight: 4096,\n                  fillColor: '#fff',\n                  imageSmoothingEnabled: false,\n                  imageSmoothingQuality: 'high'\n                });\n                canvas.toBlob( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(blob) {\n                    var formData;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            formData = new FormData();\n                            formData.append('thumbnail', blob, \"\".concat(_this3.image, \".png\"));\n                            console.log('getthumb', formData.get('thumbnail'));\n                            _context3.next = 5;\n                            return axios.patch(\"/api/user/\".concat(_this3.$route.params.uid), formData);\n\n                          case 5:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }(), 'image/png'); // this.$router.go({path: this.$router.currentRoute.path, force: true})\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","Cropper","data","file","image","selectedFile","cropper","destination","mounted","console","log","methods","getImage","event","URL","createObjectURL","target","files","imageCropper","$refs","zoomable","scalable","zoomOnTouch","aspectRatio","crop","detail","x","y","width","height","rotate","scaleX","scaleY","chancel","userUpdate","canvas","getCroppedCanvas","minCropBoxHeight","minCropBoxWidth","maxWidth","maxHeight","fillColor","imageSmoothingEnabled","imageSmoothingQuality","toBlob","blob","formData","FormData","append","get","patch","$route","params","uid"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"sourcesContent":["<template>\n    <div class='thumbnail-wrapper'>\n        <p>thumbnail</p>\n        <form @submit.prevent='userUpdate'>\n            <input type=\"file\" @change='getImage' enctype=\"multipart/form-data\">\n            <div class=\"cropper-outer-wrapper\" v-if=\"selectedFile\">\n                <div class='cropperinner-wrapper'>\n                    <img ref='image' :src=\"selectedFile\" style=\"width: 300px; height: 300px;\">\n                </div>\n                <button class='save-button'>save</button>\n                <button class='save-button' v-if='selectedFile' @click='chancel'>chancel</button>\n                <!-- 　　　　 -->\n            </div>\n        </form>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Cropper from 'cropperjs';\nexport default {\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            cropper:{},\n            destination:{}\n        }\n    },\n    mounted(){\n        // this.cropper()\n        console.log(this.image)\n    },\n    methods:{\n        async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files[0]\n            await console.log(this.image)\n            this.imageCropper()\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: false,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n        },\n        // getCroppedURL(){\n        //     console.log('croppedURL')\n        //     document.getElementById('crop-btn').addEventListener('click', function () {\n        //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n        //     var result = document.getElementById('result-img');\n        //     result.src = resultImgUrl;\n        //      });\n        // },\n        async userUpdate(){\n            const canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minCropBoxHeight: 300,\n                minCropBoxWidth: 300,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n                });\n            canvas.toBlob(async (blob) => {\n            const formData = new FormData();\n            formData.append('thumbnail',blob, `${this.image}.png`),\n            console.log('getthumb',formData.get('thumbnail')),\n            await axios.patch(`/api/user/${this.$route.params.uid}`,\n                formData\n            )\n            }, 'image/png')\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        }\n    }\n}\n</script>\n\n<style>\n.thumbnail-wrapper{\n    width: 100%;\n    height: 100%;\n    overflow:scroll;  \n}\n.save-button{\n    z-index: 10;\n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}