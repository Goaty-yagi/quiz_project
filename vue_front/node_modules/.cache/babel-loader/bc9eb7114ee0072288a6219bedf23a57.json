{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/MyQuiz.vue?vue&type=template&id=56af8991&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/MyQuiz.vue","mtime":1653189893847},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/MyQuiz.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"my-quiz-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading&&!quizOpen}\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <MyQuizPractice\n            v-if=\"quizOpen\"\n            @handleQuizOpen=\"handleQuizOpen\"\n            />\n            <!-- <QuizP\n            v-if=\"componentHandleDict.quiz\"\n            :forQuizPageInfo=\"forQuizPageInfo\"\n            @backQuizHome=\"backQuizHome\"/> -->\n            <div class=\"main-container\" v-if=\"!quizOpen\">\n                <div class=\"my-quiz-header\">\n                    <p class=\"title-white\">My-Quiz</p>\n                    <p class=\"register\">登録数{{ length }} / {{myQuiz.max_num}}</p>\n                    <p class=\"max\">(最大 {{myQuiz.max_num}} 個まで登録できます)</p>\n                </div>\n                <div class=\"my-quiz-container\" v-if=\"$store.state.isLoading==false\">\n                    <div class=\"no-my-quiz\" v-if=\"!showButtonAndNoQuiz\">\n                        <div class=\"no-quiz\">\n                            登録したクイズはありません。<br>\n                            クイズ画面から登録できます。<br><br>\n                            クイズを登録すると、<br>そのクイズだけ練習できます。\n                        </div>\n                        <router-link :to=\"{ name: 'QuizHome'}\" class=\"btn-basegra-white-db-sq\">\n                            クイズへ行く\n                        </router-link>\n                    </div>\n                    <div class=my-quiz-loop @click=\"getQuestionDetailInfo(question)\" v-for=\"(question,questionindex) in myQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class=\"each-quiz-container\">\n                            <div class=\"question-index-container\">\n                                <div class=\"question-index\">{{ questionindex+1 }}</div>\n                            </div>\n                            <div class=\"question-field\">{{ convertFieldIdToInt(question.question.field[0]) }}</div>\n                            <div class=\"question-grade\">{{ convertQuizIdToInt(question.question.quiz) }}</div>\n                            <div class=\"question-label\">{{ question.question.label.substr(0,15)+'...' }}</div>\n                            <div class=\"close-container\">\n                    \n                                <!-- <div @click=\"deleteMyQuestion(question.question.id)\" class=\"close\">\n                                    <i class=\"fas fa-times\"></i>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                    <QuizDetail\n                    v-if=\"quizDetail\"\n                    :questionDetailInfo=\"questionDetailInfo\"\n                    :myQuestion=\"myQuestion\"\n                    :showButtonAndNoQuiz=\"showButtonAndNoQuiz\"\n                    @handleQuizDetail='handleQuizDetail'\n                    @deleteQuestionFunForDetailPage=\"deleteQuestionFunForDetailPage\"                    \n                    />\n                </div>\n                <div @click=\"handleQuizOpen()\" v-if=\"showButtonAndNoQuiz\" class=\"btn-basegra-white-db-sq\">\n                    練習\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport MyQuizPractice from '@/components/quiz_components/MyQuizPractice.vue'\nimport QuizDetail from '@/components/quiz_components/QuizDetail.vue'\n\nexport default {\n    components: {\n        MyQuizPractice,\n        NotVerified,\n        QuizDetail,\n    },\n    data(){\n        return{\n            myQuestion:'',\n            showButtonAndNoQuiz:false,\n            quizOpen: false,\n            quizDetail: false,\n            questionDetailInfo:{\n                id:'',\n                grade:'',\n                field:'',\n                status:'',\n                label:'',\n                image:'',\n            }\n        }\n    },\n    mounted(){\n        this.getMyQuestion()\n        console.log(\"mountedINMQ\",this.statusNameId)\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        myQuiz(){\n            return this.$store.state.signup.djangoUser.my_quiz[0]\n        },\n        length(){\n            // length = this.$store.state.signup.djangoUser.my_quiz[0].my_question\n            return this.myQuestion.length\n        },\n        fieldNameId(){\n            return this.$store.getters.fieldNameId\n        },\n        quizNameId(){\n            return this.$store.getters.quizNameId\n        },\n        statusNameId(){\n            this.$store.dispatch(\"getStatusNameId\")\n            return this.$store.getters.statusNameId\n        }\n\n    },\n    methods:{\n        convertFieldIdToInt(fieldId){\n            for(let i of this.fieldNameId){\n                if(i.id==fieldId){\n                    return i.name\n                }\n            }\n        },\n        convertQuizIdToInt(quizId){\n            for(let i of this.quizNameId){\n                if(i.id==quizId){\n                    return i.name\n                }\n            }\n        },\n        convertStatusIdToInt(statusId){\n            for(let i of this.statusNameId){\n                if(i.id==statusId){\n                    return i.name\n                }\n            }\n        },\n        getQuestionDetailInfo(question){\n            this.questionDetailInfo.id = question.question.id\n            this.questionDetailInfo.grade = this.convertQuizIdToInt(question.question.quiz)\n            this.questionDetailInfo.field = this.convertFieldIdToInt(question.question.field[0])\n            this.questionDetailInfo.status = this.convertStatusIdToInt(question.question.status[0])\n            this.questionDetailInfo.label = question.question.label\n            this.questionDetailInfo.image = question.question.image\n            this.handleQuizDetail()\n\n        },\n        getMyQuestion(){\n            this.myQuestion = this.$store.state.signup.myQuestion\n            if(this.myQuestion.length){\n                this.showButtonAndNoQuiz = true\n            }\n        },\n        deleteMyQuestion(question){\n            console.log(question)\n            let payload = {\n                \"question\":question,\n                \"myQuiz\":this.myQuiz.id\n            }\n            console.log('in_delete',this.myQuestion)\n            this.myQuestion = this.myQuestion.filter(item =>{\n                return (item.question.id !=question)\n            })\n            if(this.myQuestion.length==0){\n                this.myQuestion = ''\n                this.showButtonAndNoQuiz = false\n            }\n            console.log(payload,this.myQuestion)\n            this.$store.commit(\"deleteMyQuestion\",question)\n            this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n        },\n        deleteQuestionFunForDetailPage(question){\n            console.log('length1',this.myQuestion.length)\n            this.myQuestion = this.myQuestion.filter(item =>{\n                return (item.question.id !=question)\n            })\n            if(this.myQuestion.length==0){\n                this.myQuestion = ''\n                this.showButtonAndNoQuiz = false\n            }\n            console.log('length2',this.myQuestion.length)\n        },\n        // deleteQuestionFunForDetailPage2(){\n        //     if(this.myQuestion.length==0){\n        //         this.myQuestion = ''\n        //         this.showButtonAndNoQuiz = false\n        //     }\n        // },\n        // showButtonAndNoQuizFalse(){\n        //     console.log('INSF')\n        //     this.showButtonAndNoQuiz = false\n        // },\n        handleQuizOpen(){\n            this.quizOpen = !this.quizOpen\n        },\n        handleQuizDetail(){\n            this.quizDetail = !this.quizDetail\n        }\n    }\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.main-container{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        }\n\n.my-quiz-wrapper{\n    display: flex;\n    justify-content: center;\n    .main-wrapper{\n        .my-quiz-header{\n            margin-bottom: 1rem;\n            .register{\n                font-size: 1.3rem;\n                color: $lite-gray;\n                font-weight: bold;\n            }\n            .max{\n                font-size: 0.8rem;\n                color: $lite-gray;\n            }\n        }\n        .my-quiz-container{\n            width: 95%;\n            min-height: 300px;\n            border: solid $base-color;\n            border-radius: 5px;\n            background: $back-white;\n            padding-top: 1rem;\n            padding-bottom: 1rem;\n            .no-my-quiz{\n                margin:2rem;\n                .no-quiz{\n                    color: $dark-blue;\n                    font-weight: bold;\n                    margin-bottom: 2rem;\n                }\n            \n            }\n            .my-quiz-loop:hover{\n                background: $back-lite-white;\n                border-bottom: solid $lite-gray;\n            }\n            .my-quiz-loop{\n                position: relative;\n                display: flex;\n                align-items: center;\n                border-bottom: solid $lite-gray;\n                transition: .5s;\n                .each-quiz-container{\n                    position: relative;\n                    display: flex;\n                    width: 100%;\n                    margin-bottom: 1rem;\n                    margin-top: 1rem;\n                    // padding-bottom: 0.5rem;\n                    align-items: center;\n                    // justify-content: center;\n                    .question-index-container{\n                        flex-basis: 10%;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        .question-index{\n                            border: solid $base-color;\n                            border-radius: 50vh;\n                            width: 1.7rem;\n                            height: 1.7rem;\n                            margin-left: 0.4rem;\n                            font-weight: bold;\n                            background: $dark-blue;\n                            color: white;\n                        }\n                    }\n                    .question-field{\n                        flex-basis: 20%;\n\n                    }\n                    .question-grade{\n                        flex-basis: 20%;\n                    }\n                    .question-label{\n                        flex-basis: 50%;\n                        font-size: 0.8rem;\n                    }\n                    // .close-container{\n                    //     position: absolute;\n                    //     right: 0;\n                    //     margin-bottom: 0.8rem;\n                    //     margin-right: 0.5rem;\n                    //     flex-basis: 5%;\n                    //     display: flex;\n                    //     align-items: center;\n                    //     justify-content: center;\n                    //     margin-left: 0.7rem;\n                    //     height: 20px;\n                    //     .close{\n                    //         position:relative;\n                    //         border: 0.1rem solid rgb(180, 179, 179);\n                    //         border-radius: 50vh;\n                    //         width: 1rem;\n                    //         height: 1rem;\n                    //         margin-top: auto;\n                    //         margin-right: auto;\n                    //         .fa-times{\n                    //             font-size: 0.8rem;\n                    //         }\n                    //     }\n                    // }\n                }\n            }\n           \n        }\n        .btn-basegra-white-db-sq{\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            padding-top: 0.2rem;\n            padding-bottom: 0.2rem;\n            padding-left: 1.2rem;\n            padding-right: 1.2rem;\n            font-weight: bold;\n            font-size: 1.2rem;\n\n        }\n\n    }\n\n}\n</style>"],"sourceRoot":""}]}