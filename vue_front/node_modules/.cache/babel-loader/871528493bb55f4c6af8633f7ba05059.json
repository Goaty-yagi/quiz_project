{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/thread-loader/dist/cjs.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js","mtime":1652698624945},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js"],"names":["store","axios","extractIdentifiers","namespace","state","title","description","selectedTagList","relatedQuestion","searchedQuestions","reccomendedQuestion","answeredQuestion","notificationApi","showNoticeOnAcount","answer","reply","notifications","post","getters","user","rootState","signup","djangoUser","gettersAnsweredQuestions","gettersReccomendedQuestion","gettersAnswer","gettersReply","getUserTags","checkDict","checkedList","checkedlist2","user_tag","i","tag","id","total_num","push","Object","keys","length","m","aryMax","a","b","Math","max","values","reduce","result","r","key","console","log","noty","on_answer","on_reply","o","k","mutations","resetNotifications","getTitle","payload","getDescription","setReccomendedQuestion","setRelatedQuestion","getTagList","actions","commitHandleOnReplyAndOnAnswer","commit","handleNotifications","context","setTimeout","getSearchQuestion","get","then","response","data","catch","error","getRelatedQuestion","url","UID","getAnsweredQuestion","rootGetters","getUID","getNotificationApi"],"mappings":"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","sourcesContent":["import store from '..'\nimport axios from 'axios'\nimport { extractIdentifiers } from '@vue/compiler-core'\n\nexport default {\n    namespace: true,\n    state: {\n        title:'',\n        description:'',\n        selectedTagList:'',\n        relatedQuestion:'',\n        searchedQuestions:'',\n        reccomendedQuestion:'',\n        answeredQuestion:'',\n        // favoriteQuestion:'',\n        notificationApi:'',\n        showNoticeOnAcount:{\n            answer:false,\n            reply:false,\n        },\n        notifications:{\n            reply: false,\n            answer: false,\n            post: false,\n        },\n    },\n    getters:{\n        user(state, getters, rootState){\n            return rootState.signup.djangoUser\n        },\n        gettersAnsweredQuestions(state){\n            return state.answeredQuestion\n        },\n        gettersReccomendedQuestion(state){\n            return state.reccomendedQuestion\n        },\n        gettersAnswer(state){\n            return state.showNoticeOnAcount.answer\n        },\n        gettersReply(state){\n            return state.showNoticeOnAcount.reply\n        },\n        // notificationApi(state){\n        //     return state.notificationApi\n        // },\n        getUserTags(state, getters){\n            if(getters.user){\n                let checkDict = {}  \n                // let checkedDict = {}\n                let checkedList = []\n                let checkedlist2 = []\n                for(let i of getters.user.user_tag){\n                    checkDict[i.tag.id] = i.total_num\n                    checkedList.push(i.tag)\n                    // console.log('loop',Object.keys(checkDict).length,checkDict)\n                }\n                if(Object.keys(checkDict).length <= 3){\n                    return checkedList\n                }\n                if(Object.keys(checkDict).length > 3){\n                    for(let m=0; m < 3; m++){\n                        const aryMax = function (a, b) {return Math.max(a, b);}\n                        let max = Object.values(checkDict).reduce(aryMax);\n                        const result = Object.keys(checkDict).reduce( (r, key) => {\n                            return checkDict[key] === max ? key : r \n                            }, null);\n                        // checkedDict[result] = max\n                        delete checkDict[result]\n                        checkedlist2.push(result)\n                    }\n                    return checkedlist2\n                }\n            }\n        },\n        notificationApi(state){\n            console.log('NAPI',state.notificationApi.length)\n            var noty = state.notificationApi\n            if(noty.length==0){\n                return false\n            }\n            else if(noty.length==1){\n                for(let i of noty.length[0]){\n                    console.log(i)\n                    if(i.on_answer||i.on_reply){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n            else if(noty.length==2){\n                console.log(\"d2desu\",noty[0])\n                for(let o of noty[0]){\n                    console.log(o)\n                    if(o.on_answer||o.on_reply){\n                        return true\n                    }else{\n                        for(let k of noty[1]){\n                            if(k.on_reply){\n                                return true\n                            }\n                            else{\n                                return false\n                            }\n                        }\n                    }\n                }\n            }\n        },        \n        // handleOnReplyAndOnAnswer(state, getters, rootState){\n        //     console.log(\"handleOnREPLY\")\n        //     for(let question of getters.gettersAnsweredQuestions){\n        //         for(let answer of question.answer){\n        //             if(answer.on_reply==true&&answer.user.UID==getters.user.UID){\n        //                 return  true\n        //             }else{\n        //                 return false\n        //             }\n        //         }\n        //     }\n        //     console.log(\"end\")\n        // },\n    },\n    mutations:{\n        resetNotifications(state){\n            console.log(\"in_reset\")\n            state.notifications.answer = false\n            state.notifications.reply = false\n            state.notifications.post = false\n        },\n        getTitle(state,payload){\n            state.title = payload\n            console.log('Got title',state.title)\n        },\n        getDescription(state, payload){\n            state.description = payload\n            console.log('Got description',state.description)\n        },\n        // getSelectedTagList(state, payload){\n        //     state.selectedTagList = payload\n        // },\n        setReccomendedQuestion(state, payload){\n            state.reccomendedQuestion = payload\n            console.log('set-reccomendedQuestion')\n        },\n        setRelatedQuestion(state, payload){\n            state.relatedQuestion = payload\n            console.log(\"commited relatedQ\",state.relatedQuestion )\n        },\n        getTagList(state, payload){\n                state.selectedTagList = payload\n                console.log('Got tagID',state.selectedTagList)\n        },\n        // dateConvert(state,payload){\n        //     console.log(\"first\",payload)\n        //     var date = payload\n        //     var time = ''\n        //     var newDate = ''\n        //     var dt = new Date(date)\n        //     console.log(\"S\",dt)\n        //     if(dt.getHours() > 11){\n        //         time = \" PM\"\n        //         dt = dt.setHours(dt.getHours()-12)\n        //         date = new Date(dt)\n        //         console.log('pm',date)\n        //     }else{\n        //         time = \" AM\"\n        //     }\n        //     newDate = date + time + \" UTC\"\n        //     dt = new Date(newDate)\n        //     console.log(\"newdata IN Store\",newDate,'dt',dt)\n        //     var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n        //     console.log('before',stringDT)\n        //     stringDT = stringDT.replace(/\\//g,'-')\n        //     console.log('beforeafter',stringDT)\n        //     return stringDT\n        // },\n    },\n    \n    actions:{\n        commitHandleOnReplyAndOnAnswer({commit,getters}){\n            commit('handleOnReplyAndOnAnswer', getters.user)\n        },\n        handleNotifications(context, payload){\n            if(payload == \"reply\"){\n                context.state.notifications.reply = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")      \n            }\n            if(payload == \"answer\"){\n                context.state.notifications.answer = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")\n            }\n            if(payload == \"post\"){\n                context.state.notifications.post = true\n                setTimeout(context.commit, 4000,\"resetNotifications\")\n            }\n        },\n        async getSearchQuestion(state,payload){            \n            await axios\n                .get(`/api/board/question/search/?keyword=${payload}`)\n                .then(response => {\n                    state.searchedQuestions = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async getRelatedQuestion({ state , getters, commit }, payload) {\n            // for reccomended-question, if user and user.user_tag exist, get reccomended-question.\n            // else, get question-viewed-order.\n            \n            if(getters.user){\n                try{\n                    if(getters.getUserTags.length == 1){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 2){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 3){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&tag=${getters.getUserTags[2]}&uid=${getters.user.UID}`\n                    }\n                    else{\n                        var url = '/api/board/question-viewed-order'\n                    }\n                }\n                catch{\n                    var url = '/api/board/question-viewed-order'  \n                }\n            }else{\n                var url = '/api/board/question-viewed-order'\n            }\n            try{\n                console.log(\"try2\",url)\n                await axios.get(url)\n                    .then(response => {\n                        commit('setReccomendedQuestion', response.data)\n                    // state.reccomendedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getAnsweredQuestion({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            console.log(\"INGAQ\")\n            var url = `/api/board/question-answered?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.answeredQuestion = response.data\n                    console.log('A',state.answeredQuestion)\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getNotificationApi({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            console.log(\"INGNAPI\")\n            var url = `/api/board/user-question-answer-notification?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.notificationApi = response.data\n                    console.log('gotAPI',state.answeredQuestion)\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async getFavoriteQuestion({ state , getters }, payload){\n        //     const questionId = []\n        //     for(let i of getters.user.question){\n        //         questionId.push(i.id)\n        //     }\n        //     await axios\n        //     .get(`/api/board/question-favorite?question_id=${questionId}`)\n        //     .then(response => {\n        //         state.favoriteQuestion = response.data\n        //         console.log('GetFQ', state.favoriteQuestion)\n        //         })\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },\n        // async getSearchQuestion({ state, commit }){\n        //     await axios({\n        //         method: 'get',\n        //         url: `/api/board/question/search/`,\n        //         data: {\n        //             keyword: state.searchKeywords\n        //         },\n        //     })\n        //     .then()\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },          \n    }\n}"]}]}