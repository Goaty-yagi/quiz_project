{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-fa928086\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"l-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"main-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"create-question-wrapper\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-blue\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"質問投稿\")], -1));\n\nconst _hoisted_5 = {\n  class: \"form\"\n};\nconst _hoisted_6 = {\n  class: \"question-title-container\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-flex\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"TITLE\")], -1));\n\nconst _hoisted_8 = {\n  class: \"question-title\"\n};\nconst _hoisted_9 = {\n  class: \"tag-group-container\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"line\"\n}, null, -1));\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"question-description\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"title-blue\"\n}, \"質問文\")], -1));\n\nconst _hoisted_12 = {\n  class: \"text-field\"\n};\nconst _hoisted_13 = {\n  class: \"form-text\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"confirm-message\"\n}, \"この内容で投稿しますか。 \", -1));\n\nconst _hoisted_15 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$store.state.board.title), 1)])]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.$store.state.board.selectedTagList, (tag, tagindex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: tagindex,\n      class: \"tag-group\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(tag.tag), 1)]);\n  }), 128))]), _hoisted_10, _hoisted_11, _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString(_ctx.$store.state.board.description), 1)]), _hoisted_14, _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", {\n    class: \"back\",\n    onClick: _cache[0] || (_cache[0] = $event => this.$emit('handleShowConfirm'))\n  }, \"戻る\"), _createElementVNode(\"button\", {\n    class: \"btn-tr-black-base-sq\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.publish && $options.publish(...args))\n  }, \"投稿する\")])])])])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;gEACPC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAuB,cACnBC,oBAAW,GAAX,EAAW,IAAX,EAAG,MAAH,CADmB,CAAvB;;;EAGKD,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;gEACPC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAuB,cACnBC,oBAAY,GAAZ,EAAY,IAAZ,EAAG,OAAH,CADmB,CAAvB;;;EAICD,KAAK,EAAC;;;EAKNA,KAAK,EAAC;;;iEAQXC,oBAAwB,KAAxB,EAAwB;EAAnBD,KAAK,EAAC;AAAa,CAAxB,EAAiB,IAAjB,EAAiB,EAAjB;;iEAEAC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAiC,cAC7BC,oBAA6B,GAA7B,EAA6B;EAA1BD,KAAK,EAAC;AAAoB,CAA7B,EAAsB,KAAtB,CAD6B,CAAjC;;;EAGKA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;iEAIfC,oBACM,KADN,EACM;EADDD,KAAK,EAAC;AACL,CADN,EAA6B,eAA7B,EACA,EADA;;;EAEKA,KAAK,EAAC;;;uBArC3BE,oBA4CM,KA5CN,cA4CM,CA3CFD,oBA0CM,KA1CN,cA0CM,CAzCFA,oBAwCM,KAxCN,cAwCM,CAvCFE,UAuCE,EApCFF,oBAmCM,KAnCN,cAmCM,CAlCFA,oBASM,KATN,cASM,CARFG,UAQE,EALFH,oBAGM,KAHN,cAGM,CADFA,oBAAuC,GAAvC,EAAuC,IAAvC,EAAuCI,iBAAhCC,YAAOC,KAAP,CAAaC,KAAb,CAAmBC,KAAa,CAAvC,EAA+B,CAA/B,CACE,CAHN,CAKE,CATN,CAkCE,EAxBFR,oBAMM,KANN,cAMM,oBALFC,oBAIMQ,SAJN,EAIM,IAJN,EAIMC,YAJwBL,YAAOC,KAAP,CAAaC,KAAb,CAAmBI,eAI3C,EAJ0D,CAAnDC,GAAmD,EAA/CC,QAA+C,KAAvC;yBAAzBZ,oBAIM,KAJN,EAIM;MAHCa,GAAG,EAAED,QAGN;MAFNd,KAAK,EAAC;IAEA,CAJN,GAGIC,oBAAoB,GAApB,EAAoB,IAApB,EAAoBI,iBAAdQ,GAAG,CAACA,GAAU,CAApB,EAAa,CAAb,EAHJ;GAIM,CAJN,MAKE,EANN,CAwBE,EAhBFG,WAgBE,EAdFC,WAcE,EAXFhB,oBAIM,KAJN,eAIM,CAHFA,oBAEM,KAFN,eAEMI,iBADCC,YAAOC,KAAP,CAAaC,KAAb,CAAmBU,WACpB,CAFN,EACqC,CADrC,CAGE,CAJN,CAWE,EANFC,WAME,EAJFlB,oBAGM,KAHN,eAGM,CAFEA,oBAAmE,KAAnE,EAAmE;IAA9DD,KAAK,EAAC,MAAwD;IAAhDoB,OAAK,2CAAOC,KAAP,CAAY,mBAAZ;EAA2C,CAAnE,EAA2D,IAA3D,CAEF,EADEpB,oBAAmE,QAAnE,EAAmE;IAA3DD,KAAK,EAAC,sBAAqD;IAA7BoB,OAAK,yCAAEE,6CAAF;EAAwB,CAAnE,EAAsD,MAAtD,CACF,CAHN,CAIE,CAnCN,CAoCE,CAxCN,CAyCE,CA1CN,CA2CE,CA5CN","names":["class","_createElementVNode","_createElementBlock","_hoisted_4","_hoisted_7","_toDisplayString","_ctx","state","board","title","_Fragment","_renderList","selectedTagList","tag","tagindex","key","_hoisted_10","_hoisted_11","description","_hoisted_14","onClick","$emit","$options"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/board/Confirm.vue"],"sourcesContent":["<template>\n    <div class=\"l-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"create-question-wrapper\">\n                <div class=\"title-blue\">\n                    <p>質問投稿</p>\n                </div>\n                <div class=\"form\">\n                    <div class=\"question-title-container\">\n                        <div class='title-flex'>\n                            <p>TITLE</p>\n                        </div>\n                        <div\n                         class=\"question-title\">\n                            <p> {{ $store.state.board.title }} </p>\n                        </div>\n                        <!-- <input class='question-title' type=\"text\" v-model='title' :placeholder=\"$store.state.title\"> -->\n                    </div>\n                    <div class='tag-group-container'>\n                        <div v-for=\"(tag,tagindex) in $store.state.board.selectedTagList\"\n                        v-bind:key=\"tagindex\"\n                        class=\"tag-group\">\n                            <p>{{ tag.tag }}</p>  \n                        </div>\n                    </div>\n\n                    <div class=\"line\"></div>\n\n                    <div class=\"question-description\">\n                        <p class=\"title-blue\">質問文</p>\n                    </div>\n                    <div class='text-field'>\n                        <div class='form-text'>\n                            {{ $store.state.board.description }}\n                        </div>\n                    </div>\n                    <div class='confirm-message'>この内容で投稿しますか。\n                    </div>\n                    <div class=\"button-group\">\n                            <div class=\"back\" @click=\"this.$emit('handleShowConfirm')\">戻る</div>\n                            <button class=\"btn-tr-black-base-sq\" @click='publish'>投稿する</button>\n                    </div>            \n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { uuid } from 'vue-uuid';\nexport default {\n    data(){\n        return{\n            title: '',\n            discription:'',\n            uuid:uuid.v1(),\n        }\n    },\n    mounted(){\n        console.log(\"mounted_confirm\",this.$store.state.board.title)\n    },\n    beforeUnmount(){\n        this.$store.commit('fixedScrollFalse')\n    },\n    methods:{\n        async publish(){\n            console.log('start add','uuid',this.uuid)\n            await axios({\n                method: 'post',\n                url: '/api/board/question/create',\n                data: {\n                    title: this.$store.state.board.title,\n                    description: this.$store.state.board.description,\n                    user: this.$store.state.signup.user.uid,\n                    slug: this.uuid,\n                    liked_num:{},\n                    tag: this.getTagId()\n                },\n                \n            })\n            // this.$emit('handleNotifications')\n            this.$emit('getDetail',this.uuid)\n            this.$store.dispatch(\"handleNotifications\", 'post')\n            this.$emit('handleShowConfirm')\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        },\n        getTagId(){\n            const idList = []\n            for( let i of this.$store.state.board.selectedTagList){\n                idList.push(i.id)\n            }\n            return idList\n        }\n        //     axios.post(\n        //         '/api/forum/question/',\n        //         {title: this.$store.state.title, \n        //         description: this.$store.state.description\n        //         },\n        //     ).then(response => {\n        //         console.log(response)\n        //     })\n        // },\n        // addQuestion(){\n        //     console.log('start add')\n        //     axios({\n        //         method: 'post',\n        //         url: '/api/forum/question',\n        //         data: {\n        //             title: this.$store.state.title,\n        //             description: this.$store.state.description\n        //         },\n        //     })\n        // .then((response) =>{\n            \n        // }\n\n        // )\n    }\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"style/_variables.scss\";\n.l-wrapper{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .create-question-wrapper{\n        top:0;\n        left:0;\n        background: linear-gradient(to bottom right, #ffffff,#dddddd);;;\n        border: solid $dark-blue;\n        width:100%;\n        height: auto;\n        flex-direction: column;\n        display: flex;\n        // justify-content: center;\n        align-items: center;\n        padding: 1.5rem;\n        .form{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            // justify-content: center;\n            align-items: center;\n            .question-title-container{\n                width:90%;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                .title-flex{\n                    display: flex;\n                    width: 90%;\n                }\n                .question-title{\n                    display: flex;\n                    align-items: center;\n                    border: solid $base-color;\n                    width: 90%;\n                    height: 2.5rem;\n                    background: $back-white;\n                    padding-left: 0.5rem;\n                    text-align: left;\n                    font-size: 0.8rem;            \n                }\n            }\n            .tag-group-container{\n                width:80%;\n                display: flex;\n                justify-content: center;\n                padding-top: 0.5rem;\n                .tag-group{\n                    border: solid gray;\n                    border-radius: 50vh;\n                    width: auto;\n                    min-width: 3rem;\n                    margin-right: 0.5rem;\n                    display: inline-block;\n                    align-items: center;\n                    padding-top:0.1rem;\n                    padding-bottom: 0.1rem;\n                    padding-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    font-size:0.8rem;\n                }\n            }\n            .line{\n                width: 80%;\n                border-bottom: 0.2rem solid $middle-blue;\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n            }\n            .question-description{\n                .title-black{\n                    margin: 0;\n                }\n            }\n            .text-field{\n                width:80%;\n                // overflow-y: scroll;\n                .form-text{\n                    text-align: left;\n                    height: 200px;\n                    width: 100%;\n                    background: $back-white;\n                    min-height: 100px;\n                    border: 0.1rem solid $base-color;\n                    border-radius: 1vh;\n                    padding: 1rem;\n                    white-space: pre-wrap;\n                    overflow-y: scroll;\n                }\n                .form-text:focus{\n                    outline: none;\n                }\n            }\n            .confirm-message{\n                margin-top: 1rem;\n                color: red;\n                font-weight: bold;\n            }\n            .button-group{\n                width: 80%;\n                display:flex;\n                margin:1rem;\n                justify-content: center;\n                .back{\n                    padding-right: 0.9rem;\n                    padding-left: 0.9rem;\n                    padding-top: 0.3rem;\n                    padding-bottom: 0.3rem;\n                    transition: 0.5s;\n                    border: solid $lite-gray;\n                }\n                .back:hover{\n                    background: $lite-gray;\n                }\n                .btn-tr-black-base-sq{\n                    margin-left: 0.5rem;\n                    padding-right: 0.5rem;\n                    padding-left: 0.5rem;\n                    transition: 0.5s;\n                }\n                .btn-tr-black-base-sq:hover{\n                    background: $base-color;\n                    color: white;\n                }\n            }\n        }   \n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}