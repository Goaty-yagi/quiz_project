{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport axios from 'axios';\nimport Cropper from 'cropperjs';\nexport default {\n  props: [\"getDjangouser\"],\n  data: function data() {\n    return {\n      file: '',\n      image: '',\n      selectedFile: null,\n      compoHandle: false,\n      cropper: {},\n      destination: {},\n      inputFile: ''\n    };\n  },\n  mounted: function mounted() {\n    // this.cropper()\n    console.log('thumb mounted', this.getDjangouser);\n    this.autoClick();\n  },\n  // computed:{\n  //     user(){\n  //         return this.$store.state.signup.djangoUser\n  //     }\n  // },\n  methods: {\n    getImage: function getImage(event) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('event', event);\n                _this.selectedFile = URL.createObjectURL(event.target.files[0]);\n                _this.image = event.target.files[0];\n                _context.next = 5;\n                return console.log(_this.image, 'img', _this.selectedFile);\n\n              case 5:\n                _this.imageCropper();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    imageCropper: function imageCropper() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.cropper = new Cropper(_this2.$refs.image, {\n                  zoomable: true,\n                  scalable: false,\n                  zoomOnTouch: true,\n                  aspectRatio: 1,\n                  dragMode: 'move',\n                  minContainerHeight: 400,\n                  crop: function crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    chancel: function chancel() {\n      this.selectedFile = null;\n      this.showThumbnailFalse();\n    },\n    autoClick: function autoClick() {\n      document.getElementById(\"fileUpload\").click();\n      this.inputFile = document.getElementById(\"fileUpload\");\n      document.body.onfocus = this.getEvent;\n    },\n    getEvent: function getEvent() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        if (_this3.inputFile.value.length) {} else {\n          _this3.showThumbnailFalse();\n        }\n\n        document.body.onfocus = null;\n      }, 500);\n    },\n    openFileOnClick: function openFileOnClick() {\n      document.getElementById(\"fileUpload\").value = \"\";\n      document.getElementById(\"fileUpload\").files.length = 0;\n      document.getElementById(\"fileUpload\").click();\n\n      if (document.getElementById(\"fileUpload\").files.length >= 1) {//Do something \n      } else {\n        this.showThumbnailFalse(); //Cancel button has been called.\n      }\n    },\n    // getCroppedURL(){\n    //     console.log('croppedURL')\n    //     document.getElementById('crop-btn').addEventListener('click', function () {\n    //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n    //     var result = document.getElementById('result-img');\n    //     result.src = resultImgUrl;\n    //      });\n    // },\n    userUpdate: function userUpdate() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var canvas;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                canvas = _this4.cropper.getCroppedCanvas({\n                  width: 160,\n                  height: 90,\n                  minCropBoxHeight: 300,\n                  minCropBoxWidth: 300,\n                  maxWidth: 4096,\n                  maxHeight: 4096,\n                  fillColor: '#fff',\n                  imageSmoothingEnabled: false,\n                  imageSmoothingQuality: 'high'\n                });\n                _context4.next = 3;\n                return canvas.toBlob( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(blob) {\n                    var formData;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            formData = new FormData();\n                            formData.append('thumbnail', blob, \"\".concat(_this4.image, \".png\")), console.log('getthumb', formData.get('thumbnail'), _this4.image), axios.patch(\"/api/user/\".concat(_this4.getDjangouser.UID), formData);\n\n                          case 2:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }(), 'image/png');\n\n              case 3:\n                _this4.showThumbnailFalse(); // location.reload()\n                // this.$router.go({path: this.$router.currentRoute.path, force: true})\n\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    showThumbnailFalse: function showThumbnailFalse() {\n      this.$emit('showThumbnailFalse');\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","Cropper","props","data","file","image","selectedFile","compoHandle","cropper","destination","inputFile","mounted","console","log","getDjangouser","autoClick","methods","getImage","event","URL","createObjectURL","target","files","imageCropper","$refs","zoomable","scalable","zoomOnTouch","aspectRatio","dragMode","minContainerHeight","crop","detail","x","y","width","height","rotate","scaleX","scaleY","chancel","showThumbnailFalse","document","getElementById","click","body","onfocus","getEvent","setTimeout","value","length","openFileOnClick","userUpdate","canvas","getCroppedCanvas","minCropBoxHeight","minCropBoxWidth","maxWidth","maxHeight","fillColor","imageSmoothingEnabled","imageSmoothingQuality","toBlob","blob","formData","FormData","append","get","patch","UID","$emit"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/account/Thumbnail.vue"],"sourcesContent":["<template>\n    <div class='thumbnail-wrapper l-wrapper'>\n        <form @submit.prevent='userUpdate'>\n            <input id=\"fileUpload\" type=\"file\" @change='getImage' hidden enctype=\"multipart/form-data\">\n            <div class=\"cropper-outer-wrapper\" v-if=\"selectedFile\">\n                <div class='cropperinner-wrapper'>\n                    <img ref='image' :src=\"selectedFile\" style=\"width: 300px; height: 300px;\">\n                </div>\n                <div class=\"thumbnail-button-container\">\n                    <button class='btn-base-white-db-sq thumbnail-save-button'>save</button>\n                    <button class='btn-tr-white-base-sq thumbnail-cancel-button' v-if='selectedFile' @click='chancel'>cancel</button>\n                </div>\n            </div>\n        </form>\n        <div>\n            <!-- <div>\n                <img id=\"image\" src=\"@/assets/logo.png\">\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Cropper from 'cropperjs';\nexport default {\n    props:[\n        \"getDjangouser\",\n    ],\n    data(){\n        return{\n            file:'',\n            image:'',\n            selectedFile:null,\n            compoHandle: false,\n            cropper:{},\n            destination:{},\n            inputFile:'',\n        }\n    },\n    mounted(){\n        // this.cropper()\n        console.log('thumb mounted',this.getDjangouser)\n        this.autoClick()\n    },\n    // computed:{\n    //     user(){\n    //         return this.$store.state.signup.djangoUser\n    //     }\n    // },\n    methods:{\n        async getImage(event){\n            console.log('event',event)\n            this.selectedFile = URL.createObjectURL(event.target.files[0])\n            this.image = event.target.files[0]\n            await console.log(this.image,'img',this.selectedFile)\n            this.imageCropper()\n        },\n        async imageCropper(){\n            this.cropper = new Cropper(this.$refs.image, {\n            zoomable: true,\n            scalable: false,\n            zoomOnTouch: true,\n            aspectRatio: 1,\n            dragMode: 'move',\n            minContainerHeight:400,\n            crop(event) {\n                    console.log(event.detail.x);\n                    console.log(event.detail.y);\n                    console.log(event.detail.width);\n                    console.log(event.detail.height);\n                    console.log(event.detail.rotate);\n                    console.log(event.detail.scaleX);\n                    console.log(event.detail.scaleY);\n                },\n            })\n        },\n        chancel(){\n            this.selectedFile=null\n            this.showThumbnailFalse()\n        },\n        autoClick(){\n            document.getElementById(\"fileUpload\").click()\n            this.inputFile = document.getElementById(\"fileUpload\");\n            document.body.onfocus = this.getEvent\n        },\n        getEvent(){\n            setTimeout(() => {\n                if (this.inputFile.value.length) {\n                \n                } else {\n                this.showThumbnailFalse()\n                }\n                document.body.onfocus = null;\n            }, 500);\n        },\n        openFileOnClick(){\n            document.getElementById(\"fileUpload\").value = \"\";\n            document.getElementById(\"fileUpload\").files.length = 0;            \n            document.getElementById(\"fileUpload\").click();\n            if(document.getElementById(\"fileUpload\").files.length >= 1){\n                //Do something \n            }\n            else{\n                this.showThumbnailFalse()\n                //Cancel button has been called.\n            }\n        },\n        // getCroppedURL(){\n        //     console.log('croppedURL')\n        //     document.getElementById('crop-btn').addEventListener('click', function () {\n        //     resultImgUrl = this.cropper.getCroppedCanvas().toDataURL();\n        //     var result = document.getElementById('result-img');\n        //     result.src = resultImgUrl;\n        //      });\n        // },\n        async userUpdate(){\n            const canvas = this.cropper.getCroppedCanvas({\n                width: 160,\n                height: 90,\n                minCropBoxHeight: 300,\n                minCropBoxWidth: 300,\n                maxWidth: 4096,\n                maxHeight: 4096,\n                fillColor: '#fff',\n                imageSmoothingEnabled: false,\n                imageSmoothingQuality: 'high',\n                });\n            await canvas.toBlob(async (blob) => {\n            const formData = new FormData();\n            formData.append('thumbnail',blob, `${this.image}.png`),\n            console.log('getthumb',formData.get('thumbnail'),this.image),\n            axios.patch(`/api/user/${this.getDjangouser.UID}`,\n                formData\n            )\n            }, 'image/png')\n            this.showThumbnailFalse()\n            // location.reload()\n            // this.$router.go({path: this.$router.currentRoute.path, force: true})\n        },\n        showThumbnailFalse(){\n            this.$emit('showThumbnailFalse')\n        }\n    }\n}\n</script>\n\n<style  lang=\"scss\">\n// not scoped for cropper\n@import \"style/_variables.scss\";\n\n.thumbnail-wrapper{\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    /* background: ; */\n    overflow:scroll;  \n}\n.cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n.thumbnail-button-container{\n    display: flex;\n    justify-content: center;\n    margin-top: 1rem;\n    .thumbnail-save-button{\n        display: flex;\n        justify-content: center;\n        font-size: 1.2rem;\n        margin-right: 0.5rem;\n        min-width: 5rem;\n        min-height: 2rem;\n        font-weight: bold;\n    }\n    .thumbnail-cancel-button{\n        display: flex;\n        justify-content: center;\n        font-size: 1.2rem;\n        margin-left: 0.5rem;\n        min-width: 5rem;\n        min-height: 2rem;\n        font-weight: bold;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}