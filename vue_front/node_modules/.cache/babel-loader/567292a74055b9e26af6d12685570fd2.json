{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport axios from 'axios';\nimport { router } from \"../main.js\";\nimport Answer from '@/components/board/Answer.vue';\nimport Reply from '@/components/board/Reply.vue';\nexport default {\n  components: {\n    Answer: Answer,\n    Reply: Reply\n  },\n  data: function data() {\n    return {\n      currentUserId: '',\n      question: '',\n      showAnswerPage: false,\n      showReplyPage: false,\n      questionTitle: '',\n      questionDescription: '',\n      questionSlug: '',\n      questionId: '',\n      answerId: '',\n      allAnswer: '',\n      answerDict: {},\n      addedAnswerLiked: {},\n      viewed: 0,\n      questionStatus: ['回答受付中', '解決済み'],\n      reply: '',\n      questionUser: '',\n      questionUserBoolean: false,\n      liked_num: '',\n      addedLiked: false,\n      addedFavorite: false,\n      likedUserIdList: '',\n      checkedLikedUserList: [],\n      relatedQuestion: '',\n      slicedRelatedQuestion: '',\n      questionTags: []\n    };\n  },\n  mounted: function mounted() {\n    this.getDetail();\n    console.log(\"mounted_detail\", this.$route.params.slug);\n  },\n  computed: {\n    user: function user() {\n      return this.$store.state.signup.djangoUser;\n    }\n  },\n  methods: {\n    getDetail: function getDetail() {\n      var _arguments = arguments,\n          _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var slug, url;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                slug = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : \"\";\n\n                _this.$store.commit('setIsLoading', true);\n\n                _this.scrollTop();\n\n                console.log('inthegetdetail');\n\n                if (slug == \"\") {\n                  url = \"/api/board/question/\".concat(_this.$route.params.slug);\n                } else {\n                  url = \"/api/board/question/\".concat(slug);\n                }\n\n                _context.next = 7;\n                return axios.get(url).then(function (response) {\n                  _this.question = response.data;\n                  _this.questionTitle = _this.question.title;\n                  _this.questionDescription = _this.question.description;\n                  _this.questionSlug = _this.question.slug;\n                  _this.questionId = _this.question.id;\n                  _this.liked_num = _this.question.liked_num[0].liked_num;\n                  _this.likedUserIdList = _this.question.liked_num[0].user;\n                  _this.questionUser = _this.question.user.UID;\n                  _this.allAnswer = _this.question.answer;\n                  _this.viewed = _this.question.viewed;\n\n                  _this.patchOnReply(); // this.patchOnAnswer()\n\n\n                  _this.questionPatch();\n\n                  _this.makeAnswerDict();\n\n                  _this.getQuestionTagList(_this.question.tag);\n\n                  _this.getRelatedQuestion();\n\n                  _this.countViewedNumUp();\n\n                  _this.favoriteCheck();\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // async patchOnAnswer(slug=\"\"){\n    //     if(slug==\"\"){\n    //         var url = `/api/board/question/${this.$route.params.slug}`\n    //     }else{\n    //         var url = `/api/board/question/${slug}`\n    //     }\n    //     console.log(\"gonna if patch answer\",this.question.on_answer==true&&this.question.user.UID==this.user.UID)\n    //     if(this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n    //         console.log('PatchAnswer url',url)\n    //         axios.patch(\n    //             url,\n    //             { on_answer: false }) \n    //         console.log(\"go store AQ and DU\")\n    //         await this.$store.dispatch('getDjangoUser')\n    //         await this.$store.dispatch('getAnsweredQuestion')\n    //     }\n    // },\n    patchOnReply: function patchOnReply() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _iterator, _step, answer, url;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"patchOnReply\", _this2.allAnswer);\n                _iterator = _createForOfIteratorHelper(_this2.allAnswer);\n                _context2.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                answer = _step.value;\n                console.log(\"answer\", answer);\n\n                if (!(answer.on_reply == true && answer.user.UID == _this2.$store.getters.user.UID)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                url = \"/api/board/answer-detail/\".concat(answer.id);\n                _context2.next = 11;\n                return axios({\n                  method: 'patch',\n                  url: url,\n                  data: {\n                    on_reply: false\n                  }\n                });\n\n              case 11:\n                _this2.$store.dispatch('getDjangoUser');\n\n                _this2.$store.dispatch('getAnsweredQuestion');\n\n              case 13:\n                _context2.next = 4;\n                break;\n\n              case 15:\n                _context2.next = 20;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _iterator.e(_context2.t0);\n\n              case 20:\n                _context2.prev = 20;\n\n                _iterator.f();\n\n                return _context2.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 17, 20, 23]]);\n      }))();\n    },\n    getRelatedQuestion: function getRelatedQuestion() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // relatedQuestion.results Start from here.\n                // => deleteSameQuestion to delete the same question in RQ as detail Q.\n                // => makeRandomSlicedArray to make random sliced RQ array\n                _this3.$store.commit('setIsLoading', true);\n\n                if (_this3.questionTags.length == 1) {\n                  url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&uid=\").concat(_this3.user.UID);\n                }\n\n                if (_this3.questionTags.length == 2) {\n                  url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&tag=\").concat(_this3.questionTags[1], \"&uid=\").concat(_this3.user.UID);\n                }\n\n                if (_this3.questionTags.length == 3) {\n                  url = \"/api/board/question/filter-list?tag=\".concat(_this3.questionTags[0], \"&tag=\").concat(_this3.questionTags[1], \"&tag=\").concat(_this3.questionTags[2], \"&uid=\").concat(_this3.user.UID);\n                }\n\n                console.log(\"url:\", url);\n                _context3.prev = 5;\n                _context3.next = 8;\n                return axios.get(url).then(function (response) {\n                  _this3.relatedQuestion = response.data;\n                });\n\n              case 8:\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](5);\n\n                (function (error) {\n                  console.log(error);\n                });\n\n              case 13:\n                _this3.$store.commit('getRelatedQuestion', _this3.relatedQuestion.results);\n\n                _this3.deleteSameQuestion();\n\n                _this3.makeRandomSlicedArray();\n\n                _this3.$store.commit('setIsLoading', false);\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[5, 10]]);\n      }))();\n    },\n    createFavorite: function createFavorite() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios({\n                  method: 'post',\n                  url: '/api/board/favorite-question-create/',\n                  data: {\n                    user: _this4.$store.state.signup.user.uid,\n                    question: [_this4.question.id]\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    handleAddedFavorite: function handleAddedFavorite() {\n      this.addedFavorite = !this.addedFavorite;\n      this.createFavorite();\n    },\n    countViewedNumUp: function countViewedNumUp() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var i;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < _this5.question.tag.length)) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                _context5.next = 4;\n                return axios({\n                  method: 'post',\n                  url: '/api/board/user-tag/create/',\n                  data: {\n                    user: _this5.$store.state.signup.user.uid,\n                    tag: _this5.question.tag[i].id\n                  }\n                });\n\n              case 4:\n                i++;\n                _context5.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    handleShowAnswerPage: function handleShowAnswerPage() {\n      this.showAnswerPage = !this.showAnswerPage; // this.handleScrollFixed()\n    },\n    getReply: function getReply(reply) {\n      this.reply = reply;\n    },\n    handleShowReplyPage: function handleShowReplyPage() {\n      this.showReplyPage = !this.showReplyPage;\n    },\n    handleReplyPage: function handleReplyPage(id) {\n      var reply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      this.getAnswerId(id);\n      this.showReplyPage = !this.showReplyPage;\n      this.getReply(reply);\n    },\n    getAnswerId: function getAnswerId(id) {\n      this.answerId = id;\n    },\n    getReplyUserAndQuestionUser: function getReplyUserAndQuestionUser(reply, question) {\n      this.questionAnswerUser.push(reply);\n      this.questionAnswerUser.push(question);\n    },\n    handleQuestionStatus: function handleQuestionStatus(status) {\n      if (status == true) {\n        return this.questionStatus[1];\n      } else {\n        return this.questionStatus[0];\n      }\n    },\n    getQuestionTagList: function getQuestionTagList(questionTags) {\n      this.questionTags = [];\n\n      var _iterator2 = _createForOfIteratorHelper(questionTags),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var tag = _step2.value;\n          this.questionTags.push(tag.id);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    // G-method return a value from array invoked\n    // RandArray(array){\n    //     var rand = Math.random()*array.length | 0;\n    //     var rValue = array[rand];\n    //     console.log(\"RAndA\", rValue)\n    //     return rValue;\n    // },\n    makeRandomSlicedArray: function makeRandomSlicedArray() {\n      var num = 3;\n      console.log(\"MRSA\");\n\n      if (this.relatedQuestion.results.lendth < 3) {\n        num = this.relatedQuestion.results.lendth;\n      }\n\n      console.log(\"MRSA2\");\n      this.getRandomQuestion(this.relatedQuestion.results);\n      this.slicedRelatedQuestion = this.relatedQuestion.results.slice(0, num);\n      console.log(this.slicedRelatedQuestion);\n    },\n    deleteSameQuestion: function deleteSameQuestion() {\n      var _iterator3 = _createForOfIteratorHelper(this.relatedQuestion.results),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var q = _step3.value;\n\n          if (q.id == this.question.id) {\n            this.relatedQuestion.results.splice(this.relatedQuestion.results.indexOf(q), 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    },\n    getRandomQuestion: function getRandomQuestion(array) {\n      for (var i = array.length - 1; i >= 0; i--) {\n        var r = Math.floor(Math.random() * (i + 1));\n        var tmp = array[i];\n        array[i] = array[r];\n        array[r] = tmp;\n      }\n\n      for (var k = 0; k < array.length; k++) {\n        for (var _i = array[k].answer.length - 1; _i >= 0; _i--) {\n          var _r = Math.floor(Math.random() * (_i + 1));\n\n          var _tmp = array[k].answer[_i];\n          array[k].answer[_i] = array[k].answer[_r];\n          array[k].answer[_r] = _tmp;\n        }\n      }\n\n      return array;\n    },\n    // resetNotifications(){\n    //     this.notifications.answer = false\n    //     this.notifications.reply = false\n    // },\n    // handleNotifications(elem){\n    //     if(elem == \"reply\"){\n    //         this.notifications.reply = true\n    //         setTimeout(this.resetNotifications, 3000)\n    //     }\n    //     if(elem == \"answer\"){\n    //         console.log(\"in answer\")\n    //         this.notifications.answer = true\n    //         setTimeout(this.resetNotifications, 3000)\n    //     }            \n    // },\n    // getLikedNum(liked_num){\n    //     this.liked_num = liked_num\n    //     return this.liked_num\n    // },\n    getRelatedSlug: function getRelatedSlug(slug) {\n      this.getDetail(slug);\n      this.$forceUpdate();\n    },\n    addLikedNum: function addLikedNum() {\n      this.liked_num += 1;\n      this.addedLiked = true;\n\n      for (var i = 0; i < this.likedUserIdList.length; i++) {\n        this.checkedLikedUserList.push(this.likedUserIdList[i].UID);\n      }\n\n      this.checkedLikedUserList.push(this.$store.state.signup.user.uid);\n      this.countUpLiked();\n    },\n    clearAllLiked: function clearAllLiked() {\n      this.addedLiked = false;\n\n      for (var i in this.answerDict) {\n        this.answerDict[i].addedAnswerLiked = false;\n      }\n    },\n    checkUserLiked: function checkUserLiked() {\n      // this is for question like\n      this.clearAllLiked();\n\n      var _iterator4 = _createForOfIteratorHelper(this.likedUserIdList),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var i = _step4.value;\n\n          if (i.UID == this.$store.state.signup.user.uid) {\n            this.addedLiked = true;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      console.log(\"likedhere\", this.addedLiked); // this is for answer like\n\n      for (var answerId in this.answerDict) {\n        // console.log(Array.isArray(this.answerDict[answerId].likedUsers))\n        var _iterator5 = _createForOfIteratorHelper(this.answerDict[answerId].likedUsers[0]),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var user = _step5.value;\n\n            if (user == this.$store.state.signup.user.uid) {\n              this.answerDict[answerId].addedAnswerLiked = true;\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    },\n    favoriteCheck: function favoriteCheck() {\n      this.addedFavorite = false;\n\n      var _iterator6 = _createForOfIteratorHelper(this.$store.state.signup.djangoUser.favorite_question[0].question),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var i = _step6.value;\n\n          if (this.question.id == i.id) {\n            this.addedFavorite = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    },\n    countUpLiked: function countUpLiked() {\n      // console.log('in countUPLiked',this.question.liked_num[0].id ,this.addedLiked)\n      if (this.addedLiked) {\n        axios.patch(\"/api/board/question-liked/\".concat(this.question.liked_num[0].id, \"/\"), {\n          user: this.checkedLikedUserList,\n          liked_num: this.liked_num\n        });\n        console.log('done');\n      }\n    },\n    questionPatch: function questionPatch() {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(_this6.questionUserBoolean == false && _this6.question.on_answer == true && _this6.question.user.UID == _this6.user.UID)) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                console.log('count', _this6.questionSlug);\n                _context6.next = 4;\n                return axios.patch(\"/api/board/question/\".concat(_this6.questionSlug), {\n                  viewed: _this6.viewed + 1,\n                  on_answer: false\n                });\n\n              case 4:\n                _this6.$store.dispatch('getDjangoUser');\n\n                _this6.$store.dispatch('getAnsweredQuestion');\n\n                _context6.next = 9;\n                break;\n\n              case 8:\n                if (_this6.questionUserBoolean == false) {\n                  axios.patch(\"/api/board/question/\".concat(_this6.questionSlug), {\n                    viewed: _this6.viewed + 1\n                  });\n                }\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    // setAnswerBoolean(){\n    //     for(let answer of this.allAnswer){\n    //         this.addedAnswerLiked[answer.id] = false\n    //     }\n    //     console.log('boo',this.addedAnswerLiked)\n    // },\n    makeAnswerDict: function makeAnswerDict() {\n      // liked_answer start from here to make each answer dict\n      // to hold information\n      console.log(\"in make dict\", this.allAnswer);\n\n      var _iterator7 = _createForOfIteratorHelper(this.allAnswer),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var answer = _step7.value;\n          console.log(answer);\n          this.answerDict[answer.id] = {\n            \"liked_id\": answer.liked_answer[0].id,\n            \"liked_num\": answer.liked_answer[0].liked_num,\n            \"addedAnswerLiked\": false,\n            \"likedUsers\": [answer.liked_answer[0].user]\n          };\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      console.log('answer-dict', this.answerDict);\n      this.checkUserLiked();\n    },\n    addAnsweerLikedNum: function addAnsweerLikedNum(answerId) {\n      // add answer id start from here. answerDict has each answers liked num.\n      // invoke answerId to att liked num, then addedAnswerLiked = true  \n      this.answerDict[answerId].liked_num += 1;\n      this.answerDict[answerId].addedAnswerLiked = true; // for(let i=0; i<this.likedUserIdList.length; i++){\n      //     this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n      // }\n\n      this.answerDict[answerId].likedUsers[0].push(this.$store.state.signup.user.uid);\n      console.log(\"is addliked\", this.answerDict);\n      this.countUpLikedAnswer(answerId);\n    },\n    countUpLikedAnswer: function countUpLikedAnswer(answerId) {\n      console.log(\"countUpLikedAnswer\");\n      axios.patch(\"/api/board/answer-liked/\".concat(this.answerDict[answerId].liked_id, \"/\"), {\n        user: this.answerDict[answerId].likedUsers[0],\n        liked_num: this.answerDict[answerId].liked_num\n      });\n      console.log('done');\n    },\n    scrollTop: function scrollTop() {\n      window.scrollTo({\n        top: 0 // behavior: \"smooth\"\n\n      });\n    } // falseNotifications(elem){\n    //     if(elem == \"answer\"){\n    //         this.notifications.answer = false\n    //     }\n    //     if(elem == \"reply\"){\n    //         this.notifications.reply = false\n    //     }\n    // },\n    // handleScrollFixed(){\n    //     this.scrollFixed = !this.scrollFixed\n    // },\n\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","router","Answer","Reply","components","data","currentUserId","question","showAnswerPage","showReplyPage","questionTitle","questionDescription","questionSlug","questionId","answerId","allAnswer","answerDict","addedAnswerLiked","viewed","questionStatus","reply","questionUser","questionUserBoolean","liked_num","addedLiked","addedFavorite","likedUserIdList","checkedLikedUserList","relatedQuestion","slicedRelatedQuestion","questionTags","mounted","getDetail","console","log","$route","params","slug","computed","user","$store","state","signup","djangoUser","methods","commit","scrollTop","url","get","then","response","title","description","id","UID","answer","patchOnReply","questionPatch","makeAnswerDict","getQuestionTagList","tag","getRelatedQuestion","countViewedNumUp","favoriteCheck","catch","error","on_reply","getters","method","dispatch","length","results","deleteSameQuestion","makeRandomSlicedArray","createFavorite","uid","handleAddedFavorite","i","handleShowAnswerPage","getReply","handleShowReplyPage","handleReplyPage","getAnswerId","getReplyUserAndQuestionUser","questionAnswerUser","push","handleQuestionStatus","status","num","lendth","getRandomQuestion","slice","q","splice","indexOf","array","r","Math","floor","random","tmp","k","getRelatedSlug","$forceUpdate","addLikedNum","countUpLiked","clearAllLiked","checkUserLiked","likedUsers","favorite_question","patch","on_answer","liked_answer","addAnsweerLikedNum","countUpLikedAnswer","liked_id","window","scrollTo","top"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue"],"sourcesContent":["<template>\n<!-- this scroll fixed should be change -->\n    <div  class=\"board-detail-wrapper\" :class=\"{'scrll-fixed':showAnswerPage||showReplyPage,'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div class=\"question-wrapper\" v-if=\"question&&relatedQuestion.results&&$store.state.isLoading==false\">\n                <p class='title-white'>質問板</p>\n                <div v-if=\"$store.state.board.notifications.reply\" :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n                    <div class=\"notification-text\">\n                        返信しました。\n                    </div>\n                </div>\n                <div v-if=\"$store.state.board.notifications.answer\" :class=\"{'notification-blue':$store.state.board.notifications.answer}\">\n                    <div class=\"notification-text\">\n                        回答しました。\n                    </div>\n                </div>\n                <div v-if=\"$store.state.board.notifications.post\" :class=\"{'notification-blue':$store.state.board.notifications.post}\">\n                    <div class=\"notification-text\">\n                        投稿しました。\n                    </div>\n                </div>\n                <div class='question-box'> \n                    <div class=\"question-box-header\">\n                        <div class=\"image\">\n                            <img class='img' v-bind:src=\"question.user.thumbnail\"/>\n                        </div>\n                        <div class=\"username-date\">\n                            <p> {{ question.user.name}}さん </p>\n                            <p> {{ question.created_on }} </p>\n                        </div>\n                        <div class=\"question-status-container\">\n                            <p class=\"question-status\"> {{ handleQuestionStatus(question.solved) }} </p>\n                        </div>\n                    </div>\n                    <div\n                     class=\"tag-container\">\n                        <div\n                         class=\"tag\"\n                         v-for=\"(tag,questionindex) in question.tag\"\n                         v-bind:key=\"questionindex\">\n                            {{ tag.tag }}\n                        </div>\n                    </div>\n                    <div class=\"title-question\">\n                        <p class=\"question-title\">  {{ question.title }} </p>        \n                        <p class='question-description'> {{ question.description}} </p>\n                    </div>\n                    <div class=\"question-box-footer\">\n                        <div class=\"like-wrapper\">\n                            <i v-if=\"addedLiked==false\" @click=\"addLikedNum\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"addedLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\" v-if=\"question.liked_num[0]\">{{ liked_num }} </p>\n                        </div>\n                        <div class=\"viewed-wrapper\">\n                            <p class=\"viewed\"> viewed {{ question.viewed}} </p>\n                        </div>\n                        <div class=\"favorite\" @click=\"handleAddedFavorite()\">\n                            <i v-if=\"addedFavorite==false\" class=\"far fa-star\"></i>\n                            <div  v-if=\"addedFavorite\" class=\"added-favorite\">\n                                <i class=\"far fa-star\"></i>\n                                <i class=\"fas fa-star\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <button v-if=\"question.user.UID != $store.state.signup.user.uid\" class=\"btn-base-white-db-sq\" @click='handleShowAnswerPage'>回答する</button>\n                    <!-- <button @click=\"handleNotifications('reply')\" >unko</button> -->\n                </div>\n                <div class=\"relative-box\">\n                    <p>関連した質問</p>\n                    <div\n                        class=\"question-wrapper\"\n                        v-for=\"(question,questionindex) in slicedRelatedQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class='question-list' @click=\"getRelatedSlug(question.slug)\">\n                            <div class=\"tag-wrapper\">\n                                <div \n                                class=\"tag\"\n                                v-for=\"(tag,tagindex) in question.tag\" \n                                v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                            </div>\n                            <!-- <div class=\"question-title\">{{ question.title }}</div> -->\n                            <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                            <div class='good-like-wrapper'>\n                                <i class=\"far fa-heart\"></i>\n                                <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                                <div class=\"date\">投稿日：{{ question.created_on }}</div>\n                            </div>\n                        </div>        \n                    </div>\n                    <div class=\"see-more\">\n                        <router-link :to=\"{name:'RelatedQuestion'}\">もっと見る></router-link>\n                    </div>\n                </div>\n                <div class=\"answer-box\" v-if='question.answer[0]'>\n                    <div class=\"answer-box-title\">\n                        <p v-if='question.answer[0]'> 回答</p>\n                        ({{ question.answer.length }}件)\n                    </div>\n                    <div\n                     class=\"under-line\"\n                     v-for=\"(answer,answerindex) in question.answer\"\n                     v-bind:key=\"answerindex\">\n                        <div class=\"answer-box-header\">\n                            <img class='img' v-bind:src=\"answer.user.thumbnail\"/>\n                            <div class=\"username-date\">\n                                <p> {{ answer.user.name}}さん </p>\n                                <p> {{ answer.created_on }} </p>\n                            </div>\n                        </div>\n                        <p class=\"answer-description-container\">{{ answer.description }} </p>\n                        <div class=\"answer-box-footer\">\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked==false\" @click=\"addAnsweerLikedNum(answer.id)\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\"> {{ answerDict[answer.id].liked_num }} </p>\n                        </div>\n                        <button v-if=\"question.user.UID == $store.state.signup.user.uid && answer.reply.length == 0\"\n                         class='btn-base-white-db-sq' \n                         @click='handleReplyPage(answer.id, answer.description)'>\n                         返信する\n                         </button>\n                        <!-- reply should be appir if post user or replyer -->\n                        <div class='reply-wrapper' v-if='answer.reply[0]'>\n                            <div>コメント</div>\n                            <div class='reply-flex' \n                            v-for=\"(reply,replyindex) in answer.reply\"\n                            v-bind:key=\"replyindex\">\n                                <div class=\"reply-wrapper-header\">\n                                    <img class='img' v-bind:src=\"reply.user.thumbnail\"/>\n                                    <div class=\"username-date\">\n                                        <p> {{ reply.user.name}}さん </p>\n                                        <p> {{ reply.created_on }} </p>\n                                    </div>\n                                </div>\n                                <p class=\"replay-description\">{{ reply.description }}</p>\n                                <button v-if='$store.state.signup.user.uid==question.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID!=question.user.UID || $store.state.signup.user.uid==answer.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID==question.user.UID'\n                                 class='btn-base-white-db-sq' \n                                 @click='handleReplyPage(answer.id, reply.description)'>\n                                 返信する\n                                 </button>\n                            </div>\n                        </div>\n                        <div class='line-flex'>\n                            <div class=\"line\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        <Answer v-if='showAnswerPage'\n         @handleShowAnswerPage='handleShowAnswerPage'\n         @getDetail=\"getDetail\"\n         :questionTitle='questionTitle'\n         :questionDescription='questionDescription'\n         :questionId='questionId'\n         />\n        <Reply v-if='showReplyPage'\n         @handleShowReplyPage='handleShowReplyPage'\n         @getDetail=\"getDetail\"\n         :answerId='answerId'\n         :reply=\"reply\"\n         />\n        <!-- {{ questions }} -->\n        <!-- <div class=question \n         v-for=\"(question,questionindex) in questions\"\n         v-bind:key=\"questionindex\">\n            <div class=\"tag\">tag:{{ question.tag }}</div>\n            <div class=\"title\">title:{{ question.title }}</div>\n            <div class=\"good\">good:{{ question.good }}</div>\n            <div class=\"date\">data:{{ remove_T_Z(question.timestamp) }}</div>\n        </div>\n        <CreateQuestion v-if='showCreateQuestion'\n        @handleShowConfirm='handleShowConfirm'/>\n        <Confirm v-if='showConfirm'/> -->\n         </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport  Answer from '@/components/board/Answer.vue'\nimport  Reply from '@/components/board/Reply.vue'\nexport default {\n    components: {\n        Answer,\n        Reply\n  },\n    data(){\n        return{\n            currentUserId:'',\n            question:'',\n            showAnswerPage: false,\n            showReplyPage: false,\n            questionTitle:'',\n            questionDescription:'',\n            questionSlug:'',\n            questionId:'',\n            answerId:'',\n            allAnswer:'',\n            answerDict:{},\n            addedAnswerLiked:{},\n            viewed:0,\n            questionStatus:['回答受付中','解決済み'],\n            reply:'',\n            questionUser: '',\n            questionUserBoolean: false,\n            liked_num: '',\n            addedLiked: false,\n            addedFavorite: false,\n            likedUserIdList:'',\n            checkedLikedUserList:[],\n            relatedQuestion:'',\n            slicedRelatedQuestion:'',\n            questionTags:[]\n        }\n    },\n    mounted() {\n        this.getDetail()\n        console.log(\"mounted_detail\",this.$route.params.slug)\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        }\n    },\n    methods: {\n        async getDetail(slug=\"\") {\n            this.$store.commit('setIsLoading', true)\n            this.scrollTop()\n            console.log('inthegetdetail')\n            if(slug==\"\"){\n                var url = `/api/board/question/${this.$route.params.slug}`\n            }else{\n                var url = `/api/board/question/${slug}`\n            }\n            await axios\n                .get(url)\n                .then(response => {\n                    this.question = response.data\n                    this.questionTitle = this.question.title\n                    this.questionDescription = this.question.description\n                    this.questionSlug = this.question.slug\n                    this.questionId = this.question.id\n                    this.liked_num = this.question.liked_num[0].liked_num\n                    this.likedUserIdList = this.question.liked_num[0].user\n                    this.questionUser = this.question.user.UID\n                    this.allAnswer = this.question.answer\n                    this.viewed = this.question.viewed\n                    this.patchOnReply()\n                    // this.patchOnAnswer()\n                    this.questionPatch()\n                    this.makeAnswerDict()\n                    this.getQuestionTagList(this.question.tag)\n                    this.getRelatedQuestion()\n                    this.countViewedNumUp()\n                    this.favoriteCheck()\n                    })\n                .catch(error => {\n                    console.log(error)\n            })\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async patchOnAnswer(slug=\"\"){\n        //     if(slug==\"\"){\n        //         var url = `/api/board/question/${this.$route.params.slug}`\n        //     }else{\n        //         var url = `/api/board/question/${slug}`\n        //     }\n        //     console.log(\"gonna if patch answer\",this.question.on_answer==true&&this.question.user.UID==this.user.UID)\n        //     if(this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n        //         console.log('PatchAnswer url',url)\n        //         axios.patch(\n        //             url,\n        //             { on_answer: false }) \n        //         console.log(\"go store AQ and DU\")\n        //         await this.$store.dispatch('getDjangoUser')\n        //         await this.$store.dispatch('getAnsweredQuestion')\n        //     }\n        // },\n        async patchOnReply(){\n            console.log(\"patchOnReply\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(\"answer\",answer)\n                if(answer.on_reply==true&&answer.user.UID==this.$store.getters.user.UID){\n                    var url = `/api/board/answer-detail/${answer.id}`\n                    await axios({\n                        method: 'patch',\n                        url: url,\n                        data: {\n                            on_reply: false,\n                        },\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                }\n            }\n        },\n        async getRelatedQuestion() {\n            // relatedQuestion.results Start from here.\n            // => deleteSameQuestion to delete the same question in RQ as detail Q.\n            // => makeRandomSlicedArray to make random sliced RQ array\n            this.$store.commit('setIsLoading', true)\n            if(this.questionTags.length == 1){\n                var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&uid=${this.user.UID}`\n            }\n            if(this.questionTags.length == 2){\n                var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&uid=${this.user.UID}`\n            }\n            if(this.questionTags.length == 3){\n                var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}&uid=${this.user.UID}`\n            }\n            console.log(\"url:\",url)\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    this.relatedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            this.$store.commit('getRelatedQuestion', this.relatedQuestion.results)\n            this.deleteSameQuestion()\n            this.makeRandomSlicedArray()\n            this.$store.commit('setIsLoading', false)\n        },\n        async createFavorite(){\n            await axios({\n                method: 'post',\n                url: '/api/board/favorite-question-create/',\n                data: {\n                    user: this.$store.state.signup.user.uid,\n                    question: [this.question.id]\n                },\n            })\n        },\n        handleAddedFavorite(){\n            this.addedFavorite=!this.addedFavorite\n            this.createFavorite()\n        },\n        async countViewedNumUp(){\n            for (let i =0; i < this.question.tag.length; i++){\n                await axios({\n                method: 'post',\n                url: '/api/board/user-tag/create/',\n                data: {\n                    user: this.$store.state.signup.user.uid,\n                    tag: this.question.tag[i].id\n                },\n                \n            })\n\n            }\n        },\n        handleShowAnswerPage(){\n            this.showAnswerPage = !this.showAnswerPage\n            // this.handleScrollFixed()\n        },\n        getReply(reply){\n            this.reply = reply\n        },\n        handleShowReplyPage(){\n            this.showReplyPage = !this.showReplyPage\n        },\n        handleReplyPage(id, reply=''){\n            this.getAnswerId(id)\n            this.showReplyPage = !this.showReplyPage\n            this.getReply(reply)\n        },\n        getAnswerId(id){\n            this.answerId = id\n        },\n        getReplyUserAndQuestionUser(reply, question){\n            this.questionAnswerUser.push(reply)\n            this.questionAnswerUser.push(question)\n        },\n        handleQuestionStatus(status){\n            if(status==true){\n                return this.questionStatus[1]\n            }\n            else{\n                return this.questionStatus[0]\n            }\n        },\n        getQuestionTagList(questionTags){\n            this.questionTags = []\n            for(let tag of questionTags){\n                this.questionTags.push(tag.id)\n            }\n        },\n        // G-method return a value from array invoked\n        // RandArray(array){\n        //     var rand = Math.random()*array.length | 0;\n        //     var rValue = array[rand];\n        //     console.log(\"RAndA\", rValue)\n        //     return rValue;\n        // },\n        makeRandomSlicedArray(){\n            let num = 3\n            console.log(\"MRSA\")\n            if (this.relatedQuestion.results.lendth < 3){\n                num = this.relatedQuestion.results.lendth\n            }\n            console.log(\"MRSA2\")\n            this.getRandomQuestion(this.relatedQuestion.results)\n            this.slicedRelatedQuestion = this.relatedQuestion.results.slice(0,num)\n            console.log(this.slicedRelatedQuestion)\n        },\n        deleteSameQuestion(){\n            for(let q of this.relatedQuestion.results){\n                if (q.id == this.question.id){\n                    this.relatedQuestion.results.splice(this.relatedQuestion.results.indexOf(q),1)\n                    break\n                }\n                \n            }\n        },\n        getRandomQuestion(array){\n            for (let i = array.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[i]\n                array[i] = array[r]\n                array[r] = tmp\n                }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[k].answer[i]\n                array[k].answer[i] = array[k].answer[r]\n                array[k].answer[r] = tmp\n                }}\n                return array\n            },\n        // resetNotifications(){\n        //     this.notifications.answer = false\n        //     this.notifications.reply = false\n        // },\n        // handleNotifications(elem){\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = true\n        //         setTimeout(this.resetNotifications, 3000)\n                \n        //     }\n        //     if(elem == \"answer\"){\n        //         console.log(\"in answer\")\n        //         this.notifications.answer = true\n        //         setTimeout(this.resetNotifications, 3000)\n        //     }            \n        // },\n        // getLikedNum(liked_num){\n        //     this.liked_num = liked_num\n        //     return this.liked_num\n        // },\n        getRelatedSlug(slug){\n            this.getDetail(slug)\n            this.$forceUpdate();\n        },\n        addLikedNum(){\n            this.liked_num += 1\n            this.addedLiked = true\n            for(let i=0; i<this.likedUserIdList.length; i++){\n                this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n            }\n            this.checkedLikedUserList.push(this.$store.state.signup.user.uid)\n            this.countUpLiked()\n        },\n        clearAllLiked(){\n            this.addedLiked = false\n            for(let i in this.answerDict){\n                this.answerDict[i].addedAnswerLiked = false\n            }\n        },\n        checkUserLiked(){\n            // this is for question like\n            this.clearAllLiked()\n            for(let i of this.likedUserIdList){\n                if(i.UID == this.$store.state.signup.user.uid){\n                this.addedLiked = true\n                }\n            }\n            console.log(\"likedhere\",this.addedLiked)\n            // this is for answer like\n            for(let answerId in this.answerDict){\n                // console.log(Array.isArray(this.answerDict[answerId].likedUsers))\n                for( let user of this.answerDict[answerId].likedUsers[0]){\n                    if(user == this.$store.state.signup.user.uid){\n                        this.answerDict[answerId].addedAnswerLiked = true\n                    }\n                }\n            }\n        },\n        favoriteCheck(){\n            this.addedFavorite = false\n            for(let i of this.$store.state.signup.djangoUser.favorite_question[0].question){\n                if(this.question.id==i.id){\n                    this.addedFavorite = true\n                    break\n                }\n            }\n        },\n        countUpLiked(){\n            // console.log('in countUPLiked',this.question.liked_num[0].id ,this.addedLiked)\n            if(this.addedLiked){\n                axios.patch(`/api/board/question-liked/${this.question.liked_num[0].id}/`,\n                {\n                    user: this.checkedLikedUserList,\n                    liked_num: this.liked_num\n                })\n                console.log('done')\n            }\n        },\n        async questionPatch(){\n            // patch view count_up and on_answer\n            if(this.questionUserBoolean == false&&this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n                console.log('count', this.questionSlug)\n                await axios.patch(`/api/board/question/${this.questionSlug}`,{\n                    viewed: this.viewed + 1,\n                    on_answer: false\n                })\n                this.$store.dispatch('getDjangoUser')\n                this.$store.dispatch('getAnsweredQuestion')\n            }else if(this.questionUserBoolean == false){\n                axios.patch(`/api/board/question/${this.questionSlug}`,{\n                    viewed: this.viewed + 1\n                })\n            }\n        },\n        // setAnswerBoolean(){\n        //     for(let answer of this.allAnswer){\n        //         this.addedAnswerLiked[answer.id] = false\n        //     }\n        //     console.log('boo',this.addedAnswerLiked)\n        // },\n        makeAnswerDict(){\n            // liked_answer start from here to make each answer dict\n            // to hold information\n            console.log(\"in make dict\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(answer)\n                this.answerDict[answer.id] = {\n                    \"liked_id\":answer.liked_answer[0].id,\n                    \"liked_num\":answer.liked_answer[0].liked_num,\n                    \"addedAnswerLiked\":false,\n                    \"likedUsers\":[answer.liked_answer[0].user]\n                }\n            }\n            console.log('answer-dict',this.answerDict)\n            this.checkUserLiked()\n        },\n        addAnsweerLikedNum(answerId){\n            // add answer id start from here. answerDict has each answers liked num.\n            // invoke answerId to att liked num, then addedAnswerLiked = true  \n            this.answerDict[answerId].liked_num += 1\n            this.answerDict[answerId].addedAnswerLiked = true\n            // for(let i=0; i<this.likedUserIdList.length; i++){\n            //     this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n            // }\n            this.answerDict[answerId].likedUsers[0].push(this.$store.state.signup.user.uid)\n            console.log(\"is addliked\",this.answerDict)\n            this.countUpLikedAnswer(answerId)\n        },\n        countUpLikedAnswer(answerId){\n            console.log(\"countUpLikedAnswer\")\n                axios.patch(`/api/board/answer-liked/${this.answerDict[answerId].liked_id}/`,\n                {\n                    user: this.answerDict[answerId].likedUsers[0],\n                    liked_num: this.answerDict[answerId].liked_num\n                })\n                console.log('done')\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n                // behavior: \"smooth\"\n            });\n        },\n        // falseNotifications(elem){\n        //     if(elem == \"answer\"){\n        //         this.notifications.answer = false\n        //     }\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = false\n        //     }\n        // },\n        // handleScrollFixed(){\n        //     this.scrollFixed = !this.scrollFixed\n        // },\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n@import \"style/_board.scss\";\n.scroll{\n    position:fixed;\n}\n\n.board-detail-wrapper{\n    display: flex;\n    justify-content: center;\n    width: 100vw;\n    min-height: 80vh;\n    align-items: center;\n}\n.question-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    .question-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        .question-box-header{\n            display: flex;\n            .image{\n                .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n                width:40%;\n            }\n            .question-status-container{\n                display: flex;\n                justify-content: flex-end;\n                width: 50%;\n                position: relative;\n                .question-status{\n                    position: absolute;\n                    right:0;\n                    top: 0.5rem;\n                    color: rgb(255, 43, 209);\n                    margin-right: 1rem;\n                }\n            }\n        }\n        .tag-container{\n            display: flex;\n            width: 100%;\n            padding-left: 1rem;\n            .tag{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 1rem;\n                padding:0.5rem; \n            }\n        }\n        .title-question{\n            padding:1rem;\n            .question-title{\n                text-align: center;\n                margin-bottom: 1rem;\n                border-bottom: solid $dark-blue;\n                display: inline-block;\n                padding-bottom: 1rem;\n            }\n            .question-description{\n                text-align: left;\n                padding: 1rem; \n                background: rgb(236, 236, 236);\n                white-space: pre-wrap;\n            }\n        }\n        .question-box-footer{\n            display: flex;\n            margin-bottom: 0.5rem;\n            width:100%;\n            .like-wrapper{\n                flex-basis: 10%;\n                display: flex;\n                .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 0.5rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n                // flex-basis: 10%;\n                }\n            }\n            .viewed-wrapper{\n                flex-basis: 40%;\n                .viewed{\n                margin-left: 1rem;\n                margin-right: 0.5rem;\n                }\n            }\n            .favorite{\n                display: flex;\n                position:relative;\n                justify-content:flex-end;\n                flex-basis: 50%;\n                margin-top: 0.1rem;\n                margin-right: 1rem;\n                box-sizing: border-box;\n                position:relative;\n                .far{\n                    position: absolute;\n                    right: 0.1rem;\n                }\n                .added-favorite{\n                    position: relative;\n                    .far{\n                        position: absolute;\n                        z-index:2;\n                        right: 0.1rem;\n                    }\n                    .fas{\n                        position: absolute;\n                        color: yellow;\n                        right: 0.1rem;\n                        z-index:1;\n                    }\n                }\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n    }\n    .relative-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n        padding: 0.5rem;\n        display: flex;\n        flex-direction: column;\n        P{\n            margin-bottom: 0.5rem;\n        }\n        .question-wrapper{\n            width: 100%;\n            display: flex;\n            .question-list{\n                border-bottom: solid rgb(236, 234, 234);\n                margin-bottom: 0.5rem;\n                width:100%;\n                padding: 0.2rem;\n                // background: rgb(236, 234, 234);\n                display: flex;\n                flex-direction: column;\n                .tag-wrapper{\n                    display: flex;\n                    width: 100%;\n                    .tag{\n                        border: solid rgb(230, 230, 230);\n                        margin-left: 0.3rem;\n                        min-width: 2rem;\n                    }\n                }\n                .good-like-wrapper{\n                    display: flex;\n                    font-size: 0.7rem;\n                    .fa-heart{\n                        // color: rgb(221, 36, 221);\n                        margin-left: 0.5rem;\n                        margin-right: 0.3rem;\n                        margin-top: 0.2rem;\n                    }\n                    .date{\n                        margin-left: 0.5rem;\n                    }\n                }\n            }\n            .question-list:hover{\n                background: rgb(230, 230, 230);\n            }\n        }\n        .see-more{\n            display: flex;\n            justify-content: flex-end;\n            margin-right: 0.5rem;\n            margin-top: 0.5rem;\n\n        }\n    }\n    .answer-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .answer-box-title{\n            display: flex;\n            justify-content: center;\n            margin-top: 1rem;\n        }\n        .under-line{\n            width: 90%;\n            border-bottom: 0.2rem solid rgb(236, 236, 236);\n            margin-top: 2rem;\n            margin-bottom: 1rem;\n            &:last-child{\n                border-bottom: none;\n            }\n        }\n        .answer-box-header{\n            display: flex;\n            .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n            }\n        }\n        .answer-description-container{\n            margin: 1rem;\n            background: rgb(236, 236, 236);\n            padding: 1rem;\n            text-align: left;\n        }\n        .answer-box-footer{\n            display: flex;\n            .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 1rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n        .reply-wrapper{\n            // display: flex;\n            // flex-direction: column;\n            // justify-content: center;\n            // align-items: center;\n            .reply-flex{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                margin-bottom: 1rem;\n                .reply-wrapper-header{\n                    width: 80%;\n                    height: 100%;\n                    display: flex;              \n                    .img{\n                        border-radius: 50%; \n                        width:  3rem;   \n                        height: 3rem;\n                        margin: 0.5rem; \n                    }\n                    .username-date{\n                        display: flex;\n                        flex-direction: column;\n                        align-items: flex-start;\n                        margin-top: 0.5rem;\n                    }\n                \n                }\n                .replay-description{\n                    width: 63%;\n                    // border-left: solid $dark-blue;\n                    background: rgb(236, 236, 236);\n                    text-align: left;\n                    padding: 0.5rem;\n                }\n            }\n        }\n        .line-flex{\n            display: flex;\n            width: 100%;\n            justify-content: center;\n            align-items: center;\n            margin-top: 0.5rem;\n            // .line-flex:last-of-type{\n            //     border-bottom: none;\n            // }\n            &.line{\n                width: 90%;\n                border-bottom: 0.2rem solid rgb(236, 236, 236);\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n                &:last-child{\n                    border-bottom: none;\n                }\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}