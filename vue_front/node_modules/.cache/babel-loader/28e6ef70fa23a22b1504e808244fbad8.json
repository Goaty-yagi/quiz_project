{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport LogDetail from '@/components/dashboard/LogDetail.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    LogDetail: LogDetail\n  },\n  data: function data() {\n    return {\n      errorMessage: \"components/dashboard/Logger\",\n      loggers: \"\",\n      logDetail: false,\n      currentTagIndex: '',\n      nextUrl: ''\n    };\n  },\n  mounted: function mounted() {\n    this.getLogger();\n  },\n  computed: {\n    user: function user() {\n      return this.$store.state.signup.djangoUser;\n    },\n    myQuiz: function myQuiz() {\n      return this.$store.state.signup.djangoUser.my_quiz[0];\n    },\n    fieldNameId: function fieldNameId() {\n      return this.$store.getters.fieldNameId;\n    },\n    quizNameId: function quizNameId() {\n      return this.$store.getters.quizNameId;\n    },\n    statusNameId: function statusNameId() {\n      this.$store.dispatch(\"getStatusNameId\");\n      return this.$store.getters.statusNameId;\n    }\n  },\n  methods: {\n    getLogger: function getLogger() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$store.commit('setIsLoading', true);\n\n                _context.next = 3;\n                return axios.get('/api/loggers-list').then(function (response) {\n                  _this.loggers = response.data;\n                  _this.nextUrl = response.data.next;\n                }).catch(function (e) {\n                  var logger = {\n                    message: errorMessage + 'getLogger',\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this.$store.commit('setLogger', logger);\n\n                  _this.$store.commit(\"checkDjangoError\", e.message);\n\n                  _this.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 3:\n                _this.$store.commit('setIsLoading', false);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getNextLogger: function getNextLogger() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log('next');\n                _context2.next = 3;\n                return axios.get(_this2.nextUrl).then(function (response) {\n                  console.log(response.data.results);\n\n                  _this2.loggers.results.push(response.data.results[0]);\n\n                  _this2.nextUrl = response.data.next;\n                });\n\n              case 3:\n                // .catch(e => {\n                //     let logger = {\n                //     message: errorMessage + 'getLogger',\n                //     path: window.location.pathname,\n                //     actualErrorName: e.name,\n                //     actualErrorMessage: e.message,\n                // }\n                // this.$store.commit('setLogger',logger)\n                // this.$store.commit(\"checkDjangoError\",e.message)\n                // this.$store.commit('setIsLoading', false)\n                // router.push({ name: 'ConnectionError' })\n                // })\n                _this2.$store.commit('setIsLoading', false);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    ckeckedToString: function ckeckedToString(checked) {\n      if (checked) {\n        return '確認済み';\n      } else {\n        return '未確認';\n      }\n    },\n    logDetailFalse: function logDetailFalse() {\n      this.logDetail = false;\n    },\n    logDetailTrue: function logDetailTrue(index) {\n      this.currentTagIndex = index;\n      this.logDetail = true;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","LogDetail","axios","components","data","errorMessage","loggers","logDetail","currentTagIndex","nextUrl","mounted","getLogger","computed","user","$store","state","signup","djangoUser","myQuiz","my_quiz","fieldNameId","getters","quizNameId","statusNameId","dispatch","methods","commit","get","then","response","next","catch","logger","message","path","window","location","pathname","actualErrorName","e","name","actualErrorMessage","router","push","getNextLogger","console","log","results","ckeckedToString","checked","logDetailFalse","logDetailTrue","index"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/Logger.vue"],"sourcesContent":["<template>\n    <div class=\"logger-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div  :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n            <div class=\"notification-text\">\n                \n            </div>\n        </div>\n        <div class=\"main-wrapper\">\n            <div class=\"main-container\" >\n                <div class=\"logger-header\">\n                    <!-- <p class=\"title-white\">My-Quiz</p>\n                    <p class=\"register\">登録数{{ length }} / {{myQuiz.max_num}}</p>\n                    <p class=\"max\">(最大 {{myQuiz.max_num}} 個まで登録できます)</p> -->\n                </div>\n                {{ loggers }}\n                <div class=\"logger-container\" v-if=\"$store.state.isLoading==false\">\n                    <div class=\"no-my-quiz\" v-if=\"!loggers.results\">\n                        <div class=\"no-quiz\">\n                            ログはありません。<br>\n                        </div>\n                    </div>\n                    <div class=logger-loop @click=\"logDetailTrue(logindex)\" v-for=\"(log,logindex) in loggers.results\"\n                        v-bind:key=\"logindex\">\n                        <div class=\"each-log-container\">\n                            <div class=\"question-index-container\">\n                                <div class=\"question-index\">{{ logindex+1 }}</div>\n                            </div>\n                            <!-- <div class=\"log-time\">{{ log.created_on }}</div> -->\n                            <div class=\"log-time\">{{ log.created_on }}</div>\n                            <div class=\"log-message\">{{ log.actualErrorMessage.substr(0,15)+'...'  }}</div>\n                            <div class=\"log-checked\">{{ ckeckedToString(log.checked) }}</div>\n                        </div>\n                    </div>\n                    <i v-if=\"this.nextUrl\" @click=\"getNextLogger()\" class=\"fas fa-angle-down\"></i>\n                    <LogDetail\n                    v-if=\"logDetail\"\n                    :loggers=\"loggers\"\n                    :currentTagIndex=\"currentTagIndex\"\n                    @logDetailFalse=\"logDetailFalse\"                \n                    />\n                </div>\n                <!-- <div @click=\"handleQuizOpen()\" v-if=\"showButtonAndNoQuiz\" class=\"btn-basegra-white-db-sq\">\n                    練習\n                </div> -->\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport LogDetail from '@/components/dashboard/LogDetail.vue'\nimport axios from 'axios';\n\nexport default {\n    components: {\n        LogDetail,\n    },\n    data(){\n        return{\n            errorMessage:\"components/dashboard/Logger\",\n            loggers: \"\",\n            logDetail: false,\n            currentTagIndex:'',\n            nextUrl: ''\n        }\n    },\n    mounted(){\n        this.getLogger()\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        myQuiz(){\n            return this.$store.state.signup.djangoUser.my_quiz[0]\n        },\n        fieldNameId(){\n            return this.$store.getters.fieldNameId\n        },\n        quizNameId(){\n            return this.$store.getters.quizNameId\n        },\n        statusNameId(){\n            this.$store.dispatch(\"getStatusNameId\")\n            return this.$store.getters.statusNameId\n        }\n\n    },\n    methods:{\n        async getLogger(){\n            this.$store.commit('setIsLoading', true)\n            await axios\n                .get('/api/loggers-list')\n                .then(response => {\n                    this.loggers = response.data\n                    this.nextUrl = response.data.next\n                    })\n                .catch(e => {\n                    let logger = {\n                    message: errorMessage + 'getLogger',\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n                }\n                this.$store.commit('setLogger',logger)\n                this.$store.commit(\"checkDjangoError\",e.message)\n                this.$store.commit('setIsLoading', false)\n                router.push({ name: 'ConnectionError' })\n                })\n            this.$store.commit('setIsLoading', false)\n        },\n        async getNextLogger() {\n            console.log('next')\n            await axios\n                .get(this.nextUrl)\n                .then(response => {\n                    console.log(response.data.results)\n                    this.loggers.results.push(response.data.results[0])\n                    this.nextUrl = response.data.next\n                    })\n                // .catch(e => {\n                //     let logger = {\n                //     message: errorMessage + 'getLogger',\n                //     path: window.location.pathname,\n                //     actualErrorName: e.name,\n                //     actualErrorMessage: e.message,\n                // }\n                // this.$store.commit('setLogger',logger)\n                // this.$store.commit(\"checkDjangoError\",e.message)\n                // this.$store.commit('setIsLoading', false)\n                // router.push({ name: 'ConnectionError' })\n                // })\n            this.$store.commit('setIsLoading', false)\n\n        },\n        ckeckedToString(checked) {\n            if(checked){\n                return '確認済み'\n            } else {\n                return '未確認'\n            }\n        },\n        logDetailFalse() {\n            this.logDetail = false\n        },\n        logDetailTrue(index) {\n            this.currentTagIndex = index\n            this.logDetail = true\n        }\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.main-container{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        }\n\n.logger-wrapper{\n    display: flex;\n    justify-content: center;\n    .main-wrapper{\n        .logger-header{\n            margin-bottom: 1rem;\n            .register{\n                font-size: 1.3rem;\n                color: $lite-gray;\n                font-weight: bold;\n            }\n            .max{\n                font-size: 0.8rem;\n                color: $lite-gray;\n            }\n        }\n        .logger-container{\n            width: 95%;\n            min-height: 300px;\n            max-height: 350px;\n            border: solid $base-color;\n            border-radius: 5px;\n            background: $back-white;\n            padding-top: 1rem;\n            padding-bottom: 1rem;\n            overflow: scroll;\n            .no-my-quiz{\n                margin:2rem;\n                .no-quiz{\n                    color: $dark-blue;\n                    font-weight: bold;\n                    margin-bottom: 2rem;\n                }\n            \n            }\n            .logger-loop:hover{\n                background: $back-lite-white;\n                border-bottom: solid $lite-gray;\n            }\n            .logger-loop{\n                position: relative;\n                display: flex;\n                align-items: center;\n                border-bottom: solid $lite-gray;\n                transition: .5s;\n                .each-log-container{\n                    position: relative;\n                    display: flex;\n                    width: 100%;\n                    margin-bottom: 1rem;\n                    margin-top: 1rem;\n                    // padding-bottom: 0.5rem;\n                    align-items: center;\n                    // justify-content: center;\n                    .question-index-container{\n                        flex-basis: 10%;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        .question-index{\n                            border: solid $base-color;\n                            border-radius: 50vh;\n                            width: 1.7rem;\n                            height: 1.7rem;\n                            margin-left: 0.4rem;\n                            font-weight: bold;\n                            background: $dark-blue;\n                            color: white;\n                        }\n                    }\n                    .log-time{\n                        flex-basis: 30%;\n\n                    }\n                    .log-message{\n                        flex-basis: 50%;\n                    }\n                    .log-checked{\n                        flex-basis: 10%;\n                        // font-size: 0.8rem;\n                        color: red;\n                        margin-right: 1rem;\n                        border: solid $dull-red;\n                    }\n                }\n            }\n            .fa-angle-down{\n                margin-top: 1rem;\n            }\n           \n        }\n        .btn-basegra-white-db-sq{\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            padding-top: 0.2rem;\n            padding-bottom: 0.2rem;\n            padding-left: 1.2rem;\n            padding-right: 1.2rem;\n            font-weight: bold;\n            font-size: 1.2rem;\n\n        }\n\n    }\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}