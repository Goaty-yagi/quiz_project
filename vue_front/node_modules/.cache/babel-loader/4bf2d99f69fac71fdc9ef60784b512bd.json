{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _typeof from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport store from '..';\nimport axios from 'axios';\nimport { extractIdentifiers } from '@vue/compiler-core';\nexport default {\n  namespace: true,\n  state: {\n    title: '',\n    description: '',\n    selectedTagList: '',\n    relatedQuestion: '',\n    searchedQuestions: '',\n    reccomendedQuestion: '',\n    answeredQuestion: '',\n    // favoriteQuestion:'',\n    notificationApi: '',\n    showNoticeOnAcount: {\n      answer: false,\n      reply: false\n    },\n    notifications: {\n      reply: false,\n      answer: false,\n      post: false\n    }\n  },\n  getters: {\n    user: function user(state, getters, rootState) {\n      return rootState.signup.djangoUser;\n    },\n    gettersAnsweredQuestions: function gettersAnsweredQuestions(state) {\n      return state.answeredQuestion;\n    },\n    gettersReccomendedQuestion: function gettersReccomendedQuestion(state) {\n      return state.reccomendedQuestion;\n    },\n    gettersAnswer: function gettersAnswer(state) {\n      return state.showNoticeOnAcount.answer;\n    },\n    gettersReply: function gettersReply(state) {\n      return state.showNoticeOnAcount.reply;\n    },\n    // notificationApi(state){\n    //     return state.notificationApi\n    // },\n    getUserTags: function getUserTags(state, getters) {\n      if (getters.user) {\n        var _ret = function () {\n          var checkDict = {}; // let checkedDict = {}\n\n          var checkedList = [];\n          var checkedlist2 = [];\n\n          var _iterator = _createForOfIteratorHelper(getters.user.user_tag),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var i = _step.value;\n              checkDict[i.tag.id] = i.total_num;\n              checkedList.push(i.tag); // console.log('loop',Object.keys(checkDict).length,checkDict)\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          if (Object.keys(checkDict).length <= 3) {\n            return {\n              v: checkedList\n            };\n          }\n\n          if (Object.keys(checkDict).length > 3) {\n            var _loop = function _loop(m) {\n              var aryMax = function aryMax(a, b) {\n                return Math.max(a, b);\n              };\n\n              var max = Object.values(checkDict).reduce(aryMax);\n              var result = Object.keys(checkDict).reduce(function (r, key) {\n                return checkDict[key] === max ? key : r;\n              }, null); // checkedDict[result] = max\n\n              delete checkDict[result];\n              checkedlist2.push(result);\n            };\n\n            for (var m = 0; m < 3; m++) {\n              _loop(m);\n            }\n\n            return {\n              v: checkedlist2\n            };\n          }\n        }();\n\n        if (_typeof(_ret) === \"object\") return _ret.v;\n      }\n    },\n    notificationApi: function notificationApi(state) {\n      console.log('NAPI', state.notificationApi.length);\n      var noty = state.notificationApi;\n\n      if (noty.length == 0) {\n        return false;\n      } else if (noty.length == 1) {\n        var _iterator2 = _createForOfIteratorHelper(noty.length[0]),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var i = _step2.value;\n            console.log(i);\n\n            if (i.on_answer || i.on_reply) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (noty.length == 2) {\n        console.log(\"d2desu\", noty[0]);\n\n        var _iterator3 = _createForOfIteratorHelper(noty[0]),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var o = _step3.value;\n            console.log(o);\n\n            if (o.on_answer || o.on_reply) {\n              return true;\n            } else {\n              var _iterator4 = _createForOfIteratorHelper(noty[1]),\n                  _step4;\n\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var k = _step4.value;\n\n                  if (k.on_reply) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    } // handleOnReplyAndOnAnswer(state, getters, rootState){\n    //     console.log(\"handleOnREPLY\")\n    //     for(let question of getters.gettersAnsweredQuestions){\n    //         for(let answer of question.answer){\n    //             if(answer.on_reply==true&&answer.user.UID==getters.user.UID){\n    //                 return  true\n    //             }else{\n    //                 return false\n    //             }\n    //         }\n    //     }\n    //     console.log(\"end\")\n    // },\n\n  },\n  mutations: {\n    resetNotifications: function resetNotifications(state) {\n      console.log(\"in_reset\");\n      state.notifications.answer = false;\n      state.notifications.reply = false;\n      state.notifications.post = false;\n    },\n    getTitle: function getTitle(state, payload) {\n      state.title = payload;\n      console.log('Got title', state.title);\n    },\n    getDescription: function getDescription(state, payload) {\n      state.description = payload;\n      console.log('Got description', state.description);\n    },\n    // getSelectedTagList(state, payload){\n    //     state.selectedTagList = payload\n    // },\n    setReccomendedQuestion: function setReccomendedQuestion(state, payload) {\n      state.reccomendedQuestion = payload;\n      console.log('set-reccomendedQuestion');\n    },\n    setRelatedQuestion: function setRelatedQuestion(state, payload) {\n      state.relatedQuestion = payload;\n      console.log(\"commited relatedQ\", state.relatedQuestion);\n    },\n    getTagList: function getTagList(state, payload) {\n      state.selectedTagList = payload;\n      console.log('Got tagID', state.selectedTagList);\n    } // dateConvert(state,payload){\n    //     console.log(\"first\",payload)\n    //     var date = payload\n    //     var time = ''\n    //     var newDate = ''\n    //     var dt = new Date(date)\n    //     console.log(\"S\",dt)\n    //     if(dt.getHours() > 11){\n    //         time = \" PM\"\n    //         dt = dt.setHours(dt.getHours()-12)\n    //         date = new Date(dt)\n    //         console.log('pm',date)\n    //     }else{\n    //         time = \" AM\"\n    //     }\n    //     newDate = date + time + \" UTC\"\n    //     dt = new Date(newDate)\n    //     console.log(\"newdata IN Store\",newDate,'dt',dt)\n    //     var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n    //     console.log('before',stringDT)\n    //     stringDT = stringDT.replace(/\\//g,'-')\n    //     console.log('beforeafter',stringDT)\n    //     return stringDT\n    // },\n\n  },\n  actions: {\n    commitHandleOnReplyAndOnAnswer: function commitHandleOnReplyAndOnAnswer(_ref) {\n      var commit = _ref.commit,\n          getters = _ref.getters;\n      commit('handleOnReplyAndOnAnswer', getters.user);\n    },\n    handleNotifications: function handleNotifications(context, payload) {\n      if (payload == \"reply\") {\n        context.state.notifications.reply = true;\n        setTimeout(context.commit, 3000, \"resetNotifications\");\n      }\n\n      if (payload == \"answer\") {\n        context.state.notifications.answer = true;\n        setTimeout(context.commit, 3000, \"resetNotifications\");\n      }\n\n      if (payload == \"post\") {\n        context.state.notifications.post = true;\n        setTimeout(context.commit, 4000, \"resetNotifications\");\n      }\n    },\n    getSearchQuestion: function getSearchQuestion(state, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/api/board/question/search/?keyword=\".concat(payload)).then(function (response) {\n                  state.searchedQuestions = response.data;\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    getRelatedQuestion: function getRelatedQuestion(_ref2, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var state, getters, commit, url;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                state = _ref2.state, getters = _ref2.getters, commit = _ref2.commit;\n                // for reccomended-question, if user and user.user_tag exist, get reccomended-question.\n                // else, get question-viewed-order.\n                console.log('GRQ', getters.getUserTags);\n\n                if (getters.user) {\n                  try {\n                    if (getters.getUserTags.length == 1) {\n                      url = \"/api/board/question/filter-list?tag=\".concat(getters.getUserTags[0], \"&uid=\").concat(getters.user.UID);\n                    }\n\n                    if (getters.getUserTags.length == 2) {\n                      url = \"/api/board/question/filter-list?tag=\".concat(getters.getUserTags[0], \"&tag=\").concat(getters.getUserTags[1], \"&uid=\").concat(getters.user.UID);\n                    }\n\n                    if (getters.getUserTags.length == 3) {\n                      url = \"/api/board/question/filter-list?tag=\".concat(getters.getUserTags[0], \"&tag=\").concat(getters.getUserTags[1], \"&tag=\").concat(getters.getUserTags[2], \"&uid=\").concat(getters.user.UID);\n                    } else {\n                      url = '/api/board/question-viewed-order';\n                    }\n                  } catch (_unused) {\n                    url = '/api/board/question-viewed-order';\n                  }\n                } else {\n                  url = '/api/board/question-viewed-order';\n                }\n\n                _context2.prev = 3;\n                console.log(\"try2\", url);\n                _context2.next = 7;\n                return axios.get(url).then(function (response) {\n                  commit('setReccomendedQuestion', response.data); // state.reccomendedQuestion = response.data\n                });\n\n              case 7:\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](3);\n\n                (function (error) {\n                  console.log(error);\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 9]]);\n      }))();\n    },\n    getAnsweredQuestion: function getAnsweredQuestion(_ref3, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var state, getters, rootState, rootGetters, url;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                state = _ref3.state, getters = _ref3.getters, rootState = _ref3.rootState, rootGetters = _ref3.rootGetters;\n                // this.$store.commit('setIsLoading', true)\n                console.log(\"INGAQ\");\n                url = \"/api/board/question-answered?user=\".concat(rootGetters.getUID);\n                _context3.prev = 3;\n                _context3.next = 6;\n                return axios.get(url).then(function (response) {\n                  state.answeredQuestion = response.data;\n                  console.log('A', state.answeredQuestion);\n                });\n\n              case 6:\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](3);\n\n                (function (error) {\n                  console.log(\"error\", error);\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 8]]);\n      }))();\n    },\n    getNotificationApi: function getNotificationApi(_ref4, payload) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var state, getters, rootState, rootGetters, url;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                state = _ref4.state, getters = _ref4.getters, rootState = _ref4.rootState, rootGetters = _ref4.rootGetters;\n                // this.$store.commit('setIsLoading', true)\n                console.log(\"INGNAPI\");\n                url = \"/api/board/user-question-answer-notification?user=\".concat(rootGetters.getUID);\n                _context4.prev = 3;\n                _context4.next = 6;\n                return axios.get(url).then(function (response) {\n                  state.notificationApi = response.data;\n                  console.log('gotAPI', state.answeredQuestion);\n                });\n\n              case 6:\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](3);\n\n                (function (error) {\n                  console.log(\"error\", error);\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[3, 8]]);\n      }))();\n    } // async getFavoriteQuestion({ state , getters }, payload){\n    //     const questionId = []\n    //     for(let i of getters.user.question){\n    //         questionId.push(i.id)\n    //     }\n    //     await axios\n    //     .get(`/api/board/question-favorite?question_id=${questionId}`)\n    //     .then(response => {\n    //         state.favoriteQuestion = response.data\n    //         console.log('GetFQ', state.favoriteQuestion)\n    //         })\n    //     .catch(error => {\n    //         console.log(error)\n    //     })\n    // },\n    // async getSearchQuestion({ state, commit }){\n    //     await axios({\n    //         method: 'get',\n    //         url: `/api/board/question/search/`,\n    //         data: {\n    //             keyword: state.searchKeywords\n    //         },\n    //     })\n    //     .then()\n    //     .catch(error => {\n    //         console.log(error)\n    //     })\n    // },          \n\n  }\n};","map":{"version":3,"names":["store","axios","extractIdentifiers","namespace","state","title","description","selectedTagList","relatedQuestion","searchedQuestions","reccomendedQuestion","answeredQuestion","notificationApi","showNoticeOnAcount","answer","reply","notifications","post","getters","user","rootState","signup","djangoUser","gettersAnsweredQuestions","gettersReccomendedQuestion","gettersAnswer","gettersReply","getUserTags","checkDict","checkedList","checkedlist2","user_tag","i","tag","id","total_num","push","Object","keys","length","m","aryMax","a","b","Math","max","values","reduce","result","r","key","console","log","noty","on_answer","on_reply","o","k","mutations","resetNotifications","getTitle","payload","getDescription","setReccomendedQuestion","setRelatedQuestion","getTagList","actions","commitHandleOnReplyAndOnAnswer","commit","handleNotifications","context","setTimeout","getSearchQuestion","get","then","response","data","catch","error","getRelatedQuestion","url","UID","getAnsweredQuestion","rootGetters","getUID","getNotificationApi"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/board.js"],"sourcesContent":["import store from '..'\nimport axios from 'axios'\nimport { extractIdentifiers } from '@vue/compiler-core'\n\nexport default {\n    namespace: true,\n    state: {\n        title:'',\n        description:'',\n        selectedTagList:'',\n        relatedQuestion:'',\n        searchedQuestions:'',\n        reccomendedQuestion:'',\n        answeredQuestion:'',\n        // favoriteQuestion:'',\n        notificationApi:'',\n        showNoticeOnAcount:{\n            answer:false,\n            reply:false,\n        },\n        notifications:{\n            reply: false,\n            answer: false,\n            post: false,\n        },\n    },\n    getters:{\n        user(state, getters, rootState){\n            return rootState.signup.djangoUser\n        },\n        gettersAnsweredQuestions(state){\n            return state.answeredQuestion\n        },\n        gettersReccomendedQuestion(state){\n            return state.reccomendedQuestion\n        },\n        gettersAnswer(state){\n            return state.showNoticeOnAcount.answer\n        },\n        gettersReply(state){\n            return state.showNoticeOnAcount.reply\n        },\n        // notificationApi(state){\n        //     return state.notificationApi\n        // },\n        getUserTags(state, getters){\n            if(getters.user){\n                let checkDict = {}  \n                // let checkedDict = {}\n                let checkedList = []\n                let checkedlist2 = []\n                for(let i of getters.user.user_tag){\n                    checkDict[i.tag.id] = i.total_num\n                    checkedList.push(i.tag)\n                    // console.log('loop',Object.keys(checkDict).length,checkDict)\n                }\n                if(Object.keys(checkDict).length <= 3){\n                    return checkedList\n                }\n                if(Object.keys(checkDict).length > 3){\n                    for(let m=0; m < 3; m++){\n                        const aryMax = function (a, b) {return Math.max(a, b);}\n                        let max = Object.values(checkDict).reduce(aryMax);\n                        const result = Object.keys(checkDict).reduce( (r, key) => {\n                            return checkDict[key] === max ? key : r \n                            }, null);\n                        // checkedDict[result] = max\n                        delete checkDict[result]\n                        checkedlist2.push(result)\n                    }\n                    return checkedlist2\n                }\n            }\n        },\n        notificationApi(state){\n            console.log('NAPI',state.notificationApi.length)\n            var noty = state.notificationApi\n            if(noty.length==0){\n                return false\n            }\n            else if(noty.length==1){\n                for(let i of noty.length[0]){\n                    console.log(i)\n                    if(i.on_answer||i.on_reply){\n                        return true\n                    }else{\n                        return false\n                    }\n                }\n            }\n            else if(noty.length==2){\n                console.log(\"d2desu\",noty[0])\n                for(let o of noty[0]){\n                    console.log(o)\n                    if(o.on_answer||o.on_reply){\n                        return true\n                    }else{\n                        for(let k of noty[1]){\n                            if(k.on_reply){\n                                return true\n                            }\n                            else{\n                                return false\n                            }\n                        }\n                    }\n                }\n            }\n        },        \n        // handleOnReplyAndOnAnswer(state, getters, rootState){\n        //     console.log(\"handleOnREPLY\")\n        //     for(let question of getters.gettersAnsweredQuestions){\n        //         for(let answer of question.answer){\n        //             if(answer.on_reply==true&&answer.user.UID==getters.user.UID){\n        //                 return  true\n        //             }else{\n        //                 return false\n        //             }\n        //         }\n        //     }\n        //     console.log(\"end\")\n        // },\n    },\n    mutations:{\n        resetNotifications(state){\n            console.log(\"in_reset\")\n            state.notifications.answer = false\n            state.notifications.reply = false\n            state.notifications.post = false\n        },\n        getTitle(state,payload){\n            state.title = payload\n            console.log('Got title',state.title)\n        },\n        getDescription(state, payload){\n            state.description = payload\n            console.log('Got description',state.description)\n        },\n        // getSelectedTagList(state, payload){\n        //     state.selectedTagList = payload\n        // },\n        setReccomendedQuestion(state, payload){\n            state.reccomendedQuestion = payload\n            console.log('set-reccomendedQuestion')\n        },\n        setRelatedQuestion(state, payload){\n            state.relatedQuestion = payload\n            console.log(\"commited relatedQ\",state.relatedQuestion )\n        },\n        getTagList(state, payload){\n                state.selectedTagList = payload\n                console.log('Got tagID',state.selectedTagList)\n        },\n        // dateConvert(state,payload){\n        //     console.log(\"first\",payload)\n        //     var date = payload\n        //     var time = ''\n        //     var newDate = ''\n        //     var dt = new Date(date)\n        //     console.log(\"S\",dt)\n        //     if(dt.getHours() > 11){\n        //         time = \" PM\"\n        //         dt = dt.setHours(dt.getHours()-12)\n        //         date = new Date(dt)\n        //         console.log('pm',date)\n        //     }else{\n        //         time = \" AM\"\n        //     }\n        //     newDate = date + time + \" UTC\"\n        //     dt = new Date(newDate)\n        //     console.log(\"newdata IN Store\",newDate,'dt',dt)\n        //     var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n        //     console.log('before',stringDT)\n        //     stringDT = stringDT.replace(/\\//g,'-')\n        //     console.log('beforeafter',stringDT)\n        //     return stringDT\n        // },\n    },\n    \n    actions:{\n        commitHandleOnReplyAndOnAnswer({commit,getters}){\n            commit('handleOnReplyAndOnAnswer', getters.user)\n        },\n        handleNotifications(context, payload){\n            if(payload == \"reply\"){\n                context.state.notifications.reply = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")      \n            }\n            if(payload == \"answer\"){\n                context.state.notifications.answer = true\n                setTimeout(context.commit, 3000,\"resetNotifications\")\n            }\n            if(payload == \"post\"){\n                context.state.notifications.post = true\n                setTimeout(context.commit, 4000,\"resetNotifications\")\n            }\n        },\n        async getSearchQuestion(state,payload){            \n            await axios\n                .get(`/api/board/question/search/?keyword=${payload}`)\n                .then(response => {\n                    state.searchedQuestions = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async getRelatedQuestion({ state , getters, commit }, payload) {\n            // for reccomended-question, if user and user.user_tag exist, get reccomended-question.\n            // else, get question-viewed-order.\n            console.log('GRQ',getters.getUserTags)\n            if(getters.user){\n                try{\n                    if(getters.getUserTags.length == 1){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 2){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&uid=${getters.user.UID}`\n                    }\n                    if(getters.getUserTags.length == 3){\n                        var url = `/api/board/question/filter-list?tag=${getters.getUserTags[0]}&tag=${getters.getUserTags[1]}&tag=${getters.getUserTags[2]}&uid=${getters.user.UID}`\n                    }\n                    else{\n                        var url = '/api/board/question-viewed-order'\n                    }\n                }\n                catch{\n                    var url = '/api/board/question-viewed-order'  \n                }\n            }else{\n                var url = '/api/board/question-viewed-order'\n            }\n            try{\n                console.log(\"try2\",url)\n                await axios.get(url)\n                    .then(response => {\n                        commit('setReccomendedQuestion', response.data)\n                    // state.reccomendedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getAnsweredQuestion({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            console.log(\"INGAQ\")\n            var url = `/api/board/question-answered?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.answeredQuestion = response.data\n                    console.log('A',state.answeredQuestion)\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        async getNotificationApi({ state , getters,rootState,rootGetters}, payload) {\n            // this.$store.commit('setIsLoading', true)\n            console.log(\"INGNAPI\")\n            var url = `/api/board/user-question-answer-notification?user=${rootGetters.getUID}`\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    state.notificationApi = response.data\n                    console.log('gotAPI',state.answeredQuestion)\n                    })                    \n                }\n            catch{(error => {\n                    console.log(\"error\",error)\n            })}\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async getFavoriteQuestion({ state , getters }, payload){\n        //     const questionId = []\n        //     for(let i of getters.user.question){\n        //         questionId.push(i.id)\n        //     }\n        //     await axios\n        //     .get(`/api/board/question-favorite?question_id=${questionId}`)\n        //     .then(response => {\n        //         state.favoriteQuestion = response.data\n        //         console.log('GetFQ', state.favoriteQuestion)\n        //         })\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },\n        // async getSearchQuestion({ state, commit }){\n        //     await axios({\n        //         method: 'get',\n        //         url: `/api/board/question/search/`,\n        //         data: {\n        //             keyword: state.searchKeywords\n        //         },\n        //     })\n        //     .then()\n        //     .catch(error => {\n        //         console.log(error)\n        //     })\n        // },          \n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}