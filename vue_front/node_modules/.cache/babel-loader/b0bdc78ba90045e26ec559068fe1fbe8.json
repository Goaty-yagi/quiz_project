{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js","mtime":1649296116897},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/store/modules/signup.js"],"names":["createPersistedState","auth","router","axios","createUserWithEmailAndPassword","fetchSignInMethodsForEmail","sendEmailVerification","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","store","namespace","state","username","email","email2","country","password","user","djangoUser","UID","fasvoriteQuestion","emailVerified","authIsReady","checkedEmail","accountURL","actionCodeSettings","url","handleCodeInApp","getters","getUID","getDjangouser","mutations","getUsername","item","getEmail","getEmail2","getCountry","getPassword","setUser","payload","uid","console","log","setAuthIsReady","emailVerifiedHandler","checkEmailHandler","actions","getDjangoUser","commit","get","then","response","data","dispatch","catch","error","getFavoriteQuestion","questionId","favorite_question","question","i","push","id","favoriteQuestion","signup","context","ref","currentUser","Error","sendEmailVerify","sentValidation","login","checkEmail","passwordReset","logout","name","unsub"],"mappings":"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","sourcesContent":["import createPersistedState from 'vuex-persistedstate'\nimport { auth } from '@/firebase/config'\nimport {router} from \"@/main.js\"\nimport axios from 'axios'\nimport {\n  createUserWithEmailAndPassword,\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail\n} from 'firebase/auth'\nimport store from '..'\n\nexport default {\n    namespace: true,\n    // plugins: [\n    //     createPersistedState({\n    //       key: 'signupKey',  // 設定しなければ'vuex'\n    //       paths: ['username','email','email2','country',\"UID\"],  // 保存するモジュール：設定しなければ全部。\n    //       storage: window.sessionStorage,  // 設定しなければlocalStorage\n    //     })],\n    state: {\n        username: '',\n        email:'',\n        email2:'',\n        country:'',\n        password:'',\n        user: null,\n        djangoUser: null,\n        UID:'',\n        fasvoriteQuestion:'',\n        emailVerified:null,\n        authIsReady:false,\n        checkedEmail:null,\n        accountURL:'http://localhost:8080/login/',\n        actionCodeSettings:{\n            url: null,\n            handleCodeInApp: true\n                }\n    },\n    getters:{\n        getUID(state){\n            return state.UID\n        },\n        getDjangouser(state){\n            return state.djangoUser\n        }\n    },\n    mutations:{\n        getUsername(state,item){\n            state.username = item\n        },\n        getEmail(state,item){\n            state.email = item\n        },\n        getEmail2(state,item){\n            state.email2 = item\n        },\n        getCountry(state,item){\n            state.country = item\n        },\n        getPassword(state,item){\n            state.password = item\n        },\n        setUser(state,payload){\n            state.user = payload\n            state.UID = state.user.uid\n            console.log('user state changed:',state.user)\n        },\n        setAuthIsReady(state,payload){\n            state.authIsReady = payload\n            console.log('setauth is changed:',state.user)\n        },\n        emailVerifiedHandler(state,payload){\n            state.emailVerified = payload\n            console.log('emailV chainged',state.emailVerified)\n        },\n        checkEmailHandler(state,payload){\n            state.checkedEmail = payload\n        }\n    },\n    actions:{\n        async getDjangoUser({ state, getters,commit }){\n            console.log(getters.getUID)\n            await axios\n            .get(`/api/user/${getters.getUID}`)\n            .then(response => {\n                state.djangoUser = response.data\n                console.log('inDUGet', state.djangoUser)\n                store.dispatch('getFavoriteQuestion')\n                })\n            .catch(error => {\n                console.log(error)\n            })\n        },\n        async getFavoriteQuestion({ state, commit }){\n            const questionId = []\n            for(let i of state.djangoUser.favorite_question[0].question){\n                questionId.push(i.id)\n            }\n            await axios\n            .get(`/api/board/question-favorite?question_id=${questionId}`)\n            .then(response => {\n                state.favoriteQuestion = response.data\n                console.log('inDUGet', state.favoriteQuestion)\n                })\n            .catch(error => {\n                console.log(error)\n            })\n        },\n        async signup(context, {email,password}){\n            console.log('signup in')\n            try {\n                const ref = await createUserWithEmailAndPassword(auth, email, password)\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                sendEmailVerification(ref.user,context.state.actionCodeSettings)\n                context.commit('setUser',ref.user)\n                context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                console.log('signup is done',auth.currentUser)\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not conmplite signup')\n            }\n        },\n        async sendEmailVerify(context){\n            context.state.actionCodeSettings['url'] = context.state.accountURL\n            console.log('sendEmail',context.state.user,context.state.actionCodeSettings)\n            await sendEmailVerification(context.state.user,context.state.actionCodeSettings)\n        },\n        async sentValidation(context){\n            console.log('insentV')\n            try{\n                await context.state.user.sendEmailVerification()\n            }catch{\n                console.log('error in sent')\n                throw new Error('could not sent validation')\n            }\n        },\n        async login(context, {email,password}){\n            const ref = await signInWithEmailAndPassword(auth, email, password)\n            context.commit('setUser',ref.user)\n            context.commit('emailVerifiedHandler',ref.user.emailVerified)\n            console.log(context.state.user,context.state.emailVerified)\n                // try{\n                //     const ref = await signInWithEmailAndPassword(auth, email, password)\n                //     console.log('signin',ref)\n                //     \n                //     console.log('signin is done',auth.currentUser)\n                // }catch{\n                //     console.log('catch in store',error.code)\n                //     throw new Error('could not complite signin')\n                    \n                // }\n                // if(res){\n                //     console.log('signin',ref)\n                //     context.commit('setUser',ref.user)\n                //     context.commit('emailVerifiedHandler',ref.user.emailVerified)\n                //     console.log('signin is done',auth.currentUser)\n                // }else{\n                //     console.log('error in sign in')\n                //     throw new Error('could not complite signin')\n                // }\n        },\n        async checkEmail(context,email){\n            try {\n                const ref = await fetchSignInMethodsForEmail(auth,email);\n                if (ref == 'password'){\n                    context.commit('checkEmailHandler',false)\n                    console.log('already in use')\n                }else{\n                    context.commit('checkEmailHandler',true)\n                    console.log('you can use it')\n                }\n            }catch{\n                console.log('error in sign up')\n                throw new Error('could not check email')\n            }\n        },\n        async passwordReset(context,email){\n            console.log('passreset action',email)\n            try{\n                context.state.actionCodeSettings['url'] = context.state.accountURL\n                await sendPasswordResetEmail(auth,email,context.state.actionCodeSettings)\n            console.log('password reset sent')\n            }catch{\n                console.log('error in pass reset')\n                throw new Error('could not sent pass reset')\n            }\n        },\n        async logout(context){\n            await signOut(auth)\n            context.commit('setUser',null)\n            router.push({ name: 'Home' })\n        }\n    }\n\n}\nconst unsub = onAuthStateChanged(auth,(user) =>{\n    store.commit('setAuthIsReady',true)\n    store.commit('setUser',user)\n    if(user){\n        store.dispatch('getDjangoUser')\n        store.commit('emailVerifiedHandler',user.emailVerified)\n    }\n    unsub()\n})"]}]}