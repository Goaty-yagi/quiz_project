{"ast":null,"code":"export default {\n  props: ['questionDetailInfo', 'myQuestion', 'showButtonAndNoQuizFalse'],\n\n  mounted() {\n    this.$store.commit('showModalTrue');\n    console.log('mounted at detail', this.questionDetailInfo);\n  },\n\n  beforeUnmount() {\n    this.$store.commit('showModalFalse');\n    this.$store.commit('fixedScrollFalse');\n  },\n\n  computed: {\n    myQuiz() {\n      return this.$store.state.signup.djangoUser.my_quiz[0];\n    }\n\n  },\n  methods: {\n    addStep() {\n      this.$router.push({\n        name: 'Account'\n      }); // this.$emit('sentHandle')\n      // this.$emit('handle')\n      // this.$store.commit('addStep')\n    },\n\n    close() {\n      this.$emit('handleQuizDetail');\n    },\n\n    submitForm() {\n      this.$emit('submitForm');\n    },\n\n    // questionDelete(id){\n    //     console.log(\"clicked\")\n    //     this.$store.dispatch(\"handleNotifications\", 'reply')\n    //     this.deleteMyQuestion(id)\n    //     this.close()\n    // },\n    deleteMyQuestion(question) {\n      console.log(\"INDE\", question, this.myQuestion.length);\n      let payload = {\n        \"question\": question,\n        \"myQuiz\": this.myQuiz.id\n      };\n      this.$emit('deleteQuestionFunForDetailPage', question);\n      console.log(payload, this.myQuestion);\n      this.$store.commit(\"deleteMyQuestion\", question);\n      this.$store.dispatch(\"createAndDeleteMyQuiz\", payload);\n    },\n\n    showConfirmFalse() {\n      this.$emit('showConfirmFalse');\n      this.$emit('chancelAction');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsEA,eAAe;EACXA,KAAK,EAAC,CACF,oBADE,EAEF,YAFE,EAGF,0BAHE,CADK;;EAOXC,OAAO,GAAE;IACL,KAAKC,MAAL,CAAYC,MAAZ,CAAmB,eAAnB;IACAC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC,KAAKC,kBAArC;EACH,CAVU;;EAWXC,aAAa,GAAE;IACX,KAAKL,MAAL,CAAYC,MAAZ,CAAmB,gBAAnB;IACA,KAAKD,MAAL,CAAYC,MAAZ,CAAmB,kBAAnB;EACH,CAdU;;EAeXK,QAAQ,EAAC;IACLC,MAAM,GAAE;MACJ,OAAO,KAAKP,MAAL,CAAYQ,KAAZ,CAAkBC,MAAlB,CAAyBC,UAAzB,CAAoCC,OAApC,CAA4C,CAA5C,CAAP;IACH;;EAHI,CAfE;EAoBXC,OAAO,EAAC;IACJC,OAAO,GAAE;MACL,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QAAEC,IAAI,EAAE;MAAR,CAAlB,EADK,CAEL;MACA;MACA;IACH,CANG;;IAOJC,KAAK,GAAE;MACH,KAAKC,KAAL,CAAW,kBAAX;IACH,CATG;;IAUJC,UAAU,GAAE;MACR,KAAKD,KAAL,CAAW,YAAX;IACH,CAZG;;IAaJ;IACA;IACA;IACA;IACA;IACA;IACAE,gBAAgB,CAACC,QAAD,EAAU;MACtBnB,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBkB,QAAnB,EAA4B,KAAKC,UAAL,CAAgBC,MAA5C;MACA,IAAIC,OAAM,GAAI;QACV,YAAWH,QADD;QAEV,UAAS,KAAKd,MAAL,CAAYkB;MAFX,CAAd;MAIA,KAAKP,KAAL,CAAW,gCAAX,EAA4CG,QAA5C;MACAnB,OAAO,CAACC,GAAR,CAAYqB,OAAZ,EAAoB,KAAKF,UAAzB;MACA,KAAKtB,MAAL,CAAYC,MAAZ,CAAmB,kBAAnB,EAAsCoB,QAAtC;MACA,KAAKrB,MAAL,CAAY0B,QAAZ,CAAqB,uBAArB,EAA6CF,OAA7C;IACH,CA7BG;;IA8BJG,gBAAgB,GAAE;MACd,KAAKT,KAAL,CAAW,kBAAX;MACA,KAAKA,KAAL,CAAW,eAAX;IACJ;;EAjCI;AApBG,CAAf","names":["props","mounted","$store","commit","console","log","questionDetailInfo","beforeUnmount","computed","myQuiz","state","signup","djangoUser","my_quiz","methods","addStep","$router","push","name","close","$emit","submitForm","deleteMyQuestion","question","myQuestion","length","payload","id","dispatch","showConfirmFalse"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/components/dashboard/QuizConfirm.vue"],"sourcesContent":["<template>\n    <div class=\"l-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class='main-quizdetail-wrapper'>\n                <div class='l-container'>\n                    <!-- <div class=\"close-container\">\n                        <div @click=\"close\" class=\"close\">\n                            <i class=\"fas fa-times\"></i>\n                        </div>\n                    </div> -->\n                    <div class=\"main-detail-container\">\n                        <div class=\"question-field\">\n                            <p class=\"detail-text\">Grade</p>\n                            <p class=\"center\">:</p>\n                            <p class=\"detail-val\">{{ questionDetailInfo.grade }}</p>\n                        </div>\n                        <div class=\"question-field\">\n                            <p class=\"detail-text\">Level</p>\n                            <p class=\"center\">:</p>\n                            <p class=\"detail-val\">{{ questionDetailInfo.level }}</p>\n                        </div>\n                        <div class=\"question-field\">\n                            <p class=\"detail-text\">Question-type</p>\n                            <p class=\"center\">:</p>\n                            <p class=\"detail-val\">{{ questionDetailInfo.question_type }}</p>\n                        </div>\n                        <div class=\"question-field\">\n                            <p class=\"detail-text\">Field</p>\n                            <p class=\"center\">:</p>\n                            <p class=\"detail-val\">{{ questionDetailInfo.field }}</p>\n                        </div>\n                        <div class=\"question-label\">\n                            <p class=\"question-text\">Question</p>\n                            <div class=\"question-container\">\n                                <p class=\"question-description\">{{ questionDetailInfo.label }}</p>                                \n                            </div>\n                        </div>\n                        <div v-if=\"questionDetailInfo.image\" class=\"image-container\">\n                            <img class=\"image\" v-bind:src=\"questionDetailInfo.image\"/>\n                        </div>\n                        <div class=\"question-label\">\n                            <p class=\"question-text\">Answer</p>\n                            <div class=\"question-container\"\n                                v-for=\"(answer,answerindex) in  questionDetailInfo.answers\"\n                                v-bind:key=\"answerindex\">\n                                <div class=\"answer-detail\">\n                                    <p class=\"index\">{{ answerindex + 1 }}</p>\n                                    <p class=\"iabel\">{{ answer.label }}</p>\n                                    <div class=\"answer-detail-right\">\n                                        <p v-if=\"!answer.answer_id\" class=\"correct\">{{ answer.is_correct }}</p>\n                                        <p v-if=\"answer.answer_id\" class=\"answer-id\">{{ answer.answer_id }}</p>\n                                    </div>    \n                                </div>                         \n                            </div>\n                        </div>\n                    </div>\n                    <p class=\"main-title\">この内容で作成しますか？</p>\n                    <div @click=\"showConfirmFalse()\" class=\"btn-gray-black-gray-sq\">\n                        戻る\n                    </div>   \n                    <div @click=\"submitForm()\" class=\"btn-gray-black-gray-sq\">\n                        作成する\n                    </div>                  \n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props:[\n        'questionDetailInfo',\n        'myQuestion',\n        'showButtonAndNoQuizFalse'\n\n    ],\n    mounted(){\n        this.$store.commit('showModalTrue')\n        console.log('mounted at detail',this.questionDetailInfo)\n    },\n    beforeUnmount(){\n        this.$store.commit('showModalFalse')\n        this.$store.commit('fixedScrollFalse')\n    },\n    computed:{\n        myQuiz(){\n            return this.$store.state.signup.djangoUser.my_quiz[0]\n        },\n    },\n    methods:{\n        addStep(){\n            this.$router.push({ name: 'Account' })\n            // this.$emit('sentHandle')\n            // this.$emit('handle')\n            // this.$store.commit('addStep')\n        },\n        close(){\n            this.$emit('handleQuizDetail')\n        },\n        submitForm(){\n            this.$emit('submitForm')\n        },\n        // questionDelete(id){\n        //     console.log(\"clicked\")\n        //     this.$store.dispatch(\"handleNotifications\", 'reply')\n        //     this.deleteMyQuestion(id)\n        //     this.close()\n        // },\n        deleteMyQuestion(question){\n            console.log(\"INDE\",question,this.myQuestion.length)\n            let payload = {\n                \"question\":question,\n                \"myQuiz\":this.myQuiz.id\n            }\n            this.$emit('deleteQuestionFunForDetailPage',question)\n            console.log(payload,this.myQuestion)\n            this.$store.commit(\"deleteMyQuestion\",question)\n            this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n        },\n        showConfirmFalse(){\n            this.$emit('showConfirmFalse')\n            this.$emit('chancelAction')\n        }\n    },\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"style/_variables.scss\";\n.main-quizdetail-wrapper{\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    // overflow: scroll;\n    .l-container{\n        // height: auto;\n        max-height: 70vh;\n        overflow: scroll;\n        .main-detail-container{\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n            margin-top: 1rem;\n            margin-bottom: 0.5rem;\n            .question-field{\n                display: flex;\n                justify-content: center;\n                margin-bottom: 0.4rem;\n                border-bottom: 0.2rem solid $lite-gray;\n                padding: 0.5rem;\n                width: 80%;\n                .detail-text{\n                    flex-basis: 50%;\n                    display: flex;\n                    justify-content: flex-end;\n                    font-weight: bold;\n                    margin-right: 0.5rem;\n                }\n                .detail-val{\n                    flex-basis: 50%;\n                    display: flex;\n                    font-weight: bold;\n                    margin-left: 0.5rem;\n                }\n                .center{\n                    font-weight: bold;\n                }\n            }\n            .question-label{\n                display: flex;\n                justify-content: center;\n                flex-direction: column;\n                align-items: center;\n                width: 100%;\n                .question-text{\n                    font-weight: bold;\n                    margin-bottom: 0.3rem;\n                }\n                .question-container{\n                    background: $lite-gray;\n                    padding:0.5rem;\n                    margin-bottom: 0.5rem;\n                    width: 80%;\n                    .answer-detail{\n                        position: relative;\n                        display: flex;\n                        justify-content: space-between;\n                        .index{\n                            // flex-basis: 10%;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                            border: solid $base-color;\n                            border-radius: 50vh;\n                            width: 1.5rem;\n                            height: 1.5rem;\n                            background: $dark-blue;\n                            color: white;\n                            margin-right: 1rem;\n                        }\n                        .iabel{\n                            position: absolute;\n                            right: 0;\n                            left: 0;\n                            margin: 0 auto;\n                            // margin-right: 0.5rem;\n                            // margin-left: 0.5rem;\n                        }\n                        .answer-detail-right{\n                            display: flex;\n                            justify-content: flex-end;\n                            width: 50%;\n                            .correct{\n\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        .main-title{\n            font-weight: bold;\n            margin-bottom: 0.2rem;\n            color: $dull-red;\n        }\n        .btn-gray-black-gray-sq{\n            display: inline-block;\n            border: solid $base-color;\n            padding-right: 0.3rem;\n            padding-left: 0.3rem;\n            margin-bottom: 1rem;\n            margin-right: 0.5rem;\n            margin-left: 0.5rem;\n        }\n\n    }\n}\n.image-container{\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    .image{\n        width: 40%;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}