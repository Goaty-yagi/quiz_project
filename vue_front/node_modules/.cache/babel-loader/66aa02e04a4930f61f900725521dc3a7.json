{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-c318a298\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"main-wrapper\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"lds-dual-ring\"\n}, null, -1));\n\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"content-wrapper\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title-white\"\n}, \"アカウント\", -1));\n\nconst _hoisted_6 = {\n  class: \"cropper-wrapper\"\n};\nconst _hoisted_7 = [\"src\"];\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"画像を\");\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1));\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"変更する\");\n\nconst _hoisted_11 = [_hoisted_8, _hoisted_9, _hoisted_10];\nconst _hoisted_12 = {\n  class: \"my-quiz-wrapper\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_createTextVNode(\"My Quiz\");\n\nconst _hoisted_14 = {\n  key: 0,\n  class: \"notification-container\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"alert-position-container\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"notification-text\"\n}, \" お知らせ \"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"notification-alert\"\n}, \" Notifications \")], -1));\n\nconst _hoisted_16 = [_hoisted_15];\nconst _hoisted_17 = {\n  class: \"user-info-wrapper\"\n};\nconst _hoisted_18 = {\n  class: \"user-name user-container\"\n};\n\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left-side\"\n}, [/*#__PURE__*/_createTextVNode(\" User\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"Name \")], -1));\n\nconst _hoisted_20 = {\n  class: \"right-side\"\n};\nconst _hoisted_21 = {\n  class: \"current-level user-container\"\n};\n\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left-side\"\n}, [/*#__PURE__*/_createTextVNode(\" Current\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"Grade \")], -1));\n\nconst _hoisted_23 = {\n  class: \"right-side grade-right-side\"\n};\nconst _hoisted_24 = {\n  classs: \"current-level-text\"\n};\nconst _hoisted_25 = {\n  class: \"current-level user-container\"\n};\n\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"left-side\"\n}, [/*#__PURE__*/_createTextVNode(\" Max\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"Grade \")], -1));\n\nconst _hoisted_27 = {\n  class: \"right-side grade-right-side\"\n};\nconst _hoisted_28 = {\n  classs: \"current-level-text\"\n};\nconst _hoisted_29 = {\n  key: 0,\n  class: \"next-title\"\n};\nconst _hoisted_30 = {\n  key: 1,\n  class: \"next-title grade-up\"\n};\nconst _hoisted_31 = {\n  class: \"status-wrapper\"\n};\nconst _hoisted_32 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_chart = _resolveComponent(\"chart\");\n\n  const _component_NotVerified = _resolveComponent(\"NotVerified\");\n\n  const _component_Sent = _resolveComponent(\"Sent\");\n\n  const _component_Thumbnail = _resolveComponent(\"Thumbnail\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"account-wrapper\", {\n      'scroll-fixed': _ctx.fixedScroll,\n      'laoding-center': _ctx.$store.state.isLoading\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"is-loading-bar has-text-centered\", {\n      'is-loading': _ctx.$store.state.isLoading\n    }])\n  }, _hoisted_3, 2), _ctx.$store.state.isLoading == false && $data.userData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: $options.getImageURL($data.userData.thumbnail)\n  }, null, 8, _hoisted_7), _createElementVNode(\"p\", {\n    class: \"change-img\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleShowThumbnail && $options.handleShowThumbnail(...args))\n  }, _hoisted_11)]), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_router_link, {\n    to: {\n      name: 'MyQuiz'\n    },\n    class: \"my-quiz\"\n  }, {\n    default: _withCtx(() => [_hoisted_13]),\n    _: 1\n  })]), $data.showNotification ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _hoisted_16)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_hoisted_19, _createElementVNode(\"div\", _hoisted_20, _toDisplayString($data.userData.name), 1)]), _createElementVNode(\"div\", _hoisted_21, [_hoisted_22, _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, _toDisplayString($options.getCurrentGradeNameFromIds($data.quizTaker.grade)) + \" Lv,\" + _toDisplayString($data.quizTaker.level), 1)])]), _createElementVNode(\"div\", _hoisted_25, [_hoisted_26, _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, _toDisplayString($data.quizTaker.max_grade) + \" Lv,\" + _toDisplayString($data.quizTaker.max_level), 1)])]), _createElementVNode(\"div\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.stopFlash()),\n    class: _normalizeClass($data.gradeUp ? 'next-grade-up' : 'next-level')\n  }, [!$data.gradeUp ? (_openBlock(), _createElementBlock(\"span\", _hoisted_29, \"Next-Level\")) : _createCommentVNode(\"\", true), $data.gradeUp ? (_openBlock(), _createElementBlock(\"span\", _hoisted_30, \"Grade-Up\")) : _createCommentVNode(\"\", true), _createElementVNode(\"p\", {\n    class: _normalizeClass({\n      'stop': $data.stop\n    })\n  }, _toDisplayString($options.nextGrade($options.getCurrentGradeNameFromIds($data.quizTaker.grade), $data.quizTaker.level)), 3)], 2)]), _createElementVNode(\"div\", _hoisted_31, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.grade, (g, key, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"chart-loop\",\n      key: index\n    }, [$options.showChartHeaderGrade(key) ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      onClick: $event => $options.handleStatusParameter($options.convertGradeIntToGradeId(key)),\n      class: _normalizeClass([\"chart-header\", {\n        'current-status-grade': $options.getCurrentStatusGrade($options.convertGradeIntToGradeId(key))\n      }])\n    }, [_createElementVNode(\"div\", null, _toDisplayString(key), 1)], 10, _hoisted_32)) : _createCommentVNode(\"\", true)]);\n  }), 128)), $data.gotInfo ? (_openBlock(), _createBlock(_component_chart, {\n    key: 0,\n    \"chart-data\": $data.chartData\n  }, null, 8, [\"chart-data\"])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.goCommunityAccount()),\n    class: \"comunity-account\"\n  }, \" コミュニティアカウントへ移動 \")])) : _createCommentVNode(\"\", true)]), !$setup.emailVerified && _ctx.$store.state.isLoading == false ? (_openBlock(), _createBlock(_component_NotVerified, {\n    key: 0,\n    currentPageName: $data.currentPageName\n  }, null, 8, [\"currentPageName\"])) : _createCommentVNode(\"\", true), _withDirectives(_createVNode(_component_Sent, null, null, 512), [[_vShow, $data.showSent]]), $data.showThumbnail ? (_openBlock(), _createBlock(_component_Thumbnail, {\n    key: 1,\n    onShowThumbnailFalse: $options.showThumbnailFalse,\n    onGetUserData: $options.getUserData,\n    getDjangouser: _ctx.getDjangouser,\n    minContainerHeight: $data.minContainerHeight,\n    imageType: $data.imageType,\n    minContainerWidth: $data.minContainerWidth\n  }, null, 8, [\"onShowThumbnailFalse\", \"onGetUserData\", \"getDjangouser\", \"minContainerHeight\", \"imageType\", \"minContainerWidth\"])) : _createCommentVNode(\"\", true)], 2);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_2","_hoisted_9","_hoisted_15","classs","_createElementBlock","_ctx","state","isLoading","$data","_hoisted_5","src","$options","thumbnail","onClick","_createVNode","_component_router_link","to","name","_hoisted_16","_hoisted_19","_toDisplayString","_hoisted_22","grade","level","_hoisted_26","max_grade","max_level","_Fragment","_renderList","g","key","index","_createBlock","_component_chart","$setup","_component_NotVerified","currentPageName","_component_Sent","_component_Thumbnail","onShowThumbnailFalse","onGetUserData","getDjangouser","minContainerHeight","imageType","minContainerWidth"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Account.vue"],"sourcesContent":["<template>\n    <div class=\"account-wrapper\" :class=\"{'scroll-fixed':fixedScroll, 'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            \n            <div v-if='$store.state.isLoading==false&&userData' class=\"content-wrapper\">\n                <h1 class='title-white'>アカウント</h1>\n                <div class=\"cropper-wrapper\">\n                    <img v-bind:src=\"getImageURL(userData.thumbnail)\"/>\n                    <p class=\"change-img\" @click='handleShowThumbnail'>画像を<br>変更する</p>\n                </div>\n                <div class=\"my-quiz-wrapper\">\n                    <router-link :to=\"{ name: 'MyQuiz'}\" class=\"my-quiz\">My Quiz</router-link>\n                </div>\n\n                <div v-if=\"showNotification\" class=\"notification-container\">\n                    <div class=\"alert-position-container\">\n                        <div class=\"notification-text\">\n                            お知らせ\n                        </div>\n                        <div class=\"notification-alert\">\n                            Notifications\n                        </div>\n                    </div>\n                </div>\n                <div class=\"user-info-wrapper\">\n                    <div class=\"user-name user-container\">\n                        <div class=\"left-side\">\n                            User<br>Name\n                        </div>\n                        <div class=\"right-side\">\n                            {{ userData.name}}\n                        </div>\n                    </div>\n                    <div class=\"current-level user-container\">\n                        <div class=\"left-side\">\n                            Current<br>Grade\n                        </div>\n                        <div class=\"right-side grade-right-side\">\n                            <div classs=\"current-level-text\">\n                                {{ getCurrentGradeNameFromIds(quizTaker.grade)}}\n                                Lv,{{ quizTaker.level }}\n                            </div>\n                            <!-- <div class=\"max-level\">\n                                最大レベル　初級Lv,2\n                            </div> -->\n                        </div>       \n                    </div>\n                    <div class=\"current-level user-container\">\n                        <div class=\"left-side\">\n                            Max<br>Grade\n                        </div>\n                        <div class=\"right-side grade-right-side\">\n                            <div classs=\"current-level-text\">\n                                {{ quizTaker.max_grade }}\n                                Lv,{{ quizTaker.max_level }}\n                            </div>\n                        </div>       \n                    </div>\n                    <div @click=\"stopFlash()\" :class=\"(gradeUp)?'next-grade-up':'next-level'\">\n                    <!-- <div class='next-level' :class=\"{'next-grade-up':gradeUp}\"> -->\n                        <span v-if=\"!gradeUp\" class=\"next-title\">Next-Level</span>\n                        <span v-if=\"gradeUp\" class=\"next-title grade-up\">Grade-Up</span>\n                        <p :class=\"{'stop':stop}\">{{ nextGrade(getCurrentGradeNameFromIds(quizTaker.grade),quizTaker.level) }}</p>\n                    </div>\n                </div>\n                <div class=\"status-wrapper\">\n                    <div class=chart-loop \n                    v-for=\"(g,key,index) in grade\"\n                    v-bind:key=\"index\">\n                        <div @click=\"handleStatusParameter(convertGradeIntToGradeId(key))\" \n                            v-if=\"showChartHeaderGrade(key)\" \n                            class=\"chart-header\"\n                            :class=\"{'current-status-grade':getCurrentStatusGrade(convertGradeIntToGradeId(key))}\">\n                            <div>{{key}}</div>\n                        </div>\n                    </div>\n                    <chart\n                    v-if=\"gotInfo\"\n                    :chart-data=\"chartData\"\n                    />\n                </div>\n                <div @click=\"goCommunityAccount()\" class=\"comunity-account\">\n                    コミュニティアカウントへ移動\n                </div>\n            </div>\n        </div>\n        <NotVerified\n        v-if=\"!emailVerified&&$store.state.isLoading==false\"\n        :currentPageName=\"currentPageName\"\n        />\n        <Sent v-show='showSent'/>\n        <Thumbnail v-if=\"showThumbnail\"\n        @showThumbnailFalse=\"showThumbnailFalse\"\n        @getUserData=\"getUserData\"\n        :getDjangouser=\"getDjangouser\"\n        :minContainerHeight=\"minContainerHeight\"\n        :imageType=\"imageType\"\n        :minContainerWidth=\"minContainerWidth\"/>\n    </div>\n</template>\n\n<script>\nimport {router} from \"../main.js\"\nimport axios from 'axios'\nimport 'cropperjs/dist/cropper.css';\nimport  Thumbnail from '@/components/account/Thumbnail.vue'\nimport  Chart from '@/components/account/Chart.vue'\nimport Sent from '@/components/signin/Sent.vue'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport {mapGetters,mapActions} from 'vuex'\n\nexport default{\n    setup(){\n        const store = useStore()\n        return{\n            user: computed(() => store.state.signup.user),\n            email: computed(() => store.state.signup.email),\n            password: computed(() => store.state.signup.password),\n            emailVerified: computed(() => store.state.signup.emailVerified),\n        }\n    },\n    data(){\n        return{\n            showSent:false,\n            error:'',\n            userData:'',\n            quizTaker:'',\n            showThumbnail:false,\n            currentPageName:'',\n            // showEmailVerified:true,\n            gotInfo:false,\n            showNotification:false,\n            stop: false,\n            gradeUp: false,\n            currentStatusGrade:'',\n            widthForCropper:'',\n            minContainerHeight:'',\n            minContainerWidth:'',\n            imageType: 'thumbnail',\n            backgroundColorList:{\n                '超初級':'rgba(255, 153, 51, 0.2)',\n                '初級':'rgba(81, 255, 0, 0.2)',\n                '中級':'rgba(191, 0, 255, 0.2)',\n                '上級':'rgba(255, 6, 6, 0.2)',\n            },\n            grade:{\n                '超初級':0,\n                '初級':1,\n                '中級':2,\n                '上級':3,\n            },\n            chartAllData:{\n                '超初級':{\n                    labels:[\n                        'ひらがな', \n                        'カタカナ', \n                        'ボキャブラリー', \n                        'すうじ'\n                        ],\n                },\n                '初級':{\n                    labels:[\n                        '漢字',\n                        '動詞',\n                        'い形容詞',\n                        'ボキャブラリー',\n                        '文法',\n                        'な形容詞',\n                    ],\n                },\n                '中級':{\n                    labels:[],\n                },\n                '上級':{\n                    labels:[],\n                }\n            },\n            chartData: {\n                labels: [],\n                datasets: [{ \n                    label: \"\",\n                    data: [],\n                    borderWidth:1,\n                    backgroundColor: 'rgba(255, 153, 51, 0.2)',\n                    borderColor: ' #ff9933',\n                    pointBackgroundColor: 'rgb(255, 99, 132)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'red'\n                }],\n            },\n        }\n    },\n    components: {\n        Sent,\n        Thumbnail,\n        Chart,\n        NotVerified\n    },\n    created(){\n        this.getQuizNameId()\n    },\n    // watch:{\n    //     widthForCropper:function(v) {\n    //     console.log(this.widthForCropper)\n    //     },\n    // },\n    computed: mapGetters(['quizNameId','getDjangouser','getEmailVerified','getPhotoURL', 'quizTakerObject','fixedScroll']),\n        \n    mounted(){\n        this.$store.commit('fixedScrollFalse')\n        console.log('account mounted',this.quizTakerObject,this.fixedScroll)\n        this.scrollFixedForUnmailverified()\n        window.addEventListener('resize', this.getWidth)\n        this.currentPageName = ''\n        this.patchImage()\n        this.getCurrentPageName()\n        // this.handleShowEmailVerified()\n    },\n    beforeUnmount(){\n        this.$store.commit('fixedScrollFalse')\n        this.$store.commit('showModalFalse')\n    },\n    methods:{\n        ...mapActions(['getQuizNameId']),\n        async getUserData(){\n            // this.$store.commit('setIsLoading', true)\n            await axios\n                .get(`/api/user/${this.getDjangouser.UID}`)\n                .then(response => {\n                    this.userData = response.data\n                    this.quizTaker = response.data.quiz_taker[0]\n                    console.log('inGet', this.userData,this.userStatus)\n                    // this.setInitUserStatus()\n                    this.gotInfo = true\n                })\n                .catch(e => {\n                    console.log('e',e)\n                    let logger = {\n                        message: \"in Account/signup.getUserData. couldn't get django user\",\n                        name: window.location.pathname,\n                        actualError: e\n                    }\n                    this.$store.commit('setLogger',logger)\n                    this.$store.commit(\"checkDjangoError\",e.message)\n                    this.$store.commit('setIsLoading', false)\n                })\n                this.handleStatusParameter(this.quizTaker.grade)\n                this.$store.commit('setIsLoading', false)\n        },\n        async patchImage(){\n            this.$store.commit('setIsLoading', true)\n            var list = this.getDjangouser.thumbnail.split('/')\n            console.log('list',list)\n            try{\n                if(list.includes('default.png')&&this.getPhotoURL){\n                    console.log('png');\n                    const blob = await fetch(this.getPhotoURL).then(r => r.blob());\n                    const headers = { \"content-type\": \"multipart/form-data\" };\n                    const formData = new FormData();\n                    formData.append('thumbnail',blob,`${blob}.png`)\n                    console.log('getthumb',formData.get('thumbnail'),formData),\n                    axios.patch(`/api/user/${this.getDjangouser.UID}`,\n                        formData,\n                        {headers}\n                    )\n                }\n            }\n            catch{\n                // doing nothig\n            }\n            \n            this.getUserData()\n        },\n        getImageURL(url){\n            if(this.getPhotoURL){\n                return this.getPhotoURL\n            }\n            else{\n                return url\n            }\n        },\n        async resent(){\n            try{\n                await this.$store.dispatch('sendEmailVerify')\n                this.handleShowSent()\n                console.log('showsent:',this.showSent)\n            }catch(err){\n                this.error = err\n                console.log(this.error)\n            }\n        },\n        handleShowSent(){\n            this.showSent = true\n        },\n        handleShowThumbnail(){\n            this.showThumbnail = true\n        },\n        showThumbnailFalse(){\n            this.showThumbnail = false\n            console.log('inA',this.showThumbnail)\n        },\n        getCurrentGradeNameFromIds(gradeID){\n            for (let i of this.quizNameId){\n                if(i.id == gradeID){\n                    return i.name\n                }\n            }\n        },\n        convertGradeIntToGradeId(gradeInt){\n            for (let i of this.quizNameId){\n                if(i.name==gradeInt){\n                    return i.id\n                }\n            }\n        },\n        handleStatusParameter(grade){\n            // this is handling chart view.\n            // 1, get quiz_taker from userinfo\n            // 2, get current grade from the quizTaker.\n            // 3, get chart labels which is locally set.\n            // 4, get percentage for each status from user_status from quiz_taker\n            // 5, set the labels and the percentages to chartData to invoke data for chart component\n            \n            let tempDict = {}\n            let tempChartAllData = this.chartAllData[this.getCurrentGradeNameFromIds(grade)].labels\n            let tempArray = []\n            this.currentStatusGrade = grade\n            for(let i of this.quizTaker.user_status){\n                if(i.grade==grade){\n                    tempDict[i.status[0]]={\"percentage\":i.percentage,\n                    'order':i.status[1],\n                    }\n                }\n            // var sort = Object.keys(tempDict).map((k)=>({ key: k, value: tempDict[k] }));\n            }\n            for(let i of tempChartAllData){\n                if(i in tempDict){\n                    tempArray.push(tempDict[i].percentage / 10)\n                }else{\n                    tempArray.push(0)\n                }\n            }\n            this.chartData.labels = tempChartAllData\n            this.chartData.datasets[0].data = tempArray\n            this.chartData.datasets[0].backgroundColor = this.backgroundColorList[this.getCurrentGradeNameFromIds(grade)]\n            this.gotInfo = true\n        },\n        getCurrentStatusGrade(grade){\n            if(this.currentStatusGrade==grade){\n                return true\n            }\n            else{\n                return false\n            }\n        },\n        getCurrentPageName(){\n            let i = this.$route.path\n            i = i.split(\"/\")\n            this.currentPageName = i[1]\n        },\n        nextGrade(grade,level){\n            if(level==10){\n                var max = Math.max(...Object.values(this.grade))\n                var g = this.grade[grade]+ 1\n                if(max == this.grade[grade]){\n                    return `最大レベルだよ！`\n                }\n                else{\n                    for(let i in this.grade){\n                        if(this.grade[i] == g){\n                            this.gradeUp = true\n                            return `次は${i}レベル${1}だよ！`\n                        }\n                    }\n                }\n            }\n            else{\n                return `次は${grade}レベル${level + 1}だよ！`\n            }\n        },\n        stopFlash(){\n            this.stop = !this.stop\n        },\n        showChartHeaderGrade(grade){\n            if(this.grade[grade] <= this.grade[this.quizTaker.max_grade]){\n                return true   \n            }\n            else{\n                return false\n            }\n        },\n        mountReset(){\n            this.gradeUp = false\n        },\n        // async setInitUserStatus(){\n        //     if(this.emailVerified){\n        //         if(this.$store.getters.getTempUser){\n        //             this.$store.commit('setQuizTakerID',this.quizTaker.id)\n        //             this.$store.commit('setQuizID',this.$store.getters.getTempUser.grade)\n        //             for(let i of this.$store.getters.getTempUser.statusList){\n        //                 await this.$store.dispatch('userStatusPost',i)\n        //             }\n        //         }\n        //         this.$store.commit('setTempUserReset')\n        //     }\n        // },\n        // handleShowEmailVerified(){\n        //     if(!this.EmainVerified){}\n        //     this.showEmailVerified = false\n        //     }\n        // },\n        goCommunityAccount(){\n            router.push(\"/board/account\")\n        },\n        // getScrollY(){\n        //     this.widthForCropper = window.innerWidth\n        //     console.log('width',this.widthForCropper)\n        // },\n        getWidth(){\n            this.widthForCropper = window.innerWidth\n            if(this.widthForCropper > 820 < 1200){\n                this.minContainerHeight = 800\n                this.minContainerWidth = 800\n            }\n            console.log('width2',this.widthForCropper)\n        },\n        scrollFixedForUnmailverified(){\n            if(!this.getEmailVerified){\n                this.$store.commit('fixedScrollTrue')\n                this.$store.commit('showModalTrue')\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"style/_variables.scss\";\n// @import 'cropperjs/dist/cropper.css';\n.scroll-fixed{\n    width:100%;\n    display: flex;\n    justify-content: center;\n}\n.account-wrapper{\n    display: flex;\n    justify-content: center;\n    // min-height: 10vh;\n    // height: 110vh;\n    .main-wrapper{\n        .content-wrapper{\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n            .my-quiz-wrapper{\n                position: relative;\n                height: 30px;\n                width: 100%;\n                margin-top: 1rem;\n                margin-bottom: 0.5rem;\n                .my-quiz{\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    margin: auto;\n                    padding-right: 0.6rem;\n                    padding-left: 0.6rem;\n                    border: solid $base-color;\n                    // background: $buttongradient;\n                    font-weight: bold;\n                    color: $lite-gray;\n                    border-radius: 5px;\n                    width: 90px;\n                    transition: .5s;\n\n                }\n                .my-quiz:hover{\n                    color: $dark-blue;\n                    border: solid $dark-blue;\n                    background: $buttongradient;\n                }\n            }\n            .cropper-wrapper{\n                display: flex;\n                position:relative;\n                justify-content: center;\n                margin-top: 0.5rem;\n                width: 13rem;\n                img{\n                    border-radius: 50%; \n                    width:  5rem;   \n                    height: 5rem;       \n                }\n                .change-img{\n                    position: absolute;\n                    right: 0;\n                    color: white;\n                    font-size: 0.8rem;\n                    border: solid transparent;\n                    border-radius: 5px;\n                    padding-left: 0.3rem;\n                    padding-right: 0.3rem;\n                    margin-left: 1rem;\n                    transition: .5s;\n                }\n                .change-img:hover{\n                    border: solid $lite-gray;\n\n                }\n            }\n            .notification-container{\n                position: relative;\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                .alert-position-container{\n                    width:70%;\n                    border: solid $base-color;\n                    min-height: 3rem;\n                    background: $back-white;\n                    margin-top: 1rem;\n                    margin-bottom: 1rem;\n                    .notification-alert{\n                    position: absolute;\n                    right: 0;\n                    top: 0;\n                    margin-right: 0.9rem;\n                    padding-right: 0.5rem;\n                    padding-left: 0.5rem;\n                    color: $back-white;\n                    font-weight: bold;\n                    border: solid $dark-blue;\n                    border-radius: 50vh;\n                    background:rgba(252, 75, 175, 0.961); \n                    }\n                }\n            }\n            .user-info-wrapper{\n                margin-top: 1rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                width: 100%;\n                .user-container{\n                    display: flex;\n                    border: 0.1rem solid $dark-blue;\n                    background: $back-white;\n                    border-radius: 0.5rem;\n                    width: 80%;\n                    min-height: 3rem;\n                    margin-bottom: 0.5rem;\n                    overflow: hidden;\n                    .left-side{\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        flex-basis: 30%;\n                        background: $base-color;\n                        border-right: 0.1rem solid $dark-blue;\n                        line-height: 0.8rem;\n                        color: white;\n                        font-weight: bold;\n                        font-size: 1.1rem;                      \n                    }\n                    .right-side{\n                        position: relative;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        flex-basis: 70%;\n                        width:70%;\n                        font-size: 1.2rem;\n                        font-weight: bold;\n                        // overflow-wrap: break-all;                        \n                    }\n                    .grade-right-side{\n                        position: relative;\n                        display: flex;\n                        justify-content: center;\n                        .current-level-text{\n                            display: flex;\n                            justify-content: center;\n                            align-items: flex-end;\n                        }\n                        // .max-level{\n                        //     position: absolute;\n                        //     color: rgba(252, 75, 175, 0.961); \n                        //     right: 0;\n                        //     top: 0;\n                        //     font-size: 0.7rem;\n                        //     margin-right: 0.2rem;\n                        // }\n                    }\n                }\n                .next-level{\n                    position: relative;\n                    margin: 2em 0;\n                    padding: 0.5em 1em;\n                    width: 70%;\n                    border: solid 3px #62c1ce;\n                    background: $base-white;\n                    .next-title{\n                        position: absolute;\n                        display: inline-block;\n                        top: -27px;\n                        left: -3px;\n                        padding: 0 9px;\n                        height: 25px;\n                        line-height: 25px;\n                        font-size: 17px;\n                        background: #62c1ce;\n                        color: #ffffff;\n                        font-weight: bold;\n                        border-radius: 5px 5px 0 0;\n                    }\n                    p{\n                        color: $dark-blue;\n                        font-weight: bold;\n                        margin: 0; \n                        padding: 0;\n                    }\n                }\n                .next-grade-up{\n                    position: relative;\n                    margin: 2em 0;\n                    padding: 0.5em 1em;\n                    width: 70%;\n                    background: $base-white;\n                    border: solid 3px rgb(236, 113, 181);\n                    .grade-up{\n                        position: absolute;\n                        display: inline-block;\n                        top: -27px;\n                        left: -3px;\n                        padding: 0 9px;\n                        height: 25px;\n                        line-height: 25px;\n                        font-size: 17px;\n                        color: #ffffff;\n                        font-weight: bold;\n                        border-radius: 5px 5px 0 0;\n                        background: rgb(236, 113, 181);\n                    }\n                    p{\n                        animation: flash 2.5s linear infinite;\n                        color: $dull-red;\n                        font-weight: bold;\n                        margin: 0; \n                        padding: 0;\n                    }\n                    .stop{\n                        animation: none;\n                    }\n                }\n            }\n            .status-wrapper{\n                .chart-loop{\n                    display: inline-block;\n                    .chart-header:hover{\n                        background:rgba(255, 6, 6, 0.2);\n                        font-weight: bold;\n                    }\n                    .chart-header{\n                        border: solid $base-color;\n                        border-radius: 5px;\n                        margin-right: 0.3rem;\n                        margin-left: 0.3rem;\n                        padding-right: 0.7rem;\n                        padding-left: 0.7rem;\n                        padding-top: 0.1rem;\n                        padding-bottom: 0.1rem;\n                        color: white;\n                        transition: .5s;\n                        // font-weight: bold;\n                    }\n                    .current-status-grade{\n                        background:$base-color-tr;\n                        font-weight: bold;\n                        border: solid $dull-red;\n                    }\n                }\n            }\n            .comunity-account{\n                color: white;\n                cursor : pointer;\n                border: solid rgba(0, 0, 0, 0);\n                padding: 1rem;\n                transition: 0.5s;\n                \n            }\n            .comunity-account:hover{\n                border: solid gray;\n                color: gray; \n                padding: 1rem;\n            }\n        }\n    }\n}\n@keyframes flash {\n  0%,100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0;\n  }\n}\n\n\n\n    .main-image{\n        width:15%;\n        height:auto;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .main-text1{\n        font-size:1rem;\n        font-weight: bold;\n        margin:2rem;\n    }\n    img {\n        border-radius: 50%; \n        width:  5rem;   \n        height: 5rem;       \n    }\n    .cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}