{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue?vue&type=template&id=d9fcf9e6&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue","mtime":1651982300656},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCBub3JtYWxpemVDbGFzcyBhcyBfbm9ybWFsaXplQ2xhc3MsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBUcmFuc2l0aW9uIGFzIF9UcmFuc2l0aW9uLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoU2NvcGVJZCA9IGZ1bmN0aW9uIF93aXRoU2NvcGVJZChuKSB7CiAgcmV0dXJuIF9wdXNoU2NvcGVJZCgiZGF0YS12LWQ5ZmNmOWU2IiksIG4gPSBuKCksIF9wb3BTY29wZUlkKCksIG47Cn07Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogIm1haW4td3JhcHBlciIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogImxkcy1kdWFsLXJpbmciCiAgfSwgbnVsbCwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJxdWVzdGlvbi13cmFwcGVyIgp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCB7CiAgICBjbGFzczogInRpdGxlLXdoaXRlIgogIH0sICLos6rllY/mnb8iLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogIm5vdGlmaWNhdGlvbi10ZXh0IgogIH0sICIg6L+U5L+h44GX44G+44GX44Gf44CCICIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzYgPSBbX2hvaXN0ZWRfNV07Cgp2YXIgX2hvaXN0ZWRfNyA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6ICJub3RpZmljYXRpb24tdGV4dCIKICB9LCAiIOWbnuetlOOBl+OBvuOBl+OBn+OAgiAiLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF84ID0gW19ob2lzdGVkXzddOwoKdmFyIF9ob2lzdGVkXzkgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAibm90aWZpY2F0aW9uLXRleHQiCiAgfSwgIiDmipXnqL/jgZfjgb7jgZfjgZ/jgIIgIiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMTAgPSBbX2hvaXN0ZWRfOV07CnZhciBfaG9pc3RlZF8xMSA9IHsKICBjbGFzczogInF1ZXN0aW9uLWJveCIKfTsKdmFyIF9ob2lzdGVkXzEyID0gewogIGNsYXNzOiAicXVlc3Rpb24tYm94LWhlYWRlciIKfTsKdmFyIF9ob2lzdGVkXzEzID0gewogIGNsYXNzOiAiaW1hZ2UiCn07CnZhciBfaG9pc3RlZF8xNCA9IFsic3JjIl07CnZhciBfaG9pc3RlZF8xNSA9IHsKICBjbGFzczogInVzZXJuYW1lLWRhdGUiCn07CnZhciBfaG9pc3RlZF8xNiA9IHsKICBjbGFzczogInF1ZXN0aW9uLXN0YXR1cy1jb250YWluZXIiCn07CnZhciBfaG9pc3RlZF8xNyA9IHsKICBjbGFzczogInF1ZXN0aW9uLXN0YXR1cyIKfTsKdmFyIF9ob2lzdGVkXzE4ID0gewogIGNsYXNzOiAidGFnLWNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzE5ID0gewogIGNsYXNzOiAidGl0bGUtcXVlc3Rpb24iCn07CnZhciBfaG9pc3RlZF8yMCA9IHsKICBjbGFzczogInF1ZXN0aW9uLXRpdGxlIgp9Owp2YXIgX2hvaXN0ZWRfMjEgPSB7CiAgY2xhc3M6ICJxdWVzdGlvbi1kZXNjcmlwdGlvbiIKfTsKdmFyIF9ob2lzdGVkXzIyID0gewogIGNsYXNzOiAicXVlc3Rpb24tYm94LWZvb3RlciIKfTsKdmFyIF9ob2lzdGVkXzIzID0gewogIGNsYXNzOiAibGlrZS13cmFwcGVyIgp9Owp2YXIgX2hvaXN0ZWRfMjQgPSB7CiAga2V5OiAxLAogIGNsYXNzOiAiZmFzIGZhLWhlYXJ0Igp9Owp2YXIgX2hvaXN0ZWRfMjUgPSB7CiAga2V5OiAyLAogIGNsYXNzOiAiZ29vZCIKfTsKdmFyIF9ob2lzdGVkXzI2ID0gewogIGNsYXNzOiAidmlld2VkLXdyYXBwZXIiCn07CnZhciBfaG9pc3RlZF8yNyA9IHsKICBjbGFzczogInZpZXdlZCIKfTsKdmFyIF9ob2lzdGVkXzI4ID0gewogIGtleTogMCwKICBjbGFzczogImZhciBmYS1zdGFyIgp9Owp2YXIgX2hvaXN0ZWRfMjkgPSB7CiAga2V5OiAxLAogIGNsYXNzOiAiYWRkZWQtZmF2b3JpdGUiCn07Cgp2YXIgX2hvaXN0ZWRfMzAgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImkiLCB7CiAgICBjbGFzczogImZhciBmYS1zdGFyIgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzMxID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpIiwgewogICAgY2xhc3M6ICJmYXMgZmEtc3RhciIKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8zMiA9IFtfaG9pc3RlZF8zMCwgX2hvaXN0ZWRfMzFdOwp2YXIgX2hvaXN0ZWRfMzMgPSB7CiAgY2xhc3M6ICJyZWxhdGl2ZS1ib3giCn07Cgp2YXIgX2hvaXN0ZWRfMzQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBudWxsLCAi6Zai6YCj44GX44Gf6LOq5ZWPIiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMzUgPSBbIm9uQ2xpY2siXTsKdmFyIF9ob2lzdGVkXzM2ID0gewogIGNsYXNzOiAidGFnLXdyYXBwZXIiCn07CnZhciBfaG9pc3RlZF8zNyA9IHsKICBjbGFzczogInF1ZXN0aW9uLWRlc2NyaXB0aW9uIgp9Owp2YXIgX2hvaXN0ZWRfMzggPSB7CiAgY2xhc3M6ICJnb29kLWxpa2Utd3JhcHBlciIKfTsKCnZhciBfaG9pc3RlZF8zOSA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgIGNsYXNzOiAiZmFyIGZhLWhlYXJ0IgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzQwID0gewogIGtleTogMCwKICBjbGFzczogImdvb2QiCn07CnZhciBfaG9pc3RlZF80MSA9IHsKICBjbGFzczogImRhdGUiCn07CnZhciBfaG9pc3RlZF80MiA9IHsKICBjbGFzczogInNlZS1tb3JlIgp9OwoKdmFyIF9ob2lzdGVkXzQzID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIuOCguOBo+OBqOimi+OCiz4iKTsKCnZhciBfaG9pc3RlZF80NCA9IHsKICBrZXk6IDMsCiAgY2xhc3M6ICJhbnN3ZXItYm94Igp9Owp2YXIgX2hvaXN0ZWRfNDUgPSB7CiAgY2xhc3M6ICJhbnN3ZXItYm94LXRpdGxlIgp9Owp2YXIgX2hvaXN0ZWRfNDYgPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF80NyA9IHsKICBjbGFzczogImFuc3dlci1ib3gtaGVhZGVyIgp9Owp2YXIgX2hvaXN0ZWRfNDggPSBbInNyYyJdOwp2YXIgX2hvaXN0ZWRfNDkgPSB7CiAgY2xhc3M6ICJ1c2VybmFtZS1kYXRlIgp9Owp2YXIgX2hvaXN0ZWRfNTAgPSB7CiAgY2xhc3M6ICJhbnN3ZXItZGVzY3JpcHRpb24tY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfNTEgPSB7CiAgY2xhc3M6ICJhbnN3ZXItYm94LWZvb3RlciIKfTsKdmFyIF9ob2lzdGVkXzUyID0gWyJvbkNsaWNrIl07CnZhciBfaG9pc3RlZF81MyA9IHsKICBrZXk6IDEsCiAgY2xhc3M6ICJmYXMgZmEtaGVhcnQiCn07CnZhciBfaG9pc3RlZF81NCA9IHsKICBjbGFzczogImdvb2QiCn07CnZhciBfaG9pc3RlZF81NSA9IHsKICBrZXk6IDAKfTsKdmFyIF9ob2lzdGVkXzU2ID0gWyJvbkNsaWNrIl07CnZhciBfaG9pc3RlZF81NyA9IHsKICBrZXk6IDEsCiAgY2xhc3M6ICJyZXBseS13cmFwcGVyIgp9OwoKdmFyIF9ob2lzdGVkXzU4ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBudWxsLCAi44Kz44Oh44Oz44OIIiwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfNTkgPSB7CiAgY2xhc3M6ICJyZXBseS13cmFwcGVyLWhlYWRlciIKfTsKdmFyIF9ob2lzdGVkXzYwID0gWyJzcmMiXTsKdmFyIF9ob2lzdGVkXzYxID0gewogIGNsYXNzOiAidXNlcm5hbWUtZGF0ZSIKfTsKdmFyIF9ob2lzdGVkXzYyID0gewogIGNsYXNzOiAicmVwbGF5LWRlc2NyaXB0aW9uIgp9Owp2YXIgX2hvaXN0ZWRfNjMgPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF82NCA9IFsib25DbGljayJdOwoKdmFyIF9ob2lzdGVkXzY1ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogImxpbmUtZmxleCIKICB9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAibGluZSIKICB9KV0sIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9yb3V0ZXJfbGluayA9IF9yZXNvbHZlQ29tcG9uZW50KCJyb3V0ZXItbGluayIpOwoKICB2YXIgX2NvbXBvbmVudF9Ob3RWZXJpZmllZCA9IF9yZXNvbHZlQ29tcG9uZW50KCJOb3RWZXJpZmllZCIpOwoKICB2YXIgX2NvbXBvbmVudF9Ob3RMb2dpbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJOb3RMb2dpbiIpOwoKICB2YXIgX2NvbXBvbmVudF9BbnN3ZXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQW5zd2VyIik7CgogIHZhciBfY29tcG9uZW50X1JlcGx5ID0gX3Jlc29sdmVDb21wb25lbnQoIlJlcGx5Iik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIHRoaXMgc2Nyb2xsIGZpeGVkIHNob3VsZCBiZSBjaGFuZ2UgIiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiBfbm9ybWFsaXplQ2xhc3MoWyJib2FyZC1kZXRhaWwtd3JhcHBlciIsIHsKICAgICAgJ3NjcmxsLWZpeGVkJzogJGRhdGEuc2hvd0Fuc3dlclBhZ2UgfHwgJGRhdGEuc2hvd1JlcGx5UGFnZSwKICAgICAgJ2xhb2RpbmctY2VudGVyJzogX2N0eC4kc3RvcmUuc3RhdGUuaXNMb2FkaW5nCiAgICB9XSkKICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiBfbm9ybWFsaXplQ2xhc3MoWyJpcy1sb2FkaW5nLWJhciBoYXMtdGV4dC1jZW50ZXJlZCIsIHsKICAgICAgJ2lzLWxvYWRpbmcnOiBfY3R4LiRzdG9yZS5zdGF0ZS5pc0xvYWRpbmcKICAgIH1dKQogIH0sIFtfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGkgY2xhc3M9XCJmYXMgZmEtY29nXCI+PC9pPiAiKSwgX2hvaXN0ZWRfMl0sIDIKICAvKiBDTEFTUyAqLwogICksICRkYXRhLnF1ZXN0aW9uICYmICRkYXRhLnJlbGF0ZWRRdWVzdGlvbi5yZXN1bHRzICYmIF9jdHguJHN0b3JlLnN0YXRlLmlzTG9hZGluZyA9PSBmYWxzZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzMsIFtfaG9pc3RlZF80LCBfY3R4LiRzdG9yZS5zdGF0ZS5ib2FyZC5ub3RpZmljYXRpb25zLnJlcGx5ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAga2V5OiAwLAogICAgY2xhc3M6IF9ub3JtYWxpemVDbGFzcyh7CiAgICAgICdub3RpZmljYXRpb24tYmx1ZSc6IF9jdHguJHN0b3JlLnN0YXRlLmJvYXJkLm5vdGlmaWNhdGlvbnMucmVwbHkKICAgIH0pCiAgfSwgX2hvaXN0ZWRfNiwgMgogIC8qIENMQVNTICovCiAgKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jdHguJHN0b3JlLnN0YXRlLmJvYXJkLm5vdGlmaWNhdGlvbnMuYW5zd2VyID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAga2V5OiAxLAogICAgY2xhc3M6IF9ub3JtYWxpemVDbGFzcyh7CiAgICAgICdub3RpZmljYXRpb24tYmx1ZSc6IF9jdHguJHN0b3JlLnN0YXRlLmJvYXJkLm5vdGlmaWNhdGlvbnMuYW5zd2VyCiAgICB9KQogIH0sIF9ob2lzdGVkXzgsIDIKICAvKiBDTEFTUyAqLwogICkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3R4LiRzdG9yZS5zdGF0ZS5ib2FyZC5ub3RpZmljYXRpb25zLnBvc3QgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCB7CiAgICBrZXk6IDIsCiAgICBjbGFzczogX25vcm1hbGl6ZUNsYXNzKHsKICAgICAgJ25vdGlmaWNhdGlvbi1ibHVlJzogX2N0eC4kc3RvcmUuc3RhdGUuYm9hcmQubm90aWZpY2F0aW9ucy5wb3N0CiAgICB9KQogIH0sIF9ob2lzdGVkXzEwLCAyCiAgLyogQ0xBU1MgKi8KICApKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTEsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEzLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgY2xhc3M6ICJpbWciLAogICAgc3JjOiAkZGF0YS5xdWVzdGlvbi51c2VyLnRodW1ibmFpbAogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgX2hvaXN0ZWRfMTQpXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzE1LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEucXVlc3Rpb24udXNlci5uYW1lKSArICLjgZXjgpMgIiwgMQogIC8qIFRFWFQgKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5kYXRlQ29udmVydCgkZGF0YS5xdWVzdGlvbi5jcmVhdGVkX29uKSksIDEKICAvKiBURVhUICovCiAgKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xNiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBfaG9pc3RlZF8xNywgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5oYW5kbGVRdWVzdGlvblN0YXR1cygkZGF0YS5xdWVzdGlvbi5zb2x2ZWQpKSwgMQogIC8qIFRFWFQgKi8KICApXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTgsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLnF1ZXN0aW9uLnRhZywgZnVuY3Rpb24gKHRhZywgcXVlc3Rpb25pbmRleCkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAgICBjbGFzczogInRhZyIsCiAgICAgIGtleTogcXVlc3Rpb25pbmRleAogICAgfSwgX3RvRGlzcGxheVN0cmluZyh0YWcudGFnKSwgMQogICAgLyogVEVYVCAqLwogICAgKTsKICB9KSwgMTI4CiAgLyogS0VZRURfRlJBR01FTlQgKi8KICApKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xOSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBfaG9pc3RlZF8yMCwgX3RvRGlzcGxheVN0cmluZygkZGF0YS5xdWVzdGlvbi50aXRsZSksIDEKICAvKiBURVhUICovCiAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIF9ob2lzdGVkXzIxLCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnF1ZXN0aW9uLmRlc2NyaXB0aW9uKSwgMQogIC8qIFRFWFQgKi8KICApXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIyLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMjMsIFskZGF0YS5hZGRlZExpa2VkID09IGZhbHNlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiaSIsIHsKICAgIGtleTogMCwKICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuYWRkTGlrZWROdW0gJiYgJG9wdGlvbnMuYWRkTGlrZWROdW0uYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIGNsYXNzOiAiZmFyIGZhLWhlYXJ0IgogIH0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgJGRhdGEuYWRkZWRMaWtlZCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImkiLCBfaG9pc3RlZF8yNCkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCAkZGF0YS5xdWVzdGlvbi5saWtlZF9udW1bMF0gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJwIiwgX2hvaXN0ZWRfMjUsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEubGlrZWRfbnVtKSwgMQogIC8qIFRFWFQgKi8KICApKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yNiwgW19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBfaG9pc3RlZF8yNywgIiB2aWV3ZWQgIiArIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEucXVlc3Rpb24udmlld2VkKSwgMQogIC8qIFRFWFQgKi8KICApXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAiZmF2b3JpdGUiLAogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5oYW5kbGVBZGRlZEZhdm9yaXRlKCk7CiAgICB9KQogIH0sIFskZGF0YS5hZGRlZEZhdm9yaXRlID09IGZhbHNlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiaSIsIF9ob2lzdGVkXzI4KSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksICRkYXRhLmFkZGVkRmF2b3JpdGUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8yOSwgX2hvaXN0ZWRfMzIpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIG51bGwsIFskZGF0YS5xdWVzdGlvbi51c2VyLnVpZCAhPSAkb3B0aW9ucy5VSUQgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDAsCiAgICBjbGFzczogImJ0bi1iYXNlLXdoaXRlLWRiLXNxIiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuaGFuZGxlU2hvd0Fuc3dlclBhZ2UgJiYgJG9wdGlvbnMuaGFuZGxlU2hvd0Fuc3dlclBhZ2UuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sICLlm57nrZTjgZnjgosiKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxidXR0b24gQGNsaWNrPVwiaGFuZGxlTm90aWZpY2F0aW9ucygncmVwbHknKVwiID51bmtvPC9idXR0b24+ICIpXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzMzLCBbX2hvaXN0ZWRfMzQsIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEuc2xpY2VkUmVsYXRlZFF1ZXN0aW9uLCBmdW5jdGlvbiAocXVlc3Rpb24sIHF1ZXN0aW9uaW5kZXgpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIHsKICAgICAgY2xhc3M6ICJxdWVzdGlvbi13cmFwcGVyIiwKICAgICAga2V5OiBxdWVzdGlvbmluZGV4CiAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgICBjbGFzczogInF1ZXN0aW9uLWxpc3QiLAogICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy5nZXRSZWxhdGVkU2x1ZyhxdWVzdGlvbi5zbHVnKTsKICAgICAgfQogICAgfSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzM2LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChxdWVzdGlvbi50YWcsIGZ1bmN0aW9uICh0YWcsIHRhZ2luZGV4KSB7CiAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIHsKICAgICAgICBjbGFzczogInRhZyIsCiAgICAgICAga2V5OiB0YWdpbmRleAogICAgICB9LCBfdG9EaXNwbGF5U3RyaW5nKHRhZy50YWcpLCAxCiAgICAgIC8qIFRFWFQgKi8KICAgICAgKTsKICAgIH0pLCAxMjgKICAgIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgICApKV0pLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGRpdiBjbGFzcz1cInF1ZXN0aW9uLXRpdGxlXCI+e3sgcXVlc3Rpb24udGl0bGUgfX08L2Rpdj4gIiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzM3LCBfdG9EaXNwbGF5U3RyaW5nKHF1ZXN0aW9uLmRlc2NyaXB0aW9uLnN1YnN0cigwLCAxMCkgKyAnLi4uJyksIDEKICAgIC8qIFRFWFQgKi8KICAgICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzM4LCBbX2hvaXN0ZWRfMzksIHF1ZXN0aW9uLmxpa2VkX251bVswXSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzQwLCBfdG9EaXNwbGF5U3RyaW5nKHF1ZXN0aW9uLmxpa2VkX251bVswXS5saWtlZF9udW0pLCAxCiAgICAvKiBURVhUICovCiAgICApKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNDEsICLmipXnqL/ml6XvvJoiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5kYXRlQ29udmVydChxdWVzdGlvbi5jcmVhdGVkX29uKSksIDEKICAgIC8qIFRFWFQgKi8KICAgICldKV0sIDgKICAgIC8qIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzM1KV0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF80MiwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X3JvdXRlcl9saW5rLCB7CiAgICB0bzogewogICAgICBuYW1lOiAnUmVsYXRlZFF1ZXN0aW9uJwogICAgfQogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF80M107CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9KV0pXSksICRkYXRhLnF1ZXN0aW9uLmFuc3dlclswXSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzQ0LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNDUsIFskZGF0YS5xdWVzdGlvbi5hbnN3ZXJbMF0gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJwIiwgX2hvaXN0ZWRfNDYsICIg5Zue562UIikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlVGV4dFZOb2RlKCIgKCIgKyBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnF1ZXN0aW9uLmFuc3dlci5sZW5ndGgpICsgIuS7tikgIiwgMQogIC8qIFRFWFQgKi8KICApXSksIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEucXVlc3Rpb24uYW5zd2VyLCBmdW5jdGlvbiAoYW5zd2VyLCBhbnN3ZXJpbmRleCkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAgICBjbGFzczogInVuZGVyLWxpbmUiLAogICAgICBrZXk6IGFuc3dlcmluZGV4CiAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNDcsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgICAgIGNsYXNzOiAiaW1nIiwKICAgICAgc3JjOiBhbnN3ZXIudXNlci50aHVtYm5haWwKICAgIH0sIG51bGwsIDgKICAgIC8qIFBST1BTICovCiAgICAsIF9ob2lzdGVkXzQ4KSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNDksIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZyhhbnN3ZXIudXNlci5uYW1lKSArICLjgZXjgpMgIiwgMQogICAgLyogVEVYVCAqLwogICAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJG9wdGlvbnMuZGF0ZUNvbnZlcnQoYW5zd2VyLmNyZWF0ZWRfb24pKSwgMQogICAgLyogVEVYVCAqLwogICAgKV0pXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBfaG9pc3RlZF81MCwgX3RvRGlzcGxheVN0cmluZyhhbnN3ZXIuZGVzY3JpcHRpb24pLCAxCiAgICAvKiBURVhUICovCiAgICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF81MSwgWyRkYXRhLmFuc3dlckRpY3RbYW5zd2VyLmlkXS5hZGRlZEFuc3dlckxpa2VkID09IGZhbHNlID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiaSIsIHsKICAgICAga2V5OiAwLAogICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy5hZGRBbnN3ZWVyTGlrZWROdW0oYW5zd2VyLmlkKTsKICAgICAgfSwKICAgICAgY2xhc3M6ICJmYXIgZmEtaGVhcnQiCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBfaG9pc3RlZF81MikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCAkZGF0YS5hbnN3ZXJEaWN0W2Fuc3dlci5pZF0uYWRkZWRBbnN3ZXJMaWtlZCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImkiLCBfaG9pc3RlZF81MykpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgX2hvaXN0ZWRfNTQsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEuYW5zd2VyRGljdFthbnN3ZXIuaWRdLmxpa2VkX251bSksIDEKICAgIC8qIFRFWFQgKi8KICAgICldKSwgJG9wdGlvbnMubG9naW5Vc2VyID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfNTUsIFskZGF0YS5xdWVzdGlvbi51c2VyLlVJRCA9PSBfY3R4LiRzdG9yZS5zdGF0ZS5zaWdudXAudXNlci51aWQgJiYgYW5zd2VyLnJlcGx5Lmxlbmd0aCA9PSAwID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiYnV0dG9uIiwgewogICAgICBrZXk6IDAsCiAgICAgIGNsYXNzOiAiYnRuLWJhc2Utd2hpdGUtZGItc3EiLAogICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy5oYW5kbGVSZXBseVBhZ2UoYW5zd2VyLmlkLCBhbnN3ZXIuZGVzY3JpcHRpb24pOwogICAgICB9CiAgICB9LCAiIOi/lOS/oeOBmeOCiyAiLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBfaG9pc3RlZF81NikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgcmVwbHkgc2hvdWxkIGJlIGFwcGlyIGlmIHBvc3QgdXNlciBvciByZXBseWVyICIpLCBhbnN3ZXIucmVwbHlbMF0gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF81NywgW19ob2lzdGVkXzU4LCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KGFuc3dlci5yZXBseSwgZnVuY3Rpb24gKHJlcGx5LCByZXBseWluZGV4KSB7CiAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIHsKICAgICAgICBjbGFzczogInJlcGx5LWZsZXgiLAogICAgICAgIGtleTogcmVwbHlpbmRleAogICAgICB9LCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNTksIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgICAgICAgY2xhc3M6ICJpbWciLAogICAgICAgIHNyYzogcmVwbHkudXNlci50aHVtYm5haWwKICAgICAgfSwgbnVsbCwgOAogICAgICAvKiBQUk9QUyAqLwogICAgICAsIF9ob2lzdGVkXzYwKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNjEsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZyhyZXBseS51c2VyLm5hbWUpICsgIuOBleOCkyAiLCAxCiAgICAgIC8qIFRFWFQgKi8KICAgICAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcocmVwbHkuY3JlYXRlZF9vbiksIDEKICAgICAgLyogVEVYVCAqLwogICAgICApXSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIF9ob2lzdGVkXzYyLCBfdG9EaXNwbGF5U3RyaW5nKHJlcGx5LmRlc2NyaXB0aW9uKSwgMQogICAgICAvKiBURVhUICovCiAgICAgICksICRvcHRpb25zLmxvZ2luVXNlciA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzYzLCBbX2N0eC4kc3RvcmUuc3RhdGUuc2lnbnVwLnVzZXIudWlkID09ICRkYXRhLnF1ZXN0aW9uLnVzZXIuVUlEICYmIGFuc3dlci5yZXBseS5zbGljZSgtMSlbMF0uaWQgPT0gcmVwbHkuaWQgJiYgYW5zd2VyLnJlcGx5LnNsaWNlKC0xKVswXS51c2VyLlVJRCAhPSAkZGF0YS5xdWVzdGlvbi51c2VyLlVJRCB8fCBfY3R4LiRzdG9yZS5zdGF0ZS5zaWdudXAudXNlci51aWQgPT0gYW5zd2VyLnVzZXIuVUlEICYmIGFuc3dlci5yZXBseS5zbGljZSgtMSlbMF0uaWQgPT0gcmVwbHkuaWQgJiYgYW5zd2VyLnJlcGx5LnNsaWNlKC0xKVswXS51c2VyLlVJRCA9PSAkZGF0YS5xdWVzdGlvbi51c2VyLlVJRCA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImJ1dHRvbiIsIHsKICAgICAgICBrZXk6IDAsCiAgICAgICAgY2xhc3M6ICJidG4tYmFzZS13aGl0ZS1kYi1zcSIsCiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiAkb3B0aW9ucy5oYW5kbGVSZXBseVBhZ2UoYW5zd2VyLmlkLCByZXBseS5kZXNjcmlwdGlvbik7CiAgICAgICAgfQogICAgICB9LCAiIOi/lOS/oeOBmeOCiyAiLCA4CiAgICAgIC8qIFBST1BTICovCiAgICAgICwgX2hvaXN0ZWRfNjQpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pOwogICAgfSksIDEyOAogICAgLyogS0VZRURfRlJBR01FTlQgKi8KICAgICkpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfaG9pc3RlZF82NV0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlVk5vZGUoX1RyYW5zaXRpb24sIHsKICAgIG5hbWU6ICJub3RpY2UiCiAgfSwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gWyRkYXRhLnNob3dFbWFpbFZlcmlmaWVkID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfTm90VmVyaWZpZWQsIHsKICAgICAgICBrZXk6IDAsCiAgICAgICAgY2xhc3M6ICJjb21wb25lbnRzIiwKICAgICAgICBvbkhhbmRsZVNob3dFbWFpbFZlcmlmaWVkOiAkb3B0aW9ucy5oYW5kbGVTaG93RW1haWxWZXJpZmllZAogICAgICB9LCBudWxsLCA4CiAgICAgIC8qIFBST1BTICovCiAgICAgICwgWyJvbkhhbmRsZVNob3dFbWFpbFZlcmlmaWVkIl0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV07CiAgICB9KSwKICAgIF86IDEKICAgIC8qIFNUQUJMRSAqLwoKICB9KSwgX2NyZWF0ZVZOb2RlKF9UcmFuc2l0aW9uLCB7CiAgICBuYW1lOiAibm90aWNlIgogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFskZGF0YS5zaG93Tm90TG9naW4gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9Ob3RMb2dpbiwgewogICAgICAgIGtleTogMCwKICAgICAgICBjbGFzczogImNvbXBvbmVudHMiLAogICAgICAgIG9uSGFuZGxlU2hvd05vdExvZ2luOiAkb3B0aW9ucy5oYW5kbGVTaG93Tm90TG9naW4KICAgICAgfSwgbnVsbCwgOAogICAgICAvKiBQUk9QUyAqLwogICAgICAsIFsib25IYW5kbGVTaG93Tm90TG9naW4iXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pLCAkZGF0YS5zaG93QW5zd2VyUGFnZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0Fuc3dlciwgewogICAga2V5OiAxLAogICAgY2xhc3M6ICJjb21wb25lbnRzIiwKICAgIG9uSGFuZGxlU2hvd0Fuc3dlclBhZ2U6ICRvcHRpb25zLmhhbmRsZVNob3dBbnN3ZXJQYWdlLAogICAgb25HZXREZXRhaWw6ICRvcHRpb25zLmdldERldGFpbCwKICAgIHF1ZXN0aW9uVGl0bGU6ICRkYXRhLnF1ZXN0aW9uVGl0bGUsCiAgICBxdWVzdGlvbkRlc2NyaXB0aW9uOiAkZGF0YS5xdWVzdGlvbkRlc2NyaXB0aW9uLAogICAgcXVlc3Rpb25JZDogJGRhdGEucXVlc3Rpb25JZAogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJvbkhhbmRsZVNob3dBbnN3ZXJQYWdlIiwgIm9uR2V0RGV0YWlsIiwgInF1ZXN0aW9uVGl0bGUiLCAicXVlc3Rpb25EZXNjcmlwdGlvbiIsICJxdWVzdGlvbklkIl0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgJGRhdGEuc2hvd1JlcGx5UGFnZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X1JlcGx5LCB7CiAgICBrZXk6IDIsCiAgICBjbGFzczogImNvbXBvbmVudHMiLAogICAgb25IYW5kbGVTaG93UmVwbHlQYWdlOiAkb3B0aW9ucy5oYW5kbGVTaG93UmVwbHlQYWdlLAogICAgb25HZXREZXRhaWw6ICRvcHRpb25zLmdldERldGFpbCwKICAgIGFuc3dlcklkOiAkZGF0YS5hbnN3ZXJJZCwKICAgIHJlcGx5OiAkZGF0YS5yZXBseQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJvbkhhbmRsZVNob3dSZXBseVBhZ2UiLCAib25HZXREZXRhaWwiLCAiYW5zd2VySWQiLCAicmVwbHkiXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIge3sgcXVlc3Rpb25zIH19ICIpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGRpdiBjbGFzcz1xdWVzdGlvbiBcbiAgICAgICAgIHYtZm9yPVwiKHF1ZXN0aW9uLHF1ZXN0aW9uaW5kZXgpIGluIHF1ZXN0aW9uc1wiXG4gICAgICAgICB2LWJpbmQ6a2V5PVwicXVlc3Rpb25pbmRleFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhZ1wiPnRhZzp7eyBxdWVzdGlvbi50YWcgfX08L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0aXRsZVwiPnRpdGxlOnt7IHF1ZXN0aW9uLnRpdGxlIH19PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ29vZFwiPmdvb2Q6e3sgcXVlc3Rpb24uZ29vZCB9fTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVcIj5kYXRhOnt7IHJlbW92ZV9UX1oocXVlc3Rpb24udGltZXN0YW1wKSB9fTwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPENyZWF0ZVF1ZXN0aW9uIHYtaWY9J3Nob3dDcmVhdGVRdWVzdGlvbidcbiAgICAgICAgQGhhbmRsZVNob3dDb25maXJtPSdoYW5kbGVTaG93Q29uZmlybScvPlxuICAgICAgICA8Q29uZmlybSB2LWlmPSdzaG93Q29uZmlybScvPiAiKV0pXSwgMgogIC8qIENMQVNTICovCiAgKV0sIDIxMTIKICAvKiBTVEFCTEVfRlJBR01FTlQsIERFVl9ST09UX0ZSQUdNRU5UICovCiAgKTsKfQ=="},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/BoardDetail.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- this scroll fixed should be change -->\n    <div  class=\"board-detail-wrapper\" :class=\"{'scrll-fixed':showAnswerPage||showReplyPage,'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <div class=\"question-wrapper\" v-if=\"question&&relatedQuestion.results&&$store.state.isLoading==false\">\n                <p class='title-white'>質問板</p>\n                <div v-if=\"$store.state.board.notifications.reply\" :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n                    <div class=\"notification-text\">\n                        返信しました。\n                    </div>\n                </div>\n                <div v-if=\"$store.state.board.notifications.answer\" :class=\"{'notification-blue':$store.state.board.notifications.answer}\">\n                    <div class=\"notification-text\">\n                        回答しました。\n                    </div>\n                </div>\n                <div v-if=\"$store.state.board.notifications.post\" :class=\"{'notification-blue':$store.state.board.notifications.post}\">\n                    <div class=\"notification-text\">\n                        投稿しました。\n                    </div>\n                </div>\n                <div class='question-box'> \n                    <div class=\"question-box-header\">\n                        <div class=\"image\">\n                            <img class='img' v-bind:src=\"question.user.thumbnail\"/>\n                        </div>\n                        <div class=\"username-date\">\n                            <p> {{ question.user.name}}さん </p>\n                            <p> {{ dateConvert(question.created_on) }} </p>\n                        </div>\n                        <div class=\"question-status-container\">\n                            <p class=\"question-status\"> {{ handleQuestionStatus(question.solved) }} </p>\n                        </div>\n                    </div>\n                    <div\n                     class=\"tag-container\">\n                        <div\n                         class=\"tag\"\n                         v-for=\"(tag,questionindex) in question.tag\"\n                         v-bind:key=\"questionindex\">\n                            {{ tag.tag }}\n                        </div>\n                    </div>\n                    <div class=\"title-question\">\n                        <p class=\"question-title\">  {{ question.title }} </p>        \n                        <p class='question-description'> {{ question.description}} </p>\n                    </div>\n                    <div class=\"question-box-footer\">\n                        <div class=\"like-wrapper\">\n                            <i v-if=\"addedLiked==false\" @click=\"addLikedNum\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"addedLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\" v-if=\"question.liked_num[0]\">{{ liked_num }} </p>\n                        </div>\n                        <div class=\"viewed-wrapper\">\n                            <p class=\"viewed\"> viewed {{ question.viewed}} </p>\n                        </div>\n                        <div class=\"favorite\" @click=\"handleAddedFavorite()\">\n                            <i v-if=\"addedFavorite==false\" class=\"far fa-star\"></i>\n                            <div  v-if=\"addedFavorite\" class=\"added-favorite\">\n                                <i class=\"far fa-star\"></i>\n                                <i class=\"fas fa-star\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div>\n                        <button v-if=\"question.user.uid != UID\" class=\"btn-base-white-db-sq\" @click='handleShowAnswerPage'>回答する</button>\n                    </div>\n                    <!-- <button @click=\"handleNotifications('reply')\" >unko</button> -->\n                </div>\n                <div class=\"relative-box\">\n                    <p>関連した質問</p>\n                    <div\n                        class=\"question-wrapper\"\n                        v-for=\"(question,questionindex) in slicedRelatedQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class='question-list' @click=\"getRelatedSlug(question.slug)\">\n                            <div class=\"tag-wrapper\">\n                                <div \n                                class=\"tag\"\n                                v-for=\"(tag,tagindex) in question.tag\" \n                                v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                            </div>\n                            <!-- <div class=\"question-title\">{{ question.title }}</div> -->\n                            <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                            <div class='good-like-wrapper'>\n                                <i class=\"far fa-heart\"></i>\n                                <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                                <div class=\"date\">投稿日：{{ dateConvert(question.created_on) }}</div>\n                            </div>\n                        </div>        \n                    </div>\n                    <div class=\"see-more\">\n                        <router-link :to=\"{name:'RelatedQuestion'}\">もっと見る></router-link>\n                    </div>\n                </div>\n                <div class=\"answer-box\" v-if='question.answer[0]'>\n                    <div class=\"answer-box-title\">\n                        <p v-if='question.answer[0]'> 回答</p>\n                        ({{ question.answer.length }}件)\n                    </div>\n                    <div\n                     class=\"under-line\"\n                     v-for=\"(answer,answerindex) in question.answer\"\n                     v-bind:key=\"answerindex\">\n                        <div class=\"answer-box-header\">\n                            <img class='img' v-bind:src=\"answer.user.thumbnail\"/>\n                            <div class=\"username-date\">\n                                <p> {{ answer.user.name}}さん </p>\n                                <p> {{ dateConvert(answer.created_on) }} </p>\n                            </div>\n                        </div>\n                        <p class=\"answer-description-container\">{{ answer.description }} </p>\n                        <div class=\"answer-box-footer\">\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked==false\" @click=\"addAnsweerLikedNum(answer.id)\" class=\"far fa-heart\" ></i>\n                            <i v-if=\"answerDict[answer.id].addedAnswerLiked\" class=\"fas fa-heart\"></i>\n                            <p class=\"good\"> {{ answerDict[answer.id].liked_num }} </p>\n                        </div>\n                        <div v-if=\"loginUser\">\n                            <button v-if=\"question.user.UID == $store.state.signup.user.uid && answer.reply.length == 0\"\n                            class='btn-base-white-db-sq' \n                            @click='handleReplyPage(answer.id, answer.description)'>\n                            返信する\n                            </button>\n                        </div>\n                        <!-- reply should be appir if post user or replyer -->\n                        <div class='reply-wrapper' v-if='answer.reply[0]'>\n                            <div>コメント</div>\n                            <div class='reply-flex' \n                            v-for=\"(reply,replyindex) in answer.reply\"\n                            v-bind:key=\"replyindex\">\n                                <div class=\"reply-wrapper-header\">\n                                    <img class='img' v-bind:src=\"reply.user.thumbnail\"/>\n                                    <div class=\"username-date\">\n                                        <p> {{ reply.user.name}}さん </p>\n                                        <p> {{ reply.created_on }} </p>\n                                    </div>\n                                </div>\n                                <p class=\"replay-description\">{{ reply.description }}</p>\n                                <div v-if=\"loginUser\">\n                                    <button v-if='$store.state.signup.user.uid==question.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID!=question.user.UID || $store.state.signup.user.uid==answer.user.UID && answer.reply.slice(-1)[0].id==reply.id && answer.reply.slice(-1)[0].user.UID==question.user.UID'\n                                    class='btn-base-white-db-sq' \n                                    @click='handleReplyPage(answer.id, reply.description)'>\n                                    返信する\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class='line-flex'>\n                            <div class=\"line\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <transition name=\"notice\">\n                <NotVerified\n                    class=\"components\"\n                    v-if=\"showEmailVerified\"\n                    @handleShowEmailVerified=\"handleShowEmailVerified\"\n                />\n            </transition>\n            <transition name=\"notice\">\n                <NotLogin\n                    class=\"components\"\n                    v-if=\"showNotLogin\"\n                    @handleShowNotLogin=\"handleShowNotLogin\"\n                />\n            </transition>\n            <Answer v-if='showAnswerPage'\n            class=\"components\"\n            @handleShowAnswerPage='handleShowAnswerPage'\n            @getDetail=\"getDetail\"\n            :questionTitle='questionTitle'\n            :questionDescription='questionDescription'\n            :questionId='questionId'\n            />\n            <Reply v-if='showReplyPage'\n            class=\"components\"\n            @handleShowReplyPage='handleShowReplyPage'\n            @getDetail=\"getDetail\"\n            :answerId='answerId'\n            :reply=\"reply\"\n            />\n        <!-- {{ questions }} -->\n        <!-- <div class=question \n         v-for=\"(question,questionindex) in questions\"\n         v-bind:key=\"questionindex\">\n            <div class=\"tag\">tag:{{ question.tag }}</div>\n            <div class=\"title\">title:{{ question.title }}</div>\n            <div class=\"good\">good:{{ question.good }}</div>\n            <div class=\"date\">data:{{ remove_T_Z(question.timestamp) }}</div>\n        </div>\n        <CreateQuestion v-if='showCreateQuestion'\n        @handleShowConfirm='handleShowConfirm'/>\n        <Confirm v-if='showConfirm'/> -->\n         </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {router} from \"../main.js\"\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport NotLogin from '@/components/login/NotLogin.vue'\nimport  Answer from '@/components/board/Answer.vue'\nimport  Reply from '@/components/board/Reply.vue'\nexport default {\n    components: {\n        Answer,\n        Reply,\n        NotVerified,\n        NotLogin\n  },\n    data(){\n        return{\n            currentUserId:'',\n            question:'',\n            showAnswerPage: false,\n            showReplyPage: false,\n            questionTitle:'',\n            questionDescription:'',\n            questionSlug:'',\n            questionId:'',\n            answerId:'',\n            allAnswer:'',\n            answerDict:{},\n            addedAnswerLiked:{},\n            viewed:0,\n            questionStatus:['回答受付中','解決済み'],\n            reply:'',\n            questionUser: '',\n            questionUserBoolean: false,\n            liked_num: '',\n            addedLiked: false,\n            addedFavorite: false,\n            likedUserIdList:'',\n            checkedLikedUserList:[],\n            relatedQuestion:'',\n            slicedRelatedQuestion:'',\n            questionTags:[],\n            showEmailVerified:false,\n            showNotLogin: false,\n        }\n    },\n    mounted() {\n        this.getDetail()\n        console.log(\"mounted_detail\",this.$route.params.slug)\n    },\n    beforeUnmount(){\n        console.log('beforeUNMOUNT')\n        this.$store.dispatch('getDjangoUser')\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        UID(){\n            try{\n                return this.$store.state.signup.djangoUser.UID\n            }catch{\n                return ''\n            }\n        },\n        loginUser(){\n            return this.$store.state.signup.user\n        },\n        emailVerified(){\n            return this.$store.getters.getEmailVerified\n        },\n    },\n    methods: {\n        dateConvert(date){\n            var time = ''\n            var newDate = ''\n            var dt = new Date(date)\n            if(dt.getHours() > 11){\n                time = \" PM\"\n            }else{\n                time = \" AM\"\n            }\n            newDate = date + time + \" UTC\"\n            dt = new Date(newDate)\n            var stringDT = dt.toLocaleString([], {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'})\n            return stringDT.replace(/\\//g,'-')\n        },\n        async getDetail(slug=\"\") {\n            this.$store.commit('setIsLoading', true)\n            this.scrollTop()\n            console.log('inthegetdetail')\n            if(slug==\"\"){\n                var url = `/api/board/question/${this.$route.params.slug}`\n            }else{\n                var url = `/api/board/question/${slug}`\n            }\n            await axios\n                .get(url)\n                .then(response => {\n                    this.question = response.data\n                    this.questionTitle = this.question.title\n                    this.questionDescription = this.question.description\n                    this.questionSlug = this.question.slug\n                    this.questionId = this.question.id\n                    this.liked_num = this.question.liked_num[0].liked_num\n                    this.likedUserIdList = this.question.liked_num[0].user\n                    this.questionUser = this.question.user.UID\n                    this.allAnswer = this.question.answer\n                    this.viewed = this.question.viewed\n                    this.patchOnReply()\n                    // this.patchOnAnswer()\n                    this.questionPatch()\n                    this.makeAnswerDict()\n                    this.getQuestionTagList(this.question.tag)\n                    this.getRelatedQuestion()\n                    this.countViewedNumUp()\n                    this.favoriteCheck()\n                    // if(!this.loginUser){\n                    //     this.$store.commit('setIsLoading', false)\n                    // }\n                })\n                .catch(error => {\n                    console.log(error)\n            })\n            // this.$store.commit('setIsLoading', false)\n        },\n        // async patchOnAnswer(slug=\"\"){\n        //     if(slug==\"\"){\n        //         var url = `/api/board/question/${this.$route.params.slug}`\n        //     }else{\n        //         var url = `/api/board/question/${slug}`\n        //     }\n        //     console.log(\"gonna if patch answer\",this.question.on_answer==true&&this.question.user.UID==this.user.UID)\n        //     if(this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n        //         console.log('PatchAnswer url',url)\n        //         axios.patch(\n        //             url,\n        //             { on_answer: false }) \n        //         console.log(\"go store AQ and DU\")\n        //         await this.$store.dispatch('getDjangoUser')\n        //         await this.$store.dispatch('getAnsweredQuestion')\n        //     }\n        // },\n        async patchOnReply(){\n            console.log(\"patchOnReply\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(\"answer\",answer)\n                if(answer.on_reply==true&&answer.user.UID==this.$store.getters.user.UID){\n                    var url = `/api/board/answer-detail/${answer.id}`\n                    await axios({\n                        method: 'patch',\n                        url: url,\n                        data: {\n                            on_reply: false,\n                        },\n                    })\n                    this.$store.dispatch('getDjangoUser')\n                    this.$store.dispatch('getAnsweredQuestion')\n                }\n            }\n        },\n        async getRelatedQuestion() {\n            // relatedQuestion.results Start from here.\n            // => deleteSameQuestion to delete the same question in RQ as detail Q.\n            // => makeRandomSlicedArray to make random sliced RQ array\n            if(this.user){\n                this.$store.commit('setIsLoading', true)\n                if(this.questionTags.length == 1){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&uid=${this.user.UID}`\n                }\n                if(this.questionTags.length == 2){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&uid=${this.user.UID}`\n                }\n                if(this.questionTags.length == 3){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}&uid=${this.user.UID}`\n                }\n            }\n            else{\n                console.log('elsedayo')\n                this.$store.commit('setIsLoading', true)\n                if(this.questionTags.length == 1){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}`\n                }\n                if(this.questionTags.length == 2){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}`\n                }\n                if(this.questionTags.length == 3){\n                    var url = `/api/board/question/filter-list?tag=${this.questionTags[0]}&tag=${this.questionTags[1]}&tag=${this.questionTags[2]}`\n                }\n            }\n            try{\n                await axios.get(url)\n                    .then(response => {\n                    this.relatedQuestion = response.data\n                    })\n                }\n            catch{(error => {\n                    console.log(error)\n            })}\n            console.log('after-try',this.relatedQuestion)\n            this.$store.commit('setRelatedQuestion', this.relatedQuestion.results)\n            this.deleteSameQuestion()\n            this.makeRandomSlicedArray()\n            this.$store.commit('setIsLoading', false)\n        },\n        async createFavorite(){\n            await axios({\n                method: 'post',\n                url: '/api/board/favorite-question-create/',\n                data: {\n                    user: this.$store.state.signup.user.uid,\n                    question: [this.question.id]\n                },\n            })\n        },\n        handleAddedFavorite(){\n            if(this.user){\n                this.addedFavorite=!this.addedFavorite\n                this.createFavorite()\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        async countViewedNumUp(){\n            if(this.loginUser){\n                for (let i =0; i < this.question.tag.length; i++){\n                    await axios({\n                    method: 'post',\n                    url: '/api/board/user-tag/create/',\n                    data: {\n                        user: this.$store.state.signup.user.uid,\n                        tag: this.question.tag[i].id\n                        },  \n                    })\n                }\n            }\n        },\n        handleShowAnswerPage(){\n            console.log('clicked')\n            if(this.user){\n                if(this.emailVerified){\n                this.showAnswerPage = !this.showAnswerPage\n                }else{\n                    this.handleShowEmailVerified()\n                }\n            }else{\n                this.handleShowNotLogin()\n            }\n\n            // this.handleScrollFixed()\n        },\n        getReply(reply){\n            this.reply = reply\n        },\n        handleShowReplyPage(){\n            this.showReplyPage = !this.showReplyPage\n        },\n        handleReplyPage(id, reply=''){\n            this.getAnswerId(id)\n            this.showReplyPage = !this.showReplyPage\n            this.getReply(reply)\n        },\n        getAnswerId(id){\n            this.answerId = id\n        },\n        getReplyUserAndQuestionUser(reply, question){\n            this.questionAnswerUser.push(reply)\n            this.questionAnswerUser.push(question)\n        },\n        handleQuestionStatus(status){\n            if(status==true){\n                return this.questionStatus[1]\n            }\n            else{\n                return this.questionStatus[0]\n            }\n        },\n        getQuestionTagList(questionTags){\n            console.log(\"GQTL\",questionTags)\n            this.questionTags = []\n            for(let tag of questionTags){\n                this.questionTags.push(tag.id)\n            }\n        },\n        // G-method return a value from array invoked\n        // RandArray(array){\n        //     var rand = Math.random()*array.length | 0;\n        //     var rValue = array[rand];\n        //     console.log(\"RAndA\", rValue)\n        //     return rValue;\n        // },\n        makeRandomSlicedArray(){\n            let num = 3\n            console.log(\"MRSA\")\n            if (this.relatedQuestion.results.lendth < 3){\n                num = this.relatedQuestion.results.lendth\n            }\n            console.log(\"MRSA2\")\n            this.getRandomQuestion(this.relatedQuestion.results)\n            this.slicedRelatedQuestion = this.relatedQuestion.results.slice(0,num)\n            console.log(this.slicedRelatedQuestion)\n        },\n        deleteSameQuestion(){\n            if(this.loginUser){\n                for(let q of this.relatedQuestion.results){\n                    if (q.id == this.question.id){\n                        this.relatedQuestion.results.splice(this.relatedQuestion.results.indexOf(q),1)\n                        break\n                    }\n                }\n            }\n        },\n        getRandomQuestion(array){\n            for (let i = array.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[i]\n                array[i] = array[r]\n                array[r] = tmp\n                }\n            for ( let k =0; k < array.length; k++){\n                for (let i = array[k].answer.length - 1; i >= 0; i--) {\n                let r = Math.floor(Math.random() * (i + 1))\n                let tmp = array[k].answer[i]\n                array[k].answer[i] = array[k].answer[r]\n                array[k].answer[r] = tmp\n                }}\n                return array\n            },\n        // resetNotifications(){\n        //     this.notifications.answer = false\n        //     this.notifications.reply = false\n        // },\n        // handleNotifications(elem){\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = true\n        //         setTimeout(this.resetNotifications, 3000)\n                \n        //     }\n        //     if(elem == \"answer\"){\n        //         console.log(\"in answer\")\n        //         this.notifications.answer = true\n        //         setTimeout(this.resetNotifications, 3000)\n        //     }            \n        // },\n        // getLikedNum(liked_num){\n        //     this.liked_num = liked_num\n        //     return this.liked_num\n        // },\n        getRelatedSlug(slug){\n            this.getDetail(slug)\n            this.$forceUpdate();\n        },\n        addLikedNum(){\n            if(this.user){\n                this.liked_num += 1\n                this.addedLiked = true\n                for(let i=0; i<this.likedUserIdList.length; i++){\n                    this.checkedLikedUserList.push(this.likedUserIdList[i].UID)\n                }\n                this.checkedLikedUserList.push(this.$store.state.signup.user.uid)\n                this.countUpLiked()\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        clearAllLiked(){\n            this.addedLiked = false\n            for(let i in this.answerDict){\n                this.answerDict[i].addedAnswerLiked = false\n            }\n        },\n        checkUserLiked(){\n            // this is for question like\n            if(this.loginUser){\n                this.clearAllLiked()\n                for(let i of this.likedUserIdList){\n                    if(i.UID == this.$store.state.signup.user.uid){\n                    this.addedLiked = true\n                    }\n                }\n                console.log(\"likedhere\",this.addedLiked)\n                // this is for answer like\n                for(let answerId in this.answerDict){\n                    // console.log(Array.isArray(this.answerDict[answerId].likedUsers))\n                    for( let user of this.answerDict[answerId].likedUsers[0]){\n                        if(user == this.$store.state.signup.user.uid){\n                            this.answerDict[answerId].addedAnswerLiked = true\n                        }\n                    }\n                }   \n            }\n        },\n        favoriteCheck(){\n            if(this.user){\n                this.addedFavorite = false\n                for(let i of this.$store.state.signup.djangoUser.favorite_question[0].question){\n                    console.log('loop',this.addedFavorite,i,this.question.id)\n                    if(this.question.id==i){\n                        this.addedFavorite = true\n                        console.log(this.addedFavorite)\n                        break\n                    }\n                }\n            }\n        },\n        countUpLiked(){\n            // console.log('in countUPLiked',this.question.liked_num[0].id ,this.addedLiked)\n            if(this.addedLiked){\n                axios.patch(`/api/board/question-liked/${this.question.liked_num[0].id}/`,\n                {\n                    user: this.checkedLikedUserList,\n                    liked_num: this.liked_num\n                })\n                console.log('done')\n            }\n        },\n        async questionPatch(){\n            // patch view count_up and on_answer\n            if(this.user){\n                if(this.questionUserBoolean == false&&this.question.on_answer==true&&this.question.user.UID==this.user.UID){\n                console.log('count', this.questionSlug)\n                await axios.patch(`/api/board/question/${this.questionSlug}`,{\n                    viewed: this.viewed + 1,\n                    on_answer: false\n                })\n                this.$store.dispatch('getDjangoUser')\n                this.$store.dispatch('getAnsweredQuestion')\n                }\n            }\n            else if(this.questionUserBoolean == false){\n                axios.patch(`/api/board/question/${this.questionSlug}`,{\n                    viewed: this.viewed + 1\n                })\n            }\n        },\n        // setAnswerBoolean(){\n        //     for(let answer of this.allAnswer){\n        //         this.addedAnswerLiked[answer.id] = false\n        //     }\n        //     console.log('boo',this.addedAnswerLiked)\n        // },\n        makeAnswerDict(){\n            // liked_answer start from here to make each answer dict\n            // to hold information\n            console.log(\"in make dict\",this.allAnswer)\n            for(let answer of this.allAnswer){\n                console.log(answer)\n                this.answerDict[answer.id] = {\n                    \"liked_id\":answer.liked_answer[0].id,\n                    \"liked_num\":answer.liked_answer[0].liked_num,\n                    \"addedAnswerLiked\":false,\n                    \"likedUsers\":[answer.liked_answer[0].user]\n                }\n            }\n            console.log('answer-dict',this.answerDict)\n            this.checkUserLiked()\n        },\n        addAnsweerLikedNum(answerId){\n            // add answer id start from here. answerDict has each answers liked num.\n            // invoke answerId to att liked num, then addedAnswerLiked = true \n            if(this.user){\n                this.answerDict[answerId].liked_num += 1\n                this.answerDict[answerId].addedAnswerLiked = true\n                this.answerDict[answerId].likedUsers[0].push(this.$store.state.signup.user.uid)\n                console.log(\"is addliked\",this.answerDict)\n                this.countUpLikedAnswer(answerId)\n            }else{\n                this.handleShowNotLogin()\n            }\n        },\n        countUpLikedAnswer(answerId){\n            console.log(\"countUpLikedAnswer\")\n                axios.patch(`/api/board/answer-liked/${this.answerDict[answerId].liked_id}/`,\n                {\n                    user: this.answerDict[answerId].likedUsers[0],\n                    liked_num: this.answerDict[answerId].liked_num\n                })\n                console.log('done')\n        },\n        handleShowEmailVerified(){\n            console.log('V')\n            this.showEmailVerified = !this.showEmailVerified\n            console.log('V',this.showEmailVerified)\n        },\n        handleShowNotLogin(){\n            this.showNotLogin = !this.showNotLogin\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n                // behavior: \"smooth\"\n            });\n        },\n        // falseNotifications(elem){\n        //     if(elem == \"answer\"){\n        //         this.notifications.answer = false\n        //     }\n        //     if(elem == \"reply\"){\n        //         this.notifications.reply = false\n        //     }\n        // },\n        // handleScrollFixed(){\n        //     this.scrollFixed = !this.scrollFixed\n        // },\n    }\n}\n</script>\n\n<style lang='scss' scoped>\n@import \"style/_variables.scss\";\n@import \"style/_board.scss\";\n.scroll{\n    position:fixed;\n}\n.components{\n    z-index: 3;\n}\n\n.board-detail-wrapper{\n    display: flex;\n    justify-content: center;\n    width: 100vw;\n    min-height: 80vh;\n    margin-bottom: 1rem;\n    // align-items: center;\n}\n.question-wrapper{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    .question-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        .question-box-header{\n            display: flex;\n            .image{\n                .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n                }\n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n                width:40%;\n            }\n            .question-status-container{\n                display: flex;\n                justify-content: flex-end;\n                width: 50%;\n                position: relative;\n                .question-status{\n                    position: absolute;\n                    right:0;\n                    top: 0.5rem;\n                    color: rgb(255, 43, 209);\n                    margin-right: 1rem;\n                }\n            }\n        }\n        .tag-container{\n            display: flex;\n            width: 100%;\n            padding-left: 1rem;\n            .tag{\n                margin-right: 0.5rem;\n                border: solid gray;\n                border-radius: 1rem;\n                padding:0.5rem; \n            }\n        }\n        .title-question{\n            padding:1rem;\n            .question-title{\n                text-align: center;\n                margin-bottom: 1rem;\n                border-bottom: solid $dark-blue;\n                display: inline-block;\n                padding-bottom: 1rem;\n            }\n            .question-description{\n                text-align: left;\n                padding: 1rem; \n                background: rgb(236, 236, 236);\n                white-space: pre-wrap;\n            }\n        }\n        .question-box-footer{\n            display: flex;\n            margin-bottom: 0.5rem;\n            width:100%;\n            .like-wrapper{\n                flex-basis: 10%;\n                display: flex;\n                .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 0.5rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n                // flex-basis: 10%;\n                }\n            }\n            .viewed-wrapper{\n                flex-basis: 40%;\n                display: flex;\n                .viewed{\n                margin-left: 1rem;\n                margin-right: 0.5rem;\n                }\n            }\n            .favorite{\n                display: flex;\n                position:relative;\n                justify-content:flex-end;\n                flex-basis: 50%;\n                margin-top: 0.1rem;\n                margin-right: 1rem;\n                box-sizing: border-box;\n                position:relative;\n                .far{\n                    position: absolute;\n                    right: 0.1rem;\n                }\n                .added-favorite{\n                    position: relative;\n                    .far{\n                        position: absolute;\n                        z-index:2;\n                        right: 0.1rem;\n                    }\n                    .fas{\n                        position: absolute;\n                        color: yellow;\n                        right: 0.1rem;\n                        z-index:1;\n                    }\n                }\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n    }\n    .relative-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n        padding: 0.5rem;\n        display: flex;\n        flex-direction: column;\n        P{\n            margin-bottom: 0.5rem;\n        }\n        .question-wrapper{\n            width: 100%;\n            display: flex;\n            .question-list{\n                border-bottom: solid rgb(236, 234, 234);\n                margin-bottom: 0.5rem;\n                width:100%;\n                padding: 0.2rem;\n                // background: rgb(236, 234, 234);\n                display: flex;\n                flex-direction: column;\n                .tag-wrapper{\n                    display: flex;\n                    width: 100%;\n                    .tag{\n                        border: solid rgb(230, 230, 230);\n                        margin-left: 0.3rem;\n                        min-width: 2rem;\n                    }\n                }\n                .good-like-wrapper{\n                    display: flex;\n                    font-size: 0.7rem;\n                    .fa-heart{\n                        // color: rgb(221, 36, 221);\n                        margin-left: 0.5rem;\n                        margin-right: 0.3rem;\n                        margin-top: 0.2rem;\n                    }\n                    .date{\n                        margin-left: 0.5rem;\n                    }\n                }\n            }\n            // .question-list:hover{\n            //     background: rgb(230, 136, 136);\n            // }\n        }\n        .see-more{\n            display: flex;\n            justify-content: flex-end;\n            margin-right: 0.5rem;\n            margin-top: 0.5rem;\n\n        }\n    }\n    .answer-box{\n        border: solid $base-color;\n        border-radius: 0.5rem;\n        background: $back-lite-white;\n        width: 95%;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .answer-box-title{\n            display: flex;\n            justify-content: center;\n            margin-top: 1rem;\n        }\n        .under-line{\n            width: 90%;\n            border-bottom: 0.2rem solid rgb(236, 236, 236);\n            margin-top: 2rem;\n            margin-bottom: 1rem;\n            &:last-child{\n                border-bottom: none;\n            }\n        }\n        .answer-box-header{\n            display: flex;\n            .img{\n                border-radius: 50%; \n                width:  3rem;   \n                height: 3rem;\n                margin: 0.5rem; \n            }\n            .username-date{\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                margin-top: 0.5rem;\n            }\n        }\n        .answer-description-container{\n            margin: 1rem;\n            background: rgb(236, 236, 236);\n            padding: 1rem;\n            text-align: left;\n        }\n        .answer-box-footer{\n            display: flex;\n            .fa-heart{\n                color: rgb(221, 36, 221);\n                margin-left: 1rem;\n                margin-right: 0.3rem;\n                margin-top: 0.1rem;\n            }\n        }\n        .btn-base-white-db-sq{\n            margin: 1rem;\n            padding-top: 0.5rem;\n            padding-bottom: 0.5rem;\n            padding-left: 1rem;\n            padding-right: 1rem;\n            font-size: 1rem;\n            font-weight: bold;\n        }\n        .reply-wrapper{\n            // display: flex;\n            // flex-direction: column;\n            // justify-content: center;\n            // align-items: center;\n            .reply-flex{\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                margin-bottom: 1rem;\n                .reply-wrapper-header{\n                    width: 80%;\n                    height: 100%;\n                    display: flex;              \n                    .img{\n                        border-radius: 50%; \n                        width:  3rem;   \n                        height: 3rem;\n                        margin: 0.5rem; \n                    }\n                    .username-date{\n                        display: flex;\n                        flex-direction: column;\n                        align-items: flex-start;\n                        margin-top: 0.5rem;\n                    }\n                \n                }\n                .replay-description{\n                    width: 63%;\n                    // border-left: solid $dark-blue;\n                    background: rgb(236, 236, 236);\n                    text-align: left;\n                    padding: 0.5rem;\n                }\n            }\n        }\n        .line-flex{\n            display: flex;\n            width: 100%;\n            justify-content: center;\n            align-items: center;\n            margin-top: 0.5rem;\n            // .line-flex:last-of-type{\n            //     border-bottom: none;\n            // }\n            &.line{\n                width: 90%;\n                border-bottom: 0.2rem solid rgb(236, 236, 236);\n                margin-top: 2rem;\n                margin-bottom: 1rem;\n                &:last-child{\n                    border-bottom: none;\n                }\n            }\n        }\n    }\n}\n.icon{\n    animation: icon 0.5s ;\n\n}\n@keyframes icon {\n    0% {\n        transform: scale(1);\n        \n        opacity: 0;\n      }\n    30%{\n        opacity: 1;\n    }\n    80%{\n        opacity: 1;\n    }\n    100% {\n        opacity: 0;\n        transform: scale(1.5);\n      }\n}\n</style>"],"sourceRoot":""}]}