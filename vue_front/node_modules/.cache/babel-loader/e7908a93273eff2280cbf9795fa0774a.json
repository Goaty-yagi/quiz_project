{"remainingRequest":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ossan/git-clone/quiz_project/vue_front/src/views/board/Search.vue?vue&type=template&id=896edcaa&scoped=true","dependencies":[{"path":"/Users/ossan/git-clone/quiz_project/vue_front/src/views/board/Search.vue","mtime":1647484740980},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/babel.config.js","mtime":1643442797713},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG5vcm1hbGl6ZUNsYXNzIGFzIF9ub3JtYWxpemVDbGFzcywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoU2NvcGVJZCA9IGZ1bmN0aW9uIF93aXRoU2NvcGVJZChuKSB7CiAgcmV0dXJuIF9wdXNoU2NvcGVJZCgiZGF0YS12LTg5NmVkY2FhIiksIG4gPSBuKCksIF9wb3BTY29wZUlkKCksIG47Cn07Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImFsbC1jb3Zlci13cmFwcGVyIgp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAibGRzLWR1YWwtcmluZyIKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8zID0gW19ob2lzdGVkXzJdOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAibWFpbi13cmFwcGVyIgogIH0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDEiLCB7CiAgICBjbGFzczogInRpdGxlLXdoaXRlIgogIH0sICLos6rllY/mnb8iKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAicmVsYXRlZC10aXRsZSIKICB9LCAi5qSc57Si57WQ5p6cIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlQ29tbWVudFZOb2RlKCIgPGRpdiBjbGFzcz1cInF1ZXN0aW9uLXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgICB1bmtve3skc3RvcmUuc3RhdGUuYm9hcmQuc2VhcmNoZWRRdWVzdGlvbnN9fVxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICB2LWZvcj1cIihxdWVzdGlvbixxdWVzdGlvbmluZGV4KSBpbiAkc3RvcmUuc3RhdGUuYm9hcmQuc2VhcmNoZWRRdWVzdGlvbnNcIlxuICAgICAgICAgICAgICAgIHYtYmluZDprZXk9XCJxdWVzdGlvbmluZGV4XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J3F1ZXN0aW9uLWxpc3QnIEBjbGljaz1cImdldERldGFpbChxdWVzdGlvbi5zbHVnKVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBcbiAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInRhZy13cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ0YWdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj1cIih0YWcsdGFnaW5kZXgpIGluIHF1ZXN0aW9uLnRhZ1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWJpbmQ6a2V5PVwidGFnaW5kZXhcIj57eyB0YWcudGFnIH19PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJxdWVzdGlvbi10aXRsZVwiPnt7IHF1ZXN0aW9uLnRpdGxlIH19PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicXVlc3Rpb24tZGVzY3JpcHRpb25cIj57eyBxdWVzdGlvbi5kZXNjcmlwdGlvbi5zdWJzdHIoMCwxMCkrJy4uLicgfX08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9J2dvb2QtbGlrZS13cmFwcGVyJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImZhciBmYS1oZWFydFwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ29vZFwiIHYtaWY9XCJxdWVzdGlvbi5saWtlZF9udW1bMF1cIj57eyBxdWVzdGlvbi5saWtlZF9udW1bMF0ubGlrZWRfbnVtIH19PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRhdGVcIj7kvZzmiJDml6XvvJp7eyBxdWVzdGlvbi5jcmVhdGVkX29uIH19PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICBcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PiAiKV0sIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6IF9ub3JtYWxpemVDbGFzcyhbImlzLWxvYWRpbmctYmFyIGhhcy10ZXh0LWNlbnRlcmVkIiwgewogICAgICAnaXMtbG9hZGluZyc6IF9jdHguJHN0b3JlLnN0YXRlLmlzTG9hZGluZwogICAgfV0pCiAgfSwgX2hvaXN0ZWRfMywgMgogIC8qIENMQVNTICovCiAgKSwgX2NyZWF0ZVRleHRWTm9kZSgiIHVua28iICsgX3RvRGlzcGxheVN0cmluZyhfY3R4LiRzdG9yZS5zdGF0ZS5ib2FyZC5zZWFyY2hlZFF1ZXN0aW9ucykgKyAiICIsIDEKICAvKiBURVhUICovCiAgKSwgX2hvaXN0ZWRfNF0pOwp9"},{"version":3,"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/board/Search.vue"],"names":[],"mappings":";;;;;;;AACS,EAAA,KAAK,EAAC;;;;sBAEH,mBAAA,CAAiC,KAAjC,EAAiC;AAA5B,IAAA,KAAK,EAAC;AAAsB,GAAjC,EAA0B,IAA1B,EAA0B,CAAA;AAAA;AAA1B,G;;;kBAAA,U;;;sBAGJ,mBAAA,CA0BM,KA1BN,EA0BM;AA1BD,IAAA,KAAK,EAAC;AA0BL,GA1BN,EAAyB,C,aACrB,mBAAA,CAAgC,IAAhC,EAAgC;AAA5B,IAAA,KAAK,EAAC;AAAsB,GAAhC,EAAwB,KAAxB,CADqB,E,aAErB,mBAAA,CAAqC,KAArC,EAAqC;AAAhC,IAAA,KAAK,EAAC;AAA0B,GAArC,EAA2B,MAA3B,CAFqB,E,aAGrB,mBAAA,CAAA,kyCAAA,CAHqB,CAAzB,E;;AAAA,G;;;;uBALJ,mBAAA,CAgCM,KAhCN,EAAA,UAAA,EAgCM,CA/BF,mBAAA,CAEM,KAFN,EAEM;AAFD,IAAA,KAAK,EAAA,eAAA,CAAA,CAAC,kCAAD,EAAmC;AAAA,oBAA8B,IAAA,CAAA,MAAA,CAAO,KAAP,CAAa;AAA3C,KAAnC,CAAA;AAEJ,GAFN,E,UAAA,E;;AAAA,GA+BE,E,iBA7BI,UACF,gBAAA,CAAE,IAAA,CAAA,MAAA,CAAO,KAAP,CAAa,KAAb,CAAmB,iBAArB,CADE,GACsC,G,EAC5C;AAAA;GA2BE,EA3BF,UA2BE,CAhCN,C","sourcesContent":["<template>\n    <div class=\"all-cover-wrapper\">\n        <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n            <div class=\"lds-dual-ring\"></div>\n        </div>\n        unko{{$store.state.board.searchedQuestions}}\n        <div class=\"main-wrapper\">\n            <h1 class='title-white'>質問板</h1>\n            <div class=\"related-title\">検索結果</div>\n            <!-- <div class=\"question-wrapper\">\n                unko{{$store.state.board.searchedQuestions}}\n                <div\n                v-for=\"(question,questionindex) in $store.state.board.searchedQuestions\"\n                v-bind:key=\"questionindex\">\n                    <div class='question-list' @click=\"getDetail(question.slug)\">\n                        <div \n                         class=\"tag-wrapper\">\n                            <div \n                             class=\"tag\"\n                             v-for=\"(tag,tagindex) in question.tag\" \n                             v-bind:key=\"tagindex\">{{ tag.tag }}</div>\n                        </div>\n                        <div class=\"question-title\">{{ question.title }}</div>\n                        <div class=\"question-description\">{{ question.description.substr(0,10)+'...' }}</div>\n                        <div class='good-like-wrapper'>\n                            <i class=\"far fa-heart\"></i>\n                            <div class=\"good\" v-if=\"question.liked_num[0]\">{{ question.liked_num[0].liked_num }}</div>\n                            <div class=\"date\">作成日：{{ question.created_on }}</div>\n                        </div>\n                    </div>        \n                </div>\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport {router} from \"/src/main.js\"\nexport default {\n    data(){\n        return{\n        }\n    },\n    mounted(){\n        console.log('chinge')\n    },\n    computed:{\n        searchedQuestions(){\n\n        }\n    },\n    methods: {\n        getDetail(slug){\n            console.log('slugdayo',slug)\n            // this.$store.commit('getSlug',slug)\n            router.push(`/board-detail/${slug}` )\n        },        \n    }\n\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"style/_variables.scss\";\n.all-cover-wrapper{\n    position: fixed;\n    top:0;\n    left:0;\n    width: 100vw;\n    background:$background;\n\n\n}\n.main-wrapper{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        .related-title{\n            margin-top: 2rem;\n            color: $dark-blue;\n            // border-bottom: solid $dark-blue;\n        }\n        .question-wrapper{\n            margin: 1rem;\n            width: 85%;\n            .question-list{\n                border: solid $base-color;\n                margin-bottom: 0.5rem;\n                width:100%;\n                background: rgb(252, 252, 252);\n                display: flex;\n                flex-direction: column;\n                .tag-wrapper{\n                    display: flex;\n                    width: 100%;\n                    .tag{\n                        border: solid black;\n                        border-radius: 50vh;\n                        background: rgb(230, 230, 230);\n                        margin-top: 0.5rem;\n                        margin-left: 0.3rem;\n                        margin-bottom: 0.5rem;\n                        padding: 0.5rem;\n                        min-width: 3rem;\n                    }\n                }\n                .good-like-wrapper{\n                    display: flex;\n                    .fa-heart{\n                        color: rgb(221, 36, 221);\n                        margin-left: 0.5rem;\n                        margin-right: 0.3rem;\n                        margin-top: 0.2rem;\n                    }\n                    .date{\n                        margin-left: 0.5rem;\n                    }\n                }\n            }\n        }\n    }\n</style>"],"sourceRoot":""}]}