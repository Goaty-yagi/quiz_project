{"ast":null,"code":"import { router } from \"../main.js\";\nimport SentPassReset from '@/components/login/SentPassReset.vue';\nimport NotVerified from '@/components/login/NotVerified.vue';\nimport Sent from '@/components/signin/Sent.vue';\nexport default {\n  components: {\n    SentPassReset,\n    Sent,\n    NotVerified\n  },\n\n  data() {\n    return {\n      email: '',\n      password: '',\n      passType: true,\n      showButton: true,\n      passError: null,\n      userError: null,\n      manyError: null,\n      showSentPassReset: false,\n      showSent: false,\n      showNotVerified: false,\n      store: this.$store.state.signup\n    };\n  },\n\n  mounted() {\n    this.scrollTop();\n  },\n\n  updated() {\n    console.log('login check ', this.store.user);\n    this.showButtonHandler();\n    console.log(this.email, this.password, this.error);\n  },\n\n  watch: {\n    showButton: function (v) {\n      if (v == false) {\n        this.$refs.bform.classList.add('button-hover');\n      } else {\n        this.$refs.bform.classList.remove('button-hover');\n      }\n    }\n  },\n  computed: {\n    inputType: function () {\n      return this.passType ? \"password\" : \"text\";\n    }\n  },\n  methods: {\n    showButtonHandler() {\n      if (this.password != '' && this.email != '') {\n        this.showButton = false;\n      } else {\n        this.showButton = true;\n      }\n    },\n\n    click() {\n      console.log('click');\n      this.passType = !this.passType;\n    },\n\n    goSignup() {\n      this.$router.push({\n        name: 'Signup'\n      });\n    },\n\n    handleShowSentPassReset() {\n      this.showSentPassReset = true;\n    },\n\n    handleShowNotVerified() {\n      this.showNotVerified = true;\n    },\n\n    async resetPass() {\n      await this.$store.dispatch('passwordReset', this.email);\n      this.handleShowSentPassReset();\n    },\n\n    handleShowSent() {\n      this.showSent = true;\n      console.log('showsent');\n    },\n\n    async submitForm() {\n      try {\n        await this.$store.dispatch('login', {\n          email: this.email,\n          password: this.password\n        });\n        console.log(\"done\");\n        router.push('/');\n        this.$store.commit('reset');\n      } catch (err) {\n        console.log('er', typeof err, err.code);\n        this.userError = err.code == 'auth/user-not-found' ? 'ユーザーが存在しません。' : '';\n        this.passError = err.code == 'auth/wrong-password' ? 'パスワードが違います。' : '';\n        this.manyError = err.code == 'auth/too-many-requests' ? '短時間にリクエストを複数受けたため一時的にリクエストを停止します。暫く経ってもう一度お試しください。' : '';\n      }\n    },\n\n    googleLogin() {\n      this.$store.dispatch('googleLogin');\n    },\n\n    scrollTop() {\n      window.scrollTo({\n        top: 0\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoDA,SAAQA,MAAR,QAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AAEA,eAAe;EACXC,UAAU,EAAC;IACPH,aADO;IAEPE,IAFO;IAGPD;EAHO,CADA;;EAMXG,IAAI,GAAE;IACF,OAAM;MACFC,KAAK,EAAC,EADJ;MAEFC,QAAQ,EAAC,EAFP;MAGFC,QAAQ,EAAC,IAHP;MAIFC,UAAU,EAAC,IAJT;MAKFC,SAAS,EAAC,IALR;MAMFC,SAAS,EAAC,IANR;MAOFC,SAAS,EAAC,IAPR;MAQFC,iBAAiB,EAAC,KARhB;MASFC,QAAQ,EAAC,KATP;MAUFC,eAAe,EAAC,KAVd;MAWFC,KAAK,EAAE,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC;IAXvB,CAAN;EAaH,CApBU;;EAqBXC,OAAO,GAAE;IACL,KAAKC,SAAL;EACH,CAvBU;;EAwBXC,OAAO,GAAE;IACLC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKR,KAAL,CAAWS,IAAtC;IACA,KAAKC,iBAAL;IACAH,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB,EAAuB,KAAKC,QAA5B,EAAqC,KAAKoB,KAA1C;EACH,CA5BU;;EA6BXC,KAAK,EAAC;IACFnB,UAAU,EAAC,UAASoB,CAAT,EAAY;MAAC,IAAIA,KAAK,KAAT,EAAgB;QAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA2BC,GAA3B,CAA+B,cAA/B;MAA8C,CAAhE,MACpB;QAAC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,SAAjB,CAA2BE,MAA3B,CAAkC,cAAlC;MAAkD;IAAC;EAFtD,CA7BK;EAiCXC,QAAQ,EAAE;IACNC,SAAS,EAAE,YAAY;MACvB,OAAO,KAAK5B,QAAL,GAAgB,UAAhB,GAA2B,MAAlC;IACI;EAHE,CAjCC;EAsCX6B,OAAO,EAAC;IACJX,iBAAiB,GAAE;MACf,IAAG,KAAKnB,QAAL,IAAiB,EAAjB,IAAsB,KAAKD,KAAL,IAAc,EAAvC,EAA0C;QACtC,KAAKG,UAAL,GAAkB,KAAlB;MACH,CAFD,MAEK;QACD,KAAKA,UAAL,GAAkB,IAAlB;MACA;IACH,CAPD;;IAQJ6B,KAAK,GAAE;MACHf,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA,KAAKhB,QAAL,GAAgB,CAAC,KAAKA,QAAtB;IACH,CAXG;;IAYJ+B,QAAQ,GAAE;MACN,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QAACC,IAAI,EAAC;MAAN,CAAlB;IACH,CAdG;;IAeJC,uBAAuB,GAAE;MACrB,KAAK9B,iBAAL,GAAyB,IAAzB;IACH,CAjBG;;IAkBJ+B,qBAAqB,GAAE;MACnB,KAAK7B,eAAL,GAAuB,IAAvB;IACH,CApBG;;IAqBJ,MAAM8B,SAAN,GAAiB;MACb,MAAM,KAAK5B,MAAL,CAAY6B,QAAZ,CAAqB,eAArB,EAAqC,KAAKxC,KAA1C,CAAN;MACA,KAAKqC,uBAAL;IAEH,CAzBG;;IA0BJI,cAAc,GAAE;MACZ,KAAKjC,QAAL,GAAgB,IAAhB;MACAS,OAAO,CAACC,GAAR,CAAY,UAAZ;IACH,CA7BG;;IA8BJ,MAAMwB,UAAN,GAAkB;MACd,IAAG;QACC,MAAM,KAAK/B,MAAL,CAAY6B,QAAZ,CAAqB,OAArB,EAA6B;UACnCxC,KAAK,EAAC,KAAKA,KADwB;UAEnCC,QAAQ,EAAC,KAAKA;QAFqB,CAA7B,CAAN;QAGAgB,OAAO,CAACC,GAAR,CAAY,MAAZ;QACAxB,MAAM,CAACyC,IAAP,CAAY,GAAZ;QACA,KAAKxB,MAAL,CAAYgC,MAAZ,CAAmB,OAAnB;MACH,CAPD,CAOC,OAAMC,GAAN,EAAU;QACP3B,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB,OAAO0B,GAAxB,EAA6BA,GAAG,CAACC,IAAjC;QACA,KAAKxC,SAAL,GAAiBuC,GAAG,CAACC,IAAJ,IAAY,qBAAZ,GACjB,cADiB,GACA,EADjB;QAEA,KAAKzC,SAAL,GAAiBwC,GAAG,CAACC,IAAJ,IAAY,qBAAZ,GACjB,aADiB,GACD,EADhB;QAEA,KAAKvC,SAAL,GAAiBsC,GAAG,CAACC,IAAJ,IAAY,wBAAZ,GACjB,oDADiB,GACqC,EADtD;MAEJ;IACH,CA/CG;;IAgDJC,WAAW,GAAE;MACT,KAAKnC,MAAL,CAAY6B,QAAZ,CAAqB,aAArB;IACH,CAlDG;;IAmDJzB,SAAS,GAAE;MACPgC,MAAM,CAACC,QAAP,CAAgB;QACZC,GAAG,EAAE;MADO,CAAhB;IAGH;;EAvDG;AAtCG,CAAf","names":["router","SentPassReset","NotVerified","Sent","components","data","email","password","passType","showButton","passError","userError","manyError","showSentPassReset","showSent","showNotVerified","store","$store","state","signup","mounted","scrollTop","updated","console","log","user","showButtonHandler","error","watch","v","$refs","bform","classList","add","remove","computed","inputType","methods","click","goSignup","$router","push","name","handleShowSentPassReset","handleShowNotVerified","resetPass","dispatch","handleShowSent","submitForm","commit","err","code","googleLogin","window","scrollTo","top"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Login.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"login-wrapper\">\n            <div class=\"flex-wrapper\">\n                <p class='title-white'>ログイン</p>\n                <form class=\"id-form\" @submit.prevent='submitForm' >\n                        <div class=\"field\">\n                            <div class=\"input-box\">\n                                <i class=\"far fa-envelope\" id='in-font'><input required class=\"text-box\" type='email' v-model='email' id='E-mail' placeholder=\"E-mail\"></i>\n                            </div>         \n                        </div>\n                        <div class=\"field\">\n                            <div class=\"input-box\">\n                                <i class=\"fas fa-unlock-alt\" id='in-font'><input required class=\"text-box\" :type=\"inputType\" v-model='password' placeholder=\"Password\"></i>\n                                <i :class=\"[passType ? 'fas fa-eye':'fas fa-eye-slash']\" id='eye' @click='click' ></i>\n                            </div>      \n                        </div>\n                        <div class='error-form'  v-if='userError||passError||manyError'>\n                            <i class=\"fas fa-exclamation-triangle\"></i>\n                            <div>{{ userError }}</div>\n                            <div>{{ passError }}</div>\n                            <div>{{ manyError }}</div>\n                        </div>\n                        <div class='text-wrapper' v-if='passError'>\n                            <p>パスワードをお忘れですか。</p>\n                            <p  @click='resetPass' class='text'>パスワードの再設定</p>\n                        </div>\n                        <div class='text-wrapper' v-if='userError'>\n                            <p>ユーザー登録しますか。</p>\n                            <p @click='goSignup' class='text'>ユーザー登録</p>\n                        </div>\n                        <div>\n                            <button :disable='!userError||!passError||!manyError' class='fbottun' ref='bform'>ログイン</button>\n                        </div>\n                        <p>Googleアカウントでログイン</p>\n                        <a class=\"logo-container\">\n                            <img class=\"google\" @click=\"googleLogin()\" src=\"@/assets/btn_google.png\">\n                        </a>\n                </form>\n            </div>\n        </div>\n        <div>\n        <SentPassReset v-if='showSentPassReset'/>\n        <!-- <NotVerified v-if='showNotVerified'\n        @handleShowSent = 'handleShowSent'\n         />\n        <Sent v-show='showSent'/> -->\n  </div>\n    </div>\n</template>\n\n<script>\nimport {router} from \"../main.js\"\nimport SentPassReset from '@/components/login/SentPassReset.vue'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport Sent from '@/components/signin/Sent.vue'\n\nexport default {\n    components:{\n        SentPassReset,\n        Sent,\n        NotVerified\n    },\n    data(){\n        return{\n            email:'',\n            password:'',\n            passType:true,\n            showButton:true,\n            passError:null,\n            userError:null,\n            manyError:null,\n            showSentPassReset:false,\n            showSent:false,\n            showNotVerified:false,\n            store: this.$store.state.signup\n        }\n    },\n    mounted(){\n        this.scrollTop()\n    },\n    updated(){\n        console.log('login check ',this.store.user)\n        this.showButtonHandler()\n        console.log(this.email,this.password,this.error)\n    },\n    watch:{\n        showButton:function(v) {if (v == false) { this.$refs.bform.classList.add('button-hover')}\n        else{this.$refs.bform.classList.remove('button-hover')}},\n    },\n    computed: {\n        inputType: function () {\n        return this.passType ? \"password\":\"text\";\n            }\n        },\n    methods:{\n        showButtonHandler(){\n            if(this.password != '' &&this.email != ''){\n                this.showButton = false\n            }else{\n                this.showButton = true\n                }\n            },\n        click(){\n            console.log('click')\n            this.passType = !this.passType\n        },\n        goSignup(){\n            this.$router.push({name:'Signup'})\n        },\n        handleShowSentPassReset(){\n            this.showSentPassReset = true\n        },\n        handleShowNotVerified(){\n            this.showNotVerified = true\n        },\n        async resetPass(){\n            await this.$store.dispatch('passwordReset',this.email)\n            this.handleShowSentPassReset()\n\n        },\n        handleShowSent(){\n            this.showSent = true\n            console.log('showsent')\n        },\n        async submitForm(){      \n            try{\n                await this.$store.dispatch('login',{\n                email:this.email,\n                password:this.password})\n                console.log(\"done\")\n                router.push('/')\n                this.$store.commit('reset')\n            }catch(err){\n                console.log('er',typeof(err),err.code)\n                this.userError = err.code == 'auth/user-not-found'?\n                'ユーザーが存在しません。' : '' \n                this.passError = err.code == 'auth/wrong-password'?\n                'パスワードが違います。' : ''\n                this.manyError = err.code == 'auth/too-many-requests'?\n                '短時間にリクエストを複数受けたため一時的にリクエストを停止します。暫く経ってもう一度お試しください。' :''               \n            }\n        },\n        googleLogin(){\n            this.$store.dispatch('googleLogin')\n        },\n        scrollTop(){\n            window.scrollTo({\n                top: 0,\n            });\n        },\n    }\n}\n</script>\n\n\n<style scoped lang='scss'>\n@import \"style/_variables.scss\";\n.login-wrapper{\n    width:100vw;\n    flex-direction: column;\n    display: flex;\n    // padding-top:5rem;\n    // justify-content: center;\n    align-items: center;\n    .id-form{\n        margin-top: 2rem;\n    }\n    }\n    .login-text{\n        color:white;\n        font-size:1.2rem;\n        font-weight: bold;\n        margin-bottom: 1.5rem;\n       \n    }\n    .field-wrapper{\n        margin-top:3rem;\n    }\n    .field{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        align-self: center;\n    }\n    .label{\n        color:white;\n        width: 2.7rem;\n        overflow-wrap: break-word;\n        margin-right:1%;\n        line-height:1rem\n    }.label:not(:last-child) {\n        margin-bottom: initial;\n}\n    input[type=\"password\"]:focus {\n        outline: none;\n        }\n    input[type=\"email\"]:focus {\n        outline: none;\n    }\n    select:focus {\n        outline: none;\n        }\n    .input-box:focus-within{\n        border: solid $base-color;\n        \n        }\n    .input-box{\n        border: 0.12rem solid $base-color;\n        border-radius: 100vh;\n        background: $back-white;\n        width: 17rem;\n        height: 3rem;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        position:relative;\n        \n    }#in-font{\n        margin-left:0.5rem;\n        color:rgb(158, 158, 158); \n        transition:0.3s;\n        position:relative;\n    }\n    #in-font:focus-within{\n        color:rgb(92, 92, 92);\n\n    }\n    #eye{\n        position:absolute;\n        right:0;\n        margin-right:0.5rem;\n        color:rgb(158, 158, 158);\n        transition:0.3s;\n    }\n    #eye:hover{\n        color:rgb(92, 92, 92);\n    }\n    #eye:focus-within{\n        color:rgb(92, 92, 92);\n    }\n    .text-box{\n        width: 14rem;\n        border:none;\n        background: $back-white;\n        margin-left:0.5rem;\n        position:absolute;\n        left:1rem;\n    }\n    .select-box{\n        width: 82%;\n        border:none;\n        background: $back-white;\n        margin-left:0.5rem;\n    }\n    \n    .check-box-text{\n        color:white;\n        margin-left:1rem;\n    }\n    .text-wrapper{\n        display:flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        \n    }\n    .text:hover{\n        background: $base-white;\n        color: $dark-blue;\n        font-weight: bold;\n    }\n    .text{\n        color:white;margin-top:1rem;\n        border: 0.1rem solid white;\n        border-radius: 0.5rem;\n        width: 60%;\n        padding-top: 0.5rem;\n        padding-bottom: 0.5rem;\n        transition:0.8s;\n    }\n    .error-form{\n        width: 17rem;\n        background: $back-tr-white;\n    }\n    p{\n        color:white;\n        margin-top:1rem;\n    }\n    .logo-container{\n        .google{\n            width: 70%;\n        }\n    }\n// .flex-wrapper{\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n// }\n</style>"]},"metadata":{},"sourceType":"module"}