{"ast":null,"code":"import _toConsumableArray from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { router } from \"../main.js\";\nimport axios from 'axios';\nimport 'cropperjs/dist/cropper.css';\nimport Thumbnail from '@/components/account/Thumbnail.vue';\nimport Chart from '@/components/account/Chart.vue';\nimport Sent from '@/components/signin/Sent.vue';\nimport NotVerified from '@/components/login/NotVerified.vue';\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  setup: function setup() {\n    var store = useStore();\n    return {\n      user: computed(function () {\n        return store.state.signup.user;\n      }),\n      email: computed(function () {\n        return store.state.signup.email;\n      }),\n      password: computed(function () {\n        return store.state.signup.password;\n      }),\n      emailVerified: computed(function () {\n        return store.state.signup.emailVerified;\n      })\n    };\n  },\n  data: function data() {\n    return {\n      showSent: false,\n      error: '',\n      userData: '',\n      quizTaker: '',\n      showThumbnail: false,\n      currentPageName: '',\n      gotInfo: false,\n      showNotification: false,\n      stop: false,\n      gradeUp: false,\n      currentStatusGrade: '',\n      backgroundColorList: {\n        '超初級': 'rgba(255, 153, 51, 0.2)',\n        '初級': 'rgba(81, 255, 0, 0.2)',\n        '中級': 'rgba(191, 0, 255, 0.2)',\n        '上級': 'rgba(255, 6, 6, 0.2)'\n      },\n      grade: {\n        '超初級': 0,\n        '初級': 1,\n        '中級': 2,\n        '上級': 3\n      },\n      chartAllData: {\n        '超初級': {\n          labels: ['ひらがな', 'カタカナ', 'ボキャブラリー', 'すうじ']\n        },\n        '初級': {\n          labels: ['漢字', '動詞', 'い形容詞', 'ボキャブラリー', '文法', 'な形容詞']\n        },\n        '中級': {\n          labels: []\n        },\n        '上級': {\n          labels: []\n        }\n      },\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: \"\",\n          data: [],\n          borderWidth: 1,\n          backgroundColor: 'rgba(255, 153, 51, 0.2)',\n          borderColor: ' #ff9933',\n          pointBackgroundColor: 'rgb(255, 99, 132)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'red'\n        }]\n      }\n    };\n  },\n  components: {\n    Sent: Sent,\n    Thumbnail: Thumbnail,\n    Chart: Chart,\n    NotVerified: NotVerified\n  },\n  created: function created() {\n    this.getQuizNameId();\n  },\n  // watch:{\n  //     userData:function(v) {\n  //     this.userData = v\n  //     console.log('hi',v)\n  //     },\n  // },\n  computed: mapGetters(['quizNameId', 'getDjangouser', 'getPhotoURL', 'quizTakerObject']),\n  mounted: function mounted() {\n    console.log('account mounted', this.quizTakerObject);\n    this.currentPageName = '';\n    this.patchImage();\n    this.getCurrentPageName();\n    this.handleStatusParameter(this.quizTakerObject.grade);\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['getQuizNameId'])), {}, {\n    patchImage: function patchImage() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var list, blob, headers, formData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.$store.commit('setIsLoading', true);\n\n                list = _this.getDjangouser.thumbnail.split('/');\n                console.log('list', list);\n                _context.prev = 3;\n                console.log(list.includes('default.png') && _this.getPhotoURL);\n\n                if (!(list.includes('default.png') && _this.getPhotoURL)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                console.log('png');\n                _context.next = 9;\n                return fetch(_this.getPhotoURL).then(function (r) {\n                  return r.blob();\n                });\n\n              case 9:\n                blob = _context.sent;\n                headers = {\n                  \"content-type\": \"multipart/form-data\"\n                };\n                formData = new FormData();\n                formData.append('thumbnail', blob, \"\".concat(blob, \".png\"));\n                console.log('getthumb', formData.get('thumbnail'), formData), axios.patch(\"/api/user/\".concat(_this.getDjangouser.UID), formData, {\n                  headers: headers\n                });\n                _context.next = 17;\n                break;\n\n              case 16:\n                console.log('nothing');\n\n              case 17:\n                _context.next = 22;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](3);\n                console.log('catch error', _context.t0); // doing nothig. will be default thumbnail\n\n              case 22:\n                _this.$store.commit('setIsLoading', false);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 19]]);\n      }))();\n    },\n    getImageURL: function getImageURL(url) {\n      if (this.getPhotoURL) {\n        return this.getPhotoURL;\n      } else {\n        return url;\n      }\n    },\n    resent: function resent() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _this2.$store.dispatch('sendEmailVerify');\n\n              case 3:\n                _this2.handleShowSent();\n\n                console.log('showsent:', _this2.showSent);\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                _this2.error = _context2.t0;\n                console.log(_this2.error);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))();\n    },\n    handleShowSent: function handleShowSent() {\n      this.showSent = true;\n    },\n    handleShowThumbnail: function handleShowThumbnail() {\n      this.showThumbnail = true;\n    },\n    showThumbnailFalse: function showThumbnailFalse() {\n      this.showThumbnail = false;\n      console.log('inA', this.showThumbnail);\n    },\n    getCurrentGradeNameFromIds: function getCurrentGradeNameFromIds(gradeID) {\n      var _iterator = _createForOfIteratorHelper(this.quizNameId),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n\n          if (i.id == gradeID) {\n            return i.name;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    convertGradeIntToGradeId: function convertGradeIntToGradeId(gradeInt) {\n      var _iterator2 = _createForOfIteratorHelper(this.quizNameId),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var i = _step2.value;\n\n          if (i.name == gradeInt) {\n            return i.id;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    handleStatusParameter: function handleStatusParameter(grade) {\n      // this is handling chart view.\n      // 1, get quiz_taker from userinfo\n      // 2, get current grade from the quizTaker.\n      // 3, get chart labels which is locally set.\n      // 4, get percentage for each status from user_status from quiz_taker\n      // 5, set the labels and the percentages to chartData to invoke data for chart component\n      var tempDict = {};\n      var tempChartAllData = this.chartAllData[this.getCurrentGradeNameFromIds(grade)].labels;\n      var tempArray = [];\n      this.currentStatusGrade = grade;\n\n      var _iterator3 = _createForOfIteratorHelper(this.quizTakerObject.user_status),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var i = _step3.value;\n\n          if (i.grade == grade) {\n            tempDict[i.status[0]] = {\n              \"percentage\": i.percentage,\n              'order': i.status[1]\n            };\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      var _iterator4 = _createForOfIteratorHelper(tempChartAllData),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _i = _step4.value;\n\n          if (_i in tempDict) {\n            tempArray.push(tempDict[_i].percentage / 10);\n          } else {\n            tempArray.push(0);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this.chartData.labels = tempChartAllData;\n      this.chartData.datasets[0].data = tempArray;\n      this.chartData.datasets[0].backgroundColor = this.backgroundColorList[this.getCurrentGradeNameFromIds(grade)];\n      this.gotInfo = true;\n    },\n    getCurrentStatusGrade: function getCurrentStatusGrade(grade) {\n      if (this.currentStatusGrade == grade) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getCurrentPageName: function getCurrentPageName() {\n      var i = this.$route.path;\n      i = i.split(\"/\");\n      this.currentPageName = i[1];\n    },\n    nextGrade: function nextGrade(grade, level) {\n      if (level == 10) {\n        var max = Math.max.apply(Math, _toConsumableArray(Object.values(this.grade)));\n        var g = this.grade[grade] + 1;\n\n        if (max == this.grade[grade]) {\n          return \"\\u6700\\u5927\\u30EC\\u30D9\\u30EB\\u3060\\u3088\\uFF01\";\n        } else {\n          for (var i in this.grade) {\n            if (this.grade[i] == g) {\n              this.gradeUp = true;\n              return \"\\u6B21\\u306F\".concat(i, \"\\u30EC\\u30D9\\u30EB\", 1, \"\\u3060\\u3088\\uFF01\");\n            }\n          }\n        }\n      } else {\n        return \"\\u6B21\\u306F\".concat(grade, \"\\u30FB\\u30EC\\u30D9\\u30EB\").concat(level + 1, \"\\u3060\\u3088\\uFF01\");\n      }\n    },\n    stopFlash: function stopFlash() {\n      this.stop = !this.stop;\n    },\n    showChartHeaderGrade: function showChartHeaderGrade(grade) {\n      if (this.grade[grade] <= this.grade[this.quizTakerObject.max_grade]) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    mountReset: function mountReset() {\n      this.gradeUp = false;\n    },\n    goCommunityAccount: function goCommunityAccount() {\n      router.push(\"/board/account\");\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;AAsGA,SAAQA,MAAR,QAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,OAAQC,SAAR,MAAuB,oCAAvB;AACA,OAAQC,KAAR,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,QAAT,QAAyB,KAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAAQC,UAAR,EAAmBC,UAAnB,QAAoC,MAApC;AAEA,eAAc;EACVC,KADU,mBACH;IACH,IAAMC,KAAI,GAAIJ,QAAQ,EAAtB;IACA,OAAM;MACFK,IAAI,EAAEN,QAAQ,CAAC;QAAA,OAAMK,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,IAAzB;MAAA,CAAD,CADZ;MAEFG,KAAK,EAAET,QAAQ,CAAC;QAAA,OAAMK,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,KAAzB;MAAA,CAAD,CAFb;MAGFC,QAAQ,EAAEV,QAAQ,CAAC;QAAA,OAAMK,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBE,QAAzB;MAAA,CAAD,CAHhB;MAIFC,aAAa,EAAEX,QAAQ,CAAC;QAAA,OAAMK,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBG,aAAzB;MAAA,CAAD;IAJrB,CAAN;EAMH,CATS;EAUVC,IAVU,kBAUJ;IACF,OAAM;MACFC,QAAQ,EAAC,KADP;MAEFC,KAAK,EAAC,EAFJ;MAGFC,QAAQ,EAAC,EAHP;MAIFC,SAAS,EAAC,EAJR;MAKFC,aAAa,EAAC,KALZ;MAMFC,eAAe,EAAC,EANd;MAOFC,OAAO,EAAC,KAPN;MAQFC,gBAAgB,EAAC,KARf;MASFC,IAAI,EAAE,KATJ;MAUFC,OAAO,EAAE,KAVP;MAWFC,kBAAkB,EAAC,EAXjB;MAYFC,mBAAmB,EAAC;QAChB,OAAM,yBADU;QAEhB,MAAK,uBAFW;QAGhB,MAAK,wBAHW;QAIhB,MAAK;MAJW,CAZlB;MAkBFC,KAAK,EAAC;QACF,OAAM,CADJ;QAEF,MAAK,CAFH;QAGF,MAAK,CAHH;QAIF,MAAK;MAJH,CAlBJ;MAwBFC,YAAY,EAAC;QACT,OAAM;UACFC,MAAM,EAAC,CACH,MADG,EAEH,MAFG,EAGH,SAHG,EAIH,KAJG;QADL,CADG;QAST,MAAK;UACDA,MAAM,EAAC,CACH,IADG,EAEH,IAFG,EAGH,MAHG,EAIH,SAJG,EAKH,IALG,EAMH,MANG;QADN,CATI;QAmBT,MAAK;UACDA,MAAM,EAAC;QADN,CAnBI;QAsBT,MAAK;UACDA,MAAM,EAAC;QADN;MAtBI,CAxBX;MAkDFC,SAAS,EAAE;QACPD,MAAM,EAAE,EADD;QAEPE,QAAQ,EAAE,CAAC;UACPC,KAAK,EAAE,EADA;UAEPlB,IAAI,EAAE,EAFC;UAGPmB,WAAW,EAAC,CAHL;UAIPC,eAAe,EAAE,yBAJV;UAKPC,WAAW,EAAE,UALN;UAMPC,oBAAoB,EAAE,mBANf;UAOPC,gBAAgB,EAAE,MAPX;UAQPC,yBAAyB,EAAE,MARpB;UASPC,qBAAqB,EAAE;QAThB,CAAD;MAFH;IAlDT,CAAN;EAiEH,CA5ES;EA6EVC,UAAU,EAAE;IACRxC,IAAI,EAAJA,IADQ;IAERF,SAAS,EAATA,SAFQ;IAGRC,KAAK,EAALA,KAHQ;IAIRE,WAAU,EAAVA;EAJQ,CA7EF;EAmFVwC,OAnFU,qBAmFD;IACL,KAAKC,aAAL;EACH,CArFS;EAsFV;EACA;EAEA;EACA;EACA;EACA;EACAxC,QAAQ,EAAEE,UAAU,CAAC,CAAC,YAAD,EAAc,eAAd,EAA8B,aAA9B,EAA6C,iBAA7C,CAAD,CA7FV;EA+FVuC,OA/FU,qBA+FD;IACLC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKC,eAAnC;IACA,KAAK1B,eAAL,GAAuB,EAAvB;IACA,KAAK2B,UAAL;IACA,KAAKC,kBAAL;IACA,KAAKC,qBAAL,CAA2B,KAAKH,eAAL,CAAqBnB,KAAhD;EACH,CArGS;EAsGVuB,OAAO,kCACA7C,UAAU,CAAC,CAAC,eAAD,CAAD,CADV;IAEG0C,UAFH,wBAEe;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACd,KAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmB,cAAnB,EAAmC,IAAnC;;gBACIC,IAFU,GAEH,KAAI,CAACC,aAAL,CAAmBC,SAAnB,CAA6BC,KAA7B,CAAmC,GAAnC,CAFG;gBAGdZ,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBQ,IAAnB;gBAHc;gBAKVT,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACI,QAAL,CAAc,aAAd,KAA8B,KAAI,CAACC,WAA/C;;gBALU,MAMPL,IAAI,CAACI,QAAL,CAAc,aAAd,KAA8B,KAAI,CAACC,WAN5B;kBAAA;kBAAA;gBAAA;;gBAONd,OAAO,CAACC,GAAR,CAAY,KAAZ;gBAPM;gBAAA,OAQac,KAAK,CAAC,KAAI,CAACD,WAAN,CAAL,CAAwBE,IAAxB,CAA6B;kBAAA,OAAKC,CAAC,CAACC,IAAF,EAAL;gBAAA,CAA7B,CARb;;cAAA;gBAQAA,IARA;gBASAC,OATA,GASU;kBAAE,gBAAgB;gBAAlB,CATV;gBAUAC,QAVA,GAUW,IAAIC,QAAJ,EAVX;gBAWND,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA4BJ,IAA5B,YAAoCA,IAApC;gBACAlB,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBmB,QAAQ,CAACG,GAAT,CAAa,WAAb,CAAvB,EAAiDH,QAAjD,GACAnE,KAAK,CAACuE,KAAN,qBAAyB,KAAI,CAACd,aAAL,CAAmBe,GAA5C,GACIL,QADJ,EAEI;kBAACD,OAAO,EAAPA;gBAAD,CAFJ,CADA;gBAZM;gBAAA;;cAAA;gBAkBNnB,OAAO,CAACC,GAAR,CAAY,SAAZ;;cAlBM;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAsBVD,OAAO,CAACC,GAAR,CAAY,aAAZ,eAtBU,CAuBV;;cAvBU;gBAyBd,KAAI,CAACM,MAAL,CAAYC,MAAZ,CAAmB,cAAnB,EAAmC,KAAnC;;cAzBc;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA0BjB,CA5BE;IA6BHkB,WA7BG,uBA6BSC,GA7BT,EA6Ba;MACZ,IAAG,KAAKb,WAAR,EAAoB;QAChB,OAAO,KAAKA,WAAZ;MACJ,CAFA,MAGI;QACA,OAAOa,GAAP;MACJ;IACH,CApCE;IAqCGC,MArCH,oBAqCW;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEA,MAAI,CAACrB,MAAL,CAAYsB,QAAZ,CAAqB,iBAArB,CAFA;;cAAA;gBAGN,MAAI,CAACC,cAAL;;gBACA9B,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwB,MAAI,CAAC9B,QAA7B;gBAJM;gBAAA;;cAAA;gBAAA;gBAAA;gBAMN,MAAI,CAACC,KAAL;gBACA4B,OAAO,CAACC,GAAR,CAAY,MAAI,CAAC7B,KAAjB;;cAPM;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IASb,CA9CE;IA+CH0D,cA/CG,4BA+Ca;MACZ,KAAK3D,QAAL,GAAgB,IAAhB;IACH,CAjDE;IAkDH4D,mBAlDG,iCAkDkB;MACjB,KAAKxD,aAAL,GAAqB,IAArB;IACH,CApDE;IAqDHyD,kBArDG,gCAqDiB;MAChB,KAAKzD,aAAL,GAAqB,KAArB;MACAyB,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB,KAAK1B,aAAvB;IACH,CAxDE;IAyDH0D,0BAzDG,sCAyDwBC,OAzDxB,EAyDgC;MAAA,2CACjB,KAAKC,UADY;MAAA;;MAAA;QAC/B,oDAA8B;UAAA,IAArBC,CAAqB;;UAC1B,IAAGA,CAAC,CAACC,EAAF,IAAQH,OAAX,EAAmB;YACf,OAAOE,CAAC,CAACE,IAAT;UACJ;QACJ;MAL+B;QAAA;MAAA;QAAA;MAAA;IAMlC,CA/DE;IAgEHC,wBAhEG,oCAgEsBC,QAhEtB,EAgE+B;MAAA,4CAChB,KAAKL,UADW;MAAA;;MAAA;QAC9B,uDAA8B;UAAA,IAArBC,CAAqB;;UAC1B,IAAGA,CAAC,CAACE,IAAF,IAAQE,QAAX,EAAoB;YAChB,OAAOJ,CAAC,CAACC,EAAT;UACJ;QACJ;MAL8B;QAAA;MAAA;QAAA;MAAA;IAMjC,CAtEE;IAuEHhC,qBAvEG,iCAuEmBtB,KAvEnB,EAuEyB;MACxB;MACA;MACA;MACA;MACA;MACA;MAEA,IAAI0D,QAAO,GAAI,EAAf;MACA,IAAIC,gBAAe,GAAI,KAAK1D,YAAL,CAAkB,KAAKiD,0BAAL,CAAgClD,KAAhC,CAAlB,EAA0DE,MAAjF;MACA,IAAI0D,SAAQ,GAAI,EAAhB;MACA,KAAK9D,kBAAL,GAA0BE,KAA1B;;MAXwB,4CAYX,KAAKmB,eAAL,CAAqB0C,WAZV;MAAA;;MAAA;QAYxB,uDAA8C;UAAA,IAAtCR,CAAsC;;UAC1C,IAAGA,CAAC,CAACrD,KAAF,IAASA,KAAZ,EAAkB;YACd0D,QAAQ,CAACL,CAAC,CAACS,MAAF,CAAS,CAAT,CAAD,CAAR,GAAsB;cAAC,cAAaT,CAAC,CAACU,UAAhB;cACtB,SAAQV,CAAC,CAACS,MAAF,CAAS,CAAT;YADc,CAAtB;UAGJ;QACJ;MAlBwB;QAAA;MAAA;QAAA;MAAA;;MAAA,4CAmBXH,gBAnBW;MAAA;;MAAA;QAmBxB,uDAA8B;UAAA,IAAtBN,EAAsB;;UAC1B,IAAGA,MAAKK,QAAR,EAAiB;YACbE,SAAS,CAACI,IAAV,CAAeN,QAAQ,CAACL,EAAD,CAAR,CAAYU,UAAZ,GAAyB,EAAxC;UACH,CAFD,MAEK;YACDH,SAAS,CAACI,IAAV,CAAe,CAAf;UACJ;QACJ;MAzBwB;QAAA;MAAA;QAAA;MAAA;;MA0BxB,KAAK7D,SAAL,CAAeD,MAAf,GAAwByD,gBAAxB;MACA,KAAKxD,SAAL,CAAeC,QAAf,CAAwB,CAAxB,EAA2BjB,IAA3B,GAAkCyE,SAAlC;MACA,KAAKzD,SAAL,CAAeC,QAAf,CAAwB,CAAxB,EAA2BG,eAA3B,GAA6C,KAAKR,mBAAL,CAAyB,KAAKmD,0BAAL,CAAgClD,KAAhC,CAAzB,CAA7C;MACA,KAAKN,OAAL,GAAe,IAAf;IACH,CArGE;IAsGHuE,qBAtGG,iCAsGmBjE,KAtGnB,EAsGyB;MACxB,IAAG,KAAKF,kBAAL,IAAyBE,KAA5B,EAAkC;QAC9B,OAAO,IAAP;MACJ,CAFA,MAGI;QACA,OAAO,KAAP;MACJ;IACH,CA7GE;IA8GHqB,kBA9GG,gCA8GiB;MAChB,IAAIgC,IAAI,KAAKa,MAAL,CAAYC,IAApB;MACAd,IAAIA,CAAC,CAACxB,KAAF,CAAQ,GAAR,CAAJ;MACA,KAAKpC,eAAL,GAAuB4D,CAAC,CAAC,CAAD,CAAxB;IACH,CAlHE;IAmHHe,SAnHG,qBAmHOpE,KAnHP,EAmHaqE,KAnHb,EAmHmB;MAClB,IAAGA,KAAK,IAAE,EAAV,EAAa;QACT,IAAIC,GAAE,GAAIC,IAAI,CAACD,GAAL,WAAI,qBAAQE,MAAM,CAACC,MAAP,CAAc,KAAKzE,KAAnB,CAAR,EAAd;QACA,IAAI0E,IAAI,KAAK1E,KAAL,CAAWA,KAAX,IAAmB,CAA3B;;QACA,IAAGsE,GAAE,IAAK,KAAKtE,KAAL,CAAWA,KAAX,CAAV,EAA4B;UACxB;QACJ,CAFA,MAGI;UACA,KAAI,IAAIqD,CAAR,IAAa,KAAKrD,KAAlB,EAAwB;YACpB,IAAG,KAAKA,KAAL,CAAWqD,CAAX,KAAiBqB,CAApB,EAAsB;cAClB,KAAK7E,OAAL,GAAe,IAAf;cACA,6BAAYwD,CAAZ,wBAAmB,CAAnB;YACJ;UACJ;QACJ;MACJ,CAdA,MAeI;QACA,6BAAYrD,KAAZ,qCAAwBqE,KAAI,GAAI,CAAhC;MACJ;IACH,CAtIE;IAuIHM,SAvIG,uBAuIQ;MACP,KAAK/E,IAAL,GAAY,CAAC,KAAKA,IAAlB;IACH,CAzIE;IA0IHgF,oBA1IG,gCA0IkB5E,KA1IlB,EA0IwB;MACvB,IAAG,KAAKA,KAAL,CAAWA,KAAX,KAAqB,KAAKA,KAAL,CAAW,KAAKmB,eAAL,CAAqB0D,SAAhC,CAAxB,EAAmE;QAC/D,OAAO,IAAP;MACJ,CAFA,MAGI;QACA,OAAO,KAAP;MACJ;IACH,CAjJE;IAkJHC,UAlJG,wBAkJS;MACR,KAAKjF,OAAL,GAAe,KAAf;IACH,CApJE;IAqJHkF,kBArJG,gCAqJiB;MAChB9G,MAAM,CAAC+F,IAAP,CAAY,gBAAZ;IACH;EAvJE;AAtGG,CAAd","names":["router","axios","Thumbnail","Chart","Sent","NotVerified","computed","useStore","mapGetters","mapActions","setup","store","user","state","signup","email","password","emailVerified","data","showSent","error","userData","quizTaker","showThumbnail","currentPageName","gotInfo","showNotification","stop","gradeUp","currentStatusGrade","backgroundColorList","grade","chartAllData","labels","chartData","datasets","label","borderWidth","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","components","created","getQuizNameId","mounted","console","log","quizTakerObject","patchImage","getCurrentPageName","handleStatusParameter","methods","$store","commit","list","getDjangouser","thumbnail","split","includes","getPhotoURL","fetch","then","r","blob","headers","formData","FormData","append","get","patch","UID","getImageURL","url","resent","dispatch","handleShowSent","handleShowThumbnail","showThumbnailFalse","getCurrentGradeNameFromIds","gradeID","quizNameId","i","id","name","convertGradeIntToGradeId","gradeInt","tempDict","tempChartAllData","tempArray","user_status","status","percentage","push","getCurrentStatusGrade","$route","path","nextGrade","level","max","Math","Object","values","g","stopFlash","showChartHeaderGrade","max_grade","mountReset","goCommunityAccount"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/Account.vue"],"sourcesContent":["<template>\n    <div class=\"account-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading }\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            \n            <div v-if='$store.state.isLoading==false&&getDjangouser&&quizTakerObject' class=\"content-wrapper\">\n                <h1 class='title-white'>アカウント</h1>\n                <div class=\"cropper-wrapper\">\n                    <!-- <img v-bind:src=\"getImageURL(getDjangouser.thumbnail)\"/> -->\n                    <p class=\"change-img\" @click='handleShowThumbnail'>画像を<br>変更する</p>\n                </div>\n                <div class=\"my-quiz-wrapper\">\n                    <router-link :to=\"{ name: 'MyQuiz'}\" class=\"my-quiz\">My Quiz</router-link>\n                </div>\n\n                <div v-if=\"showNotification\" class=\"notification-container\">\n                    <div class=\"alert-position-container\">\n                        <div class=\"notification-text\">\n                            お知らせ\n                        </div>\n                        <div class=\"notification-alert\">\n                            Notifications\n                        </div>\n                    </div>\n                </div>\n                <div class=\"user-info-wrapper\">\n                    <div class=\"user-name user-container\">\n                        <div class=\"left-side\">\n                            User<br>Name\n                        </div>\n                        <div class=\"right-side\">\n                            {{ getDjangouser.name}}\n                        </div>\n                    </div>\n                    <div class=\"current-level user-container\">\n                        <div class=\"left-side\">\n                            Current<br>Grade\n                        </div>\n                        <div class=\"right-side grade-right-side\">\n                            <div classs=\"current-level-text\">\n                                {{ getCurrentGradeNameFromIds(quizTakerObject.grade)}}\n                                Lv,{{ quizTakerObject.level }}\n                            </div>\n                            <!-- <div class=\"max-level\">\n                                最大レベル　初級Lv,2\n                            </div> -->\n                        </div>       \n                    </div>\n                    <div class=\"current-level user-container\">\n                        <div class=\"left-side\">\n                            Max<br>Grade\n                        </div>\n                        <div class=\"right-side grade-right-side\">\n                            <div classs=\"current-level-text\">\n                                {{ quizTakerObject.max_grade }}\n                                Lv,{{ quizTakerObject.max_level }}\n                            </div>\n                        </div>       \n                    </div>\n                    <div @click=\"stopFlash()\" :class=\"(gradeUp)?'next-grade-up':'next-level'\">\n                    <!-- <div class='next-level' :class=\"{'next-grade-up':gradeUp}\"> -->\n                        <span v-if=\"!gradeUp\" class=\"next-title\">Next-Level</span>\n                        <span v-if=\"gradeUp\" class=\"next-title grade-up\">Grade-Up</span>\n                        <p :class=\"{'stop':stop}\">{{ nextGrade(getCurrentGradeNameFromIds(quizTakerObject.grade),quizTakerObject.level) }}</p>\n                    </div>\n                </div>\n                <div class=\"status-wrapper\">\n                    <div class=chart-loop \n                    v-for=\"(g,key,index) in grade\"\n                    v-bind:key=\"index\">\n                        <div @click=\"handleStatusParameter(convertGradeIntToGradeId(key))\" \n                            v-if=\"showChartHeaderGrade(key)\" \n                            class=\"chart-header\"\n                            :class=\"{'current-status-grade':getCurrentStatusGrade(convertGradeIntToGradeId(key))}\">\n                            <div>{{key}}</div>\n                        </div>\n                    </div>\n                    <chart\n                    v-if=\"gotInfo\"\n                    :chart-data=\"chartData\"\n                    />\n                </div>\n                <div @click=\"goCommunityAccount()\" class=\"comunity-account\">\n                    コミュニティアカウントへ移動\n                </div>\n            </div>\n        </div>\n        <NotVerified\n        v-if=\"!emailVerified&&$store.state.isLoading==false\"\n        :currentPageName=\"currentPageName\"\n        />\n        <Sent v-show='showSent'/>\n        <Thumbnail v-if=\"showThumbnail\"\n        @showThumbnailFalse=\"showThumbnailFalse\"\n        :getDjangouser=\"getDjangouser\"/>\n    </div>\n</template>\n\n<script>\nimport {router} from \"../main.js\"\nimport axios from 'axios'\nimport 'cropperjs/dist/cropper.css';\nimport  Thumbnail from '@/components/account/Thumbnail.vue'\nimport  Chart from '@/components/account/Chart.vue'\nimport Sent from '@/components/signin/Sent.vue'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport {mapGetters,mapActions} from 'vuex'\n\nexport default{\n    setup(){\n        const store = useStore()\n        return{\n            user: computed(() => store.state.signup.user),\n            email: computed(() => store.state.signup.email),\n            password: computed(() => store.state.signup.password),\n            emailVerified: computed(() => store.state.signup.emailVerified),\n        }\n    },\n    data(){\n        return{\n            showSent:false,\n            error:'',\n            userData:'',\n            quizTaker:'',\n            showThumbnail:false,\n            currentPageName:'',\n            gotInfo:false,\n            showNotification:false,\n            stop: false,\n            gradeUp: false,\n            currentStatusGrade:'',\n            backgroundColorList:{\n                '超初級':'rgba(255, 153, 51, 0.2)',\n                '初級':'rgba(81, 255, 0, 0.2)',\n                '中級':'rgba(191, 0, 255, 0.2)',\n                '上級':'rgba(255, 6, 6, 0.2)',\n            },\n            grade:{\n                '超初級':0,\n                '初級':1,\n                '中級':2,\n                '上級':3,\n            },\n            chartAllData:{\n                '超初級':{\n                    labels:[\n                        'ひらがな', \n                        'カタカナ', \n                        'ボキャブラリー', \n                        'すうじ'\n                        ],\n                },\n                '初級':{\n                    labels:[\n                        '漢字',\n                        '動詞',\n                        'い形容詞',\n                        'ボキャブラリー',\n                        '文法',\n                        'な形容詞',\n                    ],\n                },\n                '中級':{\n                    labels:[],\n                },\n                '上級':{\n                    labels:[],\n                }\n            },\n            chartData: {\n                labels: [],\n                datasets: [{ \n                    label: \"\",\n                    data: [],\n                    borderWidth:1,\n                    backgroundColor: 'rgba(255, 153, 51, 0.2)',\n                    borderColor: ' #ff9933',\n                    pointBackgroundColor: 'rgb(255, 99, 132)',\n                    pointBorderColor: '#fff',\n                    pointHoverBackgroundColor: '#fff',\n                    pointHoverBorderColor: 'red'\n                }],\n            },\n        }\n    },\n    components: {\n        Sent,\n        Thumbnail,\n        Chart,\n        NotVerified\n    },\n    created(){\n        this.getQuizNameId()\n    },\n    // watch:{\n    //     userData:function(v) {\n            \n    //     this.userData = v\n    //     console.log('hi',v)\n    //     },\n    // },\n    computed: mapGetters(['quizNameId','getDjangouser','getPhotoURL', 'quizTakerObject']),\n        \n    mounted(){\n        console.log('account mounted',this.quizTakerObject)\n        this.currentPageName = ''\n        this.patchImage()\n        this.getCurrentPageName()\n        this.handleStatusParameter(this.quizTakerObject.grade)\n    },\n    methods:{\n        ...mapActions(['getQuizNameId']),\n        async patchImage(){\n            this.$store.commit('setIsLoading', true)\n            var list = this.getDjangouser.thumbnail.split('/')\n            console.log('list',list)\n            try{\n                console.log(list.includes('default.png')&&this.getPhotoURL)\n                if(list.includes('default.png')&&this.getPhotoURL){\n                    console.log('png');\n                    const blob = await fetch(this.getPhotoURL).then(r => r.blob());\n                    const headers = { \"content-type\": \"multipart/form-data\" };\n                    const formData = new FormData();\n                    formData.append('thumbnail',blob,`${blob}.png`)\n                    console.log('getthumb',formData.get('thumbnail'),formData),\n                    axios.patch(`/api/user/${this.getDjangouser.UID}`,\n                        formData,\n                        {headers}\n                    )\n                }else{\n                    console.log('nothing')\n                }\n            }\n            catch(e){\n                console.log('catch error',e)\n                // doing nothig. will be default thumbnail\n            }\n            this.$store.commit('setIsLoading', false)\n        },\n        getImageURL(url){\n            if(this.getPhotoURL){\n                return this.getPhotoURL\n            }\n            else{\n                return url\n            }\n        },\n        async resent(){\n            try{\n                await this.$store.dispatch('sendEmailVerify')\n                this.handleShowSent()\n                console.log('showsent:',this.showSent)\n            }catch(err){\n                this.error = err\n                console.log(this.error)\n            }\n        },\n        handleShowSent(){\n            this.showSent = true\n        },\n        handleShowThumbnail(){\n            this.showThumbnail = true\n        },\n        showThumbnailFalse(){\n            this.showThumbnail = false\n            console.log('inA',this.showThumbnail)\n        },\n        getCurrentGradeNameFromIds(gradeID){\n            for (let i of this.quizNameId){\n                if(i.id == gradeID){\n                    return i.name\n                }\n            }\n        },\n        convertGradeIntToGradeId(gradeInt){\n            for (let i of this.quizNameId){\n                if(i.name==gradeInt){\n                    return i.id\n                }\n            }\n        },\n        handleStatusParameter(grade){\n            // this is handling chart view.\n            // 1, get quiz_taker from userinfo\n            // 2, get current grade from the quizTaker.\n            // 3, get chart labels which is locally set.\n            // 4, get percentage for each status from user_status from quiz_taker\n            // 5, set the labels and the percentages to chartData to invoke data for chart component\n            \n            let tempDict = {}\n            let tempChartAllData = this.chartAllData[this.getCurrentGradeNameFromIds(grade)].labels\n            let tempArray = []\n            this.currentStatusGrade = grade\n            for(let i of this.quizTakerObject.user_status){\n                if(i.grade==grade){\n                    tempDict[i.status[0]]={\"percentage\":i.percentage,\n                    'order':i.status[1],\n                    }\n                }\n            }\n            for(let i of tempChartAllData){\n                if(i in tempDict){\n                    tempArray.push(tempDict[i].percentage / 10)\n                }else{\n                    tempArray.push(0)\n                }\n            }\n            this.chartData.labels = tempChartAllData\n            this.chartData.datasets[0].data = tempArray\n            this.chartData.datasets[0].backgroundColor = this.backgroundColorList[this.getCurrentGradeNameFromIds(grade)]\n            this.gotInfo = true\n        },\n        getCurrentStatusGrade(grade){\n            if(this.currentStatusGrade==grade){\n                return true\n            }\n            else{\n                return false\n            }\n        },\n        getCurrentPageName(){\n            let i = this.$route.path\n            i = i.split(\"/\")\n            this.currentPageName = i[1]\n        },\n        nextGrade(grade,level){\n            if(level==10){\n                var max = Math.max(...Object.values(this.grade))\n                var g = this.grade[grade]+ 1\n                if(max == this.grade[grade]){\n                    return `最大レベルだよ！`\n                }\n                else{\n                    for(let i in this.grade){\n                        if(this.grade[i] == g){\n                            this.gradeUp = true\n                            return `次は${i}レベル${1}だよ！`\n                        }\n                    }\n                }\n            }\n            else{\n                return `次は${grade}・レベル${level + 1}だよ！`\n            }\n        },\n        stopFlash(){\n            this.stop = !this.stop\n        },\n        showChartHeaderGrade(grade){\n            if(this.grade[grade] <= this.grade[this.quizTakerObject.max_grade]){\n                return true   \n            }\n            else{\n                return false\n            }\n        },\n        mountReset(){\n            this.gradeUp = false\n        },\n        goCommunityAccount(){\n            router.push(\"/board/account\")\n        },      \n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"style/_variables.scss\";\n\n.account-wrapper{\n    display: flex;\n    justify-content: center;\n    .main-wrapper{\n        .content-wrapper{\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n            .my-quiz-wrapper{\n                position: relative;\n                height: 30px;\n                width: 100%;\n                margin-top: 1rem;\n                margin-bottom: 0.5rem;\n                .my-quiz{\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    margin: auto;\n                    padding-right: 0.6rem;\n                    padding-left: 0.6rem;\n                    border: solid $base-color;\n                    font-weight: bold;\n                    color: $lite-gray;\n                    border-radius: 5px;\n                    width: 90px;\n                    transition: .5s;\n\n                }\n                .my-quiz:hover{\n                    color: $dark-blue;\n                    border: solid $dark-blue;\n                    background: $buttongradient;\n                }\n            }\n            .cropper-wrapper{\n                display: flex;\n                position:relative;\n                justify-content: center;\n                margin-top: 0.5rem;\n                width: 13rem;\n                img{\n                    border-radius: 50%; \n                    width:  5rem;   \n                    height: 5rem;       \n                }\n                .change-img{\n                    position: absolute;\n                    right: 0;\n                    color: white;\n                    font-size: 0.8rem;\n                    border: solid transparent;\n                    border-radius: 5px;\n                    padding-left: 0.3rem;\n                    padding-right: 0.3rem;\n                    margin-left: 1rem;\n                    transition: .5s;\n                }\n                .change-img:hover{\n                    border: solid $lite-gray;\n\n                }\n            }\n            .notification-container{\n                position: relative;\n                display: flex;\n                justify-content: center;\n                width: 100%;\n                .alert-position-container{\n                    width:70%;\n                    border: solid $base-color;\n                    min-height: 3rem;\n                    background: $back-white;\n                    margin-top: 1rem;\n                    margin-bottom: 1rem;\n                    .notification-alert{\n                    position: absolute;\n                    right: 0;\n                    top: 0;\n                    margin-right: 0.9rem;\n                    padding-right: 0.5rem;\n                    padding-left: 0.5rem;\n                    color: $back-white;\n                    font-weight: bold;\n                    border: solid $dark-blue;\n                    border-radius: 50vh;\n                    background:rgba(252, 75, 175, 0.961); \n                    }\n                }\n            }\n            .user-info-wrapper{\n                margin-top: 1rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                width: 100%;\n                .user-container{\n                    display: flex;\n                    border: 0.1rem solid $dark-blue;\n                    background: $back-white;\n                    border-radius: 0.5rem;\n                    width: 80%;\n                    min-height: 3rem;\n                    margin-bottom: 0.5rem;\n                    overflow: hidden;\n                    .left-side{\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        flex-basis: 30%;\n                        background: $base-color;\n                        border-right: 0.1rem solid $dark-blue;\n                        line-height: 0.8rem;\n                        color: white;\n                        font-weight: bold;\n                        font-size: 1.1rem;                      \n                    }\n                    .right-side{\n                        position: relative;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        flex-basis: 70%;\n                        width:70%;\n                        font-size: 1.2rem;\n                        font-weight: bold;                       \n                    }\n                    .grade-right-side{\n                        position: relative;\n                        display: flex;\n                        justify-content: center;\n                        .current-level-text{\n                            display: flex;\n                            justify-content: center;\n                            align-items: flex-end;\n                        }\n                    }\n                }\n                .next-level{\n                    position: relative;\n                    margin: 2em 0;\n                    padding: 0.5em 1em;\n                    width: 70%;\n                    border: solid 3px #62c1ce;\n                    background: $base-white;\n                    .next-title{\n                        position: absolute;\n                        display: inline-block;\n                        top: -27px;\n                        left: -3px;\n                        padding: 0 9px;\n                        height: 25px;\n                        line-height: 25px;\n                        font-size: 17px;\n                        background: #62c1ce;\n                        color: #ffffff;\n                        font-weight: bold;\n                        border-radius: 5px 5px 0 0;\n                    }\n                    p{\n                        color: $dark-blue;\n                        font-weight: bold;\n                        margin: 0; \n                        padding: 0;\n                    }\n                }\n                .next-grade-up{\n                    position: relative;\n                    margin: 2em 0;\n                    padding: 0.5em 1em;\n                    width: 70%;\n                    background: $base-white;\n                    border: solid 3px rgb(236, 113, 181);\n                    .grade-up{\n                        position: absolute;\n                        display: inline-block;\n                        top: -27px;\n                        left: -3px;\n                        padding: 0 9px;\n                        height: 25px;\n                        line-height: 25px;\n                        font-size: 17px;\n                        color: #ffffff;\n                        font-weight: bold;\n                        border-radius: 5px 5px 0 0;\n                        background: rgb(236, 113, 181);\n                    }\n                    p{\n                        animation: flash 2.5s linear infinite;\n                        color: $dull-red;\n                        font-weight: bold;\n                        margin: 0; \n                        padding: 0;\n                    }\n                    .stop{\n                        animation: none;\n                    }\n                }\n            }\n            .status-wrapper{\n                .chart-loop{\n                    display: inline-block;\n                    .chart-header:hover{\n                        background:rgba(255, 6, 6, 0.2);\n                        font-weight: bold;\n                    }\n                    .chart-header{\n                        border: solid $base-color;\n                        border-radius: 5px;\n                        margin-right: 0.3rem;\n                        margin-left: 0.3rem;\n                        padding-right: 0.7rem;\n                        padding-left: 0.7rem;\n                        padding-top: 0.1rem;\n                        padding-bottom: 0.1rem;\n                        color: white;\n                        transition: .5s;\n                        // font-weight: bold;\n                    }\n                    .current-status-grade{\n                        background:$base-color-tr;\n                        font-weight: bold;\n                        border: solid $dull-red;\n                    }\n                }\n            }\n            .comunity-account{\n                color: white;\n                cursor : pointer;\n                border: solid rgba(0, 0, 0, 0);\n                padding: 1rem;\n                transition: 0.5s;\n                \n            }\n            .comunity-account:hover{\n                border: solid gray;\n                color: gray; \n                padding: 1rem;\n            }\n        }\n    }\n}\n@keyframes flash {\n  0%,100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0;\n  }\n}\n\n\n\n    .main-image{\n        width:15%;\n        height:auto;\n        margin-left: auto;\n        margin-right: auto;\n    }\n    .main-text1{\n        font-size:1rem;\n        font-weight: bold;\n        margin:2rem;\n    }\n    img {\n        border-radius: 50%; \n        width:  5rem;   \n        height: 5rem;       \n    }\n    .cropper-view-box,\n    .cropper-face {\n      border-radius: 50%;\n      cursor: grab;\n      outline: initial;\n    }\n    .cropper-face:active {\n      cursor: grabbing;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}