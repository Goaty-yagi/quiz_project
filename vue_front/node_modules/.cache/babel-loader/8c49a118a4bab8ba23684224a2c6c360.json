{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport NotVerified from '@/components/login/NotVerified.vue';\nimport MyQuizPractice from '@/components/quiz_components/MyQuizPractice.vue';\nimport QuizDetail from '@/components/quiz_components/QuizDetail.vue';\nexport default {\n  components: {\n    MyQuizPractice,\n    NotVerified,\n    QuizDetail\n  },\n\n  data() {\n    return {\n      myQuestion: '',\n      showButtonAndNoQuiz: false,\n      quizOpen: false,\n      quizDetail: false,\n      questionDetailInfo: {\n        id: '',\n        grade: '',\n        field: '',\n        status: '',\n        label: '',\n        image: ''\n      }\n    };\n  },\n\n  mounted() {\n    this.getMyQuestion();\n    console.log(\"mountedINMQ\", this.statusNameId);\n  },\n\n  computed: {\n    user() {\n      return this.$store.state.signup.djangoUser;\n    },\n\n    myQuiz() {\n      return this.$store.state.signup.djangoUser.my_quiz[0];\n    },\n\n    length() {\n      // length = this.$store.state.signup.djangoUser.my_quiz[0].my_question\n      return this.myQuestion.length;\n    },\n\n    fieldNameId() {\n      return this.$store.getters.fieldNameId;\n    },\n\n    quizNameId() {\n      return this.$store.getters.quizNameId;\n    },\n\n    statusNameId() {\n      this.$store.dispatch(\"getStatusNameId\");\n      return this.$store.getters.statusNameId;\n    }\n\n  },\n  methods: {\n    convertFieldIdToInt(fieldId) {\n      for (let i of this.fieldNameId) {\n        if (i.id == fieldId) {\n          return i.name;\n        }\n      }\n    },\n\n    convertQuizIdToInt(quizId) {\n      for (let i of this.quizNameId) {\n        if (i.id == quizId) {\n          return i.name;\n        }\n      }\n    },\n\n    convertStatusIdToInt(statusId) {\n      for (let i of this.statusNameId) {\n        if (i.id == statusId) {\n          return i.name;\n        }\n      }\n    },\n\n    getQuestionDetailInfo(question) {\n      this.questionDetailInfo.id = question.question.id;\n      this.questionDetailInfo.grade = this.convertQuizIdToInt(question.question.quiz);\n      this.questionDetailInfo.field = this.convertFieldIdToInt(question.question.field[0]);\n      this.questionDetailInfo.status = this.convertStatusIdToInt(question.question.status[0]);\n      this.questionDetailInfo.label = question.question.label;\n      this.questionDetailInfo.image = question.question.image;\n      this.handleQuizDetail();\n    },\n\n    getMyQuestion() {\n      this.myQuestion = this.$store.state.signup.myQuestion;\n\n      if (this.myQuestion.length) {\n        this.showButtonAndNoQuiz = true;\n      }\n    },\n\n    deleteMyQuestion(question) {\n      console.log(question);\n      let payload = {\n        \"question\": question,\n        \"myQuiz\": this.myQuiz.id\n      };\n      console.log('in_delete', this.myQuestion);\n      this.myQuestion = this.myQuestion.filter(item => {\n        return item.question.id != question;\n      });\n\n      if (this.myQuestion.length == 0) {\n        this.myQuestion = '';\n        this.showButtonAndNoQuiz = false;\n      }\n\n      console.log(payload, this.myQuestion);\n      this.$store.commit(\"deleteMyQuestion\", question);\n      this.$store.dispatch(\"createAndDeleteMyQuiz\", payload);\n    },\n\n    deleteQuestionFunForDetailPage(question) {\n      console.log('length1', this.myQuestion.length);\n      this.myQuestion = this.myQuestion.filter(item => {\n        return item.question.id != question;\n      });\n\n      if (this.myQuestion.length == 0) {\n        this.myQuestion = '';\n        this.showButtonAndNoQuiz = false;\n      }\n\n      console.log('length2', this.myQuestion.length);\n    },\n\n    // deleteQuestionFunForDetailPage2(){\n    //     if(this.myQuestion.length==0){\n    //         this.myQuestion = ''\n    //         this.showButtonAndNoQuiz = false\n    //     }\n    // },\n    // showButtonAndNoQuizFalse(){\n    //     console.log('INSF')\n    //     this.showButtonAndNoQuiz = false\n    // },\n    handleQuizOpen() {\n      this.quizOpen = !this.quizOpen;\n    },\n\n    handleQuizDetail() {\n      this.quizDetail = !this.quizDetail;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["mapGetters","mapActions","NotVerified","MyQuizPractice","QuizDetail","components","data","myQuestion","showButtonAndNoQuiz","quizOpen","quizDetail","questionDetailInfo","id","grade","field","status","label","image","mounted","getMyQuestion","console","log","statusNameId","computed","user","$store","state","signup","djangoUser","myQuiz","my_quiz","length","fieldNameId","getters","quizNameId","dispatch","methods","convertFieldIdToInt","fieldId","i","name","convertQuizIdToInt","quizId","convertStatusIdToInt","statusId","getQuestionDetailInfo","question","quiz","handleQuizDetail","deleteMyQuestion","payload","filter","item","commit","deleteQuestionFunForDetailPage","handleQuizOpen"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/quiz/MyQuiz.vue"],"sourcesContent":["<template>\n    <div class=\"my-quiz-wrapper\" :class=\"{'laoding-center':$store.state.isLoading}\">\n        <div v-if=\"$store.state.board.notifications.reply\" :class=\"{'notification-blue':$store.state.board.notifications.reply}\">\n            <div class=\"notification-text\">\n                削除しました。\n            </div>\n        </div>\n        <div class=\"main-wrapper\">\n            <div class=\"is-loading-bar has-text-centered\" v-bind:class=\"{'is-loading': $store.state.isLoading&&!quizOpen}\">\n                <!-- <i class=\"fas fa-cog\"></i> -->\n                <div class=\"lds-dual-ring\"></div>\n            </div>\n            <MyQuizPractice\n            v-if=\"quizOpen\"\n            @handleQuizOpen=\"handleQuizOpen\"\n            />\n            <!-- <QuizP\n            v-if=\"componentHandleDict.quiz\"\n            :forQuizPageInfo=\"forQuizPageInfo\"\n            @backQuizHome=\"backQuizHome\"/> -->\n            <div class=\"main-container\" v-if=\"!quizOpen\">\n                <div class=\"my-quiz-header\">\n                    <p class=\"title-white\">My-Quiz</p>\n                    <p class=\"register\">登録数{{ length }} / {{myQuiz.max_num}}</p>\n                    <p class=\"max\">(最大 {{myQuiz.max_num}} 個まで登録できます)</p>\n                </div>\n                <div class=\"my-quiz-container\" v-if=\"$store.state.isLoading==false\">\n                    <div class=\"no-my-quiz\" v-if=\"!showButtonAndNoQuiz\">\n                        <div class=\"no-quiz\">\n                            登録したクイズはありません。<br>\n                            クイズ画面から登録できます。<br><br>\n                            クイズを登録すると、<br>そのクイズだけ練習できます。\n                        </div>\n                        <router-link :to=\"{ name: 'QuizHome'}\" class=\"btn-basegra-white-db-sq\">\n                            クイズへ行く\n                        </router-link>\n                    </div>\n                    <div class=my-quiz-loop @click=\"getQuestionDetailInfo(question)\" v-for=\"(question,questionindex) in myQuestion\"\n                        v-bind:key=\"questionindex\">\n                        <div class=\"each-quiz-container\">\n                            <div class=\"question-index-container\">\n                                <div class=\"question-index\">{{ questionindex+1 }}</div>\n                            </div>\n                            <div class=\"question-field\">{{ convertFieldIdToInt(question.question.field[0]) }}</div>\n                            <div class=\"question-grade\">{{ convertQuizIdToInt(question.question.quiz) }}</div>\n                            <div class=\"question-label\">{{ question.question.label.substr(0,15)+'...' }}</div>\n                            <div class=\"close-container\">\n                    \n                                <!-- <div @click=\"deleteMyQuestion(question.question.id)\" class=\"close\">\n                                    <i class=\"fas fa-times\"></i>\n                                </div> -->\n                            </div>\n                        </div>\n                    </div>\n                    <QuizDetail\n                    v-if=\"quizDetail\"\n                    :questionDetailInfo=\"questionDetailInfo\"\n                    :myQuestion=\"myQuestion\"\n                    :showButtonAndNoQuiz=\"showButtonAndNoQuiz\"\n                    @handleQuizDetail='handleQuizDetail'\n                    @deleteQuestionFunForDetailPage=\"deleteQuestionFunForDetailPage\"                    \n                    />\n                </div>\n                <div @click=\"handleQuizOpen()\" v-if=\"showButtonAndNoQuiz\" class=\"btn-basegra-white-db-sq\">\n                    練習\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {mapGetters,mapActions} from 'vuex'\nimport NotVerified from '@/components/login/NotVerified.vue'\nimport MyQuizPractice from '@/components/quiz_components/MyQuizPractice.vue'\nimport QuizDetail from '@/components/quiz_components/QuizDetail.vue'\n\nexport default {\n    components: {\n        MyQuizPractice,\n        NotVerified,\n        QuizDetail,\n    },\n    data(){\n        return{\n            myQuestion:'',\n            showButtonAndNoQuiz:false,\n            quizOpen: false,\n            quizDetail: false,\n            questionDetailInfo:{\n                id:'',\n                grade:'',\n                field:'',\n                status:'',\n                label:'',\n                image:'',\n            }\n        }\n    },\n    mounted(){\n        this.getMyQuestion()\n        console.log(\"mountedINMQ\",this.statusNameId)\n    },\n    computed:{\n        user(){\n            return this.$store.state.signup.djangoUser\n        },\n        myQuiz(){\n            return this.$store.state.signup.djangoUser.my_quiz[0]\n        },\n        length(){\n            // length = this.$store.state.signup.djangoUser.my_quiz[0].my_question\n            return this.myQuestion.length\n        },\n        fieldNameId(){\n            return this.$store.getters.fieldNameId\n        },\n        quizNameId(){\n            return this.$store.getters.quizNameId\n        },\n        statusNameId(){\n            this.$store.dispatch(\"getStatusNameId\")\n            return this.$store.getters.statusNameId\n        }\n\n    },\n    methods:{\n        convertFieldIdToInt(fieldId){\n            for(let i of this.fieldNameId){\n                if(i.id==fieldId){\n                    return i.name\n                }\n            }\n        },\n        convertQuizIdToInt(quizId){\n            for(let i of this.quizNameId){\n                if(i.id==quizId){\n                    return i.name\n                }\n            }\n        },\n        convertStatusIdToInt(statusId){\n            for(let i of this.statusNameId){\n                if(i.id==statusId){\n                    return i.name\n                }\n            }\n        },\n        getQuestionDetailInfo(question){\n            this.questionDetailInfo.id = question.question.id\n            this.questionDetailInfo.grade = this.convertQuizIdToInt(question.question.quiz)\n            this.questionDetailInfo.field = this.convertFieldIdToInt(question.question.field[0])\n            this.questionDetailInfo.status = this.convertStatusIdToInt(question.question.status[0])\n            this.questionDetailInfo.label = question.question.label\n            this.questionDetailInfo.image = question.question.image\n            this.handleQuizDetail()\n\n        },\n        getMyQuestion(){\n            this.myQuestion = this.$store.state.signup.myQuestion\n            if(this.myQuestion.length){\n                this.showButtonAndNoQuiz = true\n            }\n        },\n        deleteMyQuestion(question){\n            console.log(question)\n            let payload = {\n                \"question\":question,\n                \"myQuiz\":this.myQuiz.id\n            }\n            console.log('in_delete',this.myQuestion)\n            this.myQuestion = this.myQuestion.filter(item =>{\n                return (item.question.id !=question)\n            })\n            if(this.myQuestion.length==0){\n                this.myQuestion = ''\n                this.showButtonAndNoQuiz = false\n            }\n            console.log(payload,this.myQuestion)\n            this.$store.commit(\"deleteMyQuestion\",question)\n            this.$store.dispatch(\"createAndDeleteMyQuiz\",payload)\n        },\n        deleteQuestionFunForDetailPage(question){\n            console.log('length1',this.myQuestion.length)\n            this.myQuestion = this.myQuestion.filter(item =>{\n                return (item.question.id !=question)\n            })\n            if(this.myQuestion.length==0){\n                this.myQuestion = ''\n                this.showButtonAndNoQuiz = false\n            }\n            console.log('length2',this.myQuestion.length)\n        },\n        // deleteQuestionFunForDetailPage2(){\n        //     if(this.myQuestion.length==0){\n        //         this.myQuestion = ''\n        //         this.showButtonAndNoQuiz = false\n        //     }\n        // },\n        // showButtonAndNoQuizFalse(){\n        //     console.log('INSF')\n        //     this.showButtonAndNoQuiz = false\n        // },\n        handleQuizOpen(){\n            this.quizOpen = !this.quizOpen\n        },\n        handleQuizDetail(){\n            this.quizDetail = !this.quizDetail\n        }\n    }\n\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"style/_variables.scss\";\n\n.main-container{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        }\n\n.my-quiz-wrapper{\n    display: flex;\n    justify-content: center;\n    .main-wrapper{\n        .my-quiz-header{\n            margin-bottom: 1rem;\n            .register{\n                font-size: 1.3rem;\n                color: $lite-gray;\n                font-weight: bold;\n            }\n            .max{\n                font-size: 0.8rem;\n                color: $lite-gray;\n            }\n        }\n        .my-quiz-container{\n            width: 95%;\n            min-height: 300px;\n            max-height: 350px;\n            border: solid $base-color;\n            border-radius: 5px;\n            background: $back-white;\n            padding-top: 1rem;\n            padding-bottom: 1rem;\n            overflow: scroll;\n            .no-my-quiz{\n                margin:2rem;\n                .no-quiz{\n                    color: $dark-blue;\n                    font-weight: bold;\n                    margin-bottom: 2rem;\n                }\n            \n            }\n            .my-quiz-loop:hover{\n                background: $back-lite-white;\n                border-bottom: solid $lite-gray;\n            }\n            .my-quiz-loop{\n                position: relative;\n                display: flex;\n                align-items: center;\n                border-bottom: solid $lite-gray;\n                transition: .5s;\n                .each-quiz-container{\n                    position: relative;\n                    display: flex;\n                    width: 100%;\n                    margin-bottom: 1rem;\n                    margin-top: 1rem;\n                    // padding-bottom: 0.5rem;\n                    align-items: center;\n                    // justify-content: center;\n                    .question-index-container{\n                        flex-basis: 10%;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        .question-index{\n                            border: solid $base-color;\n                            border-radius: 50vh;\n                            width: 1.7rem;\n                            height: 1.7rem;\n                            margin-left: 0.4rem;\n                            font-weight: bold;\n                            background: $dark-blue;\n                            color: white;\n                        }\n                    }\n                    .question-field{\n                        flex-basis: 20%;\n\n                    }\n                    .question-grade{\n                        flex-basis: 20%;\n                    }\n                    .question-label{\n                        flex-basis: 50%;\n                        font-size: 0.8rem;\n                    }\n                    // .close-container{\n                    //     position: absolute;\n                    //     right: 0;\n                    //     margin-bottom: 0.8rem;\n                    //     margin-right: 0.5rem;\n                    //     flex-basis: 5%;\n                    //     display: flex;\n                    //     align-items: center;\n                    //     justify-content: center;\n                    //     margin-left: 0.7rem;\n                    //     height: 20px;\n                    //     .close{\n                    //         position:relative;\n                    //         border: 0.1rem solid rgb(180, 179, 179);\n                    //         border-radius: 50vh;\n                    //         width: 1rem;\n                    //         height: 1rem;\n                    //         margin-top: auto;\n                    //         margin-right: auto;\n                    //         .fa-times{\n                    //             font-size: 0.8rem;\n                    //         }\n                    //     }\n                    // }\n                }\n            }\n           \n        }\n        .btn-basegra-white-db-sq{\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            padding-top: 0.2rem;\n            padding-bottom: 0.2rem;\n            padding-left: 1.2rem;\n            padding-right: 1.2rem;\n            font-weight: bold;\n            font-size: 1.2rem;\n\n        }\n\n    }\n\n}\n</style>"]},"metadata":{},"sourceType":"module"}