{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ossan/git-clone/quiz_project/vue_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      description: '',\n      alert: false,\n      showType: false,\n      enquireType: ['利用規約', '個人情報の取り扱い', 'クイズ', 'コミュニティ', '要望', '仕事のお問い合わせ', 'その他'],\n      form: {\n        name: '',\n        mail: '',\n        type: '',\n        text: ''\n      },\n      formError: {\n        occurred: false,\n        name: '名前を入力してください。',\n        mail: 'メールアドレスを入力してください。',\n        wrongMail: '正しいアドレスを入力してください。',\n        type: '問い合わせタイプを入力してください。',\n        text: '問い合わせ内容を入力してください。',\n        lessText: '20字以上入力してください。'\n      }\n    };\n  },\n  methods: {\n    getNumOfQuestions: function getNumOfQuestions() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('/api/questions-dashboard/').catch(function (e) {\n                  var logger = {\n                    message: _this.errorMessage + \" getNumOfQuestions\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message\n                  };\n\n                  _this.$store.commit('setLogger', logger);\n\n                  _this.$store.commit('setIsLoading', false);\n\n                  router.push({\n                    name: 'ConnectionError'\n                  });\n                });\n\n              case 2:\n                response = _context.sent;\n                _this.numOfQuestions = response.data[0];\n                console.log('data', _this.numOfQuestions);\n\n                _this.setBarChartData();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    showTypeHandle: function showTypeHandle() {\n      console.log('clicked');\n      this.showType = !this.showType;\n    },\n    getSelectType: function getSelectType(val) {\n      this.form.type = val;\n    },\n    submit: function submit() {\n      for (var _i = 0, _Object$keys = Object.keys(this.form); _i < _Object$keys.length; _i++) {\n        var i = _Object$keys[_i];\n        console.log(i);\n\n        if (i == 'text') {\n          if (this.form[i].length < 20) {\n            this.formError.occurred = true;\n            this.setTime();\n            break;\n          }\n        } // else if(i == 'mail') {\n        //     if(this.form[i].search(/'@'/)==-1) {\n        //         console.log('not@')\n        //         this.formError.occurred = true\n        //         this.setTime()\n        //         break\n        //     }\n        // }\n        else if (!this.form[i]) {\n          this.formError.occurred = true;\n          this.setTime();\n          break;\n        } else {\n          this.formError.occurred = false;\n        }\n      }\n\n      console.log(this.form, this.form.text.length);\n    },\n    formErrorFalse: function formErrorFalse() {\n      this.formError.occurred = false;\n    },\n    setTime: function setTime() {\n      setTimeout(this.formErrorFalse, 3000);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","data","description","alert","showType","enquireType","form","name","mail","type","text","formError","occurred","wrongMail","lessText","methods","getNumOfQuestions","get","catch","logger","message","errorMessage","path","window","location","pathname","actualErrorName","e","actualErrorMessage","$store","commit","router","push","response","numOfQuestions","console","log","setBarChartData","showTypeHandle","getSelectType","val","submit","Object","keys","i","length","setTime","formErrorFalse","setTimeout"],"sourceRoot":"","sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/views/footer-contents/Enquire.vue"],"sourcesContent":["<template>\n    <div class=\"enquire-wrapper\">\n        <div class=\"main-wrapper\">\n            <div class=\"content-wrapper\">\n                <div class=\"title-white\">\n                    <p>問い合わせ</p>\n                </div>\n                <div class=\"enquire-container\">\n                    <div class=\"enquire-title\">名前</div>\n                    <input class=\"enquire-input\" type=\"text\" v-model='form.name'>\n                </div>\n                <div class=\"enquire-container\">\n                    <div class=\"enquire-title\">メールアドレス</div>\n                    <input class=\"enquire-input\" type=\"text\" v-model='form.mail'>\n                </div>\n                <div class=\"enquire-container\">\n                    <div class=\"enquire-title\">問い合わせタイプ</div>\n                    <div class=\"enquire-type\"\n                    @click=\"showTypeHandle()\">\n                        <i\n                        v-if=\"!form.type\"\n                        class=\"fas fa-angle-down\"\n                        :class=\"{'lotate':showType}\">\n                        </i>\n                        <div v-if=\"form.type\">{{ form.type }}</div>\n                        <div v-if=\"showType\" class=\"type-select\">\n                            <div class=\"select-loop\"\n                            v-for=\"(type,typeindex) in enquireType\" \n                                v-bind:key=\"typeindex\">\n                                <p @click=\"getSelectType(type)\" class=\"type\">・{{type}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"enquire-container\">\n                    <div class=\"enquire-title\">問い合わせ内容</div>\n                    <textarea class=\"enquire-text\" type=\"text\" v-model='form.text'></textarea>\n                </div>\n                <div @click=\"submit()\" class=\"btn-basegra-white-db-sq\">送信する</div>\n                <div class=\"error-container\">\n                    <div v-if='formError.occurred' :class=\"{'notification-red':formError.occurred}\">\n                        <i class=\"fas fa-exclamation-triangle\"></i>\n                        <div v-if='!form.name'>{{ formError.name}}</div>\n                        <div v-if='!form.mail'>{{ formError.mail }}</div>\n                        <div v-if='!form.type'>{{ formError.type}}</div>\n                        <div v-if='!form.text'>{{ formError.text }}</div>\n                        <div v-if='form.text.length < 20 &&form.text'>{{ formError.lessText }}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    data(){\n        return{\n            description:'',\n            alert:false,\n            showType: false,\n            enquireType: [\n                '利用規約',\n                '個人情報の取り扱い',\n                'クイズ',\n                'コミュニティ',\n                '要望',\n                '仕事のお問い合わせ',\n                'その他'\n            ],\n            form:{\n                name:'',\n                mail:'',\n                type:'',\n                text:''\n            },\n            formError:{\n                occurred:false,\n                name:'名前を入力してください。',\n                mail:'メールアドレスを入力してください。',\n                wrongMail:'正しいアドレスを入力してください。',\n                type:'問い合わせタイプを入力してください。',\n                text:'問い合わせ内容を入力してください。',\n                lessText:'20字以上入力してください。'\n            }\n        }\n    },\n    methods:{\n        async getNumOfQuestions() {\n            const response = await axios\n            .get('/api/questions-dashboard/')\n            .catch(e => {\n                let logger = {\n                    message: this.errorMessage + \" getNumOfQuestions\",\n                    path: window.location.pathname,\n                    actualErrorName: e.name,\n                    actualErrorMessage: e.message,\n                }\n                this.$store.commit('setLogger',logger)\n                this.$store.commit('setIsLoading', false)\n                router.push({ name: 'ConnectionError' })\n            })\n            this.numOfQuestions = response.data[0]\n            console.log('data',this.numOfQuestions)\n            this.setBarChartData()\n        },\n        showTypeHandle() {\n            console.log('clicked')\n            this.showType = !this.showType\n        },\n        getSelectType(val){\n            this.form.type = val\n        },\n        submit() {\n            for(let i of Object.keys(this.form)) {\n                console.log(i)\n                if(i == 'text') {\n                    if(this.form[i].length < 20) {\n                        this.formError.occurred = true\n                        this.setTime()\n                        break\n                    }\n                }\n                // else if(i == 'mail') {\n                //     if(this.form[i].search(/'@'/)==-1) {\n                //         console.log('not@')\n                //         this.formError.occurred = true\n                //         this.setTime()\n                //         break\n                //     }\n                // }\n                else if(!this.form[i]) {\n                    this.formError.occurred = true\n                    this.setTime()\n                    break\n                } else {\n                    this.formError.occurred = false\n                }\n            }\n            console.log(this.form,this.form.text.length)\n        },\n        formErrorFalse(){\n            this.formError.occurred = false\n        },\n        setTime(){\n            setTimeout(this.formErrorFalse,3000)\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"style/_variables.scss\";\n\n.enquire-wrapper{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    position: relative;\n    .main-wapper{\n    }\n}\n.content-wrapper{\n    .title-white{\n        margin-bottom: 2rem;\n    }\n    .enquire-container{\n        position: relative;\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        margin-top: 1rem;\n        .enquire-title{\n            position: absolute;\n            left: 0;\n            top: 0;\n            margin-left: 5%;\n            height: 20px;\n            color: white;\n            font-weight: bold;\n            border-bottom: solid $dark-blue;\n        }\n        .enquire-input{\n            width: 90%;\n            margin-top: 25px;\n            height: 40px;\n            padding: 0.3rem;\n            font-size: 1.2rem;\n            transition: .2s;\n        }\n        .enquire-input:focus{\n            border: solid $base-color;\n        }\n        .enquire-text{\n            width: 90%;\n            margin-top: 25px;\n            height: 300px;\n            padding: 1rem;\n            margin-bottom: 1rem;\n            resize: none;\n            font-size: 1.2rem;\n            transition: .2s;\n\n        }\n        .enquire-text:focus{\n                outline: none;\n                border: solid $base-color;\n        }\n        .enquire-type{\n            position: relative;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 90%;\n            margin-top: 25px;\n            height: 40px;\n            padding: 0.3rem;\n            font-size: 1.2rem;\n            transition: .2s;\n            background: white;\n            .type-select{\n                position: absolute;\n                width: 100%;\n                min-height: 80px;\n                top: 35px;\n                background: rgba(252, 252, 252, 0.95);;\n                z-index: 1;\n                .type{\n                    padding: 0.5rem 0;\n                    transition: .5s;\n                }\n                .type:hover{\n                    display: block;\n                    background: $lite-gray;\n                }\n                // .type:last-child{\n                //     padding-bottom: 0;\n                // }\n            }\n        }\n        .fa-angle-down{\n            transition: .5s;\n        }\n        .lotate{\n            transform:rotate(180deg);\n        }\n    }\n    .btn-basegra-white-db-sq{\n        padding: 0.1rem 0.5rem;\n        font-weight: bold;\n        margin-bottom: 1rem;\n    }\n    .error-container{\n        position: absolute;\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        left: 0;\n        .notification-red{\n            .fa-exclamation-triangle{\n                color: red;\n            }\n            div{\n                color: red;\n                margin-top: 0.5rem;\n                font-weight: bold;\n            }\n        }\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}