{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Quiz from '../views/Quiz.vue';\nimport QuizTest from '../views/quiz/QuizTest.vue';\nimport QuizTestInit from '../views/quiz/QuizTestInit.vue';\nimport QuizPractice from '../views/quiz/QuizPractice.vue';\nimport QuizHome from '../views/quiz/QuizHome.vue';\nimport MyQuiz from '../views/quiz/MyQuiz.vue';\nimport Test from '../views/Test.vue';\nimport NotFound from '../views/not-found/NotFound.vue';\nimport NotFound404 from '../views/not-found/NotFound404.vue';\nimport ConnectionError from '../views/not-found/ConnectionError.vue';\nimport Signup from '../views/Signup.vue';\nimport Account from '../views/Account.vue';\nimport Dboard from '../views/Dboard.vue';\nimport Login from '../views/Login.vue';\nimport Policy from '../views/Policy.vue';\nimport Community from '../views/Community.vue';\nimport BoardDetail from '../views/BoardDetail.vue';\nimport RelatedQuestion from '../views/board/RelatedQuestion.vue';\nimport BoardAccount from '../views/board/BoardAccount.vue';\nimport store from '../store';\nvar routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, //   {\n//     path: '/quiz',\n//     // path: '/quiz/:id',\n//     name: 'Quiz',\n//     component: Quiz\n//   },\n{\n  path: '/quiz-home',\n  name: 'QuizHome',\n  component: QuizHome,\n  meta: {\n    login: true,\n    beingException: true\n  }\n}, {\n  path: '/quiz-test',\n  name: 'QuizTest',\n  component: QuizTest,\n  meta: {\n    login: true\n  }\n}, {\n  path: '/quiz-test-init',\n  name: 'QuizTestInit',\n  component: QuizTestInit,\n  meta: {\n    quizTook: true,\n    emailVerified: true,\n    compUser: true,\n    beingException: true\n  }\n}, {\n  path: '/quiz-practice',\n  name: 'QuizPractice',\n  component: QuizPractice,\n  meta: {\n    login: true,\n    beingException: true\n  }\n}, {\n  path: '/my-quiz',\n  name: 'MyQuiz',\n  component: MyQuiz,\n  meta: {\n    login: true,\n    beingException: true\n  }\n}, {\n  path: '/dboard',\n  name: 'Dboard',\n  component: Dboard\n}, {\n  path: '/signup',\n  name: 'Signup',\n  component: Signup,\n  meta: {\n    emailVerified: true,\n    compUser: true,\n    beingException: true\n  }\n}, {\n  path: '/account',\n  name: 'Account',\n  component: Account,\n  meta: {\n    login: true,\n    beingException: true\n  }\n}, {\n  path: '/board',\n  name: 'Community',\n  component: Community\n}, {\n  path: '/board/related',\n  name: 'RelatedQuestion',\n  component: RelatedQuestion\n}, {\n  path: '/board/account',\n  name: 'BoardAccount',\n  component: BoardAccount,\n  meta: {\n    login: true,\n    emailVerified: true,\n    beingException: true\n  }\n}, {\n  path: '/board-detail/:slug',\n  name: 'BoardDetail',\n  component: BoardDetail\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    emailVerified: true,\n    compUser: true,\n    beingException: true\n  }\n}, {\n  path: '/policy',\n  name: 'Policy',\n  component: Policy\n}, {\n  path: '/notfound',\n  name: 'NotFound',\n  component: NotFound\n}, {\n  path: '/notfound404',\n  name: 'NotFound404',\n  component: NotFound404\n}, {\n  path: '/connection-error',\n  name: 'ConnectionError',\n  component: ConnectionError\n}, {\n  path: '/:catchAll(.*)',\n  name: 'catchAll',\n  component: NotFound // meta:{emailVerified:true}\n\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n}); // there are 6 types of way, \n// 1 is not non registered user \n// => can go community except Caccount and some error or login\n// 2 is not registered but took init tes\n// => the same as avobe but not include quiz-init\n// 3 is registerd firebase but not djangoUser(comes from error)\n// => can only go to connection error\n// 4 is registered complitely but not emailVerified\n// => can't go signup, login, Caccount, quiz-init\n// 5 registered user\n// => can't go signup,login quiz-init\n// 6 can't go quiz-test if took already\n\nrouter.beforeEach(function (to, from, next) {\n  // this is for 1\n  console.log(\"router\", !store.state.signup.emailVerified && store.state.signup.registeredUser, store.state.signup.registeredUser);\n\n  if (to.matched.some(function (record) {\n    return record.meta.login;\n  }) && !store.state.signup.djangoUser) {\n    console.log(\"LOGIN\", to.matched);\n    next({\n      name: 'Login'\n    });\n  } // this is for 2\n  else if (to.matched.some(function (record) {\n    return record.meta.quizTook;\n  }) && store.state.signup.tempUser.test) {\n    console.log(\"LOGIN\", to.matched);\n    next({\n      name: 'Login'\n    });\n  } //  this is for 3\n  else if (to.matched.some(function (record) {\n    return record.meta.apiException == false;\n  }) && store.state.signup.apiError.any) {\n    console.log(\"BeingException\", to.matched);\n    next({\n      name: 'ConnectionError'\n    });\n  } //   this is for 4 next will be chainge to new not found im gonna male later\n  else if (to.matched.some(function (record) {\n    return record.meta.emailVerified;\n  }) && !store.state.signup.emailVerified && store.state.signup.registeredUser) {\n    console.log(\"NOTFOUND\", to.matched);\n    next({\n      name: 'NotFound'\n    });\n  } // this is for 5 next will be chainge to new not found im gonna male later\n  else if (to.matched.some(function (record) {\n    return record.meta.compUser;\n  }) && store.state.signup.emailVerified) {\n    console.log(\"NOTFOUND\", to.matched);\n    next({\n      name: 'NotFound'\n    });\n  } else {\n    console.log('else', to.matched, 'D', store.state.signup.djangoUser, \"U\", store.state.signup.user);\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Quiz","QuizTest","QuizTestInit","QuizPractice","QuizHome","MyQuiz","Test","NotFound","NotFound404","ConnectionError","Signup","Account","Dboard","Login","Policy","Community","BoardDetail","RelatedQuestion","BoardAccount","store","routes","path","name","component","meta","login","beingException","quizTook","emailVerified","compUser","router","history","process","env","BASE_URL","beforeEach","to","from","next","console","log","state","signup","registeredUser","matched","some","record","djangoUser","tempUser","test","apiException","apiError","any","user"],"sources":["/Users/ossan/git-clone/quiz_project/vue_front/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Quiz from '../views/Quiz.vue'\nimport QuizTest from '../views/quiz/QuizTest.vue'\nimport QuizTestInit from '../views/quiz/QuizTestInit.vue'\nimport QuizPractice from '../views/quiz/QuizPractice.vue'\nimport QuizHome from '../views/quiz/QuizHome.vue'\nimport MyQuiz from '../views/quiz/MyQuiz.vue'\nimport Test from '../views/Test.vue'\nimport NotFound from '../views/not-found/NotFound.vue'\nimport NotFound404 from '../views/not-found/NotFound404.vue'\nimport ConnectionError from '../views/not-found/ConnectionError.vue'\nimport Signup from '../views/Signup.vue'\nimport Account from '../views/Account.vue'\nimport Dboard from '../views/Dboard.vue'\nimport Login from '../views/Login.vue'\nimport Policy from '../views/Policy.vue'\nimport Community from '../views/Community.vue'\nimport BoardDetail from '../views/BoardDetail.vue'\nimport RelatedQuestion from '../views/board/RelatedQuestion.vue'\nimport BoardAccount from '../views/board/BoardAccount.vue'\nimport store from '../store'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home,\n  },\n//   {\n//     path: '/quiz',\n//     // path: '/quiz/:id',\n//     name: 'Quiz',\n//     component: Quiz\n//   },\n  {\n    path: '/quiz-home',\n    name: 'QuizHome',\n    component: QuizHome,\n    meta:{login:true,beingException:true}\n    \n  },\n  {\n    path: '/quiz-test',\n    name: 'QuizTest',\n    component: QuizTest,\n    meta:{login:true}\n  },\n  {\n    path: '/quiz-test-init',\n    name: 'QuizTestInit',\n    component: QuizTestInit,\n    meta:{quizTook:true,emailVerified:true,compUser:true,beingException:true}\n  },\n  {\n    path: '/quiz-practice',\n    name: 'QuizPractice',\n    component: QuizPractice,\n    meta:{login:true,beingException:true}\n  },\n  {\n    path: '/my-quiz',\n    name: 'MyQuiz',\n    component: MyQuiz,\n    meta:{login:true,beingException:true}\n  },\n  {\n    path: '/dboard',\n    name: 'Dboard',\n    component: Dboard\n  },\n  {\n    path: '/signup',\n    name: 'Signup',\n    component: Signup,\n    meta:{emailVerified:true,compUser:true,beingException:true}\n  },\n  {\n    path: '/account',\n    name: 'Account',\n    component: Account,\n    meta:{login:true,beingException:true}\n  },\n  {\n    path: '/board',\n    name: 'Community',\n    component: Community,\n  },\n  {\n    path: '/board/related',\n    name: 'RelatedQuestion',\n    component: RelatedQuestion,\n  },\n  {\n    path: '/board/account',\n    name: 'BoardAccount',\n    component: BoardAccount,\n    meta:{login:true,emailVerified:true,beingException:true}\n  },\n  {\n    path: '/board-detail/:slug',\n    name: 'BoardDetail',\n    component: BoardDetail,\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login,\n    meta:{emailVerified:true,compUser:true,beingException:true}\n  },\n  {\n    path: '/policy',\n    name: 'Policy',\n    component: Policy,\n  },\n  { \n    path: '/notfound',\n    name: 'NotFound',\n    component: NotFound,\n  },\n  { \n    path: '/notfound404',\n    name: 'NotFound404',\n    component: NotFound404,\n  },\n  { \n    path: '/connection-error',\n    name: 'ConnectionError',\n    component: ConnectionError,\n  },\n  { \n    path: '/:catchAll(.*)',\n    name: 'catchAll',\n    component: NotFound,\n    // meta:{emailVerified:true}\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n\n// there are 6 types of way, \n// 1 is not non registered user \n// => can go community except Caccount and some error or login\n// 2 is not registered but took init tes\n// => the same as avobe but not include quiz-init\n// 3 is registerd firebase but not djangoUser(comes from error)\n// => can only go to connection error\n// 4 is registered complitely but not emailVerified\n// => can't go signup, login, Caccount, quiz-init\n// 5 registered user\n// => can't go signup,login quiz-init\n// 6 can't go quiz-test if took already\n\nrouter.beforeEach((to, from, next) => {\n    // this is for 1\n    console.log(\"router\",!store.state.signup.emailVerified&&store.state.signup.registeredUser,store.state.signup.registeredUser)\n    if (to.matched.some(record => record.meta.login) && !store.state.signup.djangoUser) {\n    console.log(\"LOGIN\",to.matched)\n    next({ name: 'Login' });\n    }\n    // this is for 2\n    else if(to.matched.some(record => record.meta.quizTook)&&store.state.signup.tempUser.test){\n        console.log(\"LOGIN\",to.matched)\n        next({ name: 'Login' });\n      }\n    //  this is for 3\n    else if(to.matched.some(record => record.meta.apiException==false)&&store.state.signup.apiError.any){\n      console.log(\"BeingException\",to.matched)\n      next({ name: 'ConnectionError' });\n      }\n    //   this is for 4 next will be chainge to new not found im gonna male later\n    else if(to.matched.some(record => record.meta.emailVerified)&&!store.state.signup.emailVerified&&store.state.signup.registeredUser){\n    console.log(\"NOTFOUND\",to.matched)\n    next({ name: 'NotFound' });\n    }\n    // this is for 5 next will be chainge to new not found im gonna male later\n    else if(to.matched.some(record => record.meta.compUser)&&store.state.signup.emailVerified){\n        console.log(\"NOTFOUND\",to.matched)\n        next({ name: 'NotFound' });\n    }\n    else {\n    console.log('else',to.matched,'D',store.state.signup.djangoUser,\"U\",store.state.signup.user)\n    next()\n  }\n})\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}